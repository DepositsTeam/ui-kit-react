import * as React from 'react';
import React__default, { createContext, useState, useLayoutEffect, useContext, useEffect, useRef, forwardRef, createElement as createElement$1, Component as Component$1, createRef, useImperativeHandle, useMemo as useMemo$1, useReducer } from 'react';
import * as ReactDOM from 'react-dom';
import ReactDOM__default, { findDOMNode, unstable_batchedUpdates } from 'react-dom';

function _iterableToArrayLimit$3(arr, i) {
  var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
  if (null != _i) {
    var _s,
      _e,
      _x,
      _r,
      _arr = [],
      _n = !0,
      _d = !1;
    try {
      if (_x = (_i = _i.call(arr)).next, 0 === i) {
        if (Object(_i) !== _i) return;
        _n = !1;
      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
function ownKeys$8(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2$1(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys$8(Object(source), !0).forEach(function (key) {
      _defineProperty$6(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$8(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _regeneratorRuntime() {
  _regeneratorRuntime = function () {
    return exports;
  };
  var exports = {},
    Op = Object.prototype,
    hasOwn = Op.hasOwnProperty,
    defineProperty = Object.defineProperty || function (obj, key, desc) {
      obj[key] = desc.value;
    },
    $Symbol = "function" == typeof Symbol ? Symbol : {},
    iteratorSymbol = $Symbol.iterator || "@@iterator",
    asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator",
    toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
  function define(obj, key, value) {
    return Object.defineProperty(obj, key, {
      value: value,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), obj[key];
  }
  try {
    define({}, "");
  } catch (err) {
    define = function (obj, key, value) {
      return obj[key] = value;
    };
  }
  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,
      generator = Object.create(protoGenerator.prototype),
      context = new Context(tryLocsList || []);
    return defineProperty(generator, "_invoke", {
      value: makeInvokeMethod(innerFn, self, context)
    }), generator;
  }
  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }
  exports.wrap = wrap;
  var ContinueSentinel = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });
  var getProto = Object.getPrototypeOf,
    NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);
  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      define(prototype, method, function (arg) {
        return this._invoke(method, arg);
      });
    });
  }
  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if ("throw" !== record.type) {
        var result = record.arg,
          value = result.value;
        return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) {
          invoke("next", value, resolve, reject);
        }, function (err) {
          invoke("throw", err, resolve, reject);
        }) : PromiseImpl.resolve(value).then(function (unwrapped) {
          result.value = unwrapped, resolve(result);
        }, function (error) {
          return invoke("throw", error, resolve, reject);
        });
      }
      reject(record.arg);
    }
    var previousPromise;
    defineProperty(this, "_invoke", {
      value: function (method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }
        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(innerFn, self, context) {
    var state = "suspendedStart";
    return function (method, arg) {
      if ("executing" === state) throw new Error("Generator is already running");
      if ("completed" === state) {
        if ("throw" === method) throw arg;
        return doneResult();
      }
      for (context.method = method, context.arg = arg;;) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }
        if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) {
          if ("suspendedStart" === state) throw state = "completed", context.arg;
          context.dispatchException(context.arg);
        } else "return" === context.method && context.abrupt("return", context.arg);
        state = "executing";
        var record = tryCatch(innerFn, self, context);
        if ("normal" === record.type) {
          if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue;
          return {
            value: record.arg,
            done: context.done
          };
        }
        "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg);
      }
    };
  }
  function maybeInvokeDelegate(delegate, context) {
    var methodName = context.method,
      method = delegate.iterator[methodName];
    if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel;
    var record = tryCatch(method, delegate.iterator, context.arg);
    if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel;
    var info = record.arg;
    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);
  }
  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };
    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);
  }
  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal", delete record.arg, entry.completion = record;
  }
  function Context(tryLocsList) {
    this.tryEntries = [{
      tryLoc: "root"
    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) return iteratorMethod.call(iterable);
      if ("function" == typeof iterable.next) return iterable;
      if (!isNaN(iterable.length)) {
        var i = -1,
          next = function next() {
            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;
            return next.value = undefined, next.done = !0, next;
          };
        return next.next = next;
      }
    }
    return {
      next: doneResult
    };
  }
  function doneResult() {
    return {
      value: undefined,
      done: !0
    };
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), defineProperty(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) {
    var ctor = "function" == typeof genFun && genFun.constructor;
    return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name));
  }, exports.mark = function (genFun) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;
  }, exports.awrap = function (arg) {
    return {
      __await: arg
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    void 0 === PromiseImpl && (PromiseImpl = Promise);
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () {
    return this;
  }), define(Gp, "toString", function () {
    return "[object Generator]";
  }), exports.keys = function (val) {
    var object = Object(val),
      keys = [];
    for (var key in object) keys.push(key);
    return keys.reverse(), function next() {
      for (; keys.length;) {
        var key = keys.pop();
        if (key in object) return next.value = key, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, exports.values = values, Context.prototype = {
    constructor: Context,
    reset: function (skipTempReset) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);
    },
    stop: function () {
      this.done = !0;
      var rootRecord = this.tryEntries[0].completion;
      if ("throw" === rootRecord.type) throw rootRecord.arg;
      return this.rval;
    },
    dispatchException: function (exception) {
      if (this.done) throw exception;
      var context = this;
      function handle(loc, caught) {
        return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught;
      }
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i],
          record = entry.completion;
        if ("root" === entry.tryLoc) return handle("end");
        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc"),
            hasFinally = hasOwn.call(entry, "finallyLoc");
          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
          } else {
            if (!hasFinally) throw new Error("try statement without catch or finally");
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          }
        }
      }
    },
    abrupt: function (type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }
      finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);
      var record = finallyEntry ? finallyEntry.completion : {};
      return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);
    },
    complete: function (record, afterLoc) {
      if ("throw" === record.type) throw record.arg;
      return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;
    },
    finish: function (finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;
      }
    },
    catch: function (tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if ("throw" === record.type) {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function (iterable, resultName, nextLoc) {
      return this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      }, "next" === this.method && (this.arg = undefined), ContinueSentinel;
    }
  }, exports;
}
function _typeof$6(obj) {
  "@babel/helpers - typeof";

  return _typeof$6 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof$6(obj);
}
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function () {
    var self = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
function _defineProperty$6(obj, key, value) {
  key = _toPropertyKey$1(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends$1() {
  _extends$1 = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$1.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$2(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose$2(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _slicedToArray$4(arr, i) {
  return _arrayWithHoles$3(arr) || _iterableToArrayLimit$3(arr, i) || _unsupportedIterableToArray$e(arr, i) || _nonIterableRest$3();
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray$e(arr) || _nonIterableSpread();
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray$e(arr);
}
function _arrayWithHoles$3(arr) {
  if (Array.isArray(arr)) return arr;
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _unsupportedIterableToArray$e(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray$e(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$e(o, minLen);
}
function _arrayLikeToArray$e(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _nonIterableRest$3() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _createForOfIteratorHelper$1(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray$e(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function () {};
      return {
        s: F,
        n: function () {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function (e) {
          throw e;
        },
        f: F
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true,
    didErr = false,
    err;
  return {
    s: function () {
      it = it.call(o);
    },
    n: function () {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function (e) {
      didErr = true;
      err = e;
    },
    f: function () {
      try {
        if (!normalCompletion && it.return != null) it.return();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}
function _toPrimitive$1(input, hint) {
  if (typeof input !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toPropertyKey$1(arg) {
  var key = _toPrimitive$1(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function getAugmentedNamespace(n) {
  var f = n.default;
	if (typeof f == "function") {
		var a = function () {
			return f.apply(this, arguments);
		};
		a.prototype = f.prototype;
  } else a = {};
  Object.defineProperty(a, '__esModule', {value: true});
	Object.keys(n).forEach(function (k) {
		var d = Object.getOwnPropertyDescriptor(n, k);
		Object.defineProperty(a, k, d.get ? d : {
			enumerable: true,
			get: function () {
				return n[k];
			}
		});
	});
	return a;
}

var propTypes = {exports: {}};

var reactIs$2 = {exports: {}};

var reactIs_production_min$1 = {};

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var hasRequiredReactIs_production_min$1;

function requireReactIs_production_min$1 () {
	if (hasRequiredReactIs_production_min$1) return reactIs_production_min$1;
	hasRequiredReactIs_production_min$1 = 1;
var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
	Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
	function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}reactIs_production_min$1.AsyncMode=l;reactIs_production_min$1.ConcurrentMode=m;reactIs_production_min$1.ContextConsumer=k;reactIs_production_min$1.ContextProvider=h;reactIs_production_min$1.Element=c;reactIs_production_min$1.ForwardRef=n;reactIs_production_min$1.Fragment=e;reactIs_production_min$1.Lazy=t;reactIs_production_min$1.Memo=r;reactIs_production_min$1.Portal=d;
	reactIs_production_min$1.Profiler=g;reactIs_production_min$1.StrictMode=f;reactIs_production_min$1.Suspense=p;reactIs_production_min$1.isAsyncMode=function(a){return A(a)||z(a)===l};reactIs_production_min$1.isConcurrentMode=A;reactIs_production_min$1.isContextConsumer=function(a){return z(a)===k};reactIs_production_min$1.isContextProvider=function(a){return z(a)===h};reactIs_production_min$1.isElement=function(a){return "object"===typeof a&&null!==a&&a.$$typeof===c};reactIs_production_min$1.isForwardRef=function(a){return z(a)===n};reactIs_production_min$1.isFragment=function(a){return z(a)===e};reactIs_production_min$1.isLazy=function(a){return z(a)===t};
	reactIs_production_min$1.isMemo=function(a){return z(a)===r};reactIs_production_min$1.isPortal=function(a){return z(a)===d};reactIs_production_min$1.isProfiler=function(a){return z(a)===g};reactIs_production_min$1.isStrictMode=function(a){return z(a)===f};reactIs_production_min$1.isSuspense=function(a){return z(a)===p};
	reactIs_production_min$1.isValidElementType=function(a){return "string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};reactIs_production_min$1.typeOf=z;
	return reactIs_production_min$1;
}

var reactIs_development$1 = {};

/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var hasRequiredReactIs_development$1;

function requireReactIs_development$1 () {
	if (hasRequiredReactIs_development$1) return reactIs_development$1;
	hasRequiredReactIs_development$1 = 1;



	if (process.env.NODE_ENV !== "production") {
	  (function() {

	// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var hasSymbol = typeof Symbol === 'function' && Symbol.for;
	var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
	var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
	var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
	var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
	var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
	var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
	var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
	// (unstable) APIs that have been removed. Can we remove the symbols?

	var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
	var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
	var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
	var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
	var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
	var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
	var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
	var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
	var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
	var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
	var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

	function isValidElementType(type) {
	  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
	  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
	}

	function typeOf(object) {
	  if (typeof object === 'object' && object !== null) {
	    var $$typeof = object.$$typeof;

	    switch ($$typeof) {
	      case REACT_ELEMENT_TYPE:
	        var type = object.type;

	        switch (type) {
	          case REACT_ASYNC_MODE_TYPE:
	          case REACT_CONCURRENT_MODE_TYPE:
	          case REACT_FRAGMENT_TYPE:
	          case REACT_PROFILER_TYPE:
	          case REACT_STRICT_MODE_TYPE:
	          case REACT_SUSPENSE_TYPE:
	            return type;

	          default:
	            var $$typeofType = type && type.$$typeof;

	            switch ($$typeofType) {
	              case REACT_CONTEXT_TYPE:
	              case REACT_FORWARD_REF_TYPE:
	              case REACT_LAZY_TYPE:
	              case REACT_MEMO_TYPE:
	              case REACT_PROVIDER_TYPE:
	                return $$typeofType;

	              default:
	                return $$typeof;
	            }

	        }

	      case REACT_PORTAL_TYPE:
	        return $$typeof;
	    }
	  }

	  return undefined;
	} // AsyncMode is deprecated along with isAsyncMode

	var AsyncMode = REACT_ASYNC_MODE_TYPE;
	var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
	var ContextConsumer = REACT_CONTEXT_TYPE;
	var ContextProvider = REACT_PROVIDER_TYPE;
	var Element = REACT_ELEMENT_TYPE;
	var ForwardRef = REACT_FORWARD_REF_TYPE;
	var Fragment = REACT_FRAGMENT_TYPE;
	var Lazy = REACT_LAZY_TYPE;
	var Memo = REACT_MEMO_TYPE;
	var Portal = REACT_PORTAL_TYPE;
	var Profiler = REACT_PROFILER_TYPE;
	var StrictMode = REACT_STRICT_MODE_TYPE;
	var Suspense = REACT_SUSPENSE_TYPE;
	var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

	function isAsyncMode(object) {
	  {
	    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
	      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

	      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
	    }
	  }

	  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
	}
	function isConcurrentMode(object) {
	  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
	}
	function isContextConsumer(object) {
	  return typeOf(object) === REACT_CONTEXT_TYPE;
	}
	function isContextProvider(object) {
	  return typeOf(object) === REACT_PROVIDER_TYPE;
	}
	function isElement(object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	}
	function isForwardRef(object) {
	  return typeOf(object) === REACT_FORWARD_REF_TYPE;
	}
	function isFragment(object) {
	  return typeOf(object) === REACT_FRAGMENT_TYPE;
	}
	function isLazy(object) {
	  return typeOf(object) === REACT_LAZY_TYPE;
	}
	function isMemo(object) {
	  return typeOf(object) === REACT_MEMO_TYPE;
	}
	function isPortal(object) {
	  return typeOf(object) === REACT_PORTAL_TYPE;
	}
	function isProfiler(object) {
	  return typeOf(object) === REACT_PROFILER_TYPE;
	}
	function isStrictMode(object) {
	  return typeOf(object) === REACT_STRICT_MODE_TYPE;
	}
	function isSuspense(object) {
	  return typeOf(object) === REACT_SUSPENSE_TYPE;
	}

	reactIs_development$1.AsyncMode = AsyncMode;
	reactIs_development$1.ConcurrentMode = ConcurrentMode;
	reactIs_development$1.ContextConsumer = ContextConsumer;
	reactIs_development$1.ContextProvider = ContextProvider;
	reactIs_development$1.Element = Element;
	reactIs_development$1.ForwardRef = ForwardRef;
	reactIs_development$1.Fragment = Fragment;
	reactIs_development$1.Lazy = Lazy;
	reactIs_development$1.Memo = Memo;
	reactIs_development$1.Portal = Portal;
	reactIs_development$1.Profiler = Profiler;
	reactIs_development$1.StrictMode = StrictMode;
	reactIs_development$1.Suspense = Suspense;
	reactIs_development$1.isAsyncMode = isAsyncMode;
	reactIs_development$1.isConcurrentMode = isConcurrentMode;
	reactIs_development$1.isContextConsumer = isContextConsumer;
	reactIs_development$1.isContextProvider = isContextProvider;
	reactIs_development$1.isElement = isElement;
	reactIs_development$1.isForwardRef = isForwardRef;
	reactIs_development$1.isFragment = isFragment;
	reactIs_development$1.isLazy = isLazy;
	reactIs_development$1.isMemo = isMemo;
	reactIs_development$1.isPortal = isPortal;
	reactIs_development$1.isProfiler = isProfiler;
	reactIs_development$1.isStrictMode = isStrictMode;
	reactIs_development$1.isSuspense = isSuspense;
	reactIs_development$1.isValidElementType = isValidElementType;
	reactIs_development$1.typeOf = typeOf;
	  })();
	}
	return reactIs_development$1;
}

var hasRequiredReactIs;

function requireReactIs () {
	if (hasRequiredReactIs) return reactIs$2.exports;
	hasRequiredReactIs = 1;
	(function (module) {

		if (process.env.NODE_ENV === 'production') {
		  module.exports = requireReactIs_production_min$1();
		} else {
		  module.exports = requireReactIs_development$1();
		}
} (reactIs$2));
	return reactIs$2.exports;
}

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

var objectAssign$1;
var hasRequiredObjectAssign;

function requireObjectAssign () {
	if (hasRequiredObjectAssign) return objectAssign$1;
	hasRequiredObjectAssign = 1;
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	objectAssign$1 = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};
	return objectAssign$1;
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret_1;
var hasRequiredReactPropTypesSecret;

function requireReactPropTypesSecret () {
	if (hasRequiredReactPropTypesSecret) return ReactPropTypesSecret_1;
	hasRequiredReactPropTypesSecret = 1;

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	ReactPropTypesSecret_1 = ReactPropTypesSecret;
	return ReactPropTypesSecret_1;
}

var has$1;
var hasRequiredHas;

function requireHas () {
	if (hasRequiredHas) return has$1;
	hasRequiredHas = 1;
	has$1 = Function.call.bind(Object.prototype.hasOwnProperty);
	return has$1;
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var checkPropTypes_1;
var hasRequiredCheckPropTypes;

function requireCheckPropTypes () {
	if (hasRequiredCheckPropTypes) return checkPropTypes_1;
	hasRequiredCheckPropTypes = 1;

	var printWarning = function() {};

	if (process.env.NODE_ENV !== 'production') {
	  var ReactPropTypesSecret = requireReactPropTypesSecret();
	  var loggedTypeFailures = {};
	  var has = requireHas();

	  printWarning = function(text) {
	    var message = 'Warning: ' + text;
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) { /**/ }
	  };
	}

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?Function} getStack Returns the component stack.
	 * @private
	 */
	function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	  if (process.env.NODE_ENV !== 'production') {
	    for (var typeSpecName in typeSpecs) {
	      if (has(typeSpecs, typeSpecName)) {
	        var error;
	        // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          if (typeof typeSpecs[typeSpecName] !== 'function') {
	            var err = Error(
	              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
	              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +
	              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'
	            );
	            err.name = 'Invariant Violation';
	            throw err;
	          }
	          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error && !(error instanceof Error)) {
	          printWarning(
	            (componentName || 'React class') + ': type specification of ' +
	            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
	            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
	            'You may have forgotten to pass an argument to the type checker ' +
	            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
	            'shape all require an argument).'
	          );
	        }
	        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error.message] = true;

	          var stack = getStack ? getStack() : '';

	          printWarning(
	            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
	          );
	        }
	      }
	    }
	  }
	}

	/**
	 * Resets warning cache when testing.
	 *
	 * @private
	 */
	checkPropTypes.resetWarningCache = function() {
	  if (process.env.NODE_ENV !== 'production') {
	    loggedTypeFailures = {};
	  }
	};

	checkPropTypes_1 = checkPropTypes;
	return checkPropTypes_1;
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var factoryWithTypeCheckers;
var hasRequiredFactoryWithTypeCheckers;

function requireFactoryWithTypeCheckers () {
	if (hasRequiredFactoryWithTypeCheckers) return factoryWithTypeCheckers;
	hasRequiredFactoryWithTypeCheckers = 1;

	var ReactIs = requireReactIs();
	var assign = requireObjectAssign();

	var ReactPropTypesSecret = requireReactPropTypesSecret();
	var has = requireHas();
	var checkPropTypes = requireCheckPropTypes();

	var printWarning = function() {};

	if (process.env.NODE_ENV !== 'production') {
	  printWarning = function(text) {
	    var message = 'Warning: ' + text;
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };
	}

	function emptyFunctionThatReturnsNull() {
	  return null;
	}

	factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {
	  /* global Symbol */
	  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	  /**
	   * Returns the iterator method function contained on the iterable object.
	   *
	   * Be sure to invoke the function with the iterable as context:
	   *
	   *     var iteratorFn = getIteratorFn(myIterable);
	   *     if (iteratorFn) {
	   *       var iterator = iteratorFn.call(myIterable);
	   *       ...
	   *     }
	   *
	   * @param {?object} maybeIterable
	   * @return {?function}
	   */
	  function getIteratorFn(maybeIterable) {
	    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  /**
	   * Collection of methods that allow declaration and validation of props that are
	   * supplied to React components. Example usage:
	   *
	   *   var Props = require('ReactPropTypes');
	   *   var MyArticle = React.createClass({
	   *     propTypes: {
	   *       // An optional string prop named "description".
	   *       description: Props.string,
	   *
	   *       // A required enum prop named "category".
	   *       category: Props.oneOf(['News','Photos']).isRequired,
	   *
	   *       // A prop named "dialog" that requires an instance of Dialog.
	   *       dialog: Props.instanceOf(Dialog).isRequired
	   *     },
	   *     render: function() { ... }
	   *   });
	   *
	   * A more formal specification of how these methods are used:
	   *
	   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	   *   decl := ReactPropTypes.{type}(.isRequired)?
	   *
	   * Each and every declaration produces a function with the same signature. This
	   * allows the creation of custom validation functions. For example:
	   *
	   *  var MyLink = React.createClass({
	   *    propTypes: {
	   *      // An optional string or URI prop named "href".
	   *      href: function(props, propName, componentName) {
	   *        var propValue = props[propName];
	   *        if (propValue != null && typeof propValue !== 'string' &&
	   *            !(propValue instanceof URI)) {
	   *          return new Error(
	   *            'Expected a string or an URI for ' + propName + ' in ' +
	   *            componentName
	   *          );
	   *        }
	   *      }
	   *    },
	   *    render: function() {...}
	   *  });
	   *
	   * @internal
	   */

	  var ANONYMOUS = '<<anonymous>>';

	  // Important!
	  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	  var ReactPropTypes = {
	    array: createPrimitiveTypeChecker('array'),
	    bigint: createPrimitiveTypeChecker('bigint'),
	    bool: createPrimitiveTypeChecker('boolean'),
	    func: createPrimitiveTypeChecker('function'),
	    number: createPrimitiveTypeChecker('number'),
	    object: createPrimitiveTypeChecker('object'),
	    string: createPrimitiveTypeChecker('string'),
	    symbol: createPrimitiveTypeChecker('symbol'),

	    any: createAnyTypeChecker(),
	    arrayOf: createArrayOfTypeChecker,
	    element: createElementTypeChecker(),
	    elementType: createElementTypeTypeChecker(),
	    instanceOf: createInstanceTypeChecker,
	    node: createNodeChecker(),
	    objectOf: createObjectOfTypeChecker,
	    oneOf: createEnumTypeChecker,
	    oneOfType: createUnionTypeChecker,
	    shape: createShapeTypeChecker,
	    exact: createStrictShapeTypeChecker,
	  };

	  /**
	   * inlined Object.is polyfill to avoid requiring consumers ship their own
	   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	   */
	  /*eslint-disable no-self-compare*/
	  function is(x, y) {
	    // SameValue algorithm
	    if (x === y) {
	      // Steps 1-5, 7-10
	      // Steps 6.b-6.e: +0 != -0
	      return x !== 0 || 1 / x === 1 / y;
	    } else {
	      // Step 6.a: NaN == NaN
	      return x !== x && y !== y;
	    }
	  }
	  /*eslint-enable no-self-compare*/

	  /**
	   * We use an Error-like object for backward compatibility as people may call
	   * PropTypes directly and inspect their output. However, we don't use real
	   * Errors anymore. We don't inspect their stack anyway, and creating them
	   * is prohibitively expensive if they are created too often, such as what
	   * happens in oneOfType() for any type before the one that matched.
	   */
	  function PropTypeError(message, data) {
	    this.message = message;
	    this.data = data && typeof data === 'object' ? data: {};
	    this.stack = '';
	  }
	  // Make `instanceof Error` still work for returned errors.
	  PropTypeError.prototype = Error.prototype;

	  function createChainableTypeChecker(validate) {
	    if (process.env.NODE_ENV !== 'production') {
	      var manualPropTypeCallCache = {};
	      var manualPropTypeWarningCount = 0;
	    }
	    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	      componentName = componentName || ANONYMOUS;
	      propFullName = propFullName || propName;

	      if (secret !== ReactPropTypesSecret) {
	        if (throwOnDirectAccess) {
	          // New behavior only for users of `prop-types` package
	          var err = new Error(
	            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	            'Use `PropTypes.checkPropTypes()` to call them. ' +
	            'Read more at http://fb.me/use-check-prop-types'
	          );
	          err.name = 'Invariant Violation';
	          throw err;
	        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
	          // Old behavior for people using React.PropTypes
	          var cacheKey = componentName + ':' + propName;
	          if (
	            !manualPropTypeCallCache[cacheKey] &&
	            // Avoid spamming the console because they are often not actionable except for lib authors
	            manualPropTypeWarningCount < 3
	          ) {
	            printWarning(
	              'You are manually calling a React.PropTypes validation ' +
	              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +
	              'and will throw in the standalone `prop-types` package. ' +
	              'You may be seeing this warning due to a third-party PropTypes ' +
	              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
	            );
	            manualPropTypeCallCache[cacheKey] = true;
	            manualPropTypeWarningCount++;
	          }
	        }
	      }
	      if (props[propName] == null) {
	        if (isRequired) {
	          if (props[propName] === null) {
	            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	          }
	          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	        }
	        return null;
	      } else {
	        return validate(props, propName, componentName, location, propFullName);
	      }
	    }

	    var chainedCheckType = checkType.bind(null, false);
	    chainedCheckType.isRequired = checkType.bind(null, true);

	    return chainedCheckType;
	  }

	  function createPrimitiveTypeChecker(expectedType) {
	    function validate(props, propName, componentName, location, propFullName, secret) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== expectedType) {
	        // `propValue` being instance of, say, date/regexp, pass the 'object'
	        // check, but we can offer a more precise error message here rather than
	        // 'of type `object`'.
	        var preciseType = getPreciseType(propValue);

	        return new PropTypeError(
	          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),
	          {expectedType: expectedType}
	        );
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createAnyTypeChecker() {
	    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
	  }

	  function createArrayOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	      }
	      var propValue = props[propName];
	      if (!Array.isArray(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	      }
	      for (var i = 0; i < propValue.length; i++) {
	        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createElementTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!isValidElement(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createElementTypeTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!ReactIs.isValidElementType(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createInstanceTypeChecker(expectedClass) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!(props[propName] instanceof expectedClass)) {
	        var expectedClassName = expectedClass.name || ANONYMOUS;
	        var actualClassName = getClassName(props[propName]);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createEnumTypeChecker(expectedValues) {
	    if (!Array.isArray(expectedValues)) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (arguments.length > 1) {
	          printWarning(
	            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
	            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
	          );
	        } else {
	          printWarning('Invalid argument supplied to oneOf, expected an array.');
	        }
	      }
	      return emptyFunctionThatReturnsNull;
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      for (var i = 0; i < expectedValues.length; i++) {
	        if (is(propValue, expectedValues[i])) {
	          return null;
	        }
	      }

	      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
	        var type = getPreciseType(value);
	        if (type === 'symbol') {
	          return String(value);
	        }
	        return value;
	      });
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createObjectOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	      }
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	      }
	      for (var key in propValue) {
	        if (has(propValue, key)) {
	          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	          if (error instanceof Error) {
	            return error;
	          }
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createUnionTypeChecker(arrayOfTypeCheckers) {
	    if (!Array.isArray(arrayOfTypeCheckers)) {
	      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	      return emptyFunctionThatReturnsNull;
	    }

	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (typeof checker !== 'function') {
	        printWarning(
	          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
	          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
	        );
	        return emptyFunctionThatReturnsNull;
	      }
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      var expectedTypes = [];
	      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	        var checker = arrayOfTypeCheckers[i];
	        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
	        if (checkerResult == null) {
	          return null;
	        }
	        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {
	          expectedTypes.push(checkerResult.data.expectedType);
	        }
	      }
	      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createNodeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!isNode(props[propName])) {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function invalidValidatorError(componentName, location, propFullName, key, type) {
	    return new PropTypeError(
	      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +
	      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'
	    );
	  }

	  function createShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      for (var key in shapeTypes) {
	        var checker = shapeTypes[key];
	        if (typeof checker !== 'function') {
	          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createStrictShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      // We need to check all keys in case some are required but missing from props.
	      var allKeys = assign({}, props[propName], shapeTypes);
	      for (var key in allKeys) {
	        var checker = shapeTypes[key];
	        if (has(shapeTypes, key) && typeof checker !== 'function') {
	          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
	        }
	        if (!checker) {
	          return new PropTypeError(
	            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
	            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
	            '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')
	          );
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }

	    return createChainableTypeChecker(validate);
	  }

	  function isNode(propValue) {
	    switch (typeof propValue) {
	      case 'number':
	      case 'string':
	      case 'undefined':
	        return true;
	      case 'boolean':
	        return !propValue;
	      case 'object':
	        if (Array.isArray(propValue)) {
	          return propValue.every(isNode);
	        }
	        if (propValue === null || isValidElement(propValue)) {
	          return true;
	        }

	        var iteratorFn = getIteratorFn(propValue);
	        if (iteratorFn) {
	          var iterator = iteratorFn.call(propValue);
	          var step;
	          if (iteratorFn !== propValue.entries) {
	            while (!(step = iterator.next()).done) {
	              if (!isNode(step.value)) {
	                return false;
	              }
	            }
	          } else {
	            // Iterator will provide entry [k,v] tuples rather than values.
	            while (!(step = iterator.next()).done) {
	              var entry = step.value;
	              if (entry) {
	                if (!isNode(entry[1])) {
	                  return false;
	                }
	              }
	            }
	          }
	        } else {
	          return false;
	        }

	        return true;
	      default:
	        return false;
	    }
	  }

	  function isSymbol(propType, propValue) {
	    // Native Symbol.
	    if (propType === 'symbol') {
	      return true;
	    }

	    // falsy value can't be a Symbol
	    if (!propValue) {
	      return false;
	    }

	    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	    if (propValue['@@toStringTag'] === 'Symbol') {
	      return true;
	    }

	    // Fallback for non-spec compliant Symbols which are polyfilled.
	    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	      return true;
	    }

	    return false;
	  }

	  // Equivalent of `typeof` but with special handling for array and regexp.
	  function getPropType(propValue) {
	    var propType = typeof propValue;
	    if (Array.isArray(propValue)) {
	      return 'array';
	    }
	    if (propValue instanceof RegExp) {
	      // Old webkits (at least until Android 4.0) return 'function' rather than
	      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	      // passes PropTypes.object.
	      return 'object';
	    }
	    if (isSymbol(propType, propValue)) {
	      return 'symbol';
	    }
	    return propType;
	  }

	  // This handles more types than `getPropType`. Only used for error messages.
	  // See `createPrimitiveTypeChecker`.
	  function getPreciseType(propValue) {
	    if (typeof propValue === 'undefined' || propValue === null) {
	      return '' + propValue;
	    }
	    var propType = getPropType(propValue);
	    if (propType === 'object') {
	      if (propValue instanceof Date) {
	        return 'date';
	      } else if (propValue instanceof RegExp) {
	        return 'regexp';
	      }
	    }
	    return propType;
	  }

	  // Returns a string that is postfixed to a warning about an invalid type.
	  // For example, "undefined" or "of type array"
	  function getPostfixForTypeWarning(value) {
	    var type = getPreciseType(value);
	    switch (type) {
	      case 'array':
	      case 'object':
	        return 'an ' + type;
	      case 'boolean':
	      case 'date':
	      case 'regexp':
	        return 'a ' + type;
	      default:
	        return type;
	    }
	  }

	  // Returns class name of the object, if any.
	  function getClassName(propValue) {
	    if (!propValue.constructor || !propValue.constructor.name) {
	      return ANONYMOUS;
	    }
	    return propValue.constructor.name;
	  }

	  ReactPropTypes.checkPropTypes = checkPropTypes;
	  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};
	return factoryWithTypeCheckers;
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var factoryWithThrowingShims;
var hasRequiredFactoryWithThrowingShims;

function requireFactoryWithThrowingShims () {
	if (hasRequiredFactoryWithThrowingShims) return factoryWithThrowingShims;
	hasRequiredFactoryWithThrowingShims = 1;

	var ReactPropTypesSecret = requireReactPropTypesSecret();

	function emptyFunction() {}
	function emptyFunctionWithReset() {}
	emptyFunctionWithReset.resetWarningCache = emptyFunction;

	factoryWithThrowingShims = function() {
	  function shim(props, propName, componentName, location, propFullName, secret) {
	    if (secret === ReactPropTypesSecret) {
	      // It is still safe when called from React.
	      return;
	    }
	    var err = new Error(
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	    err.name = 'Invariant Violation';
	    throw err;
	  }	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  }	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  var ReactPropTypes = {
	    array: shim,
	    bigint: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,

	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    elementType: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim,
	    exact: getShim,

	    checkPropTypes: emptyFunctionWithReset,
	    resetWarningCache: emptyFunction
	  };

	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};
	return factoryWithThrowingShims;
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var ReactIs = requireReactIs();

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  propTypes.exports = requireFactoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  propTypes.exports = requireFactoryWithThrowingShims()();
}

var src = {};

var cache$4 = {};

Object.defineProperty(cache$4, "__esModule", { value: true });
cache$4.clear = cache$4.hydrate = cache$4.entries = cache$4.set = cache$4.get = void 0;
let cache$3 = new Map();
function get$1(property, value, selectorHead = '') {
    return cache$3.get(selectorHead + property + value);
}
cache$4.get = get$1;
function set$2(property, value, className, selectorHead = '') {
    if (process.env.NODE_ENV !== 'production') {
        const valueType = typeof value;
        if (valueType !== 'boolean' &&
            valueType !== 'number' &&
            valueType !== 'string') {
            const encodedValue = JSON.stringify(value);
            throw new TypeError(`📦 ui-box: invalid cache value “${encodedValue}”. Only booleans, numbers and strings are supported.`);
        }
    }
    cache$3.set(selectorHead + property + value, className);
}
cache$4.set = set$2;
function entries() {
    return [...cache$3];
}
cache$4.entries = entries;
function hydrate(newEntries) {
    cache$3 = new Map([...cache$3, ...newEntries]);
}
cache$4.hydrate = hydrate;
function clear$2() {
    cache$3.clear();
}
cache$4.clear = clear$2;

var styles$1 = {};

var styleSheet$1 = {};

var isProduction$4 = {};

Object.defineProperty(isProduction$4, "__esModule", { value: true });
const isProduction$3 = () => process.env.NODE_ENV === 'production';
isProduction$4.default = isProduction$3;

var __importDefault$r = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(styleSheet$1, "__esModule", { value: true });
const is_production_1$2 = __importDefault$r(isProduction$4);
const isBrowser = typeof window !== 'undefined';
function last(arr) {
    return arr[arr.length - 1];
}
function sheetForTag(tag) {
    if (tag.sheet) {
        return tag.sheet;
    }
    for (let i = 0; i < document.styleSheets.length; i += 1) {
        if (document.styleSheets[i].ownerNode === tag) {
            return document.styleSheets[i];
        }
    }
    return;
}
function makeStyleTag() {
    const tag = document.createElement('style');
    tag.type = 'text/css';
    tag.setAttribute('data-ui-box', '');
    tag.append(document.createTextNode(''));
    (document.head || document.querySelector('head')).append(tag);
    return tag;
}
class CustomStyleSheet {
    constructor(options = {}) {
        this.tags = [];
        this.ctr = 0;
        this.injected = false;
        this.isSpeedy = options.speedy === undefined ? (0, is_production_1$2.default)() : options.speedy;
        this.maxLength = options.maxLength || 65000;
    }
    getSheet() {
        return sheetForTag(last(this.tags));
    }
    inject() {
        if (this.injected) {
            throw new Error('StyleSheet has already been injected.');
        }
        if (isBrowser) {
            this.tags[0] = makeStyleTag();
        }
        else {
            this.sheet = {
                cssRules: [],
                insertRule: (rule) => {
                    this.sheet.cssRules.push({ cssText: rule });
                }
            };
        }
        this.injected = true;
    }
    speedy(bool) {
        if (this.ctr !== 0) {
            throw new Error(`StyleSheet cannot change speedy mode after inserting any rule to sheet. Either call speedy(${bool}) earlier in your app, or call flush() before speedy(${bool})`);
        }
        this.isSpeedy = Boolean(bool);
    }
    _insert(sheet, rule) {
        sheet.insertRule(rule, sheet.cssRules.length);
    }
    insert(rule) {
        if (isBrowser) {
            const sheet = this.getSheet();
            if (this.isSpeedy && sheet != null) {
                this._insert(sheet, rule);
            }
            else {
                last(this.tags).append(document.createTextNode(rule));
            }
        }
        else if (this.sheet) {
            this.sheet.insertRule(rule, this.sheet.cssRules.length);
        }
        this.ctr += 1;
        if (isBrowser && this.ctr % this.maxLength === 0) {
            this.tags.push(makeStyleTag());
        }
        return this.ctr - 1;
    }
    flush() {
        if (isBrowser) {
            this.tags.forEach(tag => tag.parentNode.removeChild(tag));
            this.tags = [];
            this.sheet = null;
            this.ctr = 0;
        }
        else if (this.sheet) {
            this.sheet.cssRules = [];
        }
        this.injected = false;
    }
    rules() {
        if (!isBrowser) {
            return (this.sheet ? this.sheet.cssRules : []);
        }
        const arr = [];
        this.tags.forEach(tag => {
            const sheet = sheetForTag(tag);
            if (sheet) {
                const rules = Array.from(sheet.cssRules);
                arr.splice(arr.length, 0, ...[...rules]);
            }
        });
        return arr;
    }
}
styleSheet$1.default = CustomStyleSheet;

var __importDefault$q = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(styles$1, "__esModule", { value: true });
styles$1.clear = styles$1.getAll = styles$1.add = void 0;
const style_sheet_1 = __importDefault$q(styleSheet$1);
const styleSheet = new style_sheet_1.default({});
styleSheet.inject();
function add$1(styles) {
    styleSheet.insert(styles);
}
styles$1.add = add$1;
function getAll() {
    return styleSheet
        .rules()
        .reduce((combinedRules, rule) => combinedRules + rule.cssText, '');
}
styles$1.getAll = getAll;
function clear$1() {
    styleSheet.flush();
    styleSheet.inject();
}
styles$1.clear = clear$1;

var box = {};

var enhancers = {};

var animation$1 = {};

var getCss$1 = {};

var prefixer$1 = {};

function capitalizeString(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
}

function prefixProperty(prefixProperties, property, style) {
  if (prefixProperties.hasOwnProperty(property)) {
    var newStyle = {};
    var requiredPrefixes = prefixProperties[property];
    var capitalizedProperty = capitalizeString(property);
    var keys = Object.keys(style);
    for (var i = 0; i < keys.length; i++) {
      var styleProperty = keys[i];
      if (styleProperty === property) {
        for (var j = 0; j < requiredPrefixes.length; j++) {
          newStyle[requiredPrefixes[j] + capitalizedProperty] = style[property];
        }
      }
      newStyle[styleProperty] = style[styleProperty];
    }
    return newStyle;
  }
  return style;
}

function prefixValue$1(plugins, property, value, style, metaData) {
  for (var i = 0, len = plugins.length; i < len; ++i) {
    var processedValue = plugins[i](property, value, style, metaData);

    // we can stop processing if a value is returned
    // as all plugin criteria are unique
    if (processedValue) {
      return processedValue;
    }
  }
}

function addIfNew(list, value) {
  if (list.indexOf(value) === -1) {
    list.push(value);
  }
}

function addNewValuesOnly(list, values) {
  if (Array.isArray(values)) {
    for (var i = 0, len = values.length; i < len; ++i) {
      addIfNew(list, values[i]);
    }
  } else {
    addIfNew(list, values);
  }
}

function isObject$b(value) {
  return value instanceof Object && !Array.isArray(value);
}

function createPrefixer(_ref) {
  var prefixMap = _ref.prefixMap,
      plugins = _ref.plugins;

  return function prefix(style) {
    for (var property in style) {
      var value = style[property];

      // handle nested objects
      if (isObject$b(value)) {
        style[property] = prefix(value);
        // handle array values
      } else if (Array.isArray(value)) {
        var combinedValue = [];

        for (var i = 0, len = value.length; i < len; ++i) {
          var processedValue = prefixValue$1(plugins, property, value[i], style, prefixMap);
          addNewValuesOnly(combinedValue, processedValue || value[i]);
        }

        // only modify the value if it was touched
        // by any plugin to prevent unnecessary mutations
        if (combinedValue.length > 0) {
          style[property] = combinedValue;
        }
      } else {
        var _processedValue = prefixValue$1(plugins, property, value, style, prefixMap);

        // only modify the value if it was touched
        // by any plugin to prevent unnecessary mutations
        if (_processedValue) {
          style[property] = _processedValue;
        }

        style = prefixProperty(prefixMap, property, style);
      }
    }

    return style;
  };
}

var w = ["Webkit"];
var m = ["Moz"];
var ms = ["ms"];
var wm = ["Webkit", "Moz"];
var wms = ["Webkit", "ms"];
var wmms = ["Webkit", "Moz", "ms"];

var data$1 = {
  plugins: [],
  prefixMap: { "appearance": wm, "textEmphasisPosition": w, "textEmphasis": w, "textEmphasisStyle": w, "textEmphasisColor": w, "boxDecorationBreak": w, "maskImage": w, "maskMode": w, "maskRepeat": w, "maskPosition": w, "maskClip": w, "maskOrigin": w, "maskSize": w, "maskComposite": w, "mask": w, "maskBorderSource": w, "maskBorderMode": w, "maskBorderSlice": w, "maskBorderWidth": w, "maskBorderOutset": w, "maskBorderRepeat": w, "maskBorder": w, "maskType": w, "textDecorationStyle": w, "textDecorationSkip": w, "textDecorationLine": w, "textDecorationColor": w, "userSelect": wmms, "backdropFilter": w, "fontKerning": w, "scrollSnapType": wms, "scrollSnapPointsX": wms, "scrollSnapPointsY": wms, "scrollSnapDestination": wms, "scrollSnapCoordinate": wms, "clipPath": w, "shapeImageThreshold": w, "shapeImageMargin": w, "shapeImageOutside": w, "filter": w, "hyphens": wms, "flowInto": wms, "flowFrom": wms, "breakBefore": wms, "breakAfter": wms, "breakInside": wms, "regionFragment": wms, "writingMode": wms, "textOrientation": w, "tabSize": m, "fontFeatureSettings": w, "columnCount": w, "columnFill": w, "columnGap": w, "columnRule": w, "columnRuleColor": w, "columnRuleStyle": w, "columnRuleWidth": w, "columns": w, "columnSpan": w, "columnWidth": w, "wrapFlow": ms, "wrapThrough": ms, "wrapMargin": ms, "textSizeAdjust": wms }
};

// https://developer.mozilla.org/en-US/docs/Web/CSS/background-clip#Browser_compatibility
function backgroundClip$1(property, value) {
  if (typeof value === 'string' && value === 'text') {
    return ['-webkit-text', 'text'];
  }
}

var prefixes$5 = ['-webkit-', '-moz-', ''];

var values$5 = {
  'zoom-in': true,
  'zoom-out': true,
  grab: true,
  grabbing: true
};

function cursor$1(property, value) {
  if (property === 'cursor' && values$5.hasOwnProperty(value)) {
    return prefixes$5.map(function (prefix) {
      return prefix + value;
    });
  }
}

var isPrefixedValue$1 = {exports: {}};

(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isPrefixedValue;
	var regex = /-webkit-|-moz-|-ms-/;

	function isPrefixedValue(value) {
	  return typeof value === 'string' && regex.test(value);
	}
	module.exports = exports['default'];
} (isPrefixedValue$1, isPrefixedValue$1.exports));

var isPrefixedValue = /*@__PURE__*/getDefaultExportFromCjs(isPrefixedValue$1.exports);

// http://caniuse.com/#search=cross-fade
var prefixes$4 = ['-webkit-', ''];

function crossFade(property, value) {
  if (typeof value === 'string' && !isPrefixedValue(value) && value.indexOf('cross-fade(') > -1) {
    return prefixes$4.map(function (prefix) {
      return value.replace(/cross-fade\(/g, prefix + 'cross-fade(');
    });
  }
}

// http://caniuse.com/#feat=css-filter-function
var prefixes$3 = ['-webkit-', ''];

function filter$1(property, value) {
  if (typeof value === 'string' && !isPrefixedValue(value) && value.indexOf('filter(') > -1) {
    return prefixes$3.map(function (prefix) {
      return value.replace(/filter\(/g, prefix + 'filter(');
    });
  }
}

var values$4 = {
  flex: ['-webkit-box', '-moz-box', '-ms-flexbox', '-webkit-flex', 'flex'],
  'inline-flex': ['-webkit-inline-box', '-moz-inline-box', '-ms-inline-flexbox', '-webkit-inline-flex', 'inline-flex']
};

function flex$2(property, value) {
  if (property === 'display' && values$4.hasOwnProperty(value)) {
    return values$4[value];
  }
}

var alternativeValues = {
  'space-around': 'justify',
  'space-between': 'justify',
  'flex-start': 'start',
  'flex-end': 'end',
  'wrap-reverse': 'multiple',
  wrap: 'multiple'
};

var alternativeProps$1 = {
  alignItems: 'WebkitBoxAlign',
  justifyContent: 'WebkitBoxPack',
  flexWrap: 'WebkitBoxLines',
  flexGrow: 'WebkitBoxFlex'
};

function flexboxOld(property, value, style) {
  if (property === 'flexDirection' && typeof value === 'string') {
    if (value.indexOf('column') > -1) {
      style.WebkitBoxOrient = 'vertical';
    } else {
      style.WebkitBoxOrient = 'horizontal';
    }
    if (value.indexOf('reverse') > -1) {
      style.WebkitBoxDirection = 'reverse';
    } else {
      style.WebkitBoxDirection = 'normal';
    }
  }
  if (alternativeProps$1.hasOwnProperty(property)) {
    style[alternativeProps$1[property]] = alternativeValues[value] || value;
  }
}

var prefixes$2 = ['-webkit-', '-moz-', ''];
var values$3 = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/gi;

function gradient(property, value) {
  if (typeof value === 'string' && !isPrefixedValue(value) && values$3.test(value)) {
    return prefixes$2.map(function (prefix) {
      return value.replace(values$3, function (grad) {
        return prefix + grad;
      });
    });
  }
}

var _slicedToArray$3 = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

function isSimplePositionValue(value) {
  return typeof value === 'number' && !isNaN(value);
}

function isComplexSpanValue(value) {
  return typeof value === 'string' && value.includes('/');
}

var alignmentValues = ['center', 'end', 'start', 'stretch'];

var displayValues = {
  'inline-grid': ['-ms-inline-grid', 'inline-grid'],
  grid: ['-ms-grid', 'grid']
};

var propertyConverters = {
  alignSelf: function alignSelf(value, style) {
    if (alignmentValues.indexOf(value) > -1) {
      style.msGridRowAlign = value;
    }
  },

  gridColumn: function gridColumn(value, style) {
    if (isSimplePositionValue(value)) {
      style.msGridColumn = value;
    } else if (isComplexSpanValue(value)) {
      var _value$split = value.split('/'),
          _value$split2 = _slicedToArray$3(_value$split, 2),
          start = _value$split2[0],
          end = _value$split2[1];

      propertyConverters.gridColumnStart(+start, style);

      var _end$split = end.split(/ ?span /),
          _end$split2 = _slicedToArray$3(_end$split, 2),
          maybeSpan = _end$split2[0],
          maybeNumber = _end$split2[1];

      if (maybeSpan === '') {
        propertyConverters.gridColumnEnd(+start + +maybeNumber, style);
      } else {
        propertyConverters.gridColumnEnd(+end, style);
      }
    } else {
      propertyConverters.gridColumnStart(value, style);
    }
  },

  gridColumnEnd: function gridColumnEnd(value, style) {
    var msGridColumn = style.msGridColumn;

    if (isSimplePositionValue(value) && isSimplePositionValue(msGridColumn)) {
      style.msGridColumnSpan = value - msGridColumn;
    }
  },

  gridColumnStart: function gridColumnStart(value, style) {
    if (isSimplePositionValue(value)) {
      style.msGridColumn = value;
    }
  },

  gridRow: function gridRow(value, style) {
    if (isSimplePositionValue(value)) {
      style.msGridRow = value;
    } else if (isComplexSpanValue(value)) {
      var _value$split3 = value.split('/'),
          _value$split4 = _slicedToArray$3(_value$split3, 2),
          start = _value$split4[0],
          end = _value$split4[1];

      propertyConverters.gridRowStart(+start, style);

      var _end$split3 = end.split(/ ?span /),
          _end$split4 = _slicedToArray$3(_end$split3, 2),
          maybeSpan = _end$split4[0],
          maybeNumber = _end$split4[1];

      if (maybeSpan === '') {
        propertyConverters.gridRowEnd(+start + +maybeNumber, style);
      } else {
        propertyConverters.gridRowEnd(+end, style);
      }
    } else {
      propertyConverters.gridRowStart(value, style);
    }
  },

  gridRowEnd: function gridRowEnd(value, style) {
    var msGridRow = style.msGridRow;

    if (isSimplePositionValue(value) && isSimplePositionValue(msGridRow)) {
      style.msGridRowSpan = value - msGridRow;
    }
  },

  gridRowStart: function gridRowStart(value, style) {
    if (isSimplePositionValue(value)) {
      style.msGridRow = value;
    }
  },

  gridTemplateColumns: function gridTemplateColumns(value, style) {
    style.msGridColumns = value;
  },

  gridTemplateRows: function gridTemplateRows(value, style) {
    style.msGridRows = value;
  },

  justifySelf: function justifySelf(value, style) {
    if (alignmentValues.indexOf(value) > -1) {
      style.msGridColumnAlign = value;
    }
  }
};

function grid$2(property, value, style) {
  if (property === 'display' && value in displayValues) {
    return displayValues[value];
  }

  if (property in propertyConverters) {
    var propertyConverter = propertyConverters[property];
    propertyConverter(value, style);
  }
}

// http://caniuse.com/#feat=css-image-set
var prefixes$1 = ['-webkit-', ''];

function imageSet(property, value) {
  if (typeof value === 'string' && !isPrefixedValue(value) && value.indexOf('image-set(') > -1) {
    return prefixes$1.map(function (prefix) {
      return value.replace(/image-set\(/g, prefix + 'image-set(');
    });
  }
}

var alternativeProps = {
  marginBlockStart: ['WebkitMarginBefore'],
  marginBlockEnd: ['WebkitMarginAfter'],
  marginInlineStart: ['WebkitMarginStart', 'MozMarginStart'],
  marginInlineEnd: ['WebkitMarginEnd', 'MozMarginEnd'],
  paddingBlockStart: ['WebkitPaddingBefore'],
  paddingBlockEnd: ['WebkitPaddingAfter'],
  paddingInlineStart: ['WebkitPaddingStart', 'MozPaddingStart'],
  paddingInlineEnd: ['WebkitPaddingEnd', 'MozPaddingEnd'],
  borderBlockStart: ['WebkitBorderBefore'],
  borderBlockStartColor: ['WebkitBorderBeforeColor'],
  borderBlockStartStyle: ['WebkitBorderBeforeStyle'],
  borderBlockStartWidth: ['WebkitBorderBeforeWidth'],
  borderBlockEnd: ['WebkitBorderAfter'],
  borderBlockEndColor: ['WebkitBorderAfterColor'],
  borderBlockEndStyle: ['WebkitBorderAfterStyle'],
  borderBlockEndWidth: ['WebkitBorderAfterWidth'],
  borderInlineStart: ['WebkitBorderStart', 'MozBorderStart'],
  borderInlineStartColor: ['WebkitBorderStartColor', 'MozBorderStartColor'],
  borderInlineStartStyle: ['WebkitBorderStartStyle', 'MozBorderStartStyle'],
  borderInlineStartWidth: ['WebkitBorderStartWidth', 'MozBorderStartWidth'],
  borderInlineEnd: ['WebkitBorderEnd', 'MozBorderEnd'],
  borderInlineEndColor: ['WebkitBorderEndColor', 'MozBorderEndColor'],
  borderInlineEndStyle: ['WebkitBorderEndStyle', 'MozBorderEndStyle'],
  borderInlineEndWidth: ['WebkitBorderEndWidth', 'MozBorderEndWidth']
};

function logical(property, value, style) {
  if (Object.prototype.hasOwnProperty.call(alternativeProps, property)) {
    var alternativePropList = alternativeProps[property];
    for (var i = 0, len = alternativePropList.length; i < len; ++i) {
      style[alternativePropList[i]] = value;
    }
  }
}

function position$3(property, value) {
  if (property === 'position' && value === 'sticky') {
    return ['-webkit-sticky', 'sticky'];
  }
}

var prefixes = ['-webkit-', '-moz-', ''];

var properties$1 = {
  maxHeight: true,
  maxWidth: true,
  width: true,
  height: true,
  columnWidth: true,
  minWidth: true,
  minHeight: true
};
var values$2 = {
  'min-content': true,
  'max-content': true,
  'fill-available': true,
  'fit-content': true,
  'contain-floats': true
};

function sizing(property, value) {
  if (properties$1.hasOwnProperty(property) && values$2.hasOwnProperty(value)) {
    return prefixes.map(function (prefix) {
      return prefix + value;
    });
  }
}

var hyphenateProperty$1 = {exports: {}};

/* eslint-disable no-var, prefer-template */
var uppercasePattern = /[A-Z]/g;
var msPattern = /^ms-/;
var cache$2 = {};

function toHyphenLower(match) {
  return '-' + match.toLowerCase()
}

function hyphenateStyleName(name) {
  if (cache$2.hasOwnProperty(name)) {
    return cache$2[name]
  }

  var hName = name.replace(uppercasePattern, toHyphenLower);
  return (cache$2[name] = msPattern.test(hName) ? '-' + hName : hName)
}

var hyphenateStyleName$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': hyphenateStyleName
});

var require$$0$2 = /*@__PURE__*/getAugmentedNamespace(hyphenateStyleName$1);

(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = hyphenateProperty;

	var _hyphenateStyleName = require$$0$2;

	var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function hyphenateProperty(property) {
	  return (0, _hyphenateStyleName2.default)(property);
	}
	module.exports = exports['default'];
} (hyphenateProperty$1, hyphenateProperty$1.exports));

var hyphenateProperty = /*@__PURE__*/getDefaultExportFromCjs(hyphenateProperty$1.exports);

var properties = {
  transition: true,
  transitionProperty: true,
  WebkitTransition: true,
  WebkitTransitionProperty: true,
  MozTransition: true,
  MozTransitionProperty: true
};

var prefixMapping = {
  Webkit: '-webkit-',
  Moz: '-moz-',
  ms: '-ms-'
};

function prefixValue(value, propertyPrefixMap) {
  if (isPrefixedValue(value)) {
    return value;
  }

  // only split multi values, not cubic beziers
  var multipleValues = value.split(/,(?![^()]*(?:\([^()]*\))?\))/g);

  for (var i = 0, len = multipleValues.length; i < len; ++i) {
    var singleValue = multipleValues[i];
    var values = [singleValue];
    for (var property in propertyPrefixMap) {
      var dashCaseProperty = hyphenateProperty(property);

      if (singleValue.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== 'order') {
        var prefixes = propertyPrefixMap[property];
        for (var j = 0, pLen = prefixes.length; j < pLen; ++j) {
          // join all prefixes and create a new value
          values.unshift(singleValue.replace(dashCaseProperty, prefixMapping[prefixes[j]] + dashCaseProperty));
        }
      }
    }

    multipleValues[i] = values.join(',');
  }

  return multipleValues.join(',');
}

function transition$2(property, value, style, propertyPrefixMap) {
  // also check for already prefixed transitions
  if (typeof value === 'string' && properties.hasOwnProperty(property)) {
    var outputValue = prefixValue(value, propertyPrefixMap);
    // if the property is already prefixed
    var webkitOutput = outputValue.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function (val) {
      return !/-moz-|-ms-/.test(val);
    }).join(',');

    if (property.indexOf('Webkit') > -1) {
      return webkitOutput;
    }

    var mozOutput = outputValue.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function (val) {
      return !/-webkit-|-ms-/.test(val);
    }).join(',');

    if (property.indexOf('Moz') > -1) {
      return mozOutput;
    }

    style['Webkit' + capitalizeString(property)] = webkitOutput;
    style['Moz' + capitalizeString(property)] = mozOutput;
    return outputValue;
  }
}

var plugins = [backgroundClip$1, crossFade, cursor$1, filter$1, flexboxOld, gradient, grid$2, imageSet, logical, position$3, sizing, transition$2, flex$2];

var prefix$3 = createPrefixer({
  prefixMap: data$1.prefixMap,
  plugins: plugins
});

var es = /*#__PURE__*/Object.freeze({
  __proto__: null,
  createPrefixer: createPrefixer,
  prefix: prefix$3
});

var require$$0$1 = /*@__PURE__*/getAugmentedNamespace(es);

var decamelize$1 = {};

Object.defineProperty(decamelize$1, "__esModule", { value: true });
const separator = '-';
const regex1 = /([a-z\d])([A-Z])/g;
const regex2 = /([a-z]+)([A-Z][a-z\d]+)/g;
function decamelize(text) {
    return text
        .replace(regex1, `$1${separator}$2`)
        .replace(regex2, `$1${separator}$2`)
        .toLowerCase();
}
decamelize$1.default = decamelize;

var __importDefault$p = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(prefixer$1, "__esModule", { value: true });
const inline_style_prefixer_1 = require$$0$1;
const decamelize_1 = __importDefault$p(decamelize$1);
const prefixRegex = /^(Webkit|ms|Moz|O)/;
function prefixer(property, value) {
    const rules = (0, inline_style_prefixer_1.prefix)({ [property]: value });
    const rulesArray = [];
    const propertyNames = Object.keys(rules);
    for (let i = 0; i < propertyNames.length; i++) {
        const propertyName = propertyNames[i];
        const prefixedProp = propertyName.match(prefixRegex)
            ? `-${propertyName}`
            : propertyName;
        const prop = (0, decamelize_1.default)(prefixedProp);
        const values = rules[propertyName];
        if (Array.isArray(values)) {
            for (let j = 0; j < values.length; j++) {
                rulesArray.push({ property: prop, value: values[j] });
            }
        }
        else {
            rulesArray.push({ property: prop, value: values });
        }
    }
    return rulesArray;
}
prefixer$1.default = prefixer;

var valueToString$1 = {};

Object.defineProperty(valueToString$1, "__esModule", { value: true });
function valueToString(value, unit = 'px') {
    return typeof value === 'number' ? `${value}${unit}` : value;
}
valueToString$1.default = valueToString;

var getClassName$1 = {};

/* eslint-disable */
// murmurhash2 via https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js
function murmurhash2_32_gc(str) {
  var l = str.length,
      h = l ^ l,
      i = 0,
      k;

  while (l >= 4) {
    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;
    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);
    k ^= k >>> 24;
    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);
    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;
    l -= 4;
    ++i;
  }

  switch (l) {
    case 3:
      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;

    case 2:
      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;

    case 1:
      h ^= str.charCodeAt(i) & 0xff;
      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);
  }

  h ^= h >>> 13;
  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);
  h ^= h >>> 15;
  return (h >>> 0).toString(36);
}

var hash_esm = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': murmurhash2_32_gc
});

var require$$0 = /*@__PURE__*/getAugmentedNamespace(hash_esm);

var getSafeValue$1 = {};

var regex = {};

Object.defineProperty(regex, "__esModule", { value: true });
regex.unsafeClassNameCharacters = regex.spacesOutsideParentheses = void 0;
regex.spacesOutsideParentheses = / (?=([^()]*\([^()]*\))*[^()]*$)/g;
regex.unsafeClassNameCharacters = /[^_a-zA-Z0-9-]/g;

Object.defineProperty(getSafeValue$1, "__esModule", { value: true });
const regex_1 = regex;
const dashRegex = /[ .]/g;
const percentRegex = /%/g;
function getSafeValue(value) {
    return value
        .replace(dashRegex, '-')
        .replace(percentRegex, 'prcnt')
        .replace(regex_1.unsafeClassNameCharacters, '');
}
getSafeValue$1.default = getSafeValue;

var __importDefault$o = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(getClassName$1, "__esModule", { value: true });
getClassName$1.setClassNamePrefix = getClassName$1.getClassNamePrefix = void 0;
const hash_1$1 = __importDefault$o(require$$0);
const get_safe_value_1 = __importDefault$o(getSafeValue$1);
let PREFIX = 'ub-';
function getClassNamePrefix() {
    return PREFIX;
}
getClassName$1.getClassNamePrefix = getClassNamePrefix;
function setClassNamePrefix(prefix) {
    PREFIX = prefix;
}
getClassName$1.setClassNamePrefix = setClassNamePrefix;
function getClassName(propertyInfo, value, selector = '') {
    const { className, safeValue = false, complexValue = false } = propertyInfo;
    let valueKey;
    if (value === 'inherit' || value === 'initial' || value === 'unset') {
        valueKey = value;
    }
    else if (complexValue || value.includes('calc(')) {
        valueKey = (0, hash_1$1.default)(value);
    }
    else if (safeValue) {
        valueKey = value;
    }
    else {
        valueKey = (0, get_safe_value_1.default)(value);
    }
    if (selector) {
        valueKey = `${valueKey}_${(0, hash_1$1.default)(selector)}`;
    }
    return `${PREFIX}${className}_${valueKey}`;
}
getClassName$1.default = getClassName;

var __importDefault$n = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(getCss$1, "__esModule", { value: true });
const prefixer_1 = __importDefault$n(prefixer$1);
const value_to_string_1 = __importDefault$n(valueToString$1);
const get_class_name_1$1 = __importDefault$n(getClassName$1);
const is_production_1$1 = __importDefault$n(isProduction$4);
function getCss(propertyInfo, value, selector = '') {
    let rules;
    const valueType = typeof value;
    if (valueType !== 'string' && valueType !== 'number') {
        if (process.env.NODE_ENV !== 'production') {
            const name = propertyInfo.jsName;
            const encodedValue = JSON.stringify(value);
            console.error(`📦 ui-box: property “${name}” was passed invalid value “${encodedValue}”. Only numbers and strings are supported.`);
        }
        return null;
    }
    const valueString = (0, value_to_string_1.default)(value, propertyInfo.defaultUnit);
    const className = (0, get_class_name_1$1.default)(propertyInfo, valueString, selector);
    if (propertyInfo.isPrefixed) {
        rules = (0, prefixer_1.default)(propertyInfo.jsName || '', valueString);
    }
    else {
        rules = [{ property: propertyInfo.cssName || '', value: valueString }];
    }
    let styles;
    if ((0, is_production_1$1.default)()) {
        const rulesString = rules.map(rule => `${rule.property}:${rule.value}`).join(';');
        styles = `${expandSelectors(className, selector)}{${rulesString}}`;
    }
    else {
        const rulesString = rules.map(rule => `  ${rule.property}: ${rule.value};`).join('\n');
        styles = `
${expandSelectors(className, selector)} {
${rulesString}
}`;
    }
    return { className, styles, rules };
}
getCss$1.default = getCss;
const expandSelectors = (className, selector) => {
    if (!selector.includes(',')) {
        return `.${className}${selector}`;
    }
    return selector
        .split(',')
        .map(selectorPart => `.${className}${selectorPart}`)
        .join(', ');
};

var __importDefault$m = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(animation$1, "__esModule", { value: true });
animation$1.propEnhancers = animation$1.propValidators = animation$1.propAliases = animation$1.propTypes = void 0;
const prop_types_1$j = __importDefault$m(propTypes.exports);
const get_css_1$h = __importDefault$m(getCss$1);
animation$1.propTypes = {
    animation: prop_types_1$j.default.string,
    animationDelay: prop_types_1$j.default.string,
    animationDirection: prop_types_1$j.default.string,
    animationDuration: prop_types_1$j.default.string,
    animationFillMode: prop_types_1$j.default.string,
    animationIterationCount: prop_types_1$j.default.oneOfType([prop_types_1$j.default.string, prop_types_1$j.default.number]),
    animationName: prop_types_1$j.default.string,
    animationPlayState: prop_types_1$j.default.string,
    animationTimingFunction: prop_types_1$j.default.string
};
animation$1.propAliases = {};
animation$1.propValidators = {};
const animation = {
    className: 'a',
    cssName: 'animation',
    jsName: 'animation',
    complexValue: true
};
const animationDelay = {
    className: 'a-dly',
    cssName: 'animation-delay',
    jsName: 'animationDelay',
    defaultUnit: 'ms'
};
const animationDirection = {
    className: 'a-dir',
    cssName: 'animation-direction',
    jsName: 'animationDirection',
    safeValue: true
};
const animationDuration = {
    className: 'a-dur',
    cssName: 'animation-duration',
    jsName: 'animationDuration',
    defaultUnit: 'ms'
};
const animationFillMode = {
    className: 'a-fill-md',
    cssName: 'animation-fill-mode',
    jsName: 'animationFillMode',
    safeValue: true
};
const animationIterationCount = {
    className: 'a-itr-ct',
    cssName: 'animation-iteration-count',
    jsName: 'animationIterationCount',
    defaultUnit: ''
};
const animationName = {
    className: 'a-nm',
    cssName: 'animation-name',
    jsName: 'animationName'
};
const animationPlayState = {
    className: 'a-ply-ste',
    cssName: 'animation-play-state',
    jsName: 'animationPlayState',
    safeValue: true
};
const animationTimingFunction = {
    className: 'a-tmng-fn',
    cssName: 'animation-timing-function',
    jsName: 'animationTimingFunction',
    complexValue: true
};
animation$1.propEnhancers = {
    animation: (value, selector) => (0, get_css_1$h.default)(animation, value, selector),
    animationDelay: (value, selector) => (0, get_css_1$h.default)(animationDelay, value, selector),
    animationDirection: (value, selector) => (0, get_css_1$h.default)(animationDirection, value, selector),
    animationDuration: (value, selector) => (0, get_css_1$h.default)(animationDuration, value, selector),
    animationFillMode: (value, selector) => (0, get_css_1$h.default)(animationFillMode, value, selector),
    animationIterationCount: (value, selector) => (0, get_css_1$h.default)(animationIterationCount, value, selector),
    animationName: (value, selector) => (0, get_css_1$h.default)(animationName, value, selector),
    animationPlayState: (value, selector) => (0, get_css_1$h.default)(animationPlayState, value, selector),
    animationTimingFunction: (value, selector) => (0, get_css_1$h.default)(animationTimingFunction, value, selector)
};

var background$1 = {};

var __importDefault$l = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(background$1, "__esModule", { value: true });
background$1.propEnhancers = background$1.propValidators = background$1.propAliases = background$1.propTypes = void 0;
const prop_types_1$i = __importDefault$l(propTypes.exports);
const get_css_1$g = __importDefault$l(getCss$1);
background$1.propTypes = {
    background: prop_types_1$i.default.string,
    backgroundBlendMode: prop_types_1$i.default.string,
    backgroundClip: prop_types_1$i.default.string,
    backgroundColor: prop_types_1$i.default.string,
    backgroundImage: prop_types_1$i.default.string,
    backgroundOrigin: prop_types_1$i.default.string,
    backgroundPosition: prop_types_1$i.default.string,
    backgroundRepeat: prop_types_1$i.default.string,
    backgroundSize: prop_types_1$i.default.string
};
background$1.propAliases = {};
background$1.propValidators = {};
const background = {
    className: 'bg',
    cssName: 'background',
    jsName: 'background',
    isPrefixed: true,
    complexValue: true
};
const backgroundColor = {
    className: 'bg-clr',
    cssName: 'background-color',
    jsName: 'backgroundColor'
};
const backgroundImage = {
    className: 'bg-img',
    cssName: 'background-image',
    jsName: 'backgroundImage',
    isPrefixed: true,
    complexValue: true
};
const backgroundPosition = {
    className: 'bg-pos',
    cssName: 'background-position',
    jsName: 'backgroundPosition'
};
const backgroundSize = {
    className: 'bg-siz',
    cssName: 'background-size',
    jsName: 'backgroundSize'
};
const backgroundOrigin = {
    className: 'bg-orgn',
    cssName: 'background-origin',
    jsName: 'backgroundOrigin'
};
const backgroundRepeat = {
    className: 'bg-rpt',
    cssName: 'background-repeat',
    jsName: 'backgroundRepeat'
};
const backgroundClip = {
    className: 'bg-clp',
    cssName: 'background-clip',
    jsName: 'backgroundClip'
};
const backgroundBlendMode = {
    className: 'bg-blnd-md',
    cssName: 'background-blend-mode',
    jsName: 'backgroundBlendMode'
};
background$1.propEnhancers = {
    background: (value, selector) => (0, get_css_1$g.default)(background, value, selector),
    backgroundBlendMode: (value, selector) => (0, get_css_1$g.default)(backgroundBlendMode, value, selector),
    backgroundClip: (value, selector) => (0, get_css_1$g.default)(backgroundClip, value, selector),
    backgroundColor: (value, selector) => (0, get_css_1$g.default)(backgroundColor, value, selector),
    backgroundImage: (value, selector) => (0, get_css_1$g.default)(backgroundImage, value, selector),
    backgroundOrigin: (value, selector) => (0, get_css_1$g.default)(backgroundOrigin, value, selector),
    backgroundPosition: (value, selector) => (0, get_css_1$g.default)(backgroundPosition, value, selector),
    backgroundRepeat: (value, selector) => (0, get_css_1$g.default)(backgroundRepeat, value, selector),
    backgroundSize: (value, selector) => (0, get_css_1$g.default)(backgroundSize, value, selector)
};

var borderRadius = {};

(function (exports) {
	var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
	    return (mod && mod.__esModule) ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.propEnhancers = exports.propValidators = exports.propAliases = exports.propTypes = void 0;
	const prop_types_1 = __importDefault(propTypes.exports);
	const get_css_1 = __importDefault(getCss$1);
	const regex_1 = regex;
	exports.propTypes = {
	    borderBottomLeftRadius: prop_types_1.default.oneOfType([
	        prop_types_1.default.string,
	        prop_types_1.default.number
	    ]),
	    borderBottomRightRadius: prop_types_1.default.oneOfType([
	        prop_types_1.default.string,
	        prop_types_1.default.number
	    ]),
	    borderRadius: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    borderTopLeftRadius: prop_types_1.default.oneOfType([
	        prop_types_1.default.string,
	        prop_types_1.default.number
	    ]),
	    borderTopRightRadius: prop_types_1.default.oneOfType([
	        prop_types_1.default.string,
	        prop_types_1.default.number
	    ])
	};
	exports.propAliases = {
	    borderRadius: [
	        'borderBottomLeftRadius',
	        'borderBottomRightRadius',
	        'borderTopLeftRadius',
	        'borderTopRightRadius'
	    ]
	};
	exports.propValidators = {};
	if (process.env.NODE_ENV !== 'production') {
	    exports.propValidators.borderRadius = value => {
	        if (regex_1.spacesOutsideParentheses.test(value)) {
	            return `multiple values (“${value}”) aren՚t supported with “borderRadius”. Use “borderBottomLeftRadius”, “borderBottomRightRadius” “borderTopLeftRadius” and “borderTopRightRadius” instead.`;
	        }
	        return;
	    };
	}
	const borderTopLeftRadius = {
	    className: 'btlr',
	    cssName: 'border-top-left-radius',
	    jsName: 'borderTopLeftRadius'
	};
	const borderTopRightRadius = {
	    className: 'btrr',
	    cssName: 'border-top-right-radius',
	    jsName: 'borderTopRightRadius'
	};
	const borderBottomLeftRadius = {
	    className: 'bblr',
	    cssName: 'border-bottom-left-radius',
	    jsName: 'borderBottomLeftRadius'
	};
	const borderBottomRightRadius = {
	    className: 'bbrr',
	    cssName: 'border-bottom-right-radius',
	    jsName: 'borderBottomRightRadius'
	};
	exports.propEnhancers = {
	    borderBottomLeftRadius: (value, selector) => (0, get_css_1.default)(borderBottomLeftRadius, value, selector),
	    borderBottomRightRadius: (value, selector) => (0, get_css_1.default)(borderBottomRightRadius, value, selector),
	    borderTopLeftRadius: (value, selector) => (0, get_css_1.default)(borderTopLeftRadius, value, selector),
	    borderTopRightRadius: (value, selector) => (0, get_css_1.default)(borderTopRightRadius, value, selector)
	};
} (borderRadius));

var borders = {};

(function (exports) {
	var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
	    return (mod && mod.__esModule) ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.propEnhancers = exports.propValidators = exports.propAliases = exports.propTypes = void 0;
	const prop_types_1 = __importDefault(propTypes.exports);
	const get_css_1 = __importDefault(getCss$1);
	const regex_1 = regex;
	exports.propTypes = {
	    border: prop_types_1.default.string,
	    borderBottom: prop_types_1.default.string,
	    borderBottomColor: prop_types_1.default.string,
	    borderBottomStyle: prop_types_1.default.string,
	    borderBottomWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    borderColor: prop_types_1.default.string,
	    borderLeft: prop_types_1.default.string,
	    borderLeftColor: prop_types_1.default.string,
	    borderLeftStyle: prop_types_1.default.string,
	    borderLeftWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    borderRight: prop_types_1.default.string,
	    borderRightColor: prop_types_1.default.string,
	    borderRightStyle: prop_types_1.default.string,
	    borderRightWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    borderStyle: prop_types_1.default.string,
	    borderTop: prop_types_1.default.string,
	    borderTopColor: prop_types_1.default.string,
	    borderTopStyle: prop_types_1.default.string,
	    borderTopWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    borderWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number])
	};
	exports.propAliases = {
	    border: ['borderBottom', 'borderLeft', 'borderRight', 'borderTop'],
	    borderColor: [
	        'borderBottomColor',
	        'borderLeftColor',
	        'borderRightColor',
	        'borderTopColor'
	    ],
	    borderStyle: [
	        'borderBottomStyle',
	        'borderLeftStyle',
	        'borderRightStyle',
	        'borderTopStyle'
	    ],
	    borderWidth: [
	        'borderBottomWidth',
	        'borderLeftWidth',
	        'borderRightWidth',
	        'borderTopWidth'
	    ]
	};
	exports.propValidators = {};
	if (process.env.NODE_ENV !== 'production') {
	    exports.propValidators.borderColor = value => {
	        if (regex_1.spacesOutsideParentheses.test(value)) {
	            return `multiple values (“${value}”) aren՚t supported with “borderColor”. Use “borderBottomColor”, “borderLeftColor” “borderRightColor” and “borderTopColor” instead.`;
	        }
	        return;
	    };
	    exports.propValidators.borderStyle = value => {
	        if (regex_1.spacesOutsideParentheses.test(value)) {
	            return `multiple values (“${value}”) aren՚t supported with “borderStyle”. Use “borderBottomStyle”, “borderLeftStyle” “borderRightStyle” and “borderTopStyle” instead.`;
	        }
	        return;
	    };
	    exports.propValidators.borderWidth = value => {
	        if (regex_1.spacesOutsideParentheses.test(value)) {
	            return `multiple values (“${value}”) aren՚t supported with “borderWidth”. Use “borderBottomWidth”, “borderLeftWidth” “borderRightWidth” and “borderTopWidth” instead.`;
	        }
	        return;
	    };
	}
	const borderLeft = {
	    className: 'b-lft',
	    cssName: 'border-left',
	    jsName: 'borderLeft'
	};
	const borderLeftColor = {
	    className: 'b-lft-clr',
	    cssName: 'border-left-color',
	    jsName: 'borderLeftColor'
	};
	const borderLeftStyle = {
	    className: 'b-lft-stl',
	    cssName: 'border-left-style',
	    jsName: 'borderLeftStyle',
	    safeValue: true
	};
	const borderLeftWidth = {
	    className: 'b-lft-wdt',
	    cssName: 'border-left-width',
	    jsName: 'borderLeftWidth'
	};
	const borderRight = {
	    className: 'b-rgt',
	    cssName: 'border-right',
	    jsName: 'borderRight'
	};
	const borderRightColor = {
	    className: 'b-rgt-clr',
	    cssName: 'border-right-color',
	    jsName: 'borderRightColor'
	};
	const borderRightStyle = {
	    className: 'b-rgt-stl',
	    cssName: 'border-right-style',
	    jsName: 'borderRightStyle',
	    safeValue: true
	};
	const borderRightWidth = {
	    className: 'b-rgt-wdt',
	    cssName: 'border-right-width',
	    jsName: 'borderRightWidth'
	};
	const borderTop = {
	    className: 'b-top',
	    cssName: 'border-top',
	    jsName: 'borderTop'
	};
	const borderTopColor = {
	    className: 'b-top-clr',
	    cssName: 'border-top-color',
	    jsName: 'borderTopColor'
	};
	const borderTopStyle = {
	    className: 'b-top-stl',
	    cssName: 'border-top-style',
	    jsName: 'borderTopStyle',
	    safeValue: true
	};
	const borderTopWidth = {
	    className: 'b-top-wdt',
	    cssName: 'border-top-width',
	    jsName: 'borderTopWidth'
	};
	const borderBottom = {
	    className: 'b-btm',
	    cssName: 'border-bottom',
	    jsName: 'borderBottom'
	};
	const borderBottomColor = {
	    className: 'b-btm-clr',
	    cssName: 'border-bottom-color',
	    jsName: 'borderBottomColor'
	};
	const borderBottomStyle = {
	    className: 'b-btm-stl',
	    cssName: 'border-bottom-style',
	    jsName: 'borderBottomStyle',
	    safeValue: true
	};
	const borderBottomWidth = {
	    className: 'b-btm-wdt',
	    cssName: 'border-bottom-width',
	    jsName: 'borderBottomWidth'
	};
	exports.propEnhancers = {
	    borderBottom: (value, selector) => (0, get_css_1.default)(borderBottom, value, selector),
	    borderBottomColor: (value, selector) => (0, get_css_1.default)(borderBottomColor, value, selector),
	    borderBottomStyle: (value, selector) => (0, get_css_1.default)(borderBottomStyle, value, selector),
	    borderBottomWidth: (value, selector) => (0, get_css_1.default)(borderBottomWidth, value, selector),
	    borderLeft: (value, selector) => (0, get_css_1.default)(borderLeft, value, selector),
	    borderLeftColor: (value, selector) => (0, get_css_1.default)(borderLeftColor, value, selector),
	    borderLeftStyle: (value, selector) => (0, get_css_1.default)(borderLeftStyle, value, selector),
	    borderLeftWidth: (value, selector) => (0, get_css_1.default)(borderLeftWidth, value, selector),
	    borderRight: (value, selector) => (0, get_css_1.default)(borderRight, value, selector),
	    borderRightColor: (value, selector) => (0, get_css_1.default)(borderRightColor, value, selector),
	    borderRightStyle: (value, selector) => (0, get_css_1.default)(borderRightStyle, value, selector),
	    borderRightWidth: (value, selector) => (0, get_css_1.default)(borderRightWidth, value, selector),
	    borderTop: (value, selector) => (0, get_css_1.default)(borderTop, value, selector),
	    borderTopColor: (value, selector) => (0, get_css_1.default)(borderTopColor, value, selector),
	    borderTopStyle: (value, selector) => (0, get_css_1.default)(borderTopStyle, value, selector),
	    borderTopWidth: (value, selector) => (0, get_css_1.default)(borderTopWidth, value, selector)
	};
} (borders));

var boxShadow$1 = {};

var __importDefault$k = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(boxShadow$1, "__esModule", { value: true });
boxShadow$1.propEnhancers = boxShadow$1.propValidators = boxShadow$1.propAliases = boxShadow$1.propTypes = void 0;
const prop_types_1$h = __importDefault$k(propTypes.exports);
const get_css_1$f = __importDefault$k(getCss$1);
boxShadow$1.propTypes = {
    boxShadow: prop_types_1$h.default.string
};
boxShadow$1.propAliases = {};
boxShadow$1.propValidators = {};
const boxShadow = {
    className: 'bs',
    cssName: 'box-shadow',
    jsName: 'boxShadow',
    complexValue: true
};
boxShadow$1.propEnhancers = {
    boxShadow: (value, selector) => (0, get_css_1$f.default)(boxShadow, value, selector)
};

var dimensions = {};

var __importDefault$j = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(dimensions, "__esModule", { value: true });
dimensions.propEnhancers = dimensions.propValidators = dimensions.propAliases = dimensions.propTypes = void 0;
const prop_types_1$g = __importDefault$j(propTypes.exports);
const get_css_1$e = __importDefault$j(getCss$1);
dimensions.propTypes = {
    height: prop_types_1$g.default.oneOfType([prop_types_1$g.default.string, prop_types_1$g.default.number]),
    maxHeight: prop_types_1$g.default.oneOfType([prop_types_1$g.default.string, prop_types_1$g.default.number]),
    maxWidth: prop_types_1$g.default.oneOfType([prop_types_1$g.default.string, prop_types_1$g.default.number]),
    minHeight: prop_types_1$g.default.oneOfType([prop_types_1$g.default.string, prop_types_1$g.default.number]),
    minWidth: prop_types_1$g.default.oneOfType([prop_types_1$g.default.string, prop_types_1$g.default.number]),
    width: prop_types_1$g.default.oneOfType([prop_types_1$g.default.string, prop_types_1$g.default.number])
};
dimensions.propAliases = {};
dimensions.propValidators = {};
const width = {
    className: 'w',
    cssName: 'width',
    jsName: 'width'
};
const height = {
    className: 'h',
    cssName: 'height',
    jsName: 'height'
};
const minWidth = {
    className: 'min-w',
    cssName: 'min-width',
    jsName: 'minWidth'
};
const minHeight = {
    className: 'min-h',
    cssName: 'min-height',
    jsName: 'minHeight'
};
const maxWidth = {
    className: 'max-w',
    cssName: 'max-width',
    jsName: 'maxWidth'
};
const maxHeight = {
    className: 'max-h',
    cssName: 'max-height',
    jsName: 'maxHeight'
};
dimensions.propEnhancers = {
    height: (value, selector) => (0, get_css_1$e.default)(height, value, selector),
    maxHeight: (value, selector) => (0, get_css_1$e.default)(maxHeight, value, selector),
    maxWidth: (value, selector) => (0, get_css_1$e.default)(maxWidth, value, selector),
    minHeight: (value, selector) => (0, get_css_1$e.default)(minHeight, value, selector),
    minWidth: (value, selector) => (0, get_css_1$e.default)(minWidth, value, selector),
    width: (value, selector) => (0, get_css_1$e.default)(width, value, selector)
};

var flex$1 = {};

var __importDefault$i = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(flex$1, "__esModule", { value: true });
flex$1.propEnhancers = flex$1.propValidators = flex$1.propAliases = flex$1.propTypes = void 0;
const prop_types_1$f = __importDefault$i(propTypes.exports);
const get_css_1$d = __importDefault$i(getCss$1);
flex$1.propTypes = {
    alignContent: prop_types_1$f.default.string,
    alignItems: prop_types_1$f.default.string,
    alignSelf: prop_types_1$f.default.string,
    flex: prop_types_1$f.default.oneOfType([prop_types_1$f.default.string, prop_types_1$f.default.number]),
    flexBasis: prop_types_1$f.default.oneOfType([prop_types_1$f.default.string, prop_types_1$f.default.number]),
    flexDirection: prop_types_1$f.default.string,
    flexFlow: prop_types_1$f.default.string,
    flexGrow: prop_types_1$f.default.oneOfType([prop_types_1$f.default.string, prop_types_1$f.default.number]),
    flexShrink: prop_types_1$f.default.oneOfType([prop_types_1$f.default.string, prop_types_1$f.default.number]),
    flexWrap: prop_types_1$f.default.string,
    justifyContent: prop_types_1$f.default.string,
    justifyItems: prop_types_1$f.default.string,
    justifySelf: prop_types_1$f.default.string,
    order: prop_types_1$f.default.oneOfType([prop_types_1$f.default.string, prop_types_1$f.default.number]),
    placeContent: prop_types_1$f.default.string,
    placeItems: prop_types_1$f.default.string,
    placeSelf: prop_types_1$f.default.string
};
flex$1.propAliases = {};
flex$1.propValidators = {};
const flex = {
    className: 'flx',
    cssName: 'flex',
    jsName: 'flex',
    isPrefixed: true,
    defaultUnit: ''
};
const alignItems = {
    className: 'algn-itms',
    cssName: 'align-items',
    jsName: 'alignItems',
    isPrefixed: true
};
const alignSelf = {
    className: 'algn-slf',
    cssName: 'align-self',
    jsName: 'alignSelf',
    isPrefixed: true
};
const alignContent = {
    className: 'algn-cnt',
    cssName: 'align-content',
    jsName: 'alignContent',
    isPrefixed: true
};
const justifyContent = {
    className: 'just-cnt',
    cssName: 'justify-content',
    jsName: 'justifyContent',
    isPrefixed: true
};
const justifyItems = {
    className: 'just-items',
    cssName: 'justify-items',
    jsName: 'justifyItems',
    isPrefixed: true
};
const justifySelf = {
    className: 'just-self',
    cssName: 'justify-self',
    jsName: 'justifySelf',
    isPrefixed: true
};
const flexDirection = {
    className: 'flx-drct',
    cssName: 'flex-direction',
    jsName: 'flexDirection',
    isPrefixed: true,
    safeValue: true
};
const flexWrap = {
    className: 'flx-wrap',
    cssName: 'flex-wrap',
    jsName: 'flexWrap',
    isPrefixed: true,
    safeValue: true
};
const flexGrow = {
    className: 'flx-grow',
    cssName: 'flex-grow',
    jsName: 'flexGrow',
    isPrefixed: true,
    defaultUnit: ''
};
const flexShrink = {
    className: 'flx-srnk',
    cssName: 'flex-shrink',
    jsName: 'flexShrink',
    isPrefixed: true,
    defaultUnit: ''
};
const flexBasis = {
    className: 'flx-basis',
    cssName: 'flex-basis',
    jsName: 'flexBasis',
    isPrefixed: true
};
const order$1 = {
    className: 'order',
    cssName: 'order',
    jsName: 'order',
    isPrefixed: true,
    defaultUnit: '',
    safeValue: true
};
const flexFlow = {
    className: 'flx-flow',
    cssName: 'flex-flow',
    jsName: 'flexFlow',
    isPrefixed: true,
    defaultUnit: ''
};
const placeContent = {
    className: 'plc-cnt',
    cssName: 'place-content',
    jsName: 'placeContent'
};
const placeItems = {
    className: 'plc-items',
    cssName: 'place-items',
    jsName: 'placeItems'
};
const placeSelf = {
    className: 'plc-self',
    cssName: 'place-self',
    jsName: 'placeSelf'
};
flex$1.propEnhancers = {
    alignContent: (value, selector) => (0, get_css_1$d.default)(alignContent, value, selector),
    alignItems: (value, selector) => (0, get_css_1$d.default)(alignItems, value, selector),
    alignSelf: (value, selector) => (0, get_css_1$d.default)(alignSelf, value, selector),
    flex: (value, selector) => (0, get_css_1$d.default)(flex, value, selector),
    flexBasis: (value, selector) => (0, get_css_1$d.default)(flexBasis, value, selector),
    flexDirection: (value, selector) => (0, get_css_1$d.default)(flexDirection, value, selector),
    flexFlow: (value, selector) => (0, get_css_1$d.default)(flexFlow, value, selector),
    flexGrow: (value, selector) => (0, get_css_1$d.default)(flexGrow, value, selector),
    flexShrink: (value, selector) => (0, get_css_1$d.default)(flexShrink, value, selector),
    flexWrap: (value, selector) => (0, get_css_1$d.default)(flexWrap, value, selector),
    justifyContent: (value, selector) => (0, get_css_1$d.default)(justifyContent, value, selector),
    justifyItems: (value, selector) => (0, get_css_1$d.default)(justifyItems, value, selector),
    justifySelf: (value, selector) => (0, get_css_1$d.default)(justifySelf, value, selector),
    order: (value, selector) => (0, get_css_1$d.default)(order$1, value, selector),
    placeContent: (value, selector) => (0, get_css_1$d.default)(placeContent, value, selector),
    placeItems: (value, selector) => (0, get_css_1$d.default)(placeItems, value, selector),
    placeSelf: (value, selector) => (0, get_css_1$d.default)(placeSelf, value, selector)
};

var grid$1 = {};

var __importDefault$h = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(grid$1, "__esModule", { value: true });
grid$1.propEnhancers = grid$1.propValidators = grid$1.propAliases = grid$1.propTypes = void 0;
const prop_types_1$e = __importDefault$h(propTypes.exports);
const get_css_1$c = __importDefault$h(getCss$1);
grid$1.propTypes = {
    columnGap: prop_types_1$e.default.oneOfType([prop_types_1$e.default.string, prop_types_1$e.default.number]),
    gap: prop_types_1$e.default.oneOfType([prop_types_1$e.default.string, prop_types_1$e.default.number]),
    grid: prop_types_1$e.default.string,
    gridArea: prop_types_1$e.default.string,
    gridAutoColumns: prop_types_1$e.default.oneOfType([prop_types_1$e.default.string, prop_types_1$e.default.number]),
    gridAutoFlow: prop_types_1$e.default.string,
    gridAutoRows: prop_types_1$e.default.oneOfType([prop_types_1$e.default.string, prop_types_1$e.default.number]),
    gridColumn: prop_types_1$e.default.oneOfType([prop_types_1$e.default.string, prop_types_1$e.default.number]),
    gridColumnEnd: prop_types_1$e.default.oneOfType([prop_types_1$e.default.string, prop_types_1$e.default.number]),
    gridColumnGap: prop_types_1$e.default.oneOfType([prop_types_1$e.default.string, prop_types_1$e.default.number]),
    gridColumnStart: prop_types_1$e.default.oneOfType([prop_types_1$e.default.string, prop_types_1$e.default.number]),
    gridGap: prop_types_1$e.default.oneOfType([prop_types_1$e.default.string, prop_types_1$e.default.number]),
    gridRow: prop_types_1$e.default.oneOfType([prop_types_1$e.default.string, prop_types_1$e.default.number]),
    gridRowEnd: prop_types_1$e.default.oneOfType([prop_types_1$e.default.string, prop_types_1$e.default.number]),
    gridRowGap: prop_types_1$e.default.oneOfType([prop_types_1$e.default.string, prop_types_1$e.default.number]),
    gridRowStart: prop_types_1$e.default.oneOfType([prop_types_1$e.default.string, prop_types_1$e.default.number]),
    gridTemplate: prop_types_1$e.default.string,
    gridTemplateAreas: prop_types_1$e.default.string,
    gridTemplateColumns: prop_types_1$e.default.string,
    gridTemplateRows: prop_types_1$e.default.string,
    rowGap: prop_types_1$e.default.oneOfType([prop_types_1$e.default.string, prop_types_1$e.default.number])
};
grid$1.propAliases = {};
grid$1.propValidators = {};
const columnGap = {
    className: 'col-gap',
    cssName: 'column-gap',
    jsName: 'columnGap'
};
const gap = {
    className: 'gap',
    cssName: 'gap',
    jsName: 'gap'
};
const grid = {
    className: 'grd',
    cssName: 'grid',
    jsName: 'grid',
    complexValue: true
};
const gridArea = {
    className: 'grd-ara',
    cssName: 'grid-area',
    jsName: 'gridArea',
    complexValue: true
};
const gridAutoColumns = {
    className: 'grd-ato-col',
    cssName: 'grid-auto-columns',
    jsName: 'gridAutoColumns',
    complexValue: true
};
const gridAutoFlow = {
    className: 'grd-ato-flw',
    cssName: 'grid-auto-flow',
    jsName: 'gridAutoFlow'
};
const gridAutoRows = {
    className: 'grd-ato-row',
    cssName: 'grid-auto-rows',
    jsName: 'gridAutoRows',
    complexValue: true
};
const gridColumn = {
    className: 'grd-col',
    cssName: 'grid-column',
    jsName: 'gridColumn',
    defaultUnit: '',
    complexValue: true
};
const gridColumnEnd = {
    className: 'grd-col-end',
    cssName: 'grid-column-end',
    jsName: 'gridColumnEnd',
    defaultUnit: ''
};
const gridColumnGap = {
    className: 'grd-col-gap',
    cssName: 'grid-column-gap',
    jsName: 'gridColumnGap'
};
const gridColumnStart = {
    className: 'grd-col-str',
    cssName: 'grid-column-start',
    jsName: 'gridColumnStart',
    defaultUnit: ''
};
const gridGap = {
    className: 'grd-gap',
    cssName: 'grid-gap',
    jsName: 'gridGap'
};
const gridRow = {
    className: 'grd-row',
    cssName: 'grid-row',
    jsName: 'gridRow',
    defaultUnit: '',
    complexValue: true
};
const gridRowEnd = {
    className: 'grd-row-end',
    cssName: 'grid-row-end',
    jsName: 'gridRowEnd',
    defaultUnit: ''
};
const gridRowGap = {
    className: 'grd-row-gap',
    cssName: 'grid-row-gap',
    jsName: 'gridRowGap'
};
const gridRowStart = {
    className: 'grd-row-str',
    cssName: 'grid-row-start',
    jsName: 'gridRowStart',
    defaultUnit: ''
};
const gridTemplate = {
    className: 'grd-tmp',
    cssName: 'grid-template',
    jsName: 'gridTemplate',
    complexValue: true
};
const gridTemplateAreas = {
    className: 'grd-tmp-ara',
    cssName: 'grid-template-areas',
    jsName: 'gridTemplateAreas',
    complexValue: true
};
const gridTemplateColumns = {
    className: 'grd-tmp-col',
    cssName: 'grid-template-columns',
    jsName: 'gridTemplateColumns',
    complexValue: true
};
const gridTemplateRows = {
    className: 'grd-tmp-row',
    cssName: 'grid-template-rows',
    jsName: 'gridTemplateRows',
    complexValue: true
};
const rowGap = {
    className: 'row-gap',
    cssName: 'row-gap',
    jsName: 'rowGap'
};
grid$1.propEnhancers = {
    columnGap: (value, selector) => (0, get_css_1$c.default)(columnGap, value, selector),
    gap: (value, selector) => (0, get_css_1$c.default)(gap, value, selector),
    grid: (value, selector) => (0, get_css_1$c.default)(grid, value, selector),
    gridArea: (value, selector) => (0, get_css_1$c.default)(gridArea, value, selector),
    gridAutoColumns: (value, selector) => (0, get_css_1$c.default)(gridAutoColumns, value, selector),
    gridAutoFlow: (value, selector) => (0, get_css_1$c.default)(gridAutoFlow, value, selector),
    gridAutoRows: (value, selector) => (0, get_css_1$c.default)(gridAutoRows, value, selector),
    gridColumn: (value, selector) => (0, get_css_1$c.default)(gridColumn, value, selector),
    gridColumnEnd: (value, selector) => (0, get_css_1$c.default)(gridColumnEnd, value, selector),
    gridColumnGap: (value, selector) => (0, get_css_1$c.default)(gridColumnGap, value, selector),
    gridColumnStart: (value, selector) => (0, get_css_1$c.default)(gridColumnStart, value, selector),
    gridGap: (value, selector) => (0, get_css_1$c.default)(gridGap, value, selector),
    gridRow: (value, selector) => (0, get_css_1$c.default)(gridRow, value, selector),
    gridRowEnd: (value, selector) => (0, get_css_1$c.default)(gridRowEnd, value, selector),
    gridRowGap: (value, selector) => (0, get_css_1$c.default)(gridRowGap, value, selector),
    gridRowStart: (value, selector) => (0, get_css_1$c.default)(gridRowStart, value, selector),
    gridTemplate: (value, selector) => (0, get_css_1$c.default)(gridTemplate, value, selector),
    gridTemplateAreas: (value, selector) => (0, get_css_1$c.default)(gridTemplateAreas, value, selector),
    gridTemplateColumns: (value, selector) => (0, get_css_1$c.default)(gridTemplateColumns, value, selector),
    gridTemplateRows: (value, selector) => (0, get_css_1$c.default)(gridTemplateRows, value, selector),
    rowGap: (value, selector) => (0, get_css_1$c.default)(rowGap, value, selector)
};

var interaction = {};

var __importDefault$g = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(interaction, "__esModule", { value: true });
interaction.propEnhancers = interaction.propValidators = interaction.propAliases = interaction.propTypes = void 0;
const prop_types_1$d = __importDefault$g(propTypes.exports);
const get_css_1$b = __importDefault$g(getCss$1);
interaction.propTypes = {
    cursor: prop_types_1$d.default.string,
    pointerEvents: prop_types_1$d.default.string,
    userSelect: prop_types_1$d.default.string,
    visibility: prop_types_1$d.default.string
};
interaction.propAliases = {};
interaction.propValidators = {};
const cursor = {
    className: 'crsr',
    cssName: 'cursor',
    jsName: 'cursor'
};
const userSelect = {
    className: 'usr-slct',
    cssName: 'user-select',
    jsName: 'userSelect',
    safeValue: true,
    isPrefixed: true
};
const visibility = {
    className: 'vsblt',
    cssName: 'visibility',
    jsName: 'visibility',
    safeValue: true
};
const pointerEvents = {
    className: 'ptr-evts',
    cssName: 'pointer-events',
    jsName: 'pointerEvents',
    safeValue: true
};
interaction.propEnhancers = {
    cursor: (value, selector) => (0, get_css_1$b.default)(cursor, value, selector),
    pointerEvents: (value, selector) => (0, get_css_1$b.default)(pointerEvents, value, selector),
    userSelect: (value, selector) => (0, get_css_1$b.default)(userSelect, value, selector),
    visibility: (value, selector) => (0, get_css_1$b.default)(visibility, value, selector)
};

var layout = {};

var __importDefault$f = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(layout, "__esModule", { value: true });
layout.propEnhancers = layout.propValidators = layout.propAliases = layout.propTypes = void 0;
const prop_types_1$c = __importDefault$f(propTypes.exports);
const get_css_1$a = __importDefault$f(getCss$1);
const get_class_name_1 = getClassName$1;
layout.propTypes = {
    boxSizing: prop_types_1$c.default.string,
    clear: prop_types_1$c.default.string,
    clearfix: prop_types_1$c.default.bool,
    content: prop_types_1$c.default.string,
    display: prop_types_1$c.default.string,
    float: prop_types_1$c.default.string,
    zIndex: prop_types_1$c.default.oneOfType([prop_types_1$c.default.string, prop_types_1$c.default.number])
};
layout.propAliases = {};
layout.propValidators = {};
const display = {
    className: 'dspl',
    cssName: 'display',
    jsName: 'display',
    safeValue: true,
    isPrefixed: true
};
const float = {
    className: 'flt',
    cssName: 'float',
    jsName: 'float',
    safeValue: true
};
const clear = {
    className: 'clr',
    cssName: 'clear',
    jsName: 'clear',
    safeValue: true
};
const zIndex = {
    className: 'z-idx',
    cssName: 'z-index',
    jsName: 'zIndex',
    safeValue: true,
    defaultUnit: ''
};
const boxSizing = {
    className: 'box-szg',
    cssName: 'box-sizing',
    jsName: 'boxSizing',
    safeValue: true
};
const clearfix = () => {
    const className = `${(0, get_class_name_1.getClassNamePrefix)()}clearfix`;
    const rules = [
        { property: 'display', value: 'table' },
        { property: 'clear', value: 'both' },
        { property: 'content', value: '""' }
    ];
    const concatenatedRules = rules.map(rule => `  ${rule.property}: ${rule.value};`).join('\n');
    const styles = `\n.${className}:before, .${className}:after {\n${concatenatedRules}\n}`;
    return { className, rules, styles };
};
const content = {
    className: 'cnt',
    cssName: 'content',
    jsName: 'content',
    complexValue: true
};
layout.propEnhancers = {
    boxSizing: (value, selector) => (0, get_css_1$a.default)(boxSizing, value, selector),
    clear: (value, selector) => (0, get_css_1$a.default)(clear, value, selector),
    clearfix,
    content: (value, selector) => (0, get_css_1$a.default)(content, value, selector),
    display: (value, selector) => (0, get_css_1$a.default)(display, value, selector),
    float: (value, selector) => (0, get_css_1$a.default)(float, value, selector),
    zIndex: (value, selector) => (0, get_css_1$a.default)(zIndex, value, selector)
};

var list = {};

var __importDefault$e = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(list, "__esModule", { value: true });
list.propEnhancers = list.propValidators = list.propAliases = list.propTypes = void 0;
const prop_types_1$b = __importDefault$e(propTypes.exports);
const get_css_1$9 = __importDefault$e(getCss$1);
list.propTypes = {
    listStyle: prop_types_1$b.default.string,
    listStyleType: prop_types_1$b.default.string,
    listStyleImage: prop_types_1$b.default.string,
    listStylePosition: prop_types_1$b.default.string
};
list.propAliases = {};
list.propValidators = {};
const listStyle = {
    className: 'ls',
    cssName: 'list-style',
    jsName: 'listStyle',
    complexValue: true
};
const listStyleType = {
    className: 'ls-typ',
    cssName: 'list-style-type',
    jsName: 'listStyleType'
};
const listStyleImage = {
    className: 'ls-img',
    cssName: 'list-style-image',
    jsName: 'listStyleImage',
    complexValue: true
};
const listStylePosition = {
    className: 'ls-pos',
    cssName: 'list-style-position',
    jsName: 'listStylePosition',
    safeValue: true
};
list.propEnhancers = {
    listStyle: (value, selector) => (0, get_css_1$9.default)(listStyle, value, selector),
    listStyleType: (value, selector) => (0, get_css_1$9.default)(listStyleType, value, selector),
    listStyleImage: (value, selector) => (0, get_css_1$9.default)(listStyleImage, value, selector),
    listStylePosition: (value, selector) => (0, get_css_1$9.default)(listStylePosition, value, selector)
};

var opacity$1 = {};

var __importDefault$d = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(opacity$1, "__esModule", { value: true });
opacity$1.propEnhancers = opacity$1.propValidators = opacity$1.propAliases = opacity$1.propTypes = void 0;
const prop_types_1$a = __importDefault$d(propTypes.exports);
const get_css_1$8 = __importDefault$d(getCss$1);
opacity$1.propTypes = {
    opacity: prop_types_1$a.default.oneOfType([prop_types_1$a.default.string, prop_types_1$a.default.number])
};
opacity$1.propAliases = {};
opacity$1.propValidators = {};
const opacity = {
    className: 'opct',
    cssName: 'opacity',
    jsName: 'opacity',
    defaultUnit: ''
};
opacity$1.propEnhancers = {
    opacity: (value, selector) => (0, get_css_1$8.default)(opacity, value, selector)
};

var outline$1 = {};

var __importDefault$c = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(outline$1, "__esModule", { value: true });
outline$1.propEnhancers = outline$1.propValidators = outline$1.propAliases = outline$1.propTypes = void 0;
const prop_types_1$9 = __importDefault$c(propTypes.exports);
const get_css_1$7 = __importDefault$c(getCss$1);
outline$1.propTypes = {
    outline: prop_types_1$9.default.string
};
outline$1.propAliases = {};
outline$1.propValidators = {};
const outline = {
    className: 'otln',
    cssName: 'outline',
    jsName: 'outline',
    complexValue: true
};
outline$1.propEnhancers = {
    outline: (value, selector) => (0, get_css_1$7.default)(outline, value, selector)
};

var overflow = {};

var __importDefault$b = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(overflow, "__esModule", { value: true });
overflow.propEnhancers = overflow.propValidators = overflow.propAliases = overflow.propTypes = void 0;
const prop_types_1$8 = __importDefault$b(propTypes.exports);
const get_css_1$6 = __importDefault$b(getCss$1);
overflow.propTypes = {
    overflow: prop_types_1$8.default.string,
    overflowX: prop_types_1$8.default.string,
    overflowY: prop_types_1$8.default.string
};
overflow.propAliases = {
    overflow: ['overflowX', 'overflowY']
};
overflow.propValidators = {};
const overflowY = {
    className: 'ovflw-y',
    cssName: 'overflow-y',
    jsName: 'overflowY',
    safeValue: true
};
const overflowX = {
    className: 'ovflw-x',
    cssName: 'overflow-x',
    jsName: 'overflowX',
    safeValue: true
};
overflow.propEnhancers = {
    overflowX: (value, selector) => (0, get_css_1$6.default)(overflowX, value, selector),
    overflowY: (value, selector) => (0, get_css_1$6.default)(overflowY, value, selector)
};

var position$2 = {};

var __importDefault$a = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(position$2, "__esModule", { value: true });
position$2.propEnhancers = position$2.propValidators = position$2.propAliases = position$2.propTypes = void 0;
const prop_types_1$7 = __importDefault$a(propTypes.exports);
const get_css_1$5 = __importDefault$a(getCss$1);
position$2.propTypes = {
    bottom: prop_types_1$7.default.oneOfType([prop_types_1$7.default.string, prop_types_1$7.default.number]),
    left: prop_types_1$7.default.oneOfType([prop_types_1$7.default.string, prop_types_1$7.default.number]),
    position: prop_types_1$7.default.string,
    right: prop_types_1$7.default.oneOfType([prop_types_1$7.default.string, prop_types_1$7.default.number]),
    top: prop_types_1$7.default.oneOfType([prop_types_1$7.default.string, prop_types_1$7.default.number])
};
position$2.propAliases = {};
position$2.propValidators = {};
const position$1 = {
    className: 'pst',
    cssName: 'position',
    jsName: 'position',
    safeValue: true,
    isPrefixed: true
};
const top$1 = {
    className: 'top',
    cssName: 'top',
    jsName: 'top'
};
const right$1 = {
    className: 'rgt',
    cssName: 'right',
    jsName: 'right'
};
const bottom$1 = {
    className: 'btm',
    cssName: 'bottom',
    jsName: 'bottom'
};
const left$1 = {
    className: 'lft',
    cssName: 'left',
    jsName: 'left'
};
position$2.propEnhancers = {
    bottom: (value, selector) => (0, get_css_1$5.default)(bottom$1, value, selector),
    left: (value, selector) => (0, get_css_1$5.default)(left$1, value, selector),
    position: (value, selector) => (0, get_css_1$5.default)(position$1, value, selector),
    right: (value, selector) => (0, get_css_1$5.default)(right$1, value, selector),
    top: (value, selector) => (0, get_css_1$5.default)(top$1, value, selector)
};

var resize$1 = {};

var __importDefault$9 = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(resize$1, "__esModule", { value: true });
resize$1.propEnhancers = resize$1.propValidators = resize$1.propAliases = resize$1.propTypes = void 0;
const prop_types_1$6 = __importDefault$9(propTypes.exports);
const get_css_1$4 = __importDefault$9(getCss$1);
resize$1.propTypes = {
    resize: prop_types_1$6.default.string
};
resize$1.propAliases = {};
resize$1.propValidators = {};
const resize = {
    className: 'rsz',
    cssName: 'resize',
    jsName: 'resize'
};
resize$1.propEnhancers = {
    resize: (value, selector) => (0, get_css_1$4.default)(resize, value, selector)
};

var selectors = {};

var __importDefault$8 = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(selectors, "__esModule", { value: true });
selectors.propEnhancers = selectors.propValidators = selectors.propAliases = selectors.propTypes = void 0;
const prop_types_1$5 = __importDefault$8(propTypes.exports);
selectors.propTypes = {
    selectors: prop_types_1$5.default.object
};
selectors.propAliases = {};
selectors.propValidators = {};
selectors.propEnhancers = {};

var spacing = {};

(function (exports) {
	var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
	    return (mod && mod.__esModule) ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.propEnhancers = exports.propValidators = exports.propAliases = exports.propTypes = void 0;
	const prop_types_1 = __importDefault(propTypes.exports);
	const get_css_1 = __importDefault(getCss$1);
	const regex_1 = regex;
	exports.propTypes = {
	    margin: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    marginBottom: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    marginLeft: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    marginRight: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    marginTop: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    marginX: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    marginY: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    padding: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    paddingBottom: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    paddingLeft: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    paddingRight: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    paddingTop: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    paddingX: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
	    paddingY: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number])
	};
	exports.propAliases = {
	    margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],
	    marginX: ['marginLeft', 'marginRight'],
	    marginY: ['marginBottom', 'marginTop'],
	    padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],
	    paddingX: ['paddingLeft', 'paddingRight'],
	    paddingY: ['paddingBottom', 'paddingTop']
	};
	exports.propValidators = {};
	if (process.env.NODE_ENV !== 'production') {
	    exports.propValidators.margin = value => {
	        if (regex_1.spacesOutsideParentheses.test(value)) {
	            return `multiple values (“${value}”) aren՚t supported with “margin”. Use “marginX”, “marginY” “marginBottom”, “marginLeft”, “marginRight” and “marginTop” instead.`;
	        }
	        return;
	    };
	    exports.propValidators.marginX = value => {
	        if (regex_1.spacesOutsideParentheses.test(value)) {
	            return `multiple values (“${value}”) aren՚t supported with “marginX”. Use “marginLeft” and “marginRight” instead.`;
	        }
	        return;
	    };
	    exports.propValidators.marginY = value => {
	        if (regex_1.spacesOutsideParentheses.test(value)) {
	            return `multiple values (“${value}”) aren՚t supported with “marginY”. Use “marginBottom” and “marginTop” instead.`;
	        }
	        return;
	    };
	    exports.propValidators.padding = value => {
	        if (regex_1.spacesOutsideParentheses.test(value)) {
	            return `multiple values (“${value}”) aren՚t supported with “padding”. Use “paddingX”, “paddingY” “paddingBottom”, “paddingLeft”, “paddingRight” and “paddingTop” instead.`;
	        }
	        return;
	    };
	    exports.propValidators.paddingX = value => {
	        if (regex_1.spacesOutsideParentheses.test(value)) {
	            return `multiple values (“${value}”) aren՚t supported with “paddingX”. Use “paddingLeft” and “paddingRight” instead.`;
	        }
	        return;
	    };
	    exports.propValidators.paddingY = value => {
	        if (regex_1.spacesOutsideParentheses.test(value)) {
	            return `multiple values (“${value}”) aren՚t supported with “paddingY”. Use “paddingBottom” and “paddingTop” instead.`;
	        }
	        return;
	    };
	}
	const marginTop = {
	    className: 'mt',
	    cssName: 'margin-top',
	    jsName: 'marginTop'
	};
	const marginRight = {
	    className: 'mr',
	    cssName: 'margin-right',
	    jsName: 'marginRight'
	};
	const marginBottom = {
	    className: 'mb',
	    cssName: 'margin-bottom',
	    jsName: 'marginBottom'
	};
	const marginLeft = {
	    className: 'ml',
	    cssName: 'margin-left',
	    jsName: 'marginLeft'
	};
	const paddingTop = {
	    className: 'pt',
	    cssName: 'padding-top',
	    jsName: 'paddingTop'
	};
	const paddingRight = {
	    className: 'pr',
	    cssName: 'padding-right',
	    jsName: 'paddingRight'
	};
	const paddingBottom = {
	    className: 'pb',
	    cssName: 'padding-bottom',
	    jsName: 'paddingBottom'
	};
	const paddingLeft = {
	    className: 'pl',
	    cssName: 'padding-left',
	    jsName: 'paddingLeft'
	};
	exports.propEnhancers = {
	    marginBottom: (value, selector) => (0, get_css_1.default)(marginBottom, value, selector),
	    marginLeft: (value, selector) => (0, get_css_1.default)(marginLeft, value, selector),
	    marginRight: (value, selector) => (0, get_css_1.default)(marginRight, value, selector),
	    marginTop: (value, selector) => (0, get_css_1.default)(marginTop, value, selector),
	    paddingBottom: (value, selector) => (0, get_css_1.default)(paddingBottom, value, selector),
	    paddingLeft: (value, selector) => (0, get_css_1.default)(paddingLeft, value, selector),
	    paddingRight: (value, selector) => (0, get_css_1.default)(paddingRight, value, selector),
	    paddingTop: (value, selector) => (0, get_css_1.default)(paddingTop, value, selector)
	};
} (spacing));

var svg = {};

var __importDefault$7 = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(svg, "__esModule", { value: true });
svg.propEnhancers = svg.propValidators = svg.propAliases = svg.propTypes = void 0;
const prop_types_1$4 = __importDefault$7(propTypes.exports);
const get_css_1$3 = __importDefault$7(getCss$1);
svg.propTypes = {
    fill: prop_types_1$4.default.string,
    stroke: prop_types_1$4.default.string,
    strokeDasharray: prop_types_1$4.default.oneOfType([prop_types_1$4.default.string, prop_types_1$4.default.number]),
    strokeDashoffset: prop_types_1$4.default.oneOfType([prop_types_1$4.default.string, prop_types_1$4.default.number]),
    strokeLinecap: prop_types_1$4.default.string,
    strokeMiterlimit: prop_types_1$4.default.number,
    strokeWidth: prop_types_1$4.default.oneOfType([prop_types_1$4.default.string, prop_types_1$4.default.number])
};
svg.propAliases = {};
svg.propValidators = {};
const fill = {
    className: 'fill',
    cssName: 'fill',
    jsName: 'fill'
};
const stroke = { className: 'strk', cssName: 'stroke', jsName: 'stroke' };
const strokeDasharray = {
    className: 'strk-dshary',
    cssName: 'stroke-dasharray',
    jsName: 'strokeDasharray',
    defaultUnit: ''
};
const strokeDashoffset = {
    className: 'strk-dshofst',
    cssName: 'stroke-dashoffset',
    jsName: 'strokeDashoffset',
    defaultUnit: ''
};
const strokeLinecap = { className: 'strk-lncp', cssName: 'stroke-linecap', jsName: 'strokeLinecap', safeValue: true };
const strokeMiterlimit = {
    className: 'strk-mtrlmt',
    cssName: 'stroke-miterlimit',
    jsName: 'strokeMiterlimit',
    defaultUnit: ''
};
const strokeWidth = { className: 'strk-w', cssName: 'stroke-width', jsName: 'strokeWidth', defaultUnit: '' };
svg.propEnhancers = {
    fill: (value, selector) => (0, get_css_1$3.default)(fill, value, selector),
    stroke: (value, selector) => (0, get_css_1$3.default)(stroke, value, selector),
    strokeDasharray: (value, selector) => (0, get_css_1$3.default)(strokeDasharray, value, selector),
    strokeDashoffset: (value, selector) => (0, get_css_1$3.default)(strokeDashoffset, value, selector),
    strokeLinecap: (value, selector) => (0, get_css_1$3.default)(strokeLinecap, value, selector),
    strokeMiterlimit: (value, selector) => (0, get_css_1$3.default)(strokeMiterlimit, value, selector),
    strokeWidth: (value, selector) => (0, get_css_1$3.default)(strokeWidth, value, selector)
};

var text = {};

var __importDefault$6 = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(text, "__esModule", { value: true });
text.propEnhancers = text.propValidators = text.propAliases = text.propTypes = void 0;
const prop_types_1$3 = __importDefault$6(propTypes.exports);
const get_css_1$2 = __importDefault$6(getCss$1);
text.propTypes = {
    color: prop_types_1$3.default.string,
    font: prop_types_1$3.default.string,
    fontFamily: prop_types_1$3.default.string,
    fontSize: prop_types_1$3.default.oneOfType([prop_types_1$3.default.string, prop_types_1$3.default.number]),
    fontStyle: prop_types_1$3.default.string,
    fontVariant: prop_types_1$3.default.string,
    fontWeight: prop_types_1$3.default.oneOfType([prop_types_1$3.default.string, prop_types_1$3.default.number]),
    letterSpacing: prop_types_1$3.default.oneOfType([prop_types_1$3.default.string, prop_types_1$3.default.number]),
    lineHeight: prop_types_1$3.default.oneOfType([prop_types_1$3.default.string, prop_types_1$3.default.number]),
    textAlign: prop_types_1$3.default.string,
    textDecoration: prop_types_1$3.default.string,
    textOverflow: prop_types_1$3.default.string,
    textShadow: prop_types_1$3.default.string,
    textTransform: prop_types_1$3.default.string,
    verticalAlign: prop_types_1$3.default.string,
    whiteSpace: prop_types_1$3.default.string,
    wordBreak: prop_types_1$3.default.string,
    wordWrap: prop_types_1$3.default.string
};
text.propAliases = {};
text.propValidators = {};
const textAlign = {
    className: 'txt-algn',
    safeValue: true,
    cssName: 'text-align',
    jsName: 'textAlign'
};
const textDecoration = {
    className: 'txt-deco',
    cssName: 'text-decoration',
    jsName: 'textDecoration'
};
const textTransform = {
    className: 'txt-trns',
    cssName: 'text-transform',
    jsName: 'textTransform',
    safeValue: true
};
const textShadow = {
    className: 'txt-shdw',
    cssName: 'text-shadow',
    jsName: 'textShadow',
    complexValue: true
};
const textOverflow = {
    className: 'txt-ovrf',
    cssName: 'text-overflow',
    jsName: 'textOverflow',
    safeValue: true
};
const color = {
    className: 'color',
    cssName: 'color',
    jsName: 'color'
};
const font = {
    className: 'fnt',
    cssName: 'font',
    jsName: 'font',
    complexValue: true
};
const fontFamily = {
    className: 'fnt-fam',
    cssName: 'font-family',
    jsName: 'fontFamily',
    complexValue: true
};
const fontSize = {
    className: 'fnt-sze',
    cssName: 'font-size',
    jsName: 'fontSize'
};
const fontStyle = {
    className: 'fnt-stl',
    cssName: 'font-style',
    jsName: 'fontStyle',
    safeValue: true
};
const fontVariant = {
    className: 'f-vari',
    cssName: 'font-variant',
    jsName: 'fontVariant'
};
const fontWeight = {
    className: 'f-wght',
    cssName: 'font-weight',
    jsName: 'fontWeight',
    safeValue: true,
    defaultUnit: ''
};
const lineHeight = {
    className: 'ln-ht',
    cssName: 'line-height',
    jsName: 'lineHeight',
    defaultUnit: ''
};
const verticalAlign = {
    className: 'ver-algn',
    cssName: 'vertical-align',
    jsName: 'verticalAlign',
    safeValue: true
};
const wordBreak = {
    className: 'wrd-brk',
    cssName: 'word-break',
    jsName: 'wordBreak',
    safeValue: true
};
const wordWrap = {
    className: 'wrd-wrp',
    cssName: 'word-wrap',
    jsName: 'wordWrap',
    safeValue: true
};
const whiteSpace = {
    className: 'wht-spc',
    cssName: 'white-space',
    jsName: 'whiteSpace',
    safeValue: true
};
const letterSpacing = {
    className: 'ltr-spc',
    cssName: 'letter-spacing',
    jsName: 'letterSpacing'
};
text.propEnhancers = {
    color: (value, selector) => (0, get_css_1$2.default)(color, value, selector),
    font: (value, selector) => (0, get_css_1$2.default)(font, value, selector),
    fontFamily: (value, selector) => (0, get_css_1$2.default)(fontFamily, value, selector),
    fontSize: (value, selector) => (0, get_css_1$2.default)(fontSize, value, selector),
    fontStyle: (value, selector) => (0, get_css_1$2.default)(fontStyle, value, selector),
    fontVariant: (value, selector) => (0, get_css_1$2.default)(fontVariant, value, selector),
    fontWeight: (value, selector) => (0, get_css_1$2.default)(fontWeight, value, selector),
    letterSpacing: (value, selector) => (0, get_css_1$2.default)(letterSpacing, value, selector),
    lineHeight: (value, selector) => (0, get_css_1$2.default)(lineHeight, value, selector),
    textAlign: (value, selector) => (0, get_css_1$2.default)(textAlign, value, selector),
    textDecoration: (value, selector) => (0, get_css_1$2.default)(textDecoration, value, selector),
    textOverflow: (value, selector) => (0, get_css_1$2.default)(textOverflow, value, selector),
    textShadow: (value, selector) => (0, get_css_1$2.default)(textShadow, value, selector),
    textTransform: (value, selector) => (0, get_css_1$2.default)(textTransform, value, selector),
    verticalAlign: (value, selector) => (0, get_css_1$2.default)(verticalAlign, value, selector),
    whiteSpace: (value, selector) => (0, get_css_1$2.default)(whiteSpace, value, selector),
    wordBreak: (value, selector) => (0, get_css_1$2.default)(wordBreak, value, selector),
    wordWrap: (value, selector) => (0, get_css_1$2.default)(wordWrap, value, selector)
};

var transform$1 = {};

var __importDefault$5 = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(transform$1, "__esModule", { value: true });
transform$1.propEnhancers = transform$1.propValidators = transform$1.propAliases = transform$1.propTypes = void 0;
const prop_types_1$2 = __importDefault$5(propTypes.exports);
const get_css_1$1 = __importDefault$5(getCss$1);
transform$1.propTypes = {
    transform: prop_types_1$2.default.string,
    transformOrigin: prop_types_1$2.default.string
};
transform$1.propAliases = {};
transform$1.propValidators = {};
const transform = {
    className: 'tfrm',
    cssName: 'transform',
    jsName: 'transform',
    complexValue: true
};
const transformOrigin = {
    className: 'tfrm-orgn',
    cssName: 'transform-origin',
    jsName: 'transformOrigin',
    complexValue: true
};
transform$1.propEnhancers = {
    transform: (value, selector) => (0, get_css_1$1.default)(transform, value, selector),
    transformOrigin: (value, selector) => (0, get_css_1$1.default)(transformOrigin, value, selector)
};

var transition$1 = {};

var __importDefault$4 = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(transition$1, "__esModule", { value: true });
transition$1.propEnhancers = transition$1.propValidators = transition$1.propAliases = transition$1.propTypes = void 0;
const prop_types_1$1 = __importDefault$4(propTypes.exports);
const get_css_1 = __importDefault$4(getCss$1);
transition$1.propTypes = {
    transition: prop_types_1$1.default.string,
    transitionDelay: prop_types_1$1.default.string,
    transitionDuration: prop_types_1$1.default.string,
    transitionProperty: prop_types_1$1.default.string,
    transitionTimingFunction: prop_types_1$1.default.string
};
transition$1.propAliases = {};
transition$1.propValidators = {};
const transition = {
    className: 'tstn',
    cssName: 'transition',
    jsName: 'transition',
    complexValue: true
};
const transitionDelay = {
    className: 'tstn-dly',
    cssName: 'transition-delay',
    jsName: 'transitionDelay',
    complexValue: true
};
const transitionDuration = {
    className: 'tstn-drn',
    cssName: 'transition-duration',
    jsName: 'transitionDuration',
    complexValue: true
};
const transitionProperty = {
    className: 'tstn-pty',
    cssName: 'transition-property',
    jsName: 'transitionProperty',
    complexValue: true
};
const transitionTimingFunction = {
    className: 'tstn-tf',
    cssName: 'transition-timing-function',
    jsName: 'transitionTimingFunction',
    complexValue: true
};
transition$1.propEnhancers = {
    transition: (value, selector) => (0, get_css_1.default)(transition, value, selector),
    transitionDelay: (value, selector) => (0, get_css_1.default)(transitionDelay, value, selector),
    transitionDuration: (value, selector) => (0, get_css_1.default)(transitionDuration, value, selector),
    transitionProperty: (value, selector) => (0, get_css_1.default)(transitionProperty, value, selector),
    transitionTimingFunction: (value, selector) => (0, get_css_1.default)(transitionTimingFunction, value, selector)
};

(function (exports) {
	var __createBinding = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {
	    if (k2 === undefined) k2 = k;
	    var desc = Object.getOwnPropertyDescriptor(m, k);
	    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
	      desc = { enumerable: true, get: function() { return m[k]; } };
	    }
	    Object.defineProperty(o, k2, desc);
	}) : (function(o, m, k, k2) {
	    if (k2 === undefined) k2 = k;
	    o[k2] = m[k];
	}));
	var __setModuleDefault = (commonjsGlobal && commonjsGlobal.__setModuleDefault) || (Object.create ? (function(o, v) {
	    Object.defineProperty(o, "default", { enumerable: true, value: v });
	}) : function(o, v) {
	    o["default"] = v;
	});
	var __importStar = (commonjsGlobal && commonjsGlobal.__importStar) || function (mod) {
	    if (mod && mod.__esModule) return mod;
	    var result = {};
	    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
	    __setModuleDefault(result, mod);
	    return result;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.propEnhancers = exports.propValidators = exports.propAliases = exports.propNames = exports.propTypes = exports.transition = exports.transform = exports.text = exports.svg = exports.spacing = exports.selectors = exports.resize = exports.position = exports.overflow = exports.outline = exports.opacity = exports.list = exports.layout = exports.interaction = exports.grid = exports.flex = exports.dimensions = exports.boxShadow = exports.borders = exports.borderRadius = exports.background = exports.animation = void 0;
	const animation = __importStar(animation$1);
	exports.animation = animation;
	const background = __importStar(background$1);
	exports.background = background;
	const borderRadius$1 = __importStar(borderRadius);
	exports.borderRadius = borderRadius$1;
	const borders$1 = __importStar(borders);
	exports.borders = borders$1;
	const boxShadow = __importStar(boxShadow$1);
	exports.boxShadow = boxShadow;
	const dimensions$1 = __importStar(dimensions);
	exports.dimensions = dimensions$1;
	const flex = __importStar(flex$1);
	exports.flex = flex;
	const grid = __importStar(grid$1);
	exports.grid = grid;
	const interaction$1 = __importStar(interaction);
	exports.interaction = interaction$1;
	const layout$1 = __importStar(layout);
	exports.layout = layout$1;
	const list$1 = __importStar(list);
	exports.list = list$1;
	const opacity = __importStar(opacity$1);
	exports.opacity = opacity;
	const outline = __importStar(outline$1);
	exports.outline = outline;
	const overflow$1 = __importStar(overflow);
	exports.overflow = overflow$1;
	const position = __importStar(position$2);
	exports.position = position;
	const resize = __importStar(resize$1);
	exports.resize = resize;
	const selectors$1 = __importStar(selectors);
	exports.selectors = selectors$1;
	const spacing$1 = __importStar(spacing);
	exports.spacing = spacing$1;
	const svg$1 = __importStar(svg);
	exports.svg = svg$1;
	const text$1 = __importStar(text);
	exports.text = text$1;
	const transform = __importStar(transform$1);
	exports.transform = transform;
	const transition = __importStar(transition$1);
	exports.transition = transition;
	exports.propTypes = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, animation.propTypes), background.propTypes), borderRadius$1.propTypes), borders$1.propTypes), boxShadow.propTypes), dimensions$1.propTypes), flex.propTypes), grid.propTypes), interaction$1.propTypes), layout$1.propTypes), list$1.propTypes), opacity.propTypes), outline.propTypes), overflow$1.propTypes), position.propTypes), resize.propTypes), selectors$1.propTypes), spacing$1.propTypes), svg$1.propTypes), text$1.propTypes), transform.propTypes), transition.propTypes);
	exports.propNames = Object.keys(exports.propTypes);
	exports.propAliases = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, animation.propAliases), background.propAliases), borderRadius$1.propAliases), borders$1.propAliases), boxShadow.propAliases), dimensions$1.propAliases), flex.propAliases), grid.propAliases), interaction$1.propAliases), layout$1.propAliases), list$1.propAliases), opacity.propAliases), outline.propAliases), overflow$1.propAliases), position.propAliases), resize.propAliases), selectors$1.propAliases), spacing$1.propAliases), svg$1.propAliases), text$1.propAliases), transform.propAliases), transition.propAliases);
	exports.propValidators = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, animation.propValidators), background.propValidators), borderRadius$1.propValidators), borders$1.propValidators), boxShadow.propValidators), dimensions$1.propValidators), flex.propValidators), grid.propValidators), interaction$1.propValidators), layout$1.propValidators), list$1.propValidators), opacity.propValidators), outline.propValidators), overflow$1.propValidators), position.propValidators), resize.propValidators), selectors$1.propValidators), spacing$1.propValidators), svg$1.propValidators), text$1.propValidators), transform.propValidators), transition.propValidators);
	exports.propEnhancers = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, animation.propEnhancers), background.propEnhancers), borderRadius$1.propEnhancers), borders$1.propEnhancers), boxShadow.propEnhancers), dimensions$1.propEnhancers), flex.propEnhancers), grid.propEnhancers), interaction$1.propEnhancers), layout$1.propEnhancers), list$1.propEnhancers), opacity.propEnhancers), outline.propEnhancers), overflow$1.propEnhancers), position.propEnhancers), resize.propEnhancers), selectors$1.propEnhancers), spacing$1.propEnhancers), svg$1.propEnhancers), text$1.propEnhancers), transform.propEnhancers), transition.propEnhancers);
} (enhancers));

var enhanceProps$1 = {};

var expandAliases$1 = {};

Object.defineProperty(expandAliases$1, "__esModule", { value: true });
const index_1$1 = enhancers;
function expandAliases(props) {
    const propNames = Object.keys(props);
    const newProps = new Map();
    propNames.forEach(propName => {
        const propValue = props[propName];
        const aliases = index_1$1.propAliases[propName] || [propName];
        if (process.env.NODE_ENV !== 'production') {
            const validator = index_1$1.propValidators[propName];
            if (validator) {
                const result = validator(propValue);
                if (result) {
                    throw new Error(`📦 ui-box: ${result}`);
                }
            }
        }
        aliases.forEach(alias => {
            newProps.set(alias, propValue);
        });
    });
    return newProps;
}
expandAliases$1.default = expandAliases;

var __createBinding$2 = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault$2 = (commonjsGlobal && commonjsGlobal.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar$2 = (commonjsGlobal && commonjsGlobal.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding$2(result, mod, k);
    __setModuleDefault$2(result, mod);
    return result;
};
var __importDefault$3 = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(enhanceProps$1, "__esModule", { value: true });
const enhancers_1$2 = enhancers;
const expand_aliases_1 = __importDefault$3(expandAliases$1);
const cache$1 = __importStar$2(cache$4);
const styles = __importStar$2(styles$1);
const SELECTORS_PROP = 'selectors';
function enhanceProps(props, selectorHead = '', parentProperty = '') {
    const propsMap = (0, expand_aliases_1.default)(props);
    const preservedProps = {};
    let className = props.className || '';
    for (const [property, value] of propsMap) {
        const isSelectorOrChildProp = property === SELECTORS_PROP || parentProperty.length > 0;
        if (isObject$a(value) && isSelectorOrChildProp) {
            const prop = property === SELECTORS_PROP ? '' : property;
            const newSelectorHead = selectorHead.includes(',')
                ? selectorHead
                    .split(',')
                    .map(selector => `${selector}${prop}`)
                    .join(',')
                : `${selectorHead}${prop}`;
            const parsed = enhanceProps(value, noAnd(newSelectorHead), property);
            className = `${className} ${parsed.className}`;
            continue;
        }
        const enhancer = enhancers_1$2.propEnhancers[property];
        if (!enhancer) {
            preservedProps[property] = value;
            continue;
        }
        if (value === null || value === undefined || value === false) {
            continue;
        }
        const cachedClassName = cache$1.get(property, value, selectorHead);
        if (cachedClassName) {
            className = `${className} ${cachedClassName}`;
            continue;
        }
        const newCss = enhancer(value, selectorHead);
        if (newCss) {
            styles.add(newCss.styles);
            cache$1.set(property, value, newCss.className, selectorHead);
            className = `${className} ${newCss.className}`;
        }
    }
    className = className.trim();
    return { className, enhancedProps: preservedProps };
}
enhanceProps$1.default = enhanceProps;
const isObject$a = (value) => value != null && typeof value === 'object';
const noAnd = (value) => value.replace(/&/g, '');

var safeHref = {};

Object.defineProperty(safeHref, "__esModule", { value: true });
safeHref.extractAnchorProps = safeHref.getURLInfo = safeHref.getUseSafeHref = safeHref.configureSafeHref = void 0;
const PROTOCOL_REGEX = /^[a-z]+:/;
const ORIGIN_REGEX = /^(?:[a-z]+:?:)?(?:\/\/)?([^\/\?]+)/;
let useSafeHref = true;
let globalOrigin = typeof window !== 'undefined' ? window.location.origin : false;
function configureSafeHref(configObject) {
    if (typeof configObject.enabled === 'boolean') {
        useSafeHref = configObject.enabled;
    }
    if (configObject.origin) {
        globalOrigin = configObject.origin;
    }
}
safeHref.configureSafeHref = configureSafeHref;
function getUseSafeHref() {
    return useSafeHref;
}
safeHref.getUseSafeHref = getUseSafeHref;
function getURLInfo(url) {
    const safeProtocols = ['http:', 'https:', 'mailto:', 'tel:', 'data:'];
    const protocolResult = url.match(PROTOCOL_REGEX);
    const originResult = url.match(ORIGIN_REGEX);
    const urlProtocol = protocolResult ? protocolResult[0] : 'relative';
    let sameOrigin = urlProtocol === 'relative';
    if (!sameOrigin && globalOrigin) {
        sameOrigin = globalOrigin === (originResult && originResult[0]);
    }
    const isSafeProtocol = sameOrigin ? true : safeProtocols.includes(urlProtocol);
    if (!isSafeProtocol) {
        console.error('📦 `href` passed to anchor tag is unsafe. Because of this, the `href` on the element was not set. Please review the safe href documentation if you have questions.', 'https://www.github.com/segmentio/ui-box');
        return {
            url: undefined,
            sameOrigin
        };
    }
    return {
        url,
        sameOrigin
    };
}
safeHref.getURLInfo = getURLInfo;
function extractAnchorProps(href, rel) {
    const urlInfo = getURLInfo(href);
    const safeHref = urlInfo.url;
    let safeRel = rel || '';
    if (urlInfo.url) {
        if (!safeRel.includes('noopener')) {
            safeRel += `${safeRel.length > 0 ? ' ' : ''}noopener`;
        }
        if (!safeRel.includes('noreferrer') && !urlInfo.sameOrigin) {
            safeRel += `${safeRel.length > 0 ? ' ' : ''}noreferrer`;
        }
    }
    return {
        safeHref,
        safeRel
    };
}
safeHref.extractAnchorProps = extractAnchorProps;

var __rest = (commonjsGlobal && commonjsGlobal.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault$2 = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(box, "__esModule", { value: true });
const react_1 = __importDefault$2(React__default);
const prop_types_1 = __importDefault$2(propTypes.exports);
const enhancers_1$1 = enhancers;
const enhance_props_1 = __importDefault$2(enhanceProps$1);
const safeHref_1 = safeHref;
const Box$1 = react_1.default.forwardRef((_a, ref) => {
    var { is, children, allowUnsafeHref } = _a, props = __rest(_a, ["is", "children", "allowUnsafeHref"]);
    const { className, enhancedProps: parsedProps } = (0, enhance_props_1.default)(props);
    parsedProps.className = className;
    if (ref) {
        parsedProps.ref = ref;
    }
    const safeHrefEnabled = (typeof allowUnsafeHref === 'boolean' ? !allowUnsafeHref : (0, safeHref_1.getUseSafeHref)()) && is === 'a' && parsedProps.href;
    if (safeHrefEnabled) {
        const { safeHref, safeRel } = (0, safeHref_1.extractAnchorProps)(parsedProps.href, parsedProps.rel);
        parsedProps.href = safeHref;
        parsedProps.rel = safeRel;
    }
    return react_1.default.createElement(is || 'div', parsedProps, children);
});
Box$1.displayName = 'Box';
Box$1.propTypes = Object.assign(Object.assign({}, enhancers_1$1.propTypes), { is: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.func, prop_types_1.default.elementType]), allowUnsafeHref: prop_types_1.default.bool });
Box$1.defaultProps = {
    is: 'div',
    boxSizing: 'border-box'
};
box.default = Box$1;

var keyframes$1 = {};

var flattenObject$1 = {};

Object.defineProperty(flattenObject$1, "__esModule", { value: true });
const flattenObject = (object) => {
    const keys = Object.keys(object);
    return keys
        .map(key => {
        const value = object[key];
        const type = typeof value;
        if (Array.isArray(value)) {
            return `${key}:array:[${value.map((value, index) => flattenObject({ [index]: value }))}]`;
        }
        if (value != null && type === 'object') {
            return `${key}:${type}:${flattenObject(value)}`;
        }
        return `${key}:${type}:${value}`;
    })
        .join(';');
};
flattenObject$1.default = flattenObject;

var __createBinding$1 = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault$1 = (commonjsGlobal && commonjsGlobal.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar$1 = (commonjsGlobal && commonjsGlobal.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding$1(result, mod, k);
    __setModuleDefault$1(result, mod);
    return result;
};
var __importDefault$1 = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(keyframes$1, "__esModule", { value: true });
const hash_1 = __importDefault$1(require$$0);
const flatten_object_1 = __importDefault$1(flattenObject$1);
const enhancers_1 = enhancers;
const is_production_1 = __importDefault$1(isProduction$4);
const stylesheet = __importStar$1(styles$1);
const cache = __importStar$1(cache$4);
const keyframes = (friendlyName, timeline) => {
    const hashedValue = (0, hash_1.default)((0, flatten_object_1.default)(timeline));
    const name = `${friendlyName}_${hashedValue}`;
    const cachedStyles = cache.get(friendlyName, hashedValue, 'keyframe');
    if (cachedStyles != null) {
        return name;
    }
    const keys = Object.keys(timeline);
    const timelineStyles = keys.map(key => getStylesForTimelineKey(key, timeline[key] || {}));
    const styles = getKeyframesStyles(name, timelineStyles);
    cache.set(friendlyName, hashedValue, styles, 'keyframe');
    stylesheet.add(styles);
    return name;
};
const flatten = (values) => {
    const flattenedValues = [];
    return flattenedValues.concat(...values);
};
const getStylesForTimelineKey = (timelineKey, cssProps) => {
    const cssPropKeys = Object.keys(cssProps);
    const rules = flatten(cssPropKeys.map(cssPropKey => getRulesForKey(cssPropKey, cssProps)));
    const key = timelineKeyToString(timelineKey);
    const rulesString = rules
        .map(rule => {
        const { property, value } = rule;
        if ((0, is_production_1.default)()) {
            return `${property}:${value};`;
        }
        return `    ${property}: ${value};`;
    })
        .join((0, is_production_1.default)() ? '' : '\n');
    if ((0, is_production_1.default)()) {
        return `${key} {${rulesString}}`;
    }
    return `  ${key} {\n${rulesString}\n  }`;
};
const getRulesForKey = (key, cssProps) => {
    const value = cssProps[key];
    const enhancer = enhancers_1.propEnhancers[key];
    if (enhancer == null || value == null || value === false) {
        return [];
    }
    const enhancedProp = enhancer(value, '');
    if (enhancedProp == null) {
        return [];
    }
    return enhancedProp.rules;
};
const getKeyframesStyles = (name, rules) => {
    const separator = (0, is_production_1.default)() ? '' : '\n';
    const openBrace = `{${separator}`;
    const closeBrace = `${separator}}`;
    const concatenatedRules = rules.join(separator);
    return `@keyframes ${name} ${openBrace}${concatenatedRules}${closeBrace}`;
};
const timelineKeyToString = (timelineKey) => {
    const isNumber = !isNaN(Number(timelineKey));
    return isNumber ? `${timelineKey}%` : timelineKey.toString();
};
keyframes$1.default = keyframes;

var splitProps$1 = {};

Object.defineProperty(splitProps$1, "__esModule", { value: true });
function splitProps(props, keys) {
    const matchedProps = {};
    const remainingProps = {};
    const propKeys = Object.keys(props);
    for (let i = 0; i < propKeys.length; i++) {
        const propKey = propKeys[i];
        const propValue = props[propKey];
        if (keys.includes(propKey)) {
            matchedProps[propKey] = propValue;
        }
        else {
            remainingProps[propKey] = propValue;
        }
    }
    return { matchedProps, remainingProps };
}
splitProps$1.default = splitProps;

var splitBoxProps$1 = {};

var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(splitBoxProps$1, "__esModule", { value: true });
const index_1 = enhancers;
const split_props_1 = __importDefault(splitProps$1);
function splitBoxProps(props) {
    return (0, split_props_1.default)(props, index_1.propNames);
}
splitBoxProps$1.default = splitBoxProps;

(function (exports) {
	var __createBinding = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {
	    if (k2 === undefined) k2 = k;
	    var desc = Object.getOwnPropertyDescriptor(m, k);
	    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
	      desc = { enumerable: true, get: function() { return m[k]; } };
	    }
	    Object.defineProperty(o, k2, desc);
	}) : (function(o, m, k, k2) {
	    if (k2 === undefined) k2 = k;
	    o[k2] = m[k];
	}));
	var __setModuleDefault = (commonjsGlobal && commonjsGlobal.__setModuleDefault) || (Object.create ? (function(o, v) {
	    Object.defineProperty(o, "default", { enumerable: true, value: v });
	}) : function(o, v) {
	    o["default"] = v;
	});
	var __importStar = (commonjsGlobal && commonjsGlobal.__importStar) || function (mod) {
	    if (mod && mod.__esModule) return mod;
	    var result = {};
	    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
	    __setModuleDefault(result, mod);
	    return result;
	};
	var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
	    return (mod && mod.__esModule) ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.clearStyles = exports.extractStyles = exports.hydrate = exports.propEnhancers = exports.propAliases = exports.propNames = exports.propTypes = exports.transform = exports.text = exports.spacing = exports.position = exports.overflow = exports.opacity = exports.list = exports.layout = exports.interaction = exports.flex = exports.dimensions = exports.boxShadow = exports.borders = exports.borderRadius = exports.background = exports.configureSafeHref = exports.setClassNamePrefix = exports.splitBoxProps = exports.splitProps = exports.keyframes = exports.default = void 0;
	const cache = __importStar(cache$4);
	const styles = __importStar(styles$1);
	var box_1 = box;
	Object.defineProperty(exports, "default", { enumerable: true, get: function () { return __importDefault(box_1).default; } });
	var keyframes_1 = keyframes$1;
	Object.defineProperty(exports, "keyframes", { enumerable: true, get: function () { return __importDefault(keyframes_1).default; } });
	var split_props_1 = splitProps$1;
	Object.defineProperty(exports, "splitProps", { enumerable: true, get: function () { return __importDefault(split_props_1).default; } });
	var split_box_props_1 = splitBoxProps$1;
	Object.defineProperty(exports, "splitBoxProps", { enumerable: true, get: function () { return __importDefault(split_box_props_1).default; } });
	var get_class_name_1 = getClassName$1;
	Object.defineProperty(exports, "setClassNamePrefix", { enumerable: true, get: function () { return get_class_name_1.setClassNamePrefix; } });
	var safeHref_1 = safeHref;
	Object.defineProperty(exports, "configureSafeHref", { enumerable: true, get: function () { return safeHref_1.configureSafeHref; } });
	var index_1 = enhancers;
	Object.defineProperty(exports, "background", { enumerable: true, get: function () { return index_1.background; } });
	Object.defineProperty(exports, "borderRadius", { enumerable: true, get: function () { return index_1.borderRadius; } });
	Object.defineProperty(exports, "borders", { enumerable: true, get: function () { return index_1.borders; } });
	Object.defineProperty(exports, "boxShadow", { enumerable: true, get: function () { return index_1.boxShadow; } });
	Object.defineProperty(exports, "dimensions", { enumerable: true, get: function () { return index_1.dimensions; } });
	Object.defineProperty(exports, "flex", { enumerable: true, get: function () { return index_1.flex; } });
	Object.defineProperty(exports, "interaction", { enumerable: true, get: function () { return index_1.interaction; } });
	Object.defineProperty(exports, "layout", { enumerable: true, get: function () { return index_1.layout; } });
	Object.defineProperty(exports, "list", { enumerable: true, get: function () { return index_1.list; } });
	Object.defineProperty(exports, "opacity", { enumerable: true, get: function () { return index_1.opacity; } });
	Object.defineProperty(exports, "overflow", { enumerable: true, get: function () { return index_1.overflow; } });
	Object.defineProperty(exports, "position", { enumerable: true, get: function () { return index_1.position; } });
	Object.defineProperty(exports, "spacing", { enumerable: true, get: function () { return index_1.spacing; } });
	Object.defineProperty(exports, "text", { enumerable: true, get: function () { return index_1.text; } });
	Object.defineProperty(exports, "transform", { enumerable: true, get: function () { return index_1.transform; } });
	Object.defineProperty(exports, "propTypes", { enumerable: true, get: function () { return index_1.propTypes; } });
	Object.defineProperty(exports, "propNames", { enumerable: true, get: function () { return index_1.propNames; } });
	Object.defineProperty(exports, "propAliases", { enumerable: true, get: function () { return index_1.propAliases; } });
	Object.defineProperty(exports, "propEnhancers", { enumerable: true, get: function () { return index_1.propEnhancers; } });
	exports.hydrate = cache.hydrate;
	function extractStyles() {
	    const output = {
	        cache: cache.entries(),
	        styles: styles.getAll()
	    };
	    clearStyles();
	    return output;
	}
	exports.extractStyles = extractStyles;
	function clearStyles() {
	    cache.clear();
	    styles.clear();
	}
	exports.clearStyles = clearStyles;
} (src));

var BoxComponent = /*@__PURE__*/getDefaultExportFromCjs(src);

var uniqueRandomString = function uniqueRandomString() {
  var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;
  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var permittedCharacters;
  var time = "".concat(new Date().getTime());
  switch (type) {
    case 1:
      permittedCharacters = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-_";
      break;
    case 2:
      permittedCharacters = "0123456789abcdefghijklmnopqrstuvwxyz-_";
      break;
    case 3:
      permittedCharacters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_";
      break;
    case 4:
      permittedCharacters = "0123456789-_";
      break;
    case 5:
      permittedCharacters = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
      break;
    case 6:
      permittedCharacters = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
      break;
    case 7:
      permittedCharacters = "0123456789abcdefghijklmnopqrstuvwxyz";
      break;
    case 8:
      permittedCharacters = "abcdefghijklmnopqrstuvwxyz";
      break;
    default:
      permittedCharacters = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_";
      break;
  }
  var string = "";
  var randomLength = length - time.length;
  for (var i = 0; i < randomLength; i++) {
    string += permittedCharacters[Math.floor(Math.random() * permittedCharacters.length)];
  }
  var index = Math.floor(Math.random() * randomLength) + 1;
  var end = string.substr(index);
  var start = string.substr(3, index);
  var finalString = start + time + end;
  return finalString;
};

var _excluded$T = ["darkMode", "children"];
var DarkModeContext = /*#__PURE__*/createContext({
  darkMode: null
});
var DarkModeProvider = function DarkModeProvider(_ref) {
  var darkMode = _ref.darkMode,
    children = _ref.children;
    _objectWithoutProperties(_ref, _excluded$T);
  var _useState = useState(null),
    _useState2 = _slicedToArray$4(_useState, 2),
    darkModeState = _useState2[0],
    setDarkModeState = _useState2[1];
  useLayoutEffect(function () {
    if (darkMode !== null) {
      setDarkModeState(darkMode);
    } else {
      var localStorageDarkMode = localStorage.getItem("dark_mode");
      if (localStorageDarkMode) {
        setDarkModeState(localStorageDarkMode === "enabled");
      } else {
        setDarkModeState(window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches);
      }
    }
  }, [darkMode]);
  var initialState = {
    darkMode: darkModeState,
    updateDarkMode: setDarkModeState
  };
  return /*#__PURE__*/React__default.createElement(DarkModeContext.Provider, {
    value: initialState
  }, children);
};
DarkModeProvider.propTypes = {
  darkMode: propTypes.exports.bool
};
DarkModeProvider.defaultProps = {
  darkMode: null
};

var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global$j =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || commonjsGlobal || Function('return this')();

var objectGetOwnPropertyDescriptor = {};

var fails$o = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

var fails$n = fails$o;

// Detect IE8's incomplete defineProperty implementation
var descriptors = !fails$n(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});

var fails$m = fails$o;

var functionBindNative = !fails$m(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});

var NATIVE_BIND$2 = functionBindNative;

var call$e = Function.prototype.call;

var functionCall = NATIVE_BIND$2 ? call$e.bind(call$e) : function () {
  return call$e.apply(call$e, arguments);
};

var objectPropertyIsEnumerable = {};

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor$4 = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor$4 && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor$4(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;

var createPropertyDescriptor$4 = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var NATIVE_BIND$1 = functionBindNative;

var FunctionPrototype$2 = Function.prototype;
var call$d = FunctionPrototype$2.call;
var uncurryThisWithBind = NATIVE_BIND$1 && FunctionPrototype$2.bind.bind(call$d, call$d);

var functionUncurryThis = NATIVE_BIND$1 ? uncurryThisWithBind : function (fn) {
  return function () {
    return call$d.apply(fn, arguments);
  };
};

var uncurryThis$q = functionUncurryThis;

var toString$h = uncurryThis$q({}.toString);
var stringSlice$9 = uncurryThis$q(''.slice);

var classofRaw$2 = function (it) {
  return stringSlice$9(toString$h(it), 8, -1);
};

var uncurryThis$p = functionUncurryThis;
var fails$l = fails$o;
var classof$5 = classofRaw$2;

var $Object$4 = Object;
var split = uncurryThis$p(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var indexedObject = fails$l(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object$4('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof$5(it) == 'String' ? split(it, '') : $Object$4(it);
} : $Object$4;

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
var isNullOrUndefined$5 = function (it) {
  return it === null || it === undefined;
};

var isNullOrUndefined$4 = isNullOrUndefined$5;

var $TypeError$b = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
var requireObjectCoercible$a = function (it) {
  if (isNullOrUndefined$4(it)) throw $TypeError$b("Can't call method on " + it);
  return it;
};

// toObject with fallback for non-array-like ES3 strings
var IndexedObject$2 = indexedObject;
var requireObjectCoercible$9 = requireObjectCoercible$a;

var toIndexedObject$5 = function (it) {
  return IndexedObject$2(requireObjectCoercible$9(it));
};

var documentAll$2 = typeof document == 'object' && document.all;

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
var IS_HTMLDDA = typeof documentAll$2 == 'undefined' && documentAll$2 !== undefined;

var documentAll_1 = {
  all: documentAll$2,
  IS_HTMLDDA: IS_HTMLDDA
};

var $documentAll$1 = documentAll_1;

var documentAll$1 = $documentAll$1.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
var isCallable$l = $documentAll$1.IS_HTMLDDA ? function (argument) {
  return typeof argument == 'function' || argument === documentAll$1;
} : function (argument) {
  return typeof argument == 'function';
};

var isCallable$k = isCallable$l;
var $documentAll = documentAll_1;

var documentAll = $documentAll.all;

var isObject$9 = $documentAll.IS_HTMLDDA ? function (it) {
  return typeof it == 'object' ? it !== null : isCallable$k(it) || it === documentAll;
} : function (it) {
  return typeof it == 'object' ? it !== null : isCallable$k(it);
};

var global$i = global$j;
var isCallable$j = isCallable$l;

var aFunction = function (argument) {
  return isCallable$j(argument) ? argument : undefined;
};

var getBuiltIn$4 = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global$i[namespace]) : global$i[namespace] && global$i[namespace][method];
};

var uncurryThis$o = functionUncurryThis;

var objectIsPrototypeOf = uncurryThis$o({}.isPrototypeOf);

var engineUserAgent = typeof navigator != 'undefined' && String(navigator.userAgent) || '';

var global$h = global$j;
var userAgent$2 = engineUserAgent;

var process$1 = global$h.process;
var Deno = global$h.Deno;
var versions = process$1 && process$1.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match$2, version;

if (v8) {
  match$2 = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match$2[0] > 0 && match$2[0] < 4 ? 1 : +(match$2[0] + match$2[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent$2) {
  match$2 = userAgent$2.match(/Edge\/(\d+)/);
  if (!match$2 || match$2[1] >= 74) {
    match$2 = userAgent$2.match(/Chrome\/(\d+)/);
    if (match$2) version = +match$2[1];
  }
}

var engineV8Version = version;

/* eslint-disable es/no-symbol -- required for testing */

var V8_VERSION = engineV8Version;
var fails$k = fails$o;
var global$g = global$j;

var $String$5 = global$g.String;

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
var symbolConstructorDetection = !!Object.getOwnPropertySymbols && !fails$k(function () {
  var symbol = Symbol();
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
  // of course, fail.
  return !$String$5(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});

/* eslint-disable es/no-symbol -- required for testing */

var NATIVE_SYMBOL$2 = symbolConstructorDetection;

var useSymbolAsUid = NATIVE_SYMBOL$2
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';

var getBuiltIn$3 = getBuiltIn$4;
var isCallable$i = isCallable$l;
var isPrototypeOf$3 = objectIsPrototypeOf;
var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;

var $Object$3 = Object;

var isSymbol$2 = USE_SYMBOL_AS_UID$1 ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn$3('Symbol');
  return isCallable$i($Symbol) && isPrototypeOf$3($Symbol.prototype, $Object$3(it));
};

var $String$4 = String;

var tryToString$2 = function (argument) {
  try {
    return $String$4(argument);
  } catch (error) {
    return 'Object';
  }
};

var isCallable$h = isCallable$l;
var tryToString$1 = tryToString$2;

var $TypeError$a = TypeError;

// `Assert: IsCallable(argument) is true`
var aCallable$4 = function (argument) {
  if (isCallable$h(argument)) return argument;
  throw $TypeError$a(tryToString$1(argument) + ' is not a function');
};

var aCallable$3 = aCallable$4;
var isNullOrUndefined$3 = isNullOrUndefined$5;

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
var getMethod$4 = function (V, P) {
  var func = V[P];
  return isNullOrUndefined$3(func) ? undefined : aCallable$3(func);
};

var call$c = functionCall;
var isCallable$g = isCallable$l;
var isObject$8 = isObject$9;

var $TypeError$9 = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
var ordinaryToPrimitive$1 = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable$g(fn = input.toString) && !isObject$8(val = call$c(fn, input))) return val;
  if (isCallable$g(fn = input.valueOf) && !isObject$8(val = call$c(fn, input))) return val;
  if (pref !== 'string' && isCallable$g(fn = input.toString) && !isObject$8(val = call$c(fn, input))) return val;
  throw $TypeError$9("Can't convert object to primitive value");
};

var shared$5 = {exports: {}};

var global$f = global$j;

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$8 = Object.defineProperty;

var defineGlobalProperty$3 = function (key, value) {
  try {
    defineProperty$8(global$f, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global$f[key] = value;
  } return value;
};

var global$e = global$j;
var defineGlobalProperty$2 = defineGlobalProperty$3;

var SHARED = '__core-js_shared__';
var store$3 = global$e[SHARED] || defineGlobalProperty$2(SHARED, {});

var sharedStore = store$3;

var store$2 = sharedStore;

(shared$5.exports = function (key, value) {
  return store$2[key] || (store$2[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.31.0',
  mode: 'global',
  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.31.0/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});

var requireObjectCoercible$8 = requireObjectCoercible$a;

var $Object$2 = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
var toObject$6 = function (argument) {
  return $Object$2(requireObjectCoercible$8(argument));
};

var uncurryThis$n = functionUncurryThis;
var toObject$5 = toObject$6;

var hasOwnProperty = uncurryThis$n({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject$5(it), key);
};

var uncurryThis$m = functionUncurryThis;

var id = 0;
var postfix = Math.random();
var toString$g = uncurryThis$m(1.0.toString);

var uid$3 = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$g(++id + postfix, 36);
};

var global$d = global$j;
var shared$4 = shared$5.exports;
var hasOwn$b = hasOwnProperty_1;
var uid$2 = uid$3;
var NATIVE_SYMBOL$1 = symbolConstructorDetection;
var USE_SYMBOL_AS_UID = useSymbolAsUid;

var Symbol$3 = global$d.Symbol;
var WellKnownSymbolsStore = shared$4('wks');
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol$3['for'] || Symbol$3 : Symbol$3 && Symbol$3.withoutSetter || uid$2;

var wellKnownSymbol$f = function (name) {
  if (!hasOwn$b(WellKnownSymbolsStore, name)) {
    WellKnownSymbolsStore[name] = NATIVE_SYMBOL$1 && hasOwn$b(Symbol$3, name)
      ? Symbol$3[name]
      : createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};

var call$b = functionCall;
var isObject$7 = isObject$9;
var isSymbol$1 = isSymbol$2;
var getMethod$3 = getMethod$4;
var ordinaryToPrimitive = ordinaryToPrimitive$1;
var wellKnownSymbol$e = wellKnownSymbol$f;

var $TypeError$8 = TypeError;
var TO_PRIMITIVE = wellKnownSymbol$e('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
var toPrimitive$1 = function (input, pref) {
  if (!isObject$7(input) || isSymbol$1(input)) return input;
  var exoticToPrim = getMethod$3(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call$b(exoticToPrim, input, pref);
    if (!isObject$7(result) || isSymbol$1(result)) return result;
    throw $TypeError$8("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};

var toPrimitive = toPrimitive$1;
var isSymbol = isSymbol$2;

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
var toPropertyKey$3 = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};

var global$c = global$j;
var isObject$6 = isObject$9;

var document$1 = global$c.document;
// typeof document.createElement is 'object' in old IE
var EXISTS$1 = isObject$6(document$1) && isObject$6(document$1.createElement);

var documentCreateElement$2 = function (it) {
  return EXISTS$1 ? document$1.createElement(it) : {};
};

var DESCRIPTORS$c = descriptors;
var fails$j = fails$o;
var createElement = documentCreateElement$2;

// Thanks to IE8 for its funny defineProperty
var ie8DomDefine = !DESCRIPTORS$c && !fails$j(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});

var DESCRIPTORS$b = descriptors;
var call$a = functionCall;
var propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;
var createPropertyDescriptor$3 = createPropertyDescriptor$4;
var toIndexedObject$4 = toIndexedObject$5;
var toPropertyKey$2 = toPropertyKey$3;
var hasOwn$a = hasOwnProperty_1;
var IE8_DOM_DEFINE$1 = ie8DomDefine;

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
objectGetOwnPropertyDescriptor.f = DESCRIPTORS$b ? $getOwnPropertyDescriptor$1 : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject$4(O);
  P = toPropertyKey$2(P);
  if (IE8_DOM_DEFINE$1) try {
    return $getOwnPropertyDescriptor$1(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn$a(O, P)) return createPropertyDescriptor$3(!call$a(propertyIsEnumerableModule$1.f, O, P), O[P]);
};

var objectDefineProperty = {};

var DESCRIPTORS$a = descriptors;
var fails$i = fails$o;

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
var v8PrototypeDefineBug = DESCRIPTORS$a && fails$i(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype != 42;
});

var isObject$5 = isObject$9;

var $String$3 = String;
var $TypeError$7 = TypeError;

// `Assert: Type(argument) is Object`
var anObject$b = function (argument) {
  if (isObject$5(argument)) return argument;
  throw $TypeError$7($String$3(argument) + ' is not an object');
};

var DESCRIPTORS$9 = descriptors;
var IE8_DOM_DEFINE = ie8DomDefine;
var V8_PROTOTYPE_DEFINE_BUG$1 = v8PrototypeDefineBug;
var anObject$a = anObject$b;
var toPropertyKey$1 = toPropertyKey$3;

var $TypeError$6 = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE$1 = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
objectDefineProperty.f = DESCRIPTORS$9 ? V8_PROTOTYPE_DEFINE_BUG$1 ? function defineProperty(O, P, Attributes) {
  anObject$a(O);
  P = toPropertyKey$1(P);
  anObject$a(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject$a(O);
  P = toPropertyKey$1(P);
  anObject$a(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw $TypeError$6('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var DESCRIPTORS$8 = descriptors;
var definePropertyModule$4 = objectDefineProperty;
var createPropertyDescriptor$2 = createPropertyDescriptor$4;

var createNonEnumerableProperty$6 = DESCRIPTORS$8 ? function (object, key, value) {
  return definePropertyModule$4.f(object, key, createPropertyDescriptor$2(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var makeBuiltIn$3 = {exports: {}};

var DESCRIPTORS$7 = descriptors;
var hasOwn$9 = hasOwnProperty_1;

var FunctionPrototype$1 = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS$7 && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn$9(FunctionPrototype$1, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS$7 || (DESCRIPTORS$7 && getDescriptor(FunctionPrototype$1, 'name').configurable));

var functionName = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};

var uncurryThis$l = functionUncurryThis;
var isCallable$f = isCallable$l;
var store$1 = sharedStore;

var functionToString = uncurryThis$l(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable$f(store$1.inspectSource)) {
  store$1.inspectSource = function (it) {
    return functionToString(it);
  };
}

var inspectSource$1 = store$1.inspectSource;

var global$b = global$j;
var isCallable$e = isCallable$l;

var WeakMap$1 = global$b.WeakMap;

var weakMapBasicDetection = isCallable$e(WeakMap$1) && /native code/.test(String(WeakMap$1));

var shared$3 = shared$5.exports;
var uid$1 = uid$3;

var keys$1 = shared$3('keys');

var sharedKey$3 = function (key) {
  return keys$1[key] || (keys$1[key] = uid$1(key));
};

var hiddenKeys$4 = {};

var NATIVE_WEAK_MAP = weakMapBasicDetection;
var global$a = global$j;
var isObject$4 = isObject$9;
var createNonEnumerableProperty$5 = createNonEnumerableProperty$6;
var hasOwn$8 = hasOwnProperty_1;
var shared$2 = sharedStore;
var sharedKey$2 = sharedKey$3;
var hiddenKeys$3 = hiddenKeys$4;

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError$1 = global$a.TypeError;
var WeakMap = global$a.WeakMap;
var set$1, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set$1(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject$4(it) || (state = get(it)).type !== TYPE) {
      throw TypeError$1('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared$2.state) {
  var store = shared$2.state || (shared$2.state = new WeakMap());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store.get = store.get;
  store.has = store.has;
  store.set = store.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set$1 = function (it, metadata) {
    if (store.has(it)) throw TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store.set(it, metadata);
    return metadata;
  };
  get = function (it) {
    return store.get(it) || {};
  };
  has = function (it) {
    return store.has(it);
  };
} else {
  var STATE = sharedKey$2('state');
  hiddenKeys$3[STATE] = true;
  set$1 = function (it, metadata) {
    if (hasOwn$8(it, STATE)) throw TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty$5(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn$8(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn$8(it, STATE);
  };
}

var internalState = {
  set: set$1,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};

var uncurryThis$k = functionUncurryThis;
var fails$h = fails$o;
var isCallable$d = isCallable$l;
var hasOwn$7 = hasOwnProperty_1;
var DESCRIPTORS$6 = descriptors;
var CONFIGURABLE_FUNCTION_NAME$1 = functionName.CONFIGURABLE;
var inspectSource = inspectSource$1;
var InternalStateModule$1 = internalState;

var enforceInternalState$1 = InternalStateModule$1.enforce;
var getInternalState$2 = InternalStateModule$1.get;
var $String$2 = String;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$7 = Object.defineProperty;
var stringSlice$8 = uncurryThis$k(''.slice);
var replace$5 = uncurryThis$k(''.replace);
var join = uncurryThis$k([].join);

var CONFIGURABLE_LENGTH = DESCRIPTORS$6 && !fails$h(function () {
  return defineProperty$7(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn$2 = makeBuiltIn$3.exports = function (value, name, options) {
  if (stringSlice$8($String$2(name), 0, 7) === 'Symbol(') {
    name = '[' + replace$5($String$2(name), /^Symbol\(([^)]*)\)/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwn$7(value, 'name') || (CONFIGURABLE_FUNCTION_NAME$1 && value.name !== name)) {
    if (DESCRIPTORS$6) defineProperty$7(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn$7(options, 'arity') && value.length !== options.arity) {
    defineProperty$7(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwn$7(options, 'constructor') && options.constructor) {
      if (DESCRIPTORS$6) defineProperty$7(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState$1(value);
  if (!hasOwn$7(state, 'source')) {
    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn$2(function toString() {
  return isCallable$d(this) && getInternalState$2(this).source || inspectSource(this);
}, 'toString');

var isCallable$c = isCallable$l;
var definePropertyModule$3 = objectDefineProperty;
var makeBuiltIn$1 = makeBuiltIn$3.exports;
var defineGlobalProperty$1 = defineGlobalProperty$3;

var defineBuiltIn$6 = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable$c(value)) makeBuiltIn$1(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty$1(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else definePropertyModule$3.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};

var objectGetOwnPropertyNames = {};

var ceil = Math.ceil;
var floor$2 = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
var mathTrunc = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor$2 : ceil)(n);
};

var trunc = mathTrunc;

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
var toIntegerOrInfinity$4 = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : trunc(number);
};

var toIntegerOrInfinity$3 = toIntegerOrInfinity$4;

var max$8 = Math.max;
var min$8 = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
var toAbsoluteIndex$2 = function (index, length) {
  var integer = toIntegerOrInfinity$3(index);
  return integer < 0 ? max$8(integer + length, 0) : min$8(integer, length);
};

var toIntegerOrInfinity$2 = toIntegerOrInfinity$4;

var min$7 = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
var toLength$4 = function (argument) {
  return argument > 0 ? min$7(toIntegerOrInfinity$2(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};

var toLength$3 = toLength$4;

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
var lengthOfArrayLike$4 = function (obj) {
  return toLength$3(obj.length);
};

var toIndexedObject$3 = toIndexedObject$5;
var toAbsoluteIndex$1 = toAbsoluteIndex$2;
var lengthOfArrayLike$3 = lengthOfArrayLike$4;

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod$3 = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject$3($this);
    var length = lengthOfArrayLike$3(O);
    var index = toAbsoluteIndex$1(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var arrayIncludes = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod$3(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod$3(false)
};

var uncurryThis$j = functionUncurryThis;
var hasOwn$6 = hasOwnProperty_1;
var toIndexedObject$2 = toIndexedObject$5;
var indexOf$2 = arrayIncludes.indexOf;
var hiddenKeys$2 = hiddenKeys$4;

var push$2 = uncurryThis$j([].push);

var objectKeysInternal = function (object, names) {
  var O = toIndexedObject$2(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn$6(hiddenKeys$2, key) && hasOwn$6(O, key) && push$2(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn$6(O, key = names[i++])) {
    ~indexOf$2(result, key) || push$2(result, key);
  }
  return result;
};

// IE8- don't enum bug keys
var enumBugKeys$3 = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];

var internalObjectKeys$1 = objectKeysInternal;
var enumBugKeys$2 = enumBugKeys$3;

var hiddenKeys$1 = enumBugKeys$2.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys$1(O, hiddenKeys$1);
};

var objectGetOwnPropertySymbols = {};

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;

var getBuiltIn$2 = getBuiltIn$4;
var uncurryThis$i = functionUncurryThis;
var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
var getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;
var anObject$9 = anObject$b;

var concat$2 = uncurryThis$i([].concat);

// all object keys, includes non-enumerable and symbols
var ownKeys$7 = getBuiltIn$2('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject$9(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;
  return getOwnPropertySymbols ? concat$2(keys, getOwnPropertySymbols(it)) : keys;
};

var hasOwn$5 = hasOwnProperty_1;
var ownKeys$6 = ownKeys$7;
var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
var definePropertyModule$2 = objectDefineProperty;

var copyConstructorProperties$2 = function (target, source, exceptions) {
  var keys = ownKeys$6(source);
  var defineProperty = definePropertyModule$2.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn$5(target, key) && !(exceptions && hasOwn$5(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};

var fails$g = fails$o;
var isCallable$b = isCallable$l;

var replacement = /#|\.prototype\./;

var isForced$2 = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : isCallable$b(detection) ? fails$g(detection)
    : !!detection;
};

var normalize = isForced$2.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced$2.data = {};
var NATIVE = isForced$2.NATIVE = 'N';
var POLYFILL = isForced$2.POLYFILL = 'P';

var isForced_1 = isForced$2;

var global$9 = global$j;
var getOwnPropertyDescriptor$3 = objectGetOwnPropertyDescriptor.f;
var createNonEnumerableProperty$4 = createNonEnumerableProperty$6;
var defineBuiltIn$5 = defineBuiltIn$6;
var defineGlobalProperty = defineGlobalProperty$3;
var copyConstructorProperties$1 = copyConstructorProperties$2;
var isForced$1 = isForced_1;

/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
var _export = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global$9;
  } else if (STATIC) {
    target = global$9[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = (global$9[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor$3(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced$1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties$1(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty$4(sourceProperty, 'sham', true);
    }
    defineBuiltIn$5(target, key, sourceProperty, options);
  }
};

var aCallable$2 = aCallable$4;
var toObject$4 = toObject$6;
var IndexedObject$1 = indexedObject;
var lengthOfArrayLike$2 = lengthOfArrayLike$4;

var $TypeError$5 = TypeError;

// `Array.prototype.{ reduce, reduceRight }` methods implementation
var createMethod$2 = function (IS_RIGHT) {
  return function (that, callbackfn, argumentsLength, memo) {
    aCallable$2(callbackfn);
    var O = toObject$4(that);
    var self = IndexedObject$1(O);
    var length = lengthOfArrayLike$2(O);
    var index = IS_RIGHT ? length - 1 : 0;
    var i = IS_RIGHT ? -1 : 1;
    if (argumentsLength < 2) while (true) {
      if (index in self) {
        memo = self[index];
        index += i;
        break;
      }
      index += i;
      if (IS_RIGHT ? index < 0 : length <= index) {
        throw $TypeError$5('Reduce of empty array with no initial value');
      }
    }
    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
      memo = callbackfn(memo, self[index], index, O);
    }
    return memo;
  };
};

var arrayReduce = {
  // `Array.prototype.reduce` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduce
  left: createMethod$2(false),
  // `Array.prototype.reduceRight` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduceright
  right: createMethod$2(true)
};

var fails$f = fails$o;

var arrayMethodIsStrict$2 = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails$f(function () {
    // eslint-disable-next-line no-useless-call -- required for testing
    method.call(null, argument || function () { return 1; }, 1);
  });
};

var classof$4 = classofRaw$2;

var engineIsNode = typeof process != 'undefined' && classof$4(process) == 'process';

var $$e = _export;
var $reduce = arrayReduce.left;
var arrayMethodIsStrict$1 = arrayMethodIsStrict$2;
var CHROME_VERSION = engineV8Version;
var IS_NODE = engineIsNode;

// Chrome 80-82 has a critical bug
// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;
var FORCED$3 = CHROME_BUG || !arrayMethodIsStrict$1('reduce');

// `Array.prototype.reduce` method
// https://tc39.es/ecma262/#sec-array.prototype.reduce
$$e({ target: 'Array', proto: true, forced: FORCED$3 }, {
  reduce: function reduce(callbackfn /* , initialValue */) {
    var length = arguments.length;
    return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);
  }
});

var wellKnownSymbol$d = wellKnownSymbol$f;

var TO_STRING_TAG$3 = wellKnownSymbol$d('toStringTag');
var test$1 = {};

test$1[TO_STRING_TAG$3] = 'z';

var toStringTagSupport = String(test$1) === '[object z]';

var TO_STRING_TAG_SUPPORT = toStringTagSupport;
var isCallable$a = isCallable$l;
var classofRaw$1 = classofRaw$2;
var wellKnownSymbol$c = wellKnownSymbol$f;

var TO_STRING_TAG$2 = wellKnownSymbol$c('toStringTag');
var $Object$1 = Object;

// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw$1(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
var classof$3 = TO_STRING_TAG_SUPPORT ? classofRaw$1 : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = $Object$1(it), TO_STRING_TAG$2)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw$1(O)
    // ES3 arguments fallback
    : (result = classofRaw$1(O)) == 'Object' && isCallable$a(O.callee) ? 'Arguments' : result;
};

var classof$2 = classof$3;

var $String$1 = String;

var toString$f = function (argument) {
  if (classof$2(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
  return $String$1(argument);
};

// a string of all valid unicode whitespaces
var whitespaces$4 = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002' +
  '\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

var uncurryThis$h = functionUncurryThis;
var requireObjectCoercible$7 = requireObjectCoercible$a;
var toString$e = toString$f;
var whitespaces$3 = whitespaces$4;

var replace$4 = uncurryThis$h(''.replace);
var ltrim = RegExp('^[' + whitespaces$3 + ']+');
var rtrim = RegExp('(^|[^' + whitespaces$3 + '])[' + whitespaces$3 + ']+$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod$1 = function (TYPE) {
  return function ($this) {
    var string = toString$e(requireObjectCoercible$7($this));
    if (TYPE & 1) string = replace$4(string, ltrim, '');
    if (TYPE & 2) string = replace$4(string, rtrim, '$1');
    return string;
  };
};

var stringTrim = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
  start: createMethod$1(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimend
  end: createMethod$1(2),
  // `String.prototype.trim` method
  // https://tc39.es/ecma262/#sec-string.prototype.trim
  trim: createMethod$1(3)
};

var PROPER_FUNCTION_NAME$2 = functionName.PROPER;
var fails$e = fails$o;
var whitespaces$2 = whitespaces$4;

var non = '\u200B\u0085\u180E';

// check that a method works with the correct list
// of whitespaces and has a correct name
var stringTrimForced = function (METHOD_NAME) {
  return fails$e(function () {
    return !!whitespaces$2[METHOD_NAME]()
      || non[METHOD_NAME]() !== non
      || (PROPER_FUNCTION_NAME$2 && whitespaces$2[METHOD_NAME].name !== METHOD_NAME);
  });
};

var $$d = _export;
var $trim = stringTrim.trim;
var forcedStringTrimMethod = stringTrimForced;

// `String.prototype.trim` method
// https://tc39.es/ecma262/#sec-string.prototype.trim
$$d({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {
  trim: function trim() {
    return $trim(this);
  }
});

function classNames(obj, className) {
  var generatedClass;
  if (Array.isArray(obj)) {
    generatedClass = obj.join(" ");
  } else {
    generatedClass = Object.entries(obj).filter(function (entry) {
      return entry[1];
    }).reduce(function (carry, current) {
      return carry + "".concat(carry ? " " : "").concat(current[0]);
    }, "");
  }
  return (generatedClass + (className ? " ".concat(className) : "")).trim();
}

var _excluded$S = ["fontFace", "lightClassName", "darkClassName", "id", "className", "children", "style", "onMouseEnter", "onMouseLeave", "hoverClassName"];
var Box = /*#__PURE__*/React__default.forwardRef(function (_ref, ref) {
  var _classNames;
  var fontFace = _ref.fontFace,
    lightClassName = _ref.lightClassName,
    darkClassName = _ref.darkClassName,
    id = _ref.id,
    className = _ref.className,
    children = _ref.children,
    style = _ref.style,
    onMouseEnter = _ref.onMouseEnter,
    onMouseLeave = _ref.onMouseLeave,
    hoverClassName = _ref.hoverClassName,
    props = _objectWithoutProperties(_ref, _excluded$S);
  var _useState = useState("auto_generated_" + uniqueRandomString(20)),
    _useState2 = _slicedToArray$4(_useState, 2),
    uniqueID = _useState2[0],
    setUniqueID = _useState2[1];
  var _useState3 = useState(false),
    _useState4 = _slicedToArray$4(_useState3, 2),
    isHovered = _useState4[0],
    setIsHovered = _useState4[1];
  var _useContext = useContext(DarkModeContext),
    darkMode = _useContext.darkMode;
  var mouseEntered = function mouseEntered(e) {
    setIsHovered(true);
    if (onMouseEnter && typeof onMouseEnter === "function") {
      onMouseEnter(e);
    }
  };
  var mouseLeft = function mouseLeft(e) {
    setIsHovered(false);
    if (onMouseLeave && typeof onMouseLeave === "function") {
      onMouseLeave(e);
    }
  };
  useEffect(function () {
    if (id) {
      setUniqueID(id);
    }
  }, [id]);
  return /*#__PURE__*/React__default.createElement(BoxComponent, _extends$1({
    ref: ref,
    className: classNames((_classNames = {}, _defineProperty$6(_classNames, "".concat(fontFace !== null && fontFace !== void 0 ? fontFace : "heroNew"), true), _defineProperty$6(_classNames, "dark_mode", !!darkMode), _defineProperty$6(_classNames, darkClassName, !!darkMode), _defineProperty$6(_classNames, lightClassName, !darkMode), _defineProperty$6(_classNames, hoverClassName, isHovered), _defineProperty$6(_classNames, "ui-kit-general-box", true), _classNames), className)
  }, props, {
    id: uniqueID,
    style: _objectSpread2$1({}, style ? _objectSpread2$1({}, style) : {}),
    onMouseEnter: mouseEntered,
    onMouseLeave: mouseLeft
  }), children);
});
Box.propTypes = {
  lightClassName: propTypes.exports.string,
  darkClassName: propTypes.exports.string,
  hoverClassName: propTypes.exports.string
};

var _excluded$R = ["className", "icon", "children", "smartColor"];
var Icon = function Icon(_ref) {
  var className = _ref.className,
    icon = _ref.icon;
    _ref.children;
    var smartColor = _ref.smartColor,
    props = _objectWithoutProperties(_ref, _excluded$R);
  var defaultViewBox = "0 0 24 24";
  var IconComponent = icon.component;
  var generatedClassName = classNames({
    "ui-svg": true
  }, className);
  return /*#__PURE__*/React__default.createElement(Box, _extends$1({
    viewBox: icon.viewBox || defaultViewBox,
    className: generatedClassName,
    is: "svg",
    fill: props.fill || icon.fill
  }, props), /*#__PURE__*/React__default.createElement(IconComponent, _extends$1({
    smartColor: smartColor || "currentcolor"
  }, props)));
};
Icon.propTypes = {
  icon: propTypes.exports.object.isRequired,
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  width: propTypes.exports.string,
  height: propTypes.exports.string
};
Icon.defaultProps = {
  width: "24px",
  height: "24px"
};

var _excluded$Q = ["className", "scale", "uppercase", "center", "equalLineHeight", "fontWeight", "fontSize", "lineHeight"];
var Text$1 = function Text(_ref) {
  var _props$is, _classNames;
  var className = _ref.className,
    scale = _ref.scale,
    uppercase = _ref.uppercase,
    center = _ref.center,
    equalLineHeight = _ref.equalLineHeight,
    fontWeight = _ref.fontWeight,
    fontSize = _ref.fontSize,
    lineHeight = _ref.lineHeight,
    props = _objectWithoutProperties(_ref, _excluded$Q);
  var is = (_props$is = props.is) !== null && _props$is !== void 0 ? _props$is : "p";
  var generatedClass = classNames((_classNames = {}, _defineProperty$6(_classNames, scale, scale), _defineProperty$6(_classNames, "uppercase", uppercase), _defineProperty$6(_classNames, "equal-line-height", equalLineHeight), _defineProperty$6(_classNames, "ui-text", true), _defineProperty$6(_classNames, "center", center), _defineProperty$6(_classNames, "customFontWeight", fontWeight), _defineProperty$6(_classNames, "customFontSize", fontSize), _defineProperty$6(_classNames, "customLineHeight", lineHeight), _classNames), className);
  return /*#__PURE__*/React__default.createElement(Box, _extends$1({
    fontWeight: fontWeight,
    fontSize: fontSize,
    lineHeight: lineHeight,
    is: is
  }, props, {
    "data-testid": "text",
    className: generatedClass
  }), props.children);
};
Text$1.propTypes = {
  is: propTypes.exports.oneOfType([propTypes.exports.oneOf(["p", "span", "small", "sub", "sup", "subhead", "a"]), propTypes.exports.elementType]),
  scale: propTypes.exports.oneOf(["body", "subhead", "p-18", "p-16", "overline", "footnote", "overline", "footnote-caps"]),
  uppercase: propTypes.exports.bool,
  equalLineHeight: propTypes.exports.bool,
  fontWeight: propTypes.exports.string,
  fontSize: propTypes.exports.string,
  lineHeight: propTypes.exports.string,
  darkClassName: propTypes.exports.string,
  center: propTypes.exports.bool
};
Text$1.defaultProps = {
  is: "p",
  uppercase: false,
  equalLineHeight: false,
  darkClassName: "text-neutral-600"
};

var AddComponent = function AddComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12 5.75V18.25",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M18.25 12H5.75",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Add = {
  component: AddComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
AddComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
AddComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var AddBookmarkComponent = function AddBookmarkComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M16.958 3.00195V9.53895",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M16.958 12.854V20.854L10.479 17.318L4 20.854V4.98401C4 4.45782 4.20898 3.95313 4.58105 3.58105C4.95313 3.20898 5.45794 3 5.98413 3H13.5391",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M13.668 6.26978H20.112",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var AddBookmark = {
  component: AddBookmarkComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
AddBookmarkComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
AddBookmarkComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var AddCircleComponent = function AddCircleComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M7.78429 12H16.2162",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12 16.216V7.78406",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var AddCircle = {
  component: AddCircleComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
AddCircleComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
AddCircleComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var AddFileComponent = function AddFileComponent(_ref) {
  var fill = _ref.fill,
    stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin,
    fillRule = _ref.fillRule,
    clipRule = _ref.clipRule;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    fillRule: fillRule,
    clipRule: clipRule,
    fill: smartColor || fill,
    d: "M4.85707 3.85483C5.08826 3.62889 5.40567 3.4989 5.74011 3.4989H11.1442V7.00002C11.1442 7.59144 11.3847 8.15482 11.8071 8.56757C12.2287 8.97962 12.7972 9.20858 13.3866 9.20858H17.0597V9.58078C17.0597 9.99499 17.3955 10.3308 17.8097 10.3308C18.224 10.3308 18.5597 9.99499 18.5597 9.58078V8.49478C18.5603 8.48278 18.5606 8.47071 18.5606 8.45858C18.5606 8.44644 18.5603 8.43437 18.5597 8.42238V7.71852C18.5597 7.51146 18.4741 7.31361 18.3232 7.17185L13.0324 2.20224C12.8934 2.07161 12.7097 1.9989 12.5189 1.9989H5.74011C5.01905 1.9989 4.32383 2.2786 3.80867 2.78206C3.29291 3.28609 3.00009 3.97353 3.00009 4.69372V18.3065C3.00009 19.0268 3.29299 19.714 3.80867 20.2179C4.32383 20.7214 5.01905 21.0011 5.74011 21.0011H15.8207C16.2349 21.0011 16.5707 20.6653 16.5707 20.2511C16.5707 19.8369 16.2349 19.5011 15.8207 19.5011H5.74011C5.40567 19.5011 5.08826 19.3711 4.85707 19.1451C4.6264 18.9197 4.50009 18.6177 4.50009 18.3065V4.69372C4.50009 4.38239 4.62647 4.08019 4.85707 3.85483ZM16.7037 7.70858L12.6442 3.8955V7.00002C12.6442 7.18225 12.718 7.36049 12.8555 7.49479C12.9936 7.6298 13.1845 7.70858 13.3866 7.70858H16.7037Z"
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M17.8368 12.1666V18.5741",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M14.5371 15.3708H20.9994",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var AddFile = {
  component: AddFileComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
AddFileComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string,
  fillRule: propTypes.exports.string,
  clipRule: propTypes.exports.string
};
AddFileComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round",
  fillRule: "evenodd",
  clipRule: "evenodd"
};

var AddItemComponent = function AddItemComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M17.3604 12.016V18.2315C17.3604 18.7006 17.1729 19.1504 16.8395 19.4821C16.506 19.8138 16.0539 20.0003 15.5824 20.0003H5.77742C5.3059 20.0003 4.85376 19.8138 4.52035 19.4821C4.18694 19.1504 3.99945 18.7006 3.99945 18.2315V8.47685C3.99945 8.00775 4.18694 7.55771 4.52035 7.22601C4.85376 6.89431 5.3059 6.70801 5.77742 6.70801H11.9543",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M17.3597 3.99976V9.32732",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M14.7207 6.66357H19.9996",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var AddItem = {
  component: AddItemComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
AddItemComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
AddItemComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var AlarmComponent = function AlarmComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M11.6733 7.26514V11.5181L15.0303 13.125",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.64941 4.6058C9.60288 4.18687 10.6329 3.97055 11.6743 3.97055C12.7158 3.97055 13.7458 4.18687 14.6992 4.6058",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M14.6994 4.6058C16.5114 5.40155 17.9394 6.87552 18.6774 8.71176",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4.67139 8.71274C5.40928 6.87643 6.83739 5.40244 8.64941 4.60678",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4.67243 8.71307C4.21231 9.85839 4.04014 11.099 4.17097 12.3264C4.30179 13.5537 4.73147 14.73 5.42268 15.7526C6.11389 16.7752 7.04547 17.6127 8.13557 18.1916C9.22566 18.7705 10.4411 19.0734 11.6754 19.0734C12.9096 19.0734 14.1251 18.7705 15.2152 18.1916C16.3053 17.6127 17.2368 16.7752 17.928 15.7526C18.6193 14.73 19.0489 13.5537 19.1798 12.3264C19.3106 11.099 19.1384 9.85839 18.6783 8.71307",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M14.6994 4.60596L15.7243 3.58105C15.9085 3.39679 16.1274 3.2506 16.3681 3.15088C16.6088 3.05116 16.8668 3 17.1274 3C17.3879 3 17.6459 3.05116 17.8867 3.15088C18.1274 3.2506 18.346 3.39679 18.5302 3.58105L19.7663 4.81787C19.9506 5.00211 20.0967 5.2207 20.1965 5.46143C20.2962 5.70215 20.3476 5.96062 20.3476 6.22119C20.3476 6.48176 20.2962 6.73974 20.1965 6.98047C20.0967 7.2212 19.9506 7.43979 19.7663 7.62402L18.6774 8.71289",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.64941 4.60596L7.62427 3.58105C7.44003 3.39679 7.22144 3.2506 6.98071 3.15088C6.73998 3.05116 6.482 3 6.22144 3C5.96087 3 5.70264 3.05116 5.46191 3.15088C5.22119 3.2506 5.00259 3.39679 4.81836 3.58105L3.5813 4.81787C3.39704 5.00211 3.25085 5.2207 3.15112 5.46143C3.0514 5.70215 3 5.96062 3 6.22119C3 6.48176 3.0514 6.73974 3.15112 6.98047C3.25085 7.2212 3.39704 7.43979 3.5813 7.62402L4.67041 8.71289",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M18.2641 20.944L15.8691 17.842",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M5.08545 20.944L7.48045 17.842",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Alarm = {
  component: AlarmComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
AlarmComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
AlarmComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var AddUserComponent = function AddUserComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M9.99277 13.6949C11.8712 13.6949 13.394 12.1364 13.394 10.2139C13.394 8.2914 11.8712 6.73291 9.99277 6.73291C8.11431 6.73291 6.59152 8.2914 6.59152 10.2139C6.59152 12.1364 8.11431 13.6949 9.99277 13.6949Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4 19.0001C4 17.5937 4.54588 16.245 5.51754 15.2506C6.4892 14.2561 7.80705 13.6974 9.18119 13.6974H10.8017C12.1758 13.6974 13.4937 14.2561 14.4653 15.2506C15.437 16.245 15.9829 17.5937 15.9829 19.0001",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M18.4231 4V9.46579",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15.7351 6.73291H21",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var AddUser = {
  component: AddUserComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
AddUserComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
AddUserComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var AnnounceComponent = function AnnounceComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M10.3101 10.0508L3.83725 13.982C3.44252 14.2219 3.15917 14.6089 3.04965 15.0577C2.94013 15.5064 3.01344 15.9803 3.25326 16.3751L4.41415 18.2891C4.6541 18.6838 5.0409 18.967 5.48959 19.0767C5.93828 19.1864 6.41224 19.1135 6.80722 18.8741L13.3412 14.9048M13.3412 14.9048L20.3683 15.7159C20.4492 15.7253 20.5312 15.7117 20.6048 15.6768C20.6784 15.6419 20.7408 15.5872 20.7848 15.5186C20.8287 15.45 20.8524 15.3706 20.8534 15.2891C20.8543 15.2077 20.8324 15.1278 20.7901 15.0582L13.5902 3.20904C13.5476 3.13913 13.4861 3.08258 13.4129 3.04595C13.3397 3.00932 13.2578 2.99418 13.1764 3.00201C13.0949 3.00983 13.0171 3.04049 12.9522 3.09039C12.8873 3.14028 12.8377 3.20701 12.8092 3.28375L11.2313 7.54986M13.3412 14.9048L10.3331 10.052M10.0633 19.3017L10.3062 19.7021C10.3994 19.8559 10.522 19.9897 10.667 20.0961C10.812 20.2025 10.9764 20.2795 11.1511 20.3222C11.3259 20.3649 11.5073 20.3726 11.6851 20.3452C11.8628 20.3177 12.0336 20.2555 12.1873 20.162C12.3411 20.0689 12.4749 19.9462 12.5813 19.8012C12.6877 19.6562 12.7644 19.4915 12.8071 19.3168C12.8499 19.1421 12.8578 18.9609 12.8303 18.7831C12.8029 18.6054 12.7407 18.4344 12.6472 18.2807L11.3372 16.123L8.99513 17.5439",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Announce = {
  component: AnnounceComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
AnnounceComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
AnnounceComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var AppsComponent = function AppsComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12.444 5.5C12.8582 5.5 13.194 5.16421 13.194 4.75C13.194 4.33579 12.8582 4 12.444 4C12.0298 4 11.694 4.33579 11.694 4.75C11.694 5.16421 12.0298 5.5 12.444 5.5Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12.444 13.194C12.8582 13.194 13.194 12.8582 13.194 12.444C13.194 12.0298 12.8582 11.694 12.444 11.694C12.0298 11.694 11.694 12.0298 11.694 12.444C11.694 12.8582 12.0298 13.194 12.444 13.194Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12.444 20.889C12.8582 20.889 13.194 20.5532 13.194 20.139C13.194 19.7248 12.8582 19.389 12.444 19.389C12.0298 19.389 11.694 19.7248 11.694 20.139C11.694 20.5532 12.0298 20.889 12.444 20.889Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20.139 5.5C20.5532 5.5 20.889 5.16421 20.889 4.75C20.889 4.33579 20.5532 4 20.139 4C19.7248 4 19.389 4.33579 19.389 4.75C19.389 5.16421 19.7248 5.5 20.139 5.5Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20.139 13.194C20.5532 13.194 20.889 12.8582 20.889 12.444C20.889 12.0298 20.5532 11.694 20.139 11.694C19.7248 11.694 19.389 12.0298 19.389 12.444C19.389 12.8582 19.7248 13.194 20.139 13.194Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20.139 20.889C20.5532 20.889 20.889 20.5532 20.889 20.139C20.889 19.7248 20.5532 19.389 20.139 19.389C19.7248 19.389 19.389 19.7248 19.389 20.139C19.389 20.5532 19.7248 20.889 20.139 20.889Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4.75 5.5C5.16421 5.5 5.5 5.16421 5.5 4.75C5.5 4.33579 5.16421 4 4.75 4C4.33579 4 4 4.33579 4 4.75C4 5.16421 4.33579 5.5 4.75 5.5Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4.75 13.194C5.16421 13.194 5.5 12.8582 5.5 12.444C5.5 12.0298 5.16421 11.694 4.75 11.694C4.33579 11.694 4 12.0298 4 12.444C4 12.8582 4.33579 13.194 4.75 13.194Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4.75 20.889C5.16421 20.889 5.5 20.5532 5.5 20.139C5.5 19.7248 5.16421 19.389 4.75 19.389C4.33579 19.389 4 19.7248 4 20.139C4 20.5532 4.33579 20.889 4.75 20.889Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Apps = {
  component: AppsComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
AppsComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
AppsComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ArrowDownComponent = function ArrowDownComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12 5V19",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M18 13L12 19",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M6 13L12 19",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var ArrowDown = {
  component: ArrowDownComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ArrowDownComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ArrowDownComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ArrowDownLeftComponent = function ArrowDownLeftComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M17 7L7 17",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M16 17H7V8",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var ArrowDownLeft = {
  component: ArrowDownLeftComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ArrowDownLeftComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ArrowDownLeftComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ArrowDownRightComponent = function ArrowDownRightComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M7 7L17 17",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M17 8V17H8",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var ArrowDownRight = {
  component: ArrowDownRightComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ArrowDownRightComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ArrowDownRightComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ArrowLeftComponent$1 = function ArrowLeftComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M5 12H19",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M5 12L11 18",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M5 12L11 6",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var ArrowLeft = {
  component: ArrowLeftComponent$1,
  viewBox: "0 0 24 24",
  fill: "none"
};
ArrowLeftComponent$1.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ArrowLeftComponent$1.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ArrowRightComponent$1 = function ArrowRightComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M5 12H19",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M13 18L19 12",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M13 6L19 12",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var ArrowRight = {
  component: ArrowRightComponent$1,
  viewBox: "0 0 24 24",
  fill: "none"
};
ArrowRightComponent$1.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ArrowRightComponent$1.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ArrowUpComponent = function ArrowUpComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12 5V19",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M18 11L12 5",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M6 11L12 5",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var ArrowUp = {
  component: ArrowUpComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ArrowUpComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ArrowUpComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ArrowUpLeftComponent = function ArrowUpLeftComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M7 7L17 17",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M16 7H7V16",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var ArrowUpLeft = {
  component: ArrowUpLeftComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ArrowUpLeftComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ArrowUpLeftComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ArrowUpRightComponent = function ArrowUpRightComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M17 7L7 17",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8 7H17V16",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var ArrowUpRight = {
  component: ArrowUpRightComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ArrowUpRightComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ArrowUpRightComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var AttachmentComponent = function AttachmentComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M18.4709 13.1455L11.9509 19.6465C11.0813 20.5132 9.9022 21 8.6727 21C7.44319 21 6.26382 20.5132 5.39428 19.6465V19.6465C4.50139 18.7562 4 17.5487 4 16.2896C4 15.0306 4.50139 13.823 5.39428 12.9328L14.3952 3.95861C15.011 3.3449 15.846 3 16.7166 3C17.5873 3 18.4225 3.3449 19.0383 3.95861C19.3432 4.26264 19.5851 4.62339 19.7501 5.02062C19.9152 5.41786 20 5.8437 20 6.27367C20 6.70363 19.9152 7.12947 19.7501 7.52671C19.5851 7.92395 19.3432 8.28469 19.0383 8.58872L10.4509 17.1508C10.2775 17.3238 10.0716 17.4608 9.845 17.5545C9.61837 17.6482 9.37554 17.6963 9.13021 17.6963C8.88488 17.6963 8.64205 17.6482 8.41542 17.5545C8.18879 17.4608 7.9829 17.3238 7.80951 17.1508V17.1508C7.45923 16.8015 7.26237 16.3276 7.26237 15.8337C7.26237 15.3398 7.45923 14.8659 7.80951 14.5167L13.8239 8.52028",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Attachment = {
  component: AttachmentComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
AttachmentComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
AttachmentComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var AvatarComponent = function AvatarComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M17.3061 18.5508C17.3061 17.3173 16.816 16.1344 15.9438 15.2622C15.0715 14.39 13.8885 13.8999 12.6549 13.8999H11.2001C9.96667 13.9002 8.78371 14.3905 7.91154 15.2627C7.03936 16.1349 6.54925 17.3173 6.54899 18.5508M14.981 10.8469C14.981 12.5331 13.6141 13.8999 11.928 13.8999C10.2419 13.8999 8.87501 12.5331 8.87501 10.8469C8.87501 9.16082 10.2419 7.79395 11.928 7.79395C13.6141 7.79395 14.981 9.16082 14.981 10.8469ZM20.856 11.928C20.856 16.8588 16.8588 20.856 11.928 20.856C6.9972 20.856 3 16.8588 3 11.928C3 6.9972 6.9972 3 11.928 3C16.8588 3 20.856 6.9972 20.856 11.928Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Avatar$1 = {
  component: AvatarComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
AvatarComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
AvatarComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var BackwardComponent = function BackwardComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M16 15.8603L19.25 18.25V5.75L16 8.13971",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4.75 12L13.25 5.75V18.25L4.75 12Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Backward = {
  component: BackwardComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
BackwardComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
BackwardComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var BankComponent = function BankComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M2 20H22V22H2V20ZM4 12H6V19H4V12ZM9 12H11V19H9V12ZM13 12H15V19H13V12ZM18 12H20V19H18V12ZM2 7L12 2L22 7V11H2V7ZM4 8.236V9H20V8.236L12 4.236L4 8.236ZM12 8C11.8022 8 11.6089 7.94135 11.4444 7.83147C11.28 7.72159 11.1518 7.56541 11.0761 7.38268C11.0004 7.19996 10.9806 6.99889 11.0192 6.80491C11.0578 6.61093 11.153 6.43275 11.2929 6.29289C11.4327 6.15304 11.6109 6.0578 11.8049 6.01921C11.9989 5.98063 12.2 6.00043 12.3827 6.07612C12.5654 6.15181 12.7216 6.27998 12.8315 6.44443C12.9414 6.60888 13 6.80222 13 7C13 7.26522 12.8946 7.51957 12.7071 7.70711C12.5196 7.89464 12.2652 8 12 8Z",
    fill: smartColor || fill
  }));
};
var Bank = {
  component: BankComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
BankComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
BankComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round",
  fill: "black"
};

var BarChartComponent = function BarChartComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    var fillRule = _ref.fillRule,
    clipRule = _ref.clipRule;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    fillRule: fillRule,
    clipRule: clipRule,
    fill: smartColor || fill,
    d: "M13.875 3.75C13.875 3.33579 14.2108 3 14.625 3H19.875C20.2892 3 20.625 3.33579 20.625 3.75V18.75H21.375C21.7892 18.75 22.125 19.0858 22.125 19.5C22.125 19.9142 21.7892 20.25 21.375 20.25H2.625C2.21079 20.25 1.875 19.9142 1.875 19.5C1.875 19.0858 2.21079 18.75 2.625 18.75H3.375V12.75C3.375 12.3358 3.71079 12 4.125 12H8.625V8.25C8.625 7.83579 8.96079 7.5 9.375 7.5H13.875V3.75ZM13.875 9H10.125V18.75H13.875V9ZM15.375 18.75H19.125V4.5H15.375V18.75ZM8.625 18.75V13.5H4.875V18.75H8.625Z"
  }));
};
var BarChart = {
  component: BarChartComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
BarChartComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
BarChartComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round",
  fillRule: "evenodd",
  clipRule: "evenodd"
};

var BasketComponent = function BasketComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M7.55688 7.26703C7.55675 6.70673 7.66702 6.15185 7.88135 5.63416C8.09568 5.11646 8.40976 4.64606 8.80591 4.24982C9.20206 3.85358 9.67255 3.53928 10.1902 3.32483C10.7078 3.11038 11.2625 3 11.8228 3C12.9544 3 14.0399 3.44954 14.8401 4.24976C15.6403 5.04997 16.0898 6.13535 16.0898 7.26703V8.17902M16.0899 8.17383H19.014C19.2358 8.17397 19.4548 8.22372 19.6549 8.3194C19.855 8.41507 20.0314 8.55426 20.1707 8.72681C20.3101 8.89936 20.4091 9.10089 20.4605 9.31665C20.512 9.53241 20.5146 9.75693 20.4681 9.97382L18.398 19.5048C18.3159 19.8848 18.1062 20.2252 17.8036 20.4692C17.5009 20.7132 17.1237 20.8462 16.735 20.8459H6.76694C6.37803 20.8464 6.00066 20.7136 5.69785 20.4695C5.39503 20.2255 5.18525 19.885 5.10312 19.5048L3.03305 9.97382C2.98654 9.75693 2.98916 9.53241 3.04062 9.31665C3.09208 9.10089 3.19103 8.89936 3.33042 8.72681C3.4698 8.55426 3.64592 8.41507 3.84604 8.3194C4.04616 8.22372 4.2651 8.17397 4.48691 8.17383H12.9649M7.14087 15.5669H19.2189",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Basket = {
  component: BasketComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
BasketComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
BasketComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var BendLeftComponent = function BendLeftComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M18.8879 4V8.04102C18.8879 8.78703 18.7407 9.52569 18.4551 10.2148C18.1694 10.904 17.7507 11.5301 17.2229 12.0574C16.6951 12.5846 16.0686 13.0027 15.3792 13.2876C14.6897 13.5725 13.9509 13.7188 13.2048 13.718L4.00488 13.709M9.16895 18.8799L4 13.7109L9.16895 8.54199",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var BendLeft = {
  component: BendLeftComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
BendLeftComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
BendLeftComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var BendRightComponent = function BendRightComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M4 5V9.04102C4 9.78703 4.14695 10.5257 4.43262 11.2148C4.71829 11.904 5.137 12.5301 5.66479 13.0574C6.19259 13.5846 6.81909 14.0027 7.50854 14.2876C8.198 14.5725 8.93684 14.7188 9.68286 14.718L18.8879 14.709M15.6139 9.40088L20.7828 14.5698L15.6139 19.7388",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var BendRight = {
  component: BendRightComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
BendRightComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
BendRightComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var BoltComponent = function BoltComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M10.5781 20.855L12.1531 13.4224H5L9.08301 3M14.4871 8.85791H19.3751L10.5281 20.8579M9.05219 3H16.5661L14.506 8.8584",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Bolt = {
  component: BoltComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
BoltComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
BoltComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var BookComponent = function BookComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M11.924 16.0908V6.7398M11.928 19.51C10.644 18.5538 9.06134 18.0864 7.46388 18.1911C6.17203 18.1572 4.89089 18.4313 3.72609 18.9909C3.65079 19.0313 3.56614 19.0516 3.48072 19.0495C3.3953 19.0474 3.31199 19.0228 3.23878 18.9787C3.16557 18.9347 3.1051 18.8726 3.06324 18.7981C3.02139 18.7236 2.99957 18.6394 3.00001 18.5539V7.12277C2.99939 6.98999 3.0256 6.85891 3.07716 6.73654C3.12872 6.61418 3.2046 6.50316 3.30006 6.41086C4.46777 5.44498 5.95205 4.94628 7.46608 5.01096C8.23091 5.00727 8.99173 5.11955 9.72291 5.34397M11.9241 19.5099C13.2082 18.554 14.7905 18.0865 16.3879 18.191C17.6798 18.157 18.9612 18.4311 20.126 18.9908C20.2013 19.0312 20.2857 19.0516 20.3711 19.0494C20.4565 19.0473 20.5401 19.0227 20.6133 18.9786C20.6865 18.9346 20.747 18.8725 20.7888 18.798C20.8307 18.7235 20.8525 18.6393 20.8521 18.5538V7.12268C20.8526 6.98992 20.8262 6.8588 20.7747 6.73645C20.7231 6.61411 20.6474 6.50314 20.552 6.41077C19.3842 5.44514 17.9 4.94648 16.386 5.01087C15.5612 4.95995 14.7352 5.08839 13.9646 5.38684C13.194 5.68529 12.4972 6.14669 11.9219 6.73987",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Book = {
  component: BookComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
BookComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
BookComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var BookmarkComponent = function BookmarkComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M18.9991 4.49984C18.9992 4.30283 18.9607 4.10773 18.8857 3.92569C18.8107 3.74365 18.7008 3.57834 18.5622 3.43904C18.4235 3.29973 18.2589 3.18915 18.0777 3.11382C17.8965 3.03849 17.7024 2.99987 17.5063 3H7.99042C7.46256 3 6.95615 3.21066 6.5829 3.58571C6.20964 3.96076 6 4.4695 6 4.9999V21L12.4995 17.4357L19 20.9999V4.50168",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Bookmark = {
  component: BookmarkComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
BookmarkComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
BookmarkComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var BriefcaseComponent = function BriefcaseComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M20.331 6.092H15.586V5.569C15.5855 5.15304 15.42 4.75426 15.1259 4.46013C14.8317 4.166 14.433 4.00053 14.017 4H9.833C9.41721 4.00079 9.01869 4.16639 8.72478 4.46049C8.43087 4.75459 8.26553 5.15321 8.265 5.569V6.092H3.523C3.38437 6.09226 3.2515 6.14745 3.15348 6.24548C3.05545 6.3435 3.00026 6.47637 3 6.615V18.115C3.00053 18.531 3.166 18.9297 3.46013 19.2239C3.75426 19.518 4.15304 19.6835 4.569 19.684H19.281C19.6961 19.6835 20.0941 19.5187 20.3881 19.2256C20.6821 18.9326 20.8482 18.5351 20.85 18.12V6.624C20.8533 6.55427 20.8422 6.48461 20.8174 6.41936C20.7926 6.35411 20.7547 6.29467 20.7059 6.24475C20.6571 6.19484 20.5985 6.15551 20.5338 6.12923C20.4692 6.10294 20.3998 6.09027 20.33 6.092H20.331ZM9.31 5.569C9.31026 5.43037 9.36545 5.2975 9.46348 5.19948C9.5615 5.10145 9.69437 5.04626 9.833 5.046H14.017C14.1556 5.04626 14.2885 5.10145 14.3865 5.19948C14.4845 5.2975 14.5397 5.43037 14.54 5.569V6.092H9.31V5.569ZM19.6 7.138L17.978 12.01C17.9433 12.1149 17.8762 12.2061 17.7863 12.2704C17.6965 12.3348 17.5885 12.3689 17.478 12.368H14.54V11.844C14.54 11.7053 14.4849 11.5723 14.3868 11.4742C14.2887 11.3761 14.1557 11.321 14.017 11.321H9.833C9.69429 11.321 9.56126 11.3761 9.46318 11.4742C9.3651 11.5723 9.31 11.7053 9.31 11.844V12.367H6.369C6.25849 12.3679 6.15054 12.3338 6.06069 12.2694C5.97083 12.2051 5.90372 12.1139 5.869 12.009L4.249 7.138H19.6ZM13.494 12.367V13.413H10.356V12.367H13.494ZM19.8 18.12C19.7997 18.2586 19.7445 18.3915 19.6465 18.4895C19.5485 18.5875 19.4156 18.6427 19.277 18.643H4.569C4.43037 18.6427 4.2975 18.5875 4.19948 18.4895C4.10145 18.3915 4.04626 18.2586 4.046 18.12V9.837L4.88 12.337C4.98336 12.6502 5.18293 12.9229 5.45028 13.1161C5.71764 13.3093 6.03914 13.4132 6.369 13.413H9.31V13.936C9.31 14.0747 9.3651 14.2077 9.46318 14.3058C9.56126 14.4039 9.69429 14.459 9.833 14.459H14.017C14.1557 14.459 14.2887 14.4039 14.3868 14.3058C14.4849 14.2077 14.54 14.0747 14.54 13.936V13.413H17.482C17.8113 13.4132 18.1323 13.3096 18.3994 13.117C18.6665 12.9244 18.8662 12.6525 18.97 12.34L19.804 9.84L19.8 18.12Z",
    fill: smartColor || fill
  }));
};
var Briefcase = {
  component: BriefcaseComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
BriefcaseComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
BriefcaseComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CalendarComponent = function CalendarComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M18.5319 5.81287H19.3671C19.7618 5.81287 20.1401 5.96985 20.4191 6.2489C20.6982 6.52796 20.8549 6.90626 20.8549 7.3009V19.3009C20.8549 19.6955 20.6982 20.0741 20.4191 20.3531C20.1401 20.6322 19.7618 20.7889 19.3671 20.7889H4.48796C4.09332 20.7889 3.71477 20.6322 3.43571 20.3531C3.15666 20.0741 2.99992 19.6955 2.99992 19.3009V7.3009C2.99992 6.90626 3.15666 6.52796 3.43571 6.2489C3.71477 5.96985 4.09332 5.81287 4.48796 5.81287H15.4191",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15.736 4L15.739 7.735",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.12 4L8.117 7.735",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.117 12.244V12.221",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.117 16.114V16.091",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M11.939 12.244L11.916 12.221",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M11.939 16.114L11.916 16.091",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15.739 12.244V12.221",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15.739 16.114V16.091",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
CalendarComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CalendarComponent.defaultProps = {
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};
var Calendar = {
  component: CalendarComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};

var CameraComponent = function CameraComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M15.8411 6.63501L15.541 6.06604C15.3734 5.74465 15.121 5.47542 14.811 5.28748C14.5011 5.09954 14.1454 5.00004 13.783 5H10.083C9.72039 4.99997 9.3648 5.09942 9.05469 5.28735C8.74457 5.47529 8.49176 5.74457 8.32397 6.06604L8.02417 6.63501C7.85652 6.95666 7.60383 7.22619 7.2937 7.41431C6.98358 7.60243 6.62786 7.70196 6.26514 7.70203H4.98413C4.45794 7.70203 3.95313 7.91113 3.58105 8.2832C3.20898 8.65528 3 9.15985 3 9.68604V17.4191C3 17.9453 3.20898 18.4498 3.58105 18.8219C3.95313 19.194 4.45794 19.4031 4.98413 19.4031H18.8721C19.3983 19.4031 19.9028 19.194 20.2749 18.8219C20.647 18.4498 20.856 17.9453 20.856 17.4191V9.68604C20.856 9.15985 20.647 8.65528 20.2749 8.2832C19.9028 7.91113 19.3983 7.70203 18.8721 7.70203H17.592C17.2307 7.7005 16.8767 7.60039 16.5681 7.41235C16.2595 7.22431 16.0081 6.95546 15.8411 6.63501Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M11.9382 16.205C13.7729 16.205 15.2602 14.7177 15.2602 12.883C15.2602 11.0483 13.7729 9.56104 11.9382 9.56104C10.1035 9.56104 8.61621 11.0483 8.61621 12.883C8.61621 14.7177 10.1035 16.205 11.9382 16.205Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Camera = {
  component: CameraComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CameraComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CameraComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var _excluded$P = ["fill", "stroke", "smartColor", "strokeWidth", "strokeLineCap", "strokeLineJoin"];
var CardComponent = function CardComponent(_ref) {
  var fill = _ref.fill,
    stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _objectWithoutProperties(_ref, _excluded$P);
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M21 12.7707V15.9881C21 16.5216 20.7893 17.0333 20.4143 17.4106C20.0392 17.7879 19.5306 18 19.0001 18H4.99995C4.46951 18 3.96087 17.7879 3.5858 17.4106C3.21073 17.0333 3.00006 16.5216 3.00006 15.9881V7.01176C3.00006 6.47819 3.21073 5.96653 3.5858 5.58924C3.96087 5.21195 4.46951 5.00003 4.99995 5.00003H19.0001C19.5306 5.00003 20.0392 5.21195 20.4143 5.58924C20.7893 5.96653 21 6.47819 21 7.01176V9.84096",
    fill: fill || 'white'
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M21 12.7707V15.9881C21 16.5216 20.7893 17.0333 20.4143 17.4106C20.0392 17.7879 19.5306 18 19.0001 18H4.99995C4.46951 18 3.96087 17.7879 3.5858 17.4106C3.21073 17.0333 3.00006 16.5216 3.00006 15.9881V7.01176C3.00006 6.47819 3.21073 5.96653 3.5858 5.58924C3.96087 5.21195 4.46951 5.00003 4.99995 5.00003H19.0001C19.5306 5.00003 20.0392 5.21195 20.4143 5.58924C20.7893 5.96653 21 6.47819 21 7.01176V9.84096",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M3 9.83994H20.999",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M6.67441 13.9935H10.7178",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
CardComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CardComponent.defaultProps = {
  fill: "#fff",
  smartColor: "#8895A7",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};
var Card$1 = {
  component: CardComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};

var CartComponent = function CartComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M10.3519 18C10.4925 18 10.6064 17.8925 10.6064 17.7599C10.6064 17.6273 10.4925 17.5198 10.3519 17.5198C10.2114 17.5198 10.0974 17.6273 10.0974 17.7599C10.0974 17.8925 10.2114 18 10.3519 18Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M17.5523 18C17.6929 18 17.8068 17.8925 17.8068 17.7599C17.8068 17.6273 17.6929 17.5198 17.5523 17.5198C17.4117 17.5198 17.2978 17.6273 17.2978 17.7599C17.2978 17.8925 17.4117 18 17.5523 18Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M3.00006 5.07068H4.87588C5.23051 5.07064 5.57417 5.18707 5.84774 5.39995C6.12132 5.61283 6.30794 5.90896 6.37539 6.23743L7.65392 12.4754C7.72136 12.8038 7.90798 13.1 8.18156 13.3129C8.45514 13.5257 8.79855 13.6422 9.15317 13.6421H18.3073C18.6619 13.642 19.0054 13.5255 19.2789 13.3126C19.5524 13.0998 19.7389 12.8038 19.8066 12.4754L20.9723 6.7844C21.015 6.57592 21.0084 6.36115 20.9528 6.1554C20.8972 5.94966 20.7939 5.758 20.6506 5.59425C20.5074 5.4305 20.3276 5.29876 20.124 5.20825C19.9204 5.11773 19.6981 5.07068 19.4731 5.07068L9.01988 5",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Cart = {
  component: CartComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CartComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CartComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CashComponent = function CashComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M18.9838 5H5.01624C3.9027 5 3 5.908 3 7.02808V15.9719C3 17.092 3.9027 18 5.01624 18H18.9838C20.0973 18 21 17.092 21 15.9719V7.02808C21 5.908 20.0973 5 18.9838 5Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M21.0001 13.6448V16.9911C21.0001 17.2579 20.8947 17.5138 20.7072 17.7024C20.5196 17.8911 20.2652 17.997 20 17.997H16.6702C16.671 16.8425 17.1275 15.7355 17.9394 14.9193C18.7514 14.1032 19.8522 13.6448 21.0001 13.6448V13.6448Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M16.6702 5H19.997C20.2622 5 20.5166 5.10598 20.7041 5.29463C20.8917 5.48328 20.997 5.73914 20.997 6.00593V9.35226C19.8497 9.35146 18.7496 8.89266 17.9384 8.07662C17.1271 7.26059 16.671 6.15404 16.6702 5V5Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M7.3298 18L4.003 18C3.73777 18 3.4834 17.894 3.29585 17.7054C3.10831 17.5167 3.00294 17.2609 3.00294 16.9941L3.00294 13.6477C4.15025 13.6485 5.25034 14.1073 6.06161 14.9234C6.87288 15.7394 7.329 16.846 7.3298 18V18Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M2.99992 9.35535V6.00901C2.99992 5.74222 3.10528 5.48636 3.29283 5.29771C3.48038 5.10907 3.73474 5.00308 3.99998 5.00308H7.3298C7.329 6.15766 6.87246 7.26466 6.06054 8.08078C5.24862 8.8969 4.14775 9.35535 2.99992 9.35535V9.35535Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M11.7251 11.5009H11.6042C11.1792 11.5007 10.7716 11.3309 10.4711 11.0286C10.1705 10.7263 10.0015 10.3163 10.0012 9.88877V9.88877C10.0015 9.46133 10.1705 9.05136 10.4711 8.74921C10.7716 8.44706 11.1793 8.27734 11.6042 8.27734H13.318",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M11.7248 11.5011H12.2449C12.4554 11.5011 12.6638 11.5426 12.8582 11.6236C13.0527 11.7047 13.2294 11.8235 13.3783 11.9732C13.5271 12.1229 13.6453 12.3007 13.7258 12.4963C13.8064 12.6919 13.8479 12.9015 13.8479 13.1133V13.1133C13.8479 13.5409 13.6789 13.9509 13.3783 14.2533C13.0777 14.5557 12.67 14.7257 12.2449 14.7257H10.5311",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Cash = {
  component: CashComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CashComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CashComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CenterAlignComponent = function CenterAlignComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M3 4H20.359M5.04498 9.11694H18.315M3 14.2349H20.359M7.04901 19.353H16.313",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var CenterAlign = {
  component: CenterAlignComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CenterAlignComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CenterAlignComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CertificateComponent = function CertificateComponent(_ref) {
  var fill = _ref.fill,
    stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M3 11.9272C3 13.0742 4.1319 13.9884 4.5459 14.9854C4.9739 16.0184 4.83599 17.4622 5.61499 18.2402C6.39399 19.0182 7.83587 18.8811 8.86987 19.3091C9.86987 19.7231 10.781 20.854 11.927 20.854C13.073 20.854 13.9869 19.7221 14.9849 19.3091C16.0189 18.8801 17.461 19.0192 18.24 18.2402C19.019 17.4612 18.8808 16.0184 19.3088 14.9854C19.7228 13.9854 20.855 13.0742 20.855 11.9272C20.855 10.7802 19.7228 9.86712 19.3088 8.87012C18.8808 7.83612 19.019 6.39326 18.24 5.61426C17.461 4.83526 16.0189 4.97439 14.9849 4.54639C13.9849 4.13239 13.074 3 11.927 3C10.78 3 9.86687 4.13239 8.86987 4.54639C7.83687 4.97439 6.39399 4.83623 5.61499 5.61523C4.83599 6.39423 4.9749 7.83612 4.5459 8.87012C4.1329 9.86312 3 10.7802 3 11.9272Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M13.777 10.0801L10.082 13.7751",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M10.187 11.0352C10.6012 11.0352 10.937 10.6994 10.937 10.2852C10.937 9.87094 10.6012 9.53516 10.187 9.53516C9.7728 9.53516 9.43701 9.87094 9.43701 10.2852C9.43701 10.6994 9.7728 11.0352 10.187 11.0352Z",
    fill: smartColor || fill
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M13.687 14.5352C14.1012 14.5352 14.437 14.1994 14.437 13.7852C14.437 13.3709 14.1012 13.0352 13.687 13.0352C13.2728 13.0352 12.937 13.3709 12.937 13.7852C12.937 14.1994 13.2728 14.5352 13.687 14.5352Z",
    fill: smartColor || fill
  }));
};
var Certificate = {
  component: CertificateComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CertificateComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CertificateComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Certificate2Component = function Certificate2Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M15.258 9.38721L11.157 13.4882L8.89099 11.4222M3 11.9282C3 13.0742 4.13192 13.9893 4.54492 14.9863C4.97392 16.0203 4.83501 17.4632 5.61401 18.2412C6.39301 19.0192 7.8359 18.8811 8.8689 19.3101C9.8689 19.7241 10.779 20.855 11.927 20.855C13.075 20.855 13.9869 19.7231 14.9839 19.3101C16.0179 18.8811 17.461 19.0202 18.24 18.2412C19.019 17.4622 18.8801 16.0203 19.3091 14.9863C19.7231 13.9863 20.855 13.0752 20.855 11.9282C20.855 10.7812 19.7231 9.86812 19.3091 8.87012C18.8801 7.83612 19.019 6.39423 18.24 5.61523C17.461 4.83623 16.0181 4.9739 14.9851 4.5459C13.9851 4.1329 13.075 3 11.928 3C10.781 3 9.86812 4.1329 8.87012 4.5459C7.83612 4.9749 6.39299 4.83723 5.61499 5.61523C4.83699 6.39323 4.9739 7.83612 4.5459 8.87012C4.1319 9.86812 3 10.7812 3 11.9282Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Certificate2 = {
  component: Certificate2Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Certificate2Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Certificate2Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ChartComponent = function ChartComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M20.855 4L13.0278 11.8271L10.042 8.84131L3 15.8833M20.855 4H15.7128M20.855 4L20.8559 9.14307M8.03198 4H3.00293V19.3931H20.8579V16.2271",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Chart = {
  component: ChartComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ChartComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ChartComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CheckComponent = function CheckComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM16.5303 9.53033C16.8232 9.23744 16.8232 8.76256 16.5303 8.46967C16.2374 8.17678 15.7626 8.17678 15.4697 8.46967L11 12.9393L9.53033 11.4697C9.23744 11.1768 8.76256 11.1768 8.46967 11.4697C8.17678 11.7626 8.17678 12.2374 8.46967 12.5303L10.4697 14.5303C10.6103 14.671 10.8011 14.75 11 14.75C11.1989 14.75 11.3897 14.671 11.5303 14.5303L16.5303 9.53033Z",
    fill: smartColor || fill
  }));
};
CheckComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CheckComponent.defaultProps = {
  fill: "#212934"
};
var Check = {
  component: CheckComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};

var CheckCircleComponent = function CheckCircleComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M10.9386 14.1397L15.6797 9.39868",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M10.9389 14.1396L8.31885 11.7516",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var CheckCircle = {
  component: CheckCircleComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CheckCircleComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CheckCircleComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ChevronArrowDownComponent = function ChevronArrowDownComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M6 9L12 15L18 9",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var ChevronArrowDown = {
  component: ChevronArrowDownComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ChevronArrowDownComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ChevronArrowDownComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ArrowLeftComponent = function ArrowLeftComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M15 6L9 12L15 18",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
ArrowLeftComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ArrowLeftComponent.defaultProps = {
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};
var ChevronArrowLeft = {
  component: ArrowLeftComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};

var ArrowRightComponent = function ArrowRightComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M9 6L15 12L9 18",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
ArrowRightComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ArrowRightComponent.defaultProps = {
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};
var ChevronArrowRight = {
  component: ArrowRightComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};

var ChevronArrowUpComponent = function ChevronArrowUpComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M6 15L12 9L18 15",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var ChevronArrowUp = {
  component: ChevronArrowUpComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ChevronArrowUpComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ChevronArrowUpComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ChevronFilledDownComponent = function ChevronFilledDownComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M7.10108 9.65718L11.7577 14.8872C11.8915 15.0376 12.1086 15.0376 12.2424 14.8872L16.8989 9.65718C17.1148 9.41466 16.962 9 16.6565 9H7.34344C7.03808 9 6.88516 9.41467 7.10108 9.65718Z",
    fill: smartColor || fill
  }));
};
ChevronFilledDownComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ChevronFilledDownComponent.defaultProps = {
  fill: "#094357"
};
var ChevronFilledDown = {
  component: ChevronFilledDownComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};

var ChevronFilledLeftComponent = function ChevronFilledLeftComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M14.3598 6.64019L9.26517 11.7349C9.11873 11.8814 9.11873 12.1188 9.26517 12.2652L14.3598 17.3598C14.5961 17.5961 15 17.4288 15 17.0948V6.90536C15 6.57126 14.5961 6.40395 14.3598 6.64019Z",
    fill: smartColor || fill
  }));
};
var ChevronFilledLeft = {
  component: ChevronFilledLeftComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ChevronFilledLeftComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ChevronFilledLeftComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ChevronFilledRightComponent = function ChevronFilledRightComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M9.65718 7.11118L14.8872 12.2335C15.0376 12.3807 15.0376 12.6194 14.8872 12.7667L9.65718 17.8888C9.41466 18.1263 9 17.9582 9 17.6223V7.37779C9 7.04189 9.41467 6.87367 9.65718 7.11118Z",
    fill: smartColor || fill
  }));
};
var ChevronFilledRight = {
  component: ChevronFilledRightComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ChevronFilledRightComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ChevronFilledRightComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ChevronFilledUpComponent = function ChevronFilledUpComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M6.64017 14.3598L11.7349 9.26517C11.8813 9.11872 12.1188 9.11872 12.2652 9.26517L17.3598 14.3598C17.596 14.5961 17.4288 15 17.0946 15H6.90534C6.57125 15 6.40394 14.5961 6.64017 14.3598Z",
    fill: smartColor || fill
  }));
};
var ChevronFilledUp = {
  component: ChevronFilledUpComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ChevronFilledUpComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ChevronFilledUpComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CircleComponent = function CircleComponent(_ref) {
  var fill = _ref.fill,
    stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin,
    fillRule = _ref.fillRule,
    clipRule = _ref.clipRule;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("g", {
    clipPath: "url(#clip0_379_504)"
  }, /*#__PURE__*/React__default.createElement("path", {
    fillRule: fillRule,
    clipRule: clipRule,
    fill: smartColor || fill,
    d: "M7.40381 7.40381C4.8654 9.94221 4.8654 14.0578 7.40381 16.5962C9.94221 19.1346 14.0578 19.1346 16.5962 16.5962C19.1346 14.0578 19.1346 9.94221 16.5962 7.40381C14.0578 4.8654 9.94221 4.8654 7.40381 7.40381ZM6.34315 17.6569C3.21895 14.5327 3.21895 9.46734 6.34315 6.34315C9.46734 3.21895 14.5327 3.21895 17.6569 6.34315C20.781 9.46734 20.781 14.5327 17.6569 17.6569C14.5327 20.781 9.46734 20.781 6.34315 17.6569Z"
  })), /*#__PURE__*/React__default.createElement("defs", null, /*#__PURE__*/React__default.createElement("clipPath", {
    id: "clip0_379_504"
  }, /*#__PURE__*/React__default.createElement("rect", {
    width: "16",
    height: "16",
    fill: "white",
    transform: "translate(4 4)"
  }))), /*#__PURE__*/React__default.createElement("path", {
    d: "M3.73396 15.2779L8.72224 20.2663C9.19206 20.736 9.82939 21 10.4938 21C11.1581 21 11.7952 20.736 12.265 20.2663L19.5595 12.9717C19.8412 12.6897 19.9996 12.3075 20 11.909V4H12.0914C11.6928 4.00009 11.3105 4.15856 11.0287 4.44048L3.73396 11.7351C3.50124 11.9676 3.3166 12.2438 3.19064 12.5477C3.06469 12.8517 3 13.1774 3 13.5064C3 13.8354 3.06469 14.1613 3.19064 14.4653C3.3166 14.7692 3.50124 15.0454 3.73396 15.2779Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15.1222 10.0612C15.6801 10.0612 16.1324 9.60889 16.1324 9.05097C16.1324 8.49305 15.6801 8.04077 15.1222 8.04077C14.5643 8.04077 14.112 8.49305 14.112 9.05097C14.112 9.60889 14.5643 10.0612 15.1222 10.0612Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Circle = {
  component: CircleComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CircleComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string,
  fillRule: propTypes.exports.string,
  clipRule: propTypes.exports.string
};
CircleComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round",
  fillRule: "evenodd",
  clipRule: "evenodd"
};

var CloseComponent = function CloseComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M6 6L18 18M6 18L18 6L6 18Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
CloseComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CloseComponent.defaultProps = {
  stroke: "black",
  strokeLineCap: "round",
  strokeLineJoin: "round",
  strokeWidth: "1.5"
};
var Close = {
  component: CloseComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};

var CloseCircleComponent = function CloseCircleComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.0191 9.0188L14.9815 14.9812",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.0191 14.9812L14.9815 9.0188",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var CloseCircle = {
  component: CloseCircleComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CloseCircleComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CloseCircleComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CloudComponent = function CloudComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M10.0569 18.8937H17.6321C18.4262 18.8929 19.1919 18.5993 19.7825 18.0685C20.3731 17.5377 20.747 16.8072 20.8323 16.0177C20.9176 15.2282 20.7083 14.4353 20.2446 13.7907C19.781 13.146 19.0957 12.6954 18.3201 12.525C18.5586 11.117 18.2494 9.67075 17.4558 8.48352C16.6622 7.29629 15.4442 6.45813 14.052 6.14026C12.6598 5.82239 11.1987 6.04939 9.96851 6.77454C8.73827 7.49969 7.83218 8.66767 7.43604 10.0397H7.427C6.25289 10.0397 5.12685 10.5063 4.29663 11.3366C3.46641 12.1668 3 13.2928 3 14.4669C3 15.641 3.46641 16.7671 4.29663 17.5973C5.12685 18.4275 6.25289 18.8937 7.427 18.8937",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Cloud = {
  component: CloudComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CloudComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CloudComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CloudDownloadComponent = function CloudDownloadComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M14.7234 15.8873H17.6333C18.4281 15.8874 19.195 15.5941 19.7864 15.0631C20.3778 14.5321 20.7519 13.801 20.8372 13.0108C20.9224 12.2206 20.7126 11.4272 20.248 10.7823C19.7835 10.1375 19.0968 9.68704 18.3203 9.51768C18.5564 8.11058 18.2458 6.66609 17.4519 5.48057C16.658 4.29506 15.441 3.45779 14.05 3.14024C12.6591 2.82268 11.1994 3.04902 9.96973 3.77256C8.74003 4.49611 7.83325 5.66218 7.4353 7.03233H7.42749C6.25324 7.03233 5.12695 7.49889 4.29663 8.3292C3.46631 9.15952 3 10.2858 3 11.4601C3 12.6343 3.46631 13.7606 4.29663 14.5909C5.12695 15.4212 6.25324 15.8873 7.42749 15.8873H11.6753M14.5953 18.1384L11.9263 20.8074M11.9263 20.8074L9.2574 18.1384M11.9263 20.8074L11.9264 11.6244",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var CloudDownload = {
  component: CloudDownloadComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CloudDownloadComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CloudDownloadComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CloudFlashComponent = function CloudFlashComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M16.283 16.8938H17.6321C18.4262 16.893 19.1919 16.5994 19.7825 16.0686C20.3731 15.5378 20.747 14.8073 20.8323 14.0178C20.9176 13.2283 20.7083 12.4354 20.2446 11.7908C19.781 11.1461 19.0957 10.6955 18.3201 10.5251C18.5586 9.11715 18.2494 7.67086 17.4558 6.48363C16.6622 5.2964 15.4442 4.45823 14.052 4.14037C12.6598 3.8225 11.1987 4.049 9.96851 4.77415C8.73827 5.49931 7.83218 6.66777 7.43604 8.03978H7.427C6.25289 8.03978 5.12685 8.50643 4.29663 9.33665C3.46641 10.1669 3 11.2929 3 12.467C3 13.6411 3.46641 14.7672 4.29663 15.5974C5.12685 16.4276 6.25289 16.8938 7.427 16.8938M11.926 12.5146L10.0391 16.4619H13.813L11.926 20.4079",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var CloudFlash = {
  component: CloudFlashComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CloudFlashComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CloudFlashComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CloudRainComponent = function CloudRainComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M15.5991 16.8917H17.6321C18.4262 16.8909 19.1919 16.5968 19.7825 16.066C20.3731 15.5352 20.747 14.8052 20.8323 14.0157C20.9176 13.2262 20.7083 12.4328 20.2446 11.7882C19.781 11.1435 19.0957 10.6929 18.3201 10.5226C18.558 9.1148 18.2483 7.66925 17.4546 6.48251C16.6609 5.29577 15.4432 4.4579 14.0513 4.14023C12.6593 3.82256 11.1985 4.04915 9.96851 4.77402C8.73849 5.49889 7.83245 6.66709 7.43604 8.03866H7.427C6.25289 8.03866 5.12685 8.50532 4.29663 9.33554C3.46641 10.1658 3 11.2913 3 12.4654C3 13.6395 3.46641 14.7656 4.29663 15.5958C5.12685 16.426 6.25289 16.8927 7.427 16.8927M8.27206 15.2355V19.6465M15.6171 14.3485V18.9495M11.9441 16.5015V20.5805",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var CloudRain = {
  component: CloudRainComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CloudRainComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CloudRainComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CloudUploadComponent = function CloudUploadComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M14.7236 16.8848H17.6326C18.4274 16.8852 19.1943 16.5915 19.7859 16.0606C20.3775 15.5297 20.752 14.7991 20.8374 14.0089C20.9228 13.2186 20.7129 12.4243 20.2483 11.7794C19.7837 11.1344 19.0972 10.6841 18.3206 10.5147C18.556 9.10784 18.2449 7.66411 17.4509 6.47907C16.6569 5.29404 15.44 4.45757 14.0493 4.14021C12.6586 3.82285 11.1994 4.04877 9.96997 4.77204C8.7405 5.49532 7.83375 6.6611 7.43555 8.03083H7.42749C6.25324 8.03083 5.12719 8.49739 4.29688 9.32771C3.46656 10.158 3 11.2838 3 12.4581C3 13.6323 3.46656 14.7586 4.29688 15.5889C5.12719 16.4193 6.25324 16.8858 7.42749 16.8858H11.6587M14.5966 12.6337L11.9276 9.96474M11.9276 9.96474L9.25867 12.6337M11.9276 9.96474L11.9276 19.1477",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var CloudUpload = {
  component: CloudUploadComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CloudUploadComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CloudUploadComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CommandComponent = function CommandComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M6.82257 4C7.57116 4 8.28909 4.29738 8.81843 4.82671C9.34776 5.35605 9.64514 6.07398 9.64514 6.82257V9.64514H6.82257C6.07398 9.64514 5.35605 9.34776 4.82671 8.81843C4.29738 8.28909 4 7.57116 4 6.82257V6.82257C4 6.07398 4.29738 5.35605 4.82671 4.82671C5.35605 4.29738 6.07398 4 6.82257 4V4Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M6.82262 14.3548H9.64519V17.1774C9.64519 17.926 9.34781 18.6439 8.81847 19.1732C8.28914 19.7026 7.57121 19.9999 6.82262 19.9999V19.9999C6.07402 19.9999 5.35609 19.7026 4.82676 19.1732C4.29742 18.6439 4.00005 17.926 4.00005 17.1774V17.1774C4.00005 16.4288 4.29742 15.7108 4.82676 15.1815C5.35609 14.6522 6.07402 14.3548 6.82262 14.3548V14.3548Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M17.1776 4.00006C17.9262 4.00006 18.6441 4.29744 19.1735 4.82677C19.7028 5.35611 20.0002 6.07404 20.0002 6.82263V6.82263C20.0002 7.57122 19.7028 8.28916 19.1735 8.81849C18.6441 9.34782 17.9262 9.6452 17.1776 9.6452H14.355V6.82263C14.355 6.07404 14.6524 5.35611 15.1817 4.82677C15.7111 4.29744 16.429 4.00006 17.1776 4.00006V4.00006Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.64412 9.64532H14.3537V14.3549H9.64412V9.64532Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M14.355 14.3548H17.1776C17.9262 14.3548 18.6441 14.6522 19.1735 15.1815C19.7028 15.7108 20.0002 16.4288 20.0002 17.1774V17.1774C20.0002 17.926 19.7028 18.6439 19.1735 19.1732C18.6441 19.7026 17.9262 19.9999 17.1776 19.9999V19.9999C16.429 19.9999 15.7111 19.7026 15.1817 19.1732C14.6524 18.6439 14.355 17.926 14.355 17.1774V14.3548Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Command = {
  component: CommandComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CommandComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CommandComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CompanyComponent = function CompanyComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M9.7981 20.86V15.06H14.3049V20.86",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M2.99997 20.86H20.8601",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M18.6731 20.86V5.45398H5.05197V20.86",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M6.88889 5.45401V3H12.2441V5.45401",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.194 9.09399V8.09399M7.444 8.34399H9.444H7.444ZM8.694 8.09399V9.09399V8.09399ZM9.444 8.84399H7.444H9.444Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15.167 9.09399V8.09399M14.417 8.34399H16.417H14.417ZM15.667 8.09399V9.09399V8.09399ZM16.417 8.84399H14.417H16.417Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.194 12.21V11.21M7.444 11.46H9.444H7.444ZM8.694 11.21V12.21V11.21ZM9.444 11.96H7.444H9.444Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15.167 12.21V11.21M14.417 11.46H16.417H14.417ZM15.667 11.21V12.21V11.21ZM16.417 11.96H14.417H16.417Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M3.73396 15.2779L8.72224 20.2663C9.19206 20.736 9.82939 21 10.4938 21C11.1581 21 11.7952 20.736 12.265 20.2663L19.5595 12.9717C19.8412 12.6897 19.9996 12.3075 20 11.909V4H12.0914C11.6928 4.00009 11.3105 4.15856 11.0287 4.44048L3.73396 11.7351C3.50124 11.9676 3.3166 12.2438 3.19064 12.5477C3.06469 12.8517 3 13.1774 3 13.5064C3 13.8354 3.06469 14.1613 3.19064 14.4653C3.3166 14.7692 3.50124 15.0454 3.73396 15.2779Z"
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15.1222 10.0612C15.6801 10.0612 16.1324 9.60889 16.1324 9.05097C16.1324 8.49305 15.6801 8.04077 15.1222 8.04077C14.5643 8.04077 14.112 8.49305 14.112 9.05097C14.112 9.60889 14.5643 10.0612 15.1222 10.0612Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Company = {
  component: CompanyComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CompanyComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CompanyComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CompassComponent = function CompassComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M8 16L10 10L16 8L14 14L8 16Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Compass = {
  component: CompassComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CompassComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CompassComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CompressComponent = function CompressComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M19.3559 9.85907H14.1407V4.6441",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20.0001 3.99988L14.1407 9.85927",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4.64401 14.1409H9.85919V19.3558",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4 20.0001L9.85939 14.1407",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4.6441 9.85907H9.85928V4.6441",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4.00012 4L9.85951 9.85939",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M19.356 14.1409H14.1408V19.3558",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20.0001 20.0001L14.1407 14.1407",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Compress = {
  component: CompressComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CompressComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CompressComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Compress2Component = function Compress2Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M19.3559 9.85907H14.1407V4.6441",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20.0001 3.99988L14.1407 9.85927",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4.64444 14.1409H9.8594V19.3558",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4 20.0001L9.85939 14.1407",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M19.3559 9.85907H14.1407V4.6441",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20.0001 3.99988L14.1407 9.85927",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4.64444 14.1409H9.8594V19.3558",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4 20.0001L9.85939 14.1407",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Compress2 = {
  component: Compress2Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Compress2Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Compress2Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CopyComponent = function CopyComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M8.48309 8.37329H14.1976C14.5473 8.37329 14.8828 8.51352 15.1301 8.76317C15.3773 9.01282 15.5162 9.35149 15.5162 9.70456V15.6253",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.48279 8.37329H5.31864C4.96894 8.37329 4.6335 8.51352 4.38622 8.76317C4.13895 9.01282 4.00006 9.35149 4.00006 9.70456V18.6689C4.00006 19.022 4.13895 19.3604 4.38622 19.6101C4.6335 19.8598 4.96894 20 5.31864 20H14.1976C14.5473 20 14.8825 19.8598 15.1298 19.6101C15.377 19.3604 15.5159 19.022 15.5159 18.6689V15.627",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.48309 8.37326V5.33133C8.48333 4.97834 8.62225 4.63998 8.86947 4.39038C9.1167 4.14077 9.45204 4.0003 9.80167 4.00006H18.6815C19.0312 4.00006 19.3666 4.1405 19.6139 4.39016C19.8611 4.63981 20 4.97826 20 5.33133V14.2957C20 14.6488 19.8611 14.9874 19.6139 15.2371C19.3666 15.4867 19.0312 15.627 18.6815 15.627H15.5171",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Component = {
  component: CopyComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CopyComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CopyComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CropComponent = function CropComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M7.92819 7.00611V3",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M21 15.9947H7.92819V9.80219",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M17.0718 16.2187V20",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4 7.00592H17.0709V13.1985",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Crop = {
  component: CropComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CropComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CropComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CrownComponent = function CrownComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12 6L16 12L21 8L19 18H5L3 8L8 12L12 6Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Crown = {
  component: CrownComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CrownComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CrownComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var CutComponent = function CutComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M20.768 4.15405L9.10901 15.9361M13.056 11.7989L9.33002 8.03394M20.768 19.593L15.049 13.814M9.88 17.9161C9.88 19.5398 8.56372 20.8561 6.94 20.8561C5.31628 20.8561 4 19.5398 4 17.9161C4 16.2924 5.31628 14.9761 6.94 14.9761C8.56372 14.9761 9.88 16.2924 9.88 17.9161ZM9.88 5.94C9.88 7.56372 8.56372 8.88 6.94 8.88C5.31628 8.88 4 7.56372 4 5.94C4 4.31628 5.31628 3 6.94 3C8.56372 3 9.88 4.31628 9.88 5.94Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Cut = {
  component: CutComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
CutComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CutComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var DecreaseComponent = function DecreaseComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M5 4H9.07462C9.82658 4 10.5711 4.14811 11.2658 4.43587C11.9604 4.72362 12.5914 5.1454 13.1229 5.67705C13.6544 6.2087 14.0758 6.84013 14.3631 7.53465C14.6504 8.22917 14.7981 8.97327 14.7975 9.7248L14.7874 19",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20 13.7922L14.7893 19L9.57866 13.7922",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Decrease = {
  component: DecreaseComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
DecreaseComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
DecreaseComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Decrease2Component = function Decrease2Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M19.8829 5H15.8409C15.0951 5 14.3566 5.147 13.6676 5.43262C12.9786 5.71824 12.3525 6.13685 11.8253 6.66455C11.2982 7.19225 10.8802 7.81872 10.5953 8.50806C10.3104 9.19739 10.1644 9.936 10.1652 10.6819L10.174 19.8821M5 14.72L10.1689 19.8889L15.3381 14.72",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Decrease2 = {
  component: Decrease2Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Decrease2Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Decrease2Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var DeleteComponent = function DeleteComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M9.162 6.33105H20.855M9.162 6.33105L14.692 6.331V5.765C14.692 5.03168 14.4007 4.32839 13.8822 3.80985C13.3636 3.29131 12.6603 3 11.927 3C11.1937 3 10.4904 3.29131 9.97185 3.80985C9.45331 4.32839 9.162 5.03168 9.162 5.765L9.162 6.33105ZM3 6.33105H6.82M19.218 6.33099V18.872C19.218 19.3982 19.009 19.9028 18.637 20.2748C18.2649 20.6469 17.7601 20.8559 17.2339 20.8559H6.67701C6.15082 20.8559 5.64625 20.6469 5.27417 20.2748C4.9021 19.9028 4.69312 19.3982 4.69312 18.872V6.33099M15.6 10.0191V17.1681M8.312 10.0191V17.1681M11.965 10.0191V17.1681",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Delete = {
  component: DeleteComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
DeleteComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
DeleteComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var DepositsComponent = function DepositsComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M20 8V5H4V8H20ZM20 10H4V19H20V10ZM3 3H21C21.2652 3 21.5196 3.10536 21.7071 3.29289C21.8946 3.48043 22 3.73478 22 4V20C22 20.2652 21.8946 20.5196 21.7071 20.7071C21.5196 20.8946 21.2652 21 21 21H3C2.73478 21 2.48043 20.8946 2.29289 20.7071C2.10536 20.5196 2 20.2652 2 20V4C2 3.73478 2.10536 3.48043 2.29289 3.29289C2.48043 3.10536 2.73478 3 3 3ZM11 14H17V16H6.5L11 11.5V14Z",
    fill: smartColor || fill
  }));
};
var Deposits = {
  component: DepositsComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
DepositsComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
DepositsComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var DetailsComponent = function DetailsComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M4 20.8549V4.98376C4 4.45758 4.20923 3.953 4.5813 3.58093C4.95337 3.20886 5.45794 2.99988 5.98413 2.99988H18.884C19.4102 2.99988 19.9148 3.20886 20.2869 3.58093C20.6589 3.953 20.8682 4.45758 20.8682 4.98376V18.871C20.8682 19.3972 20.6589 19.9017 20.2869 20.2738C19.9148 20.6459 19.4102 20.8549 18.884 20.8549H7.43115",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.7832 15.374H11.3072",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.7832 11.927H15.9552",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.7832 8.48102H16.0812",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Details = {
  component: DetailsComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
DetailsComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
DetailsComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var DialComponent = function DialComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M20.2585 15.7603L18.8804 14.3823C18.692 14.1939 18.4686 14.0444 18.2224 13.9424C17.9763 13.8404 17.7125 13.7881 17.446 13.7881C17.1796 13.7881 16.9158 13.8404 16.6697 13.9424C16.4235 14.0444 16.1998 14.1939 16.0115 14.3823L15.2654 15.1274C14.7898 15.6029 14.1449 15.8701 13.4724 15.8701C12.7999 15.8701 12.155 15.6029 11.6794 15.1274L8.72534 12.1743C8.48977 11.9388 8.30303 11.6593 8.17554 11.3516C8.04804 11.0438 7.98242 10.714 7.98242 10.3809C7.98242 10.0478 8.04804 9.71789 8.17554 9.41016C8.30303 9.10242 8.48977 8.8229 8.72534 8.5874L9.47144 7.84131C9.6599 7.65297 9.80937 7.42924 9.91138 7.18311C10.0134 6.93697 10.0659 6.67318 10.0659 6.40674C10.0659 6.1403 10.0134 5.87651 9.91138 5.63037C9.80937 5.38423 9.6599 5.1605 9.47144 4.97217L8.09351 3.59424C7.90517 3.40577 7.68144 3.2563 7.4353 3.1543C7.18916 3.05229 6.92537 3 6.65894 3C6.3925 3 6.12871 3.05229 5.88257 3.1543C5.63643 3.2563 5.4127 3.40577 5.22437 3.59424V3.59424C3.80001 5.01939 3 6.95189 3 8.9668C3 10.9817 3.80001 12.9142 5.22437 14.3394L9.5144 18.6294C10.9396 20.0537 12.8721 20.854 14.887 20.854C16.9019 20.854 18.8344 20.0537 20.2595 18.6294C20.6398 18.2488 20.8532 17.7328 20.853 17.1948C20.8528 16.6568 20.6391 16.1406 20.2585 15.7603V15.7603Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Dial = {
  component: DialComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
DialComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
DialComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var DialOffComponent = function DialOffComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M19.311 4.5434L3 20.8544",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.44287 11.8364C8.10075 11.3479 7.94172 10.7543 7.99365 10.1602C8.04559 9.56599 8.30536 9.00919 8.72705 8.5874L9.4729 7.84131C9.85328 7.46082 10.0669 6.94475 10.0669 6.40674C10.0669 5.86872 9.85328 5.35315 9.4729 4.97266L8.09497 3.59424C7.90664 3.40577 7.68291 3.2563 7.43677 3.1543C7.19063 3.05229 6.92684 3 6.6604 3C6.39396 3 6.13017 3.05229 5.88403 3.1543C5.6379 3.2563 5.41417 3.40577 5.22583 3.59424V3.59424C3.80148 5.01939 3.00146 6.95189 3.00146 8.9668C3.00146 10.9817 3.80148 12.9142 5.22583 14.3394",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M7.46494 16.5805L9.51498 18.6303C10.9402 20.0549 12.8729 20.8554 14.888 20.8554C16.9032 20.8554 18.8356 20.0549 20.2608 18.6303V18.6303C20.6412 18.2498 20.8551 17.7337 20.8551 17.1957C20.8551 16.6577 20.6412 16.1421 20.2608 15.7616L18.8829 14.3832C18.6946 14.1947 18.4711 14.0453 18.2249 13.9433C17.9788 13.8413 17.7148 13.789 17.4483 13.789C17.1819 13.789 16.9181 13.8413 16.672 13.9433C16.4258 14.0453 16.2023 14.1947 16.014 14.3832L15.2679 15.1283C14.7923 15.6038 14.1474 15.871 13.4749 15.871C12.8025 15.871 12.1576 15.6038 11.682 15.1283L10.2608 13.7074",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var DialOff = {
  component: DialOffComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
DialOffComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
DialOffComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var DisabledComponent = function DisabledComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M5.621 18.235L18.235 5.621M20.856 11.928C20.856 16.8588 16.8588 20.856 11.928 20.856C6.9972 20.856 3 16.8588 3 11.928C3 6.9972 6.9972 3 11.928 3C16.8588 3 20.856 6.9972 20.856 11.928Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Disabled = {
  component: DisabledComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
DisabledComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
DisabledComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var DislikeComponent = function DislikeComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    _ref.fillRule;
    _ref.clipRule;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M13.0084 4.58333V13.05C13.0084 13.3833 12.9084 13.7083 12.7251 13.9833L10.4501 17.3667C10.0918 17.9083 9.2001 18.2917 8.44176 18.0083C7.62509 17.7333 7.08343 16.8167 7.25843 16L7.69176 13.275C7.72509 13.025 7.65843 12.8 7.51676 12.625C7.3751 12.4667 7.16676 12.3667 6.94176 12.3667H3.51676C2.85843 12.3667 2.29176 12.1 1.95843 11.6333C1.64176 11.1833 1.58343 10.6 1.79176 10.0083L3.84176 3.76666C4.10009 2.73333 5.2251 1.89166 6.34176 1.89166H9.59176C10.1501 1.89166 10.9334 2.08333 11.2918 2.44166L12.3584 3.26666C12.7668 3.58333 13.0084 4.06666 13.0084 4.58333Z",
    fill: smartColor || fill
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15.6582 14.675H16.5166C17.8082 14.675 18.3332 14.175 18.3332 12.9416V4.56665C18.3332 3.33331 17.8082 2.83331 16.5166 2.83331H15.6582C14.3666 2.83331 13.8416 3.33331 13.8416 4.56665V12.95C13.8416 14.175 14.3666 14.675 15.6582 14.675Z",
    fill: smartColor || fill
  }));
};
var Dislike = {
  component: DislikeComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
DislikeComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string,
  fillRule: propTypes.exports.string,
  clipRule: propTypes.exports.string
};
DislikeComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round",
  fillRule: "evenodd",
  clipRule: "evenodd"
};

var DocumentComponent = function DocumentComponent(_ref) {
  var fill = _ref.fill,
    stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin,
    fillRule = _ref.fillRule,
    clipRule = _ref.clipRule;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    fillRule: fillRule,
    clipRule: clipRule,
    fill: smartColor || fill,
    d: "M5.86896 3.86273C6.11025 3.63398 6.44559 3.49895 6.80321 3.4989H6.80341L12.3982 3.50043V7.001C12.3982 7.6001 12.6496 8.16577 13.0828 8.57645C13.5145 8.98572 14.0921 9.20955 14.6868 9.20955H18.4968V18.3065C18.4968 18.6101 18.37 18.9097 18.13 19.1372C17.8887 19.366 17.5533 19.5011 17.1956 19.5011H6.80341C6.44572 19.5011 6.1103 19.366 5.86896 19.1372C5.62898 18.9097 5.50219 18.6101 5.50219 18.3065V4.69348C5.50219 4.38992 5.62898 4.09024 5.86896 3.86273ZM19.9968 8.424V7.72043C19.9968 7.50942 19.9079 7.30818 19.7519 7.16606L14.298 2.19644C14.1599 2.07063 13.9799 2.00087 13.7931 2.00082L6.80362 1.9989H6.80341C6.073 1.9989 5.36503 2.27355 4.83697 2.77415C4.30755 3.27605 4.00219 3.96551 4.00219 4.69348V18.3065C4.00219 19.0345 4.30755 19.7239 4.83697 20.2258C5.36503 20.7264 6.073 21.0011 6.80341 21.0011H17.1956C17.926 21.0011 18.634 20.7264 19.162 20.2258C19.6914 19.7239 19.9968 19.0345 19.9968 18.3065V8.4951C19.9973 8.48332 19.9976 8.47147 19.9976 8.45955C19.9976 8.44763 19.9973 8.43578 19.9968 8.424ZM18.1213 7.70955H14.6868C14.4653 7.70955 14.2601 7.62565 14.1148 7.48787C13.971 7.35149 13.8982 7.17555 13.8982 7.001V3.86149L18.1213 7.70955Z"
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M7.61208 16.0422H16.1979",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M7.63608 11.7598H16.2219",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M7.61208 7.47729H10.0129",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Document = {
  component: DocumentComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
DocumentComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string,
  fillRule: propTypes.exports.string,
  clipRule: propTypes.exports.string
};
DocumentComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round",
  fillRule: "evenodd",
  clipRule: "evenodd"
};

var DoubleCheckComponent = function DoubleCheckComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M7.6041 12.417L12.0211 16.834L20.8551 8M9.71899 14.532L16.251 8M3 12.417L7.417 16.834",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var DoubleCheck = {
  component: DoubleCheckComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
DoubleCheckComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
DoubleCheckComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var DownloadComponent = function DownloadComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M5.65325 13.3083L4.46296 14.6411C4.16465 14.9764 4.0002 15.4054 4 15.8492V18.493C4 18.8926 4.16283 19.276 4.45271 19.5586C4.74259 19.8412 5.13578 20 5.54574 20H19.4543C19.8642 20 20.2574 19.8412 20.5473 19.5586C20.8372 19.276 21 18.8926 21 18.493V15.8492C21.0001 15.4053 20.8358 14.9763 20.5373 14.6411L19.347 13.3083M7.98002 9.32613L12.498 13.731L17.0172 9.32613M12.4982 3V13.5083",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Download = {
  component: DownloadComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
DownloadComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
DownloadComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var DropComponent = function DropComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12.0025 20.854C12.9383 20.8526 13.8644 20.6637 14.7261 20.2988C15.5879 19.934 16.368 19.4005 17.0203 18.7295C17.6727 18.0585 18.184 17.2638 18.5245 16.3921C18.8649 15.5204 19.0275 14.5893 19.0025 13.6538C18.7385 7.29081 12.0025 3 12.0025 3C9.2862 4.82059 7.12041 7.34943 5.74042 10.314C5.63242 10.5813 5.53447 10.8545 5.44647 11.1338M12.0025 20.8552C11.0667 20.8537 10.1408 20.6645 9.27908 20.2996C8.41738 19.9347 7.63744 19.4012 6.98513 18.7302C6.33282 18.0593 5.82122 17.2645 5.48074 16.3928C5.14026 15.5212 4.97765 14.5905 5.00247 13.655",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Drop = {
  component: DropComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
DropComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
DropComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var EditComponent = function EditComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M4.30656 14.913L3 20.2908L8.37781 18.9842L19.452 7.90982C19.9909 7.37006 20.2938 6.63862 20.2938 5.87584C20.2938 5.11307 19.9909 4.38139 19.452 3.84164V3.84164C18.9122 3.30266 18.1808 3 17.418 3C16.6552 3 15.9235 3.30266 15.3838 3.84164L4.30656 14.913Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15.1781 6.46466L17.3953 8.68184",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M3.49881 18.2422L5.04377 19.794",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M10.1871 20.2899H20.2947",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Edit = {
  component: EditComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
EditComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
EditComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Edit2Component = function Edit2Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M10.3262 11.1715L9.53613 14.4085L12.7892 13.6226L19.4903 6.95737C19.8167 6.63235 20.0001 6.19174 20.0001 5.73228C20.0001 5.27282 19.8167 4.83221 19.4903 4.50719V4.50719C19.1635 4.18243 18.7206 4 18.2587 4C17.7969 4 17.354 4.18243 17.0272 4.50719L10.3262 11.1715Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M16.9046 6.0863L18.2461 7.42078",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M18.695 11.4376V18.2221C18.695 18.6937 18.5067 19.1459 18.1715 19.4793C17.8363 19.8128 17.3817 20.0003 16.9076 20.0003H5.78754C5.31349 20.0003 4.85869 19.8128 4.52348 19.4793C4.18828 19.1459 4 18.6937 4 18.2221V6.71447C4 6.36078 4.14121 6.02174 4.39261 5.77164C4.64402 5.52155 4.98506 5.38107 5.3406 5.38107L12.2526 5.33075",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Edit2 = {
  component: Edit2Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Edit2Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Edit2Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ErrorComponent = function ErrorComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7.89749 2.01923C7.69858 2.01923 7.50781 2.09825 7.36716 2.2389L2.23896 7.36711C2.0983 7.50776 2.01929 7.69852 2.01929 7.89744V16.1026C2.01929 16.3015 2.0983 16.4922 2.23896 16.6329L7.36716 21.7611C7.50781 21.9018 7.69858 21.9808 7.89749 21.9808H16.1026C16.3015 21.9808 16.4923 21.9018 16.6329 21.7611L21.7612 16.6329C21.9018 16.4922 21.9808 16.3015 21.9808 16.1026V7.89744C21.9808 7.69852 21.9018 7.50776 21.7612 7.36711L16.6329 2.2389C16.4923 2.09825 16.3015 2.01923 16.1026 2.01923H7.89749ZM12.7501 7.89743C12.7501 7.48322 12.4143 7.14743 12.0001 7.14743C11.5858 7.14743 11.2501 7.48322 11.2501 7.89743V13.0256C11.2501 13.4399 11.5858 13.7756 12.0001 13.7756C12.4143 13.7756 12.7501 13.4399 12.7501 13.0256V7.89743ZM13.0257 16.1026C13.0257 16.669 12.5665 17.1282 12.0001 17.1282C11.4336 17.1282 10.9744 16.669 10.9744 16.1026C10.9744 15.5361 11.4336 15.0769 12.0001 15.0769C12.5665 15.0769 13.0257 15.5361 13.0257 16.1026Z",
    fill: smartColor || fill
  }));
};
ErrorComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ErrorComponent.defaultProps = {
  fill: "#212934"
};
var Error$1 = {
  component: ErrorComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};

var ErrorCircleComponent = function ErrorCircleComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M7.78429 12H16.2162",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var ErrorCircle = {
  component: ErrorCircleComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ErrorCircleComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ErrorCircleComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ExitFullScreenComponent = function ExitFullScreenComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M7.92025 21V16.0918H3",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M7.92025 3V7.90819H3",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M16.0797 21V16.0918H20.9999",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M16.0799 3V7.90819H21.0001",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var ExitFullScreen = {
  component: ExitFullScreenComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ExitFullScreenComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ExitFullScreenComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ExpandComponent = function ExpandComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M14.7854 4.00024H20.0004V9.21516",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M14.1409 9.85934L20.0002 4",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.21518 20.0002H4V14.7849",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.8595 14.1407L4.00011 20.0001",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.21535 4.00031H4.00017V9.21522",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.85961 9.85947L4.00021 4.00012",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M14.7854 20.0002H20.0004V14.7849",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M14.1409 14.1407L20.0002 20.0001",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Expand = {
  component: ExpandComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ExpandComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ExpandComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Expand2Component = function Expand2Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M15.1317 3.00024H20.9987V8.86695",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M14.4082 9.59168L20.9999 3",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.86996 21.0001H3.00296V15.1329",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.59173 14.4082L3 20.9999",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Expand2 = {
  component: Expand2Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Expand2Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Expand2Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ExternalLinkComponent = function ExternalLinkComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M14.1676 4.00171H20V10.4174M19.9964 14.7V18.6662C19.9964 19.0198 19.856 19.3587 19.606 19.6087C19.356 19.8587 19.0169 19.9994 18.6633 19.9994H5.33315C4.97958 19.9994 4.64044 19.8587 4.39043 19.6087C4.14042 19.3587 4 19.0198 4 18.6662V5.33586C4 4.98229 4.14042 4.64337 4.39043 4.39336C4.64044 4.14335 4.97958 4.00293 5.33315 4.00293H10.1657M11.9987 11.9987L19.9973 4",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var ExternalLink = {
  component: ExternalLinkComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ExternalLinkComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ExternalLinkComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var EyeComponent = function EyeComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M20.8589 11.8552C20.103 13.5947 18.8555 15.0753 17.2695 16.1154C15.6835 17.1555 13.828 17.7097 11.9314 17.7097C10.0348 17.7097 8.17952 17.1555 6.59351 16.1154C5.00749 15.0753 3.75981 13.5947 3.00391 11.8552M12.928 6.0542C12.5959 6.01807 12.262 5.99984 11.928 6C10.0432 6.05179 8.20999 6.62714 6.6333 7.66113C5.05662 8.69513 3.79864 10.147 3 11.855M20.8599 11.8549C19.6781 9.44015 17.6339 7.55638 15.1309 6.57516M14.422 11.8551C14.422 13.2303 13.3071 14.3451 11.932 14.3451C10.5568 14.3451 9.44196 13.2303 9.44196 11.8551C9.44196 10.4799 10.5568 9.36511 11.932 9.36511C13.3071 9.36511 14.422 10.4799 14.422 11.8551Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Eye = {
  component: EyeComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
EyeComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
EyeComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var EyeOffComponent = function EyeOffComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M5.15613 14.8959C4.28466 14.0271 3.5569 13.0255 3.00012 11.9281C3.79859 10.2202 5.05618 8.76807 6.63269 7.73407C8.2092 6.70007 10.0425 6.1248 11.9271 6.07294C12.6234 6.07344 13.3171 6.1542 13.995 6.31317M16.543 7.31195C18.3982 8.39918 19.8964 10.0033 20.8549 11.9281C20.0562 13.636 18.7983 15.0881 17.2216 16.1219C15.6449 17.1558 13.8116 17.7305 11.9269 17.7821C10.3067 17.7796 8.71552 17.3522 7.31195 16.5428L3 20.855M16.543 7.31195L20.855 3M16.543 7.31195L13.688 10.1668M10.1671 13.6878C10.397 13.9247 10.6716 14.1137 10.9752 14.2435C11.2787 14.3732 11.605 14.4412 11.9351 14.4437C12.2652 14.4461 12.5926 14.3828 12.898 14.2576C13.2035 14.1324 13.481 13.9481 13.7144 13.7147C13.9478 13.4812 14.1324 13.2037 14.2576 12.8983C14.3828 12.5928 14.4461 12.2655 14.4437 11.9354C14.4412 11.6053 14.3732 11.279 14.2435 10.9754C14.1137 10.6718 13.9249 10.3967 13.688 10.1668M13.688 10.1668L7.31201 16.544",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var EyeOff = {
  component: EyeOffComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
EyeOffComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
EyeOffComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var FileComponent = function FileComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    var fillRule = _ref.fillRule,
    clipRule = _ref.clipRule;
    _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    fillRule: fillRule,
    clipRule: clipRule,
    fill: smartColor || fill,
    d: "M5.86913 3.86269C6.11037 3.63396 6.44561 3.49895 6.80309 3.4989H6.80329L12.3994 3.50043V7.001C12.3994 7.60038 12.6513 8.16594 13.0842 8.5764C13.5157 8.9856 14.093 9.20955 14.6877 9.20955H18.4935V18.3065C18.4935 18.6101 18.3668 18.9098 18.1268 19.1373C17.8855 19.3661 17.5502 19.5011 17.1927 19.5011H6.80329C6.44573 19.5011 6.11042 19.3661 5.86913 19.1373C5.62903 18.9096 5.50217 18.6099 5.50217 18.3065V4.69348C5.50217 4.39012 5.62903 4.09035 5.86913 3.86269ZM19.9935 8.37932V7.72043C19.9935 7.50944 19.9047 7.30822 19.7487 7.1661L14.2957 2.19649C14.1576 2.07064 13.9776 2.00087 13.7907 2.00082L6.8035 1.9989H6.80329C6.07294 1.9989 5.36504 2.27357 4.83706 2.7742C4.30789 3.27594 4.00217 3.96531 4.00217 4.69348V18.3065C4.00217 19.0347 4.30789 19.724 4.83706 20.2258C5.36504 20.7264 6.07294 21.0011 6.80329 21.0011H17.1927C17.923 21.0011 18.6309 20.7264 19.1589 20.2258C19.6882 19.7239 19.9935 19.0344 19.9935 18.3065V8.53978C19.9963 8.51342 19.9978 8.48666 19.9978 8.45955C19.9978 8.43245 19.9963 8.40568 19.9935 8.37932ZM18.1182 7.70955H14.6877C14.4665 7.70955 14.2616 7.62576 14.1162 7.48791C13.9722 7.35132 13.8994 7.17527 13.8994 7.001V3.8648L18.1182 7.70955Z"
  }));
};
var File = {
  component: FileComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
FileComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string,
  fillRule: propTypes.exports.string,
  clipRule: propTypes.exports.string
};
FileComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round",
  fillRule: "evenodd",
  clipRule: "evenodd"
};

var FilterComponent = function FilterComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M14 8C15.1046 8 16 7.10457 16 6C16 4.89543 15.1046 4 14 4C12.8954 4 12 4.89543 12 6C12 7.10457 12.8954 8 14 8Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4 6H12",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M16 6H20",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8 14C9.10457 14 10 13.1046 10 12C10 10.8954 9.10457 10 8 10C6.89543 10 6 10.8954 6 12C6 13.1046 6.89543 14 8 14Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4 12H6",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M10 12H20",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M17 20C18.1046 20 19 19.1046 19 18C19 16.8954 18.1046 16 17 16C15.8954 16 15 16.8954 15 18C15 19.1046 15.8954 20 17 20Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4 18H15",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M19 18H20",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Filter = {
  component: FilterComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
FilterComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
FilterComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var FlagComponent = function FlagComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M5 20.856V5.97607C5 5.18679 5.31347 4.42969 5.87158 3.87158C6.42969 3.31347 7.18655 3 7.97583 3H18.614L16.2349 8.01514L18.614 13.0308H8.72388",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Flag = {
  component: FlagComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
FlagComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
FlagComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var FlameComponent = function FlameComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M13.4128 3C11.853 3.90947 10.6799 5.35839 10.1147 7.07324C9.54958 8.78809 9.63156 10.6504 10.345 12.3091C8.95144 11.5933 7.84434 10.4222 7.20776 8.99072C7.11976 8.79072 7.04192 8.59086 6.97192 8.38086C5.92442 9.72763 5.26898 11.3378 5.07788 13.0332C5.02827 13.3576 5.00232 13.6851 5 14.0132C5 14.0422 5 14.0711 5 14.0991C5.0221 15.898 5.752 17.6155 7.03174 18.8799C8.31148 20.1443 10.0379 20.8536 11.8369 20.854M11.8409 20.854C13.6406 20.8557 15.3681 20.1472 16.6483 18.8823C17.9285 17.6175 18.6578 15.8987 18.6779 14.0991C18.6779 14.0701 18.6779 14.0422 18.6779 14.0132C18.672 13.6852 18.646 13.358 18.6 13.0332C18.589 12.9392 18.5738 12.846 18.5548 12.751C18.4144 12.0542 18.1318 11.3941 17.7247 10.8115C17.3176 10.2289 16.7948 9.73664 16.1888 9.36523C15.1342 8.71181 14.3036 7.75265 13.807 6.61572C13.3104 5.4788 13.1714 4.21772 13.4088 3",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Flame = {
  component: FlameComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
FlameComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
FlameComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var FlashComponent = function FlashComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M15.353 10.292H11.928V3L3 13.564H11.928V20.856L20.856 10.292H15.356",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Flash = {
  component: FlashComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
FlashComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
FlashComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var FolderComponent = function FolderComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M3 11.327V6.98401C3 6.45782 3.20898 5.95313 3.58105 5.58105C3.95313 5.20898 4.45794 5 4.98413 5H9.98999C10.5054 5.00017 11.0007 5.20057 11.3711 5.55896L12.5591 6.70996C12.929 7.06847 13.4238 7.26903 13.939 7.26904H18.8721C19.3983 7.26904 19.9028 7.47803 20.2749 7.8501C20.647 8.22217 20.856 8.72686 20.856 9.25305V17.453C20.856 17.9792 20.647 18.4839 20.2749 18.856C19.9028 19.228 19.3983 19.437 18.8721 19.437H4.98511C4.45892 19.437 3.9541 19.228 3.58203 18.856C3.20996 18.4839 3.00098 17.9792 3.00098 17.453V14.067",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Folder = {
  component: FolderComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
FolderComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
FolderComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ForwardComponent = function ForwardComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M8 15.8603L4.75 18.25V5.75L8 8.13971",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M19.25 12L10.75 5.75V18.25L19.25 12Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Forward = {
  component: ForwardComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ForwardComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ForwardComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var FunnelComponent = function FunnelComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M5 3V6.19387C5.00002 6.46603 5.05342 6.73548 5.15697 6.98545C5.26051 7.23542 5.41211 7.46054 5.6023 7.64756L9.59847 11.5744C9.78863 11.7613 9.94025 11.9867 10.0438 12.2365C10.1473 12.4863 10.2007 12.7551 10.2008 13.0271V21L14.7673 19.1097V13.0355C14.7674 12.7623 14.8213 12.4917 14.9257 12.241C15.0301 11.9902 15.1828 11.7644 15.3743 11.5774L19.3939 7.6515C19.5854 7.46444 19.7381 7.23864 19.8423 6.98791C19.9466 6.73718 20.0001 6.46703 20 6.19387V3.00394H8.06146",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Funnel = {
  component: FunnelComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
FunnelComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
FunnelComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var FullScreenComponent = function FullScreenComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M3 16.1296V21.0001H7.88364",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M3 7.87041V3H7.88364",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M21 16.1296V21.0001H16.1163",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20.9999 7.87041V3H16.1163",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var FullScreen = {
  component: FullScreenComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
FullScreenComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
FullScreenComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var GemComponent = function GemComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M3.43091 6.82202L2 9.21509L12.116 20.8552C12.146 20.7642 15.0828 9.21631 15.0828 9.21631L13.1219 3.00024M4.79999 4.53223L5.716 3H18.5159L22.2329 9.21631L12.117 20.856M12.4969 9.21606H22.0739M9.41089 9.21606H9.99689",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Gem = {
  component: GemComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
GemComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
GemComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var GiftComponent = function GiftComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M19.8478 7.18091H4.15221C3.51586 7.18091 3 7.68827 3 8.31414V10.3447C3 10.9706 3.51586 11.4779 4.15221 11.4779H19.8478C20.4841 11.4779 21 10.9706 21 10.3447V8.31414C21 7.68827 20.4841 7.18091 19.8478 7.18091Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M19.3984 13.8162V18.133C19.3984 18.6547 19.1876 19.1552 18.8126 19.5241C18.4375 19.893 17.9288 20.1 17.3984 20.1H6.60485C6.07442 20.1 5.56576 19.893 5.19069 19.5241C4.81561 19.1552 4.60488 18.6547 4.60488 18.133V11.4779",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12 6.34985C12 5.70014 12.2624 5.07704 12.7295 4.61762C13.1966 4.15821 13.8301 3.90015 14.4907 3.90015V3.90015C15.1513 3.90015 15.7849 4.15821 16.252 4.61762C16.7191 5.07704 16.9817 5.70014 16.9817 6.34985",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12 11.7782V20.1001",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M7.01748 6.34985C7.01748 5.70014 7.27986 5.07704 7.74697 4.61762C8.21409 4.15821 8.84762 3.90015 9.50821 3.90015V3.90015C10.1688 3.90015 10.8023 4.15821 11.2694 4.61762C11.7366 5.07704 11.9989 5.70014 11.9989 6.34985",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Gift = {
  component: GiftComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
GiftComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
GiftComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var GitlabComponent = function GitlabComponent(_ref) {
  var fill = _ref.fill,
    stroke = _ref.stroke,
    smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    var fillRule = _ref.fillRule,
    clipRule = _ref.clipRule;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("mask", {
    id: "path-1-inside-1_717_2965",
    fill: "white"
  }, /*#__PURE__*/React__default.createElement("path", {
    fillRule: fillRule,
    clipRule: clipRule,
    d: "M22.6112 8.49003L23.9556 12.6125C23.9601 12.6265 23.9642 12.6406 23.968 12.6548C24.0145 12.8256 24.0103 13.0066 23.9554 13.1757C23.8959 13.359 23.7799 13.5188 23.6239 13.6324L20.4785 15.9112L11.9993 22.0597L11.9937 22.0557L11.9968 22.0597L0.376048 13.6324C0.220079 13.5188 0.104068 13.359 0.0445737 13.1757C-0.0149204 12.9924 -0.0148564 12.795 0.044757 12.6117L1.38982 8.48926L1.39058 8.49023L1.39227 8.48506L4.04757 0.313164C4.07819 0.22194 4.13678 0.142626 4.21504 0.0864302C4.29331 0.0302348 4.38729 0 4.48372 0C4.58014 0 4.67413 0.0302348 4.7524 0.0864302C4.83066 0.142626 4.88925 0.22194 4.91987 0.313164L6.12994 4.03029L7.58286 8.48506H7.58323L7.58301 8.48438H16.4194H16.4198H16.42L19.0786 0.313164C19.1093 0.22194 19.1678 0.142626 19.2461 0.0864302C19.3244 0.0302348 19.4184 0 19.5148 0C19.6112 0 19.7052 0.0302348 19.7835 0.0864302C19.8617 0.142626 19.9203 0.22194 19.9509 0.313164L20.4005 1.69508L22.6107 8.48438H22.6115L22.611 8.48512L22.6123 8.48921H22.6109L22.6112 8.49003Z"
  })), /*#__PURE__*/React__default.createElement("path", {
    d: "M23.9556 12.6125L25.2884 12.184L25.2866 12.1785L23.9556 12.6125ZM22.6112 8.49003L21.2797 8.92247L21.2802 8.92408L22.6112 8.49003ZM23.968 12.6548L22.6161 13.0184L22.617 13.0219L23.968 12.6548ZM23.9554 13.1757L25.287 13.6079L25.287 13.6079L23.9554 13.1757ZM23.6239 13.6324L24.4453 14.7662L24.4482 14.7641L23.6239 13.6324ZM20.4785 15.9112L19.6571 14.7775L19.6566 14.7778L20.4785 15.9112ZM11.9993 22.0597L11.1773 23.1931L11.9992 23.7891L12.8211 23.1931L11.9993 22.0597ZM11.9937 22.0557L12.8157 20.9224L10.8906 22.9178L11.9937 22.0557ZM11.9968 22.0597L11.1749 23.193L13.0999 21.1976L11.9968 22.0597ZM0.376048 13.6324L-0.448219 14.7641L-0.445847 14.7658L0.376048 13.6324ZM0.0445737 13.1757L1.37619 12.7434V12.7434L0.0445737 13.1757ZM0.044757 12.6117L-1.28619 12.1775L-1.28658 12.1787L0.044757 12.6117ZM1.38982 8.48926L2.49308 7.62738L0.874429 5.55543L0.0588775 8.055L1.38982 8.48926ZM1.39058 8.49023L0.287332 9.35211L1.90672 11.425L2.72169 8.92398L1.39058 8.49023ZM1.39227 8.48506L2.72338 8.91881L2.72374 8.9177L1.39227 8.48506ZM4.04757 0.313164L2.7203 -0.13242L2.71609 -0.119473L4.04757 0.313164ZM4.21504 0.0864302L5.03158 1.22365L5.03158 1.22365L4.21504 0.0864302ZM4.7524 0.0864302L5.56894 -1.05079L5.56893 -1.05079L4.7524 0.0864302ZM4.91987 0.313164L6.25116 -0.120224L6.24708 -0.132393L4.91987 0.313164ZM6.12994 4.03029L4.79871 4.46366L4.79895 4.4644L6.12994 4.03029ZM7.58286 8.48506L6.25186 8.91916L6.56689 9.88506H7.58286V8.48506ZM7.58323 8.48506V9.88506H9.51114L8.9145 8.0518L7.58323 8.48506ZM7.58301 8.48438V7.08437H5.6551L6.25174 8.91764L7.58301 8.48438ZM16.42 8.48438V9.88437H17.4367L17.7513 8.91754L16.42 8.48438ZM19.0786 0.313164L17.7514 -0.132431L17.7473 -0.119996L19.0786 0.313164ZM19.2461 0.0864302L20.0626 1.22365L20.0627 1.22364L19.2461 0.0864302ZM19.7835 0.0864302L18.9669 1.22364L19.7835 0.0864302ZM19.9509 0.313164L21.2823 -0.119987L21.2781 -0.132387L19.9509 0.313164ZM20.4005 1.69508L19.0692 2.12821L19.0693 2.12845L20.4005 1.69508ZM22.6107 8.48438L21.2795 8.91775L21.5942 9.88437H22.6107V8.48438ZM22.6115 8.48438L23.714 9.34721L25.485 7.08437H22.6115V8.48438ZM22.611 8.48512L21.5085 7.62229L21.0489 8.20954L21.2798 8.91861L22.611 8.48512ZM22.6123 8.48921V9.88921H24.5405L23.9435 8.05572L22.6123 8.48921ZM22.6109 8.48921V7.08921H20.6843L21.2794 8.92165L22.6109 8.48921ZM25.2866 12.1785L23.9422 8.05598L21.2802 8.92408L22.6246 13.0466L25.2866 12.1785ZM25.32 12.2911C25.3103 12.2552 25.2998 12.2195 25.2884 12.184L22.6228 13.041C22.6203 13.0335 22.6181 13.026 22.6161 13.0184L25.32 12.2911ZM25.287 13.6079C25.426 13.1795 25.4367 12.7207 25.3191 12.2877L22.617 13.0219C22.5922 12.9305 22.5945 12.8338 22.6238 12.7435L25.287 13.6079ZM24.4482 14.7641C24.8424 14.4769 25.1362 14.0724 25.287 13.6079L22.6238 12.7434C22.6556 12.6456 22.7173 12.5608 22.7997 12.5008L24.4482 14.7641ZM21.2998 17.045L24.4453 14.7662L22.8026 12.4987L19.6571 14.7775L21.2998 17.045ZM12.8211 23.1931L21.3003 17.0446L19.6566 14.7778L11.1774 20.9263L12.8211 23.1931ZM11.1718 23.1891L11.1773 23.1931L12.8212 20.9264L12.8157 20.9224L11.1718 23.1891ZM13.0999 21.1976L13.0968 21.1936L10.8906 22.9178L10.8937 22.9218L13.0999 21.1976ZM-0.445847 14.7658L11.1749 23.193L12.8187 20.9263L1.19794 12.4991L-0.445847 14.7658ZM-1.28704 13.6079C-1.13628 14.0723 -0.842491 14.4769 -0.448217 14.7641L1.20031 12.5008C1.28265 12.5608 1.34442 12.6456 1.37619 12.7434L-1.28704 13.6079ZM-1.28658 12.1787C-1.43765 12.6431 -1.43781 13.1433 -1.28704 13.6079L1.37619 12.7434C1.40797 12.8414 1.40794 12.9469 1.37609 13.0448L-1.28658 12.1787ZM0.0588775 8.055L-1.28619 12.1775L1.3757 13.046L2.72077 8.92351L0.0588775 8.055ZM2.49383 7.62835L2.49308 7.62738L0.286574 9.35114L0.287332 9.35211L2.49383 7.62835ZM0.0611548 8.05131L0.0594711 8.05647L2.72169 8.92398L2.72338 8.91881L0.0611548 8.05131ZM2.71609 -0.119473L0.0607915 8.05242L2.72374 8.9177L5.37904 0.745802L2.71609 -0.119473ZM3.3985 -1.05079C3.08201 -0.823543 2.84458 -0.50241 2.72036 -0.132399L5.37477 0.758728C5.3118 0.946291 5.19154 1.10879 5.03158 1.22365L3.3985 -1.05079ZM4.48372 -1.4C4.09456 -1.4 3.71494 -1.27799 3.3985 -1.05079L5.03158 1.22365C4.87167 1.33846 4.68003 1.4 4.48372 1.4V-1.4ZM5.56893 -1.05079C5.25249 -1.278 4.87287 -1.4 4.48372 -1.4V1.4C4.28741 1.4 4.09577 1.33847 3.93586 1.22365L5.56893 -1.05079ZM6.24708 -0.132393C6.12286 -0.502412 5.88542 -0.823544 5.56894 -1.05079L3.93585 1.22365C3.7759 1.1088 3.65563 0.946293 3.59266 0.758722L6.24708 -0.132393ZM7.46118 3.59692L6.25111 -0.120206L3.58863 0.746535L4.79871 4.46366L7.46118 3.59692ZM8.91386 8.05096L7.46094 3.59619L4.79895 4.4644L6.25186 8.91916L8.91386 8.05096ZM7.58323 7.08506H7.58286V9.88506H7.58323V7.08506ZM6.25174 8.91764L6.25196 8.91833L8.9145 8.0518L8.91428 8.05111L6.25174 8.91764ZM16.4194 7.08437H7.58301V9.88437H16.4194V7.08437ZM16.4198 7.08437H16.4194V9.88437H16.4198V7.08437ZM16.42 7.08437H16.4198V9.88437H16.42V7.08437ZM17.7473 -0.119996L15.0887 8.05121L17.7513 8.91754L20.4099 0.746325L17.7473 -0.119996ZM18.4296 -1.05079C18.1131 -0.823541 17.8756 -0.502406 17.7514 -0.132411L20.4058 0.75874C20.3429 0.946287 20.2226 1.10879 20.0626 1.22365L18.4296 -1.05079ZM19.5148 -1.4C19.1256 -1.4 18.746 -1.278 18.4296 -1.05078L20.0627 1.22364C19.9027 1.33847 19.7111 1.4 19.5148 1.4V-1.4ZM20.6 -1.05078C20.2836 -1.278 19.9039 -1.4 19.5148 -1.4V1.4C19.3185 1.4 19.1268 1.33847 18.9669 1.22364L20.6 -1.05078ZM21.2781 -0.132387C21.1539 -0.502414 20.9165 -0.823545 20.6 -1.05078L18.9669 1.22364C18.807 1.1088 18.6867 0.946295 18.6237 0.758715L21.2781 -0.132387ZM21.7318 1.26195L21.2822 -0.119968L18.6196 0.746297L19.0692 2.12821L21.7318 1.26195ZM19.0693 2.12845L21.2795 8.91775L23.942 8.051L21.7318 1.26171L19.0693 2.12845ZM22.6115 7.08437H22.6107V9.88437H22.6115V7.08437ZM23.7135 9.34795L23.714 9.34721L21.509 7.62154L21.5085 7.62229L23.7135 9.34795ZM21.2798 8.91861L21.2811 8.9227L23.9435 8.05572L23.9422 8.05163L21.2798 8.91861ZM22.6123 7.08921H22.6109V9.88921H22.6123V7.08921ZM23.9428 8.05759L23.9425 8.05677L21.2794 8.92165L21.2797 8.92246L23.9428 8.05759Z",
    fill: smartColor || fill || stroke,
    mask: "url(#path-1-inside-1_717_2965)"
  }));
};
var Gitlab = {
  component: GitlabComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
GitlabComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string,
  fillRule: propTypes.exports.string,
  clipRule: propTypes.exports.string
};
GitlabComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round",
  fillRule: "evenodd",
  clipRule: "evenodd"
};

var _excluded$O = ["fill", "stroke", "smartColor", "strokeWidth", "strokeLineCap", "strokeLineJoin", "fillRule", "clipRule"];
var GlobeComponent = function GlobeComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    var fillRule = _ref.fillRule,
    clipRule = _ref.clipRule;
    _objectWithoutProperties(_ref, _excluded$O);
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    fillRule: fillRule,
    clipRule: clipRule,
    fill: smartColor || fill,
    d: "M4.73565 11.1562H7.81049C7.97274 8.82285 8.78426 6.9305 9.58899 5.58928C9.72198 5.36763 9.85504 5.16056 9.98535 4.96855C7.18785 5.76859 5.0761 8.19301 4.73565 11.1562ZM7.8105 12.8438H4.73565C5.0761 15.807 7.1879 18.2315 9.98545 19.0315C9.85512 18.8394 9.72201 18.6323 9.58899 18.4106C8.78427 17.0694 7.97276 15.1771 7.8105 12.8438ZM9.50279 12.8438H14.4972C14.3391 14.7962 13.6548 16.391 12.964 17.5424C12.6195 18.1166 12.2756 18.5764 12 18.91C11.7244 18.5764 11.3805 18.1166 11.036 17.5424C10.3452 16.391 9.66089 14.7962 9.50279 12.8438ZM14.4973 11.1562H9.50278C9.66087 9.20377 10.3452 7.60887 11.036 6.45748C11.3805 5.88327 11.7244 5.42342 12 5.08991C12.2756 5.42342 12.6195 5.88327 12.964 6.45748C13.6548 7.60887 14.3391 9.20377 14.4973 11.1562ZM16.1895 12.8438C16.0273 15.1771 15.2157 17.0694 14.411 18.4106C14.278 18.6323 14.1449 18.8394 14.0145 19.0315C16.8121 18.2315 18.9239 15.807 19.2644 12.8438H16.1895ZM19.2644 11.1562H16.1895C16.0273 8.82285 15.2157 6.9305 14.411 5.58928C14.278 5.36763 14.1449 5.16056 14.0147 4.96854C16.8122 5.76858 18.9239 8.19301 19.2644 11.1562ZM12 3C7.02943 3 3 7.02943 3 12C3 16.9706 7.02943 21 12 21C16.9706 21 21 16.9706 21 12C21 7.02943 16.9706 3 12 3Z"
  }));
};
var Globe = {
  component: GlobeComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
GlobeComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string,
  fillRule: propTypes.exports.string,
  clipRule: propTypes.exports.string
};
GlobeComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round",
  fillRule: "evenodd",
  clipRule: "evenodd"
};

var GridComponent = function GridComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M9.35081 3H3V9.35081H9.35081V3Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.35081 14.6492H3V21H9.35081V14.6492Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.35081 3H3V9.35081H9.35081V3Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.35081 14.6492H3V21H9.35081V14.6492Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M21.0002 3H14.6493V9.35081H21.0002V3Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M21.0001 14.6492H14.6493V21H21.0001V14.6492Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M21.0002 3H14.6493V9.35081H21.0002V3Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M21.0001 14.6492H14.6493V21H21.0001V14.6492Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Grid = {
  component: GridComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
GridComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
GridComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var HeartComponent = function HeartComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M11.9136 6.81458C9.4276 2.40958 3.74856 3.56169 3.07156 7.60169C2.33356 12.0097 7.4446 16.7266 11.9136 19.3696C16.3816 16.7266 21.6534 12.0297 20.7544 7.60169C19.9394 3.58769 14.3996 2.40958 11.9136 6.81458Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Heart = {
  component: HeartComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
HeartComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
HeartComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var HeartFilledComponent = function HeartFilledComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M11.9136 6.81458C9.4276 2.40958 3.74856 3.56169 3.07156 7.60169C2.33356 12.0097 7.4446 16.7266 11.9136 19.3696C16.3816 16.7266 21.6534 12.0297 20.7544 7.60169C19.9394 3.58769 14.3996 2.40958 11.9136 6.81458Z",
    fill: smartColor || fill
  }));
};
var HeartFilled = {
  component: HeartFilledComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
HeartFilledComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
HeartFilledComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var HomeComponent = function HomeComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M6.75024 19.2502H17.2502C18.3548 19.2502 19.2502 18.3548 19.2502 17.2502V9.75025L12.0002 4.75024L4.75024 9.75025V17.2502C4.75024 18.3548 5.64568 19.2502 6.75024 19.2502Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.74963 15.7493C9.74963 14.6447 10.6451 13.7493 11.7496 13.7493H12.2496C13.3542 13.7493 14.2496 14.6447 14.2496 15.7493V19.2493H9.74963V15.7493Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Home = {
  component: HomeComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
HomeComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
HomeComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ImageComponent = function ImageComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M15 8H15.01",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M17 4H7C5.34315 4 4 5.34315 4 7V17C4 18.6569 5.34315 20 7 20H17C18.6569 20 20 18.6569 20 17V7C20 5.34315 18.6569 4 17 4Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4 15L8 11C8.45606 10.5612 8.97339 10.3301 9.5 10.3301C10.0266 10.3301 10.5439 10.5612 11 11L16 16",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M14 14L15 13C15.4561 12.5612 15.9734 12.3301 16.5 12.3301C17.0266 12.3301 17.5439 12.5612 18 13L20 15",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Image = {
  component: ImageComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ImageComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ImageComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var InboxComponent = function InboxComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M3 14.2369V17.3199C3 17.8461 3.20898 18.3507 3.58105 18.7228C3.95313 19.0949 4.45794 19.304 4.98413 19.304H19.3669C19.8931 19.304 20.3979 19.0949 20.77 18.7228C21.1421 18.3507 21.3511 17.8461 21.3511 17.3199V11.1499H15.7571C15.5737 11.9629 15.1192 12.6894 14.4683 13.2098C13.8173 13.7303 13.0085 14.0139 12.175 14.0139C11.3416 14.0139 10.5328 13.7303 9.88184 13.2098C9.23087 12.6894 8.77642 11.9629 8.59302 11.1499H3M12.185 14.212C13.0181 14.2117 13.8263 13.9284 14.4772 13.4083C15.1281 12.8883 15.5829 12.1625 15.767 11.35H21.361L18.4401 4H5.93007L3.00918 11.35H8.60317C8.78746 12.1624 9.24214 12.8881 9.89296 13.4081C10.5438 13.9281 11.3519 14.2115 12.185 14.212Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Inbox = {
  component: InboxComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
InboxComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
InboxComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var IncreaseComponent = function IncreaseComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M19.9999 19H15.9246C15.1723 18.9999 14.4275 18.8515 13.7326 18.5637C13.0377 18.2759 12.4061 17.8543 11.8745 17.3227C11.3428 16.791 10.9212 16.1598 10.6338 15.4653C10.3464 14.7708 10.1988 14.0264 10.1995 13.2749L10.2096 4.00195",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M5 9.20708L10.2128 4L15.4255 9.20708",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Increase = {
  component: IncreaseComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
IncreaseComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
IncreaseComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Increase2Component = function Increase2Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M5 19.887H9.04102C9.78695 19.887 10.5255 19.74 11.2146 19.4543C11.9037 19.1687 12.5297 18.7501 13.0569 18.2224C13.5841 17.6947 14.0024 17.0682 14.2874 16.3789C14.5724 15.6896 14.7187 14.951 14.718 14.2051L14.708 5.00488M19.8789 10.1689L14.71 5L9.54102 10.1689",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Increase2 = {
  component: Increase2Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Increase2Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Increase2Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var InfoComponent = function InfoComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M14.6667 8.00065C14.6667 11.6825 11.6819 14.6673 8.00004 14.6673C4.31814 14.6673 1.33337 11.6825 1.33337 8.00065C1.33337 4.31875 4.31814 1.33398 8.00004 1.33398C11.6819 1.33398 14.6667 4.31875 14.6667 8.00065ZM8.00004 6.58398C8.41425 6.58398 8.75004 6.91977 8.75004 7.33398V10.6673C8.75004 11.0815 8.41425 11.4173 8.00004 11.4173C7.58583 11.4173 7.25004 11.0815 7.25004 10.6673V7.33398C7.25004 6.91977 7.58583 6.58398 8.00004 6.58398ZM8.00004 6.00065C8.36823 6.00065 8.66671 5.70217 8.66671 5.33398C8.66671 4.96579 8.36823 4.66732 8.00004 4.66732C7.63185 4.66732 7.33337 4.96579 7.33337 5.33398C7.33337 5.70217 7.63185 6.00065 8.00004 6.00065Z",
    fill: smartColor || fill
  }));
};
InfoComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
InfoComponent.defaultProps = {
  fill: "#212934"
};
var Info = {
  component: InfoComponent,
  viewBox: "0 0 16 16",
  fill: "none"
};

var InfoOutlineComponent = function InfoOutlineComponent(_ref) {
  var fill = _ref.fill,
    stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.fillRule;
    _ref.clipRule;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M11.8646 11.0753V15.5834",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M11.8557 9.43359C12.3506 9.43359 12.7517 9.03242 12.7517 8.53754C12.7517 8.04266 12.3506 7.64148 11.8557 7.64148C11.3608 7.64148 10.9596 8.04266 10.9596 8.53754C10.9596 9.03242 11.3608 9.43359 11.8557 9.43359Z",
    fill: smartColor || fill
  }));
};
var InfoOutline = {
  component: InfoOutlineComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
InfoOutlineComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string,
  fillRule: propTypes.exports.string,
  clipRule: propTypes.exports.string
};
InfoOutlineComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round",
  fillRule: "evenodd",
  clipRule: "evenodd"
};

var JustifyAlignComponent = function JustifyAlignComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M3 4H20.359M3 9.11694H20.359M3 14.2349H20.359M3 19.353H20.359",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var JustifyAlign = {
  component: JustifyAlignComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
JustifyAlignComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
JustifyAlignComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var KeyComponent = function KeyComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M10.6243 11.6885C11.3516 12.4158 11.8054 13.3717 11.9093 14.395C12.0131 15.4183 11.7607 16.4461 11.1944 17.3047C10.6281 18.1633 9.78285 18.8004 8.80134 19.1079C7.81984 19.4154 6.76216 19.3747 5.8072 18.9927C4.85224 18.6106 4.05847 17.9104 3.55989 17.0107C3.06131 16.1111 2.88841 15.067 3.07063 14.0547C3.25284 13.0424 3.77889 12.1244 4.55989 11.4551C5.34088 10.7858 6.32901 10.4064 7.35725 10.3813M16.9852 9.30322L17.8182 10.1362L20.8541 7.1001L17.7542 4L10.3311 11.4233",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Key = {
  component: KeyComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
KeyComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
KeyComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var LeftAlignComponent = function LeftAlignComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M3 4H20.359M3 9.11694H18.118M3 14.2349H20.359M3 19.353H15.876",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var LeftAlign = {
  component: LeftAlignComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
LeftAlignComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
LeftAlignComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var LikeComponent = function LikeComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    _ref.fillRule;
    _ref.clipRule;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M6.9917 15.4084V6.94169C6.9917 6.60835 7.0917 6.28335 7.27503 6.00835L9.55003 2.62502C9.90837 2.08335 10.8 1.70002 11.5584 1.98335C12.375 2.25835 12.9167 3.17502 12.7417 3.99169L12.3084 6.71669C12.275 6.96669 12.3417 7.19169 12.4834 7.36669C12.625 7.52502 12.8334 7.62502 13.0584 7.62502H16.4834C17.1417 7.62502 17.7084 7.89169 18.0417 8.35835C18.3584 8.80835 18.4167 9.39169 18.2084 9.98335L16.1584 16.225C15.9 17.2584 14.775 18.1 13.6584 18.1H10.4084C9.85003 18.1 9.0667 17.9084 8.70837 17.55L7.6417 16.725C7.23337 16.4167 6.9917 15.925 6.9917 15.4084Z",
    fill: smartColor || fill
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4.34175 5.31665H3.48341C2.19175 5.31665 1.66675 5.81665 1.66675 7.04998V15.4333C1.66675 16.6667 2.19175 17.1667 3.48341 17.1667H4.34175C5.63341 17.1667 6.15841 16.6667 6.15841 15.4333V7.04998C6.15841 5.81665 5.63341 5.31665 4.34175 5.31665Z",
    fill: smartColor || fill
  }));
};
var Like = {
  component: LikeComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
LikeComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string,
  fillRule: propTypes.exports.string,
  clipRule: propTypes.exports.string
};
LikeComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round",
  fillRule: "evenodd",
  clipRule: "evenodd"
};

var LinkComponent = function LinkComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M8.06177 10.6437L4.08691 14.6188C3.39101 15.3147 3 16.2581 3 17.2423C3 18.2265 3.39101 19.1704 4.08691 19.8663C4.78294 20.5617 5.72659 20.9523 6.71045 20.9523C7.69431 20.9523 8.63771 20.5617 9.33374 19.8663L13.3088 15.8917M16.0087 13.1904L19.8649 9.33447C20.5605 8.63857 20.9511 7.69488 20.9511 6.71094C20.9511 5.727 20.5605 4.7833 19.8649 4.0874C19.5204 3.74271 19.1113 3.46927 18.6611 3.28271C18.2108 3.09616 17.7283 3 17.2409 3C16.7536 3 16.271 3.09616 15.8207 3.28271C15.3705 3.46927 14.9614 3.74271 14.6169 4.0874L10.7609 7.94336M9.69086 14.2615L14.2609 9.69153",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Link = {
  component: LinkComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
LinkComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
LinkComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ListComponent = function ListComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M20.855 3H3V9.3H20.855V3Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20.855 14.556H3V20.856H20.855V14.556Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20.855 3H3V9.3H20.855V3Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20.855 14.556H3V20.856H20.855V14.556Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var List = {
  component: ListComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ListComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ListComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var List2Component = function List2Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M9 6H20",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9 12H20",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9 18H20",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M5 6V6.01",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M5 12V12.01",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M5 18V18.01",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var List2 = {
  component: List2Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
List2Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
List2Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var LocationComponent = function LocationComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M13.756 11.5189C14.7245 10.5504 14.7245 8.98018 13.756 8.01168C12.7875 7.04318 11.2172 7.04318 10.2487 8.01168C9.28022 8.98018 9.28022 10.5504 10.2487 11.5189C11.2172 12.4874 12.7875 12.4874 13.756 11.5189Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12.0023 3C12.9381 3.0014 13.8641 3.19009 14.7259 3.55493C15.5877 3.91978 16.3677 4.45354 17.0201 5.12451C17.6724 5.79549 18.1838 6.59022 18.5242 7.46191C18.8647 8.33361 19.0272 9.26471 19.0023 10.2002C18.7373 16.5632 12.0023 20.853 12.0023 20.853",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M5.44626 12.7201C5.53359 12.9994 5.63178 13.2726 5.74045 13.5399C7.12044 16.5045 9.2861 19.0345 12.0024 20.8551",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12.0025 3C11.0667 3.0014 10.1406 3.19009 9.27886 3.55493C8.4171 3.91978 7.63701 4.45354 6.98467 5.12451C6.33234 5.79549 5.82071 6.59022 5.48028 7.46191C5.13985 8.33361 4.97754 9.26471 5.0025 10.2002",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Location = {
  component: LocationComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
LocationComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
LocationComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Location2Component = function Location2Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M21 3L14.5 21C14.4561 21.0957 14.3857 21.1769 14.2971 21.2338C14.2084 21.2906 14.1053 21.3209 14 21.3209C13.8947 21.3209 13.7916 21.2906 13.703 21.2338C13.6143 21.1769 13.5439 21.0957 13.5 21L10 14L3 10.5C2.90426 10.4561 2.82313 10.3857 2.76625 10.2971C2.70937 10.2084 2.67913 10.1053 2.67913 10C2.67913 9.89468 2.70937 9.79158 2.76625 9.70295C2.82313 9.61431 2.90426 9.54387 3 9.5L21 3Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Location2 = {
  component: Location2Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Location2Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Location2Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Location3Component = function Location3Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12.225 16.831V10.386M6.45801 14.698C6.04635 14.9367 5.69874 15.2716 5.44482 15.6741C5.1909 16.0765 5.03823 16.5347 5 17.009C5 19.134 8.23507 20.8562 12.2261 20.8562C16.2171 20.8562 19.4509 19.133 19.4509 17.009C19.4161 16.544 19.2702 16.094 19.0254 15.697C18.7805 15.3001 18.4439 14.9676 18.0439 14.7278C18.0299 14.7178 18.013 14.708 17.999 14.699M15.808 6.583C15.808 8.56184 14.2039 10.166 12.225 10.166C10.2462 10.166 8.64203 8.56184 8.64203 6.583C8.64203 4.60416 10.2462 3 12.225 3C14.2039 3 15.808 4.60416 15.808 6.583Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Location3 = {
  component: Location3Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Location3Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Location3Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var LockComponent = function LockComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M15.0996 8.10577H9.90036C7.19397 8.10577 5 10.3624 5 13.1461V15.9596C5 18.7433 7.19397 20.9999 9.90036 20.9999H15.0996C17.806 20.9999 20 18.7433 20 15.9596V13.1461C20 10.3624 17.806 8.10577 15.0996 8.10577Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.76715 8.1048V6.83882C8.76715 5.82073 9.16049 4.84413 9.8604 4.12423C10.5603 3.40433 11.5095 3 12.4994 3C13.4892 3 14.4384 3.40433 15.1383 4.12423C15.8382 4.84413 16.2313 5.82073 16.2313 6.83882V8.1048",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12.4994 12.9849V15.8781",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Lock = {
  component: LockComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
LockComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
LockComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var LoginComponent = function LoginComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M11.9031 20.3669H4.48804C4.09339 20.3669 3.71485 20.2102 3.43579 19.9312C3.15674 19.6521 3 19.2735 3 18.8789V5.48792C3 5.09327 3.15674 4.71485 3.43579 4.43579C3.71485 4.15674 4.09339 4 4.48804 4H11.9031M15.291 17.834L20.9409 12.184L15.291 6.53394M10.27 12.1829H20.702",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Login = {
  component: LoginComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
LoginComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
LoginComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Login2Component = function Login2Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12.038 20.3669H19.4531C19.8477 20.3669 20.226 20.2102 20.5051 19.9312C20.7841 19.6521 20.9411 19.2735 20.9411 18.8789V5.48792C20.9411 5.09327 20.7841 4.71485 20.5051 4.43579C20.226 4.15674 19.8477 4 19.4531 4H12.038M8.0199 17.834L13.67 12.184L8.0199 6.53394M3 12.1829H13.432",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Login2 = {
  component: Login2Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Login2Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Login2Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var LogoutComponent = function LogoutComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12.0338 20.3669H19.4488C19.8435 20.3669 20.222 20.2102 20.5011 19.9312C20.7801 19.6521 20.9369 19.2735 20.9369 18.8789V5.48792C20.9369 5.09327 20.7801 4.71485 20.5011 4.43579C20.222 4.15674 19.8435 4 19.4488 4H12.0338M8.6499 17.834L3 12.184L8.6499 6.53394M13.6669 12.1829H3.23489",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Logout = {
  component: LogoutComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
LogoutComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
LogoutComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Logout2Component = function Logout2Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M11.9031 20.3669H4.48804C4.09339 20.3669 3.71485 20.2102 3.43579 19.9312C3.15674 19.6521 3 19.2735 3 18.8789V5.48792C3 5.09327 3.15674 4.71485 3.43579 4.43579C3.71485 4.15674 4.09339 4 4.48804 4H11.9031M15.9191 17.833L10.269 12.183L15.9191 6.53296M20.9411 12.1829H10.5091",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Logout2 = {
  component: Logout2Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Logout2Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Logout2Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var MapComponent = function MapComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M8.95215 17.8818V4L3 5.16406V19.0459L8.95215 17.8818ZM8.95215 17.8818L14.9042 19.0459V5.16895L8.95203 4.00488M14.904 19.041V5.16406L20.8561 4V17.8818L14.904 19.041Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Map$1 = {
  component: MapComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
MapComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
MapComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var MenuComponent = function MenuComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M3 5H20.359M3 18.186H20.359M3 11.592H20.359",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Menu = {
  component: MenuComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
MenuComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
MenuComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Menu2Component = function Menu2Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M3 5H20.359M3 18.186H11.68M3 11.592H20.359",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Menu2 = {
  component: Menu2Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Menu2Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Menu2Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Menu3Component = function Menu3Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M3 5H20.359M3 18.186H8.786M3 11.593H14.573",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Menu3 = {
  component: Menu3Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Menu3Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Menu3Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Menu4Component = function Menu4Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M3 5H20.359M8.78601 18.186H14.572M5.89203 11.593H17.465",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Menu4 = {
  component: Menu4Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Menu4Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Menu4Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Menu5Component = function Menu5Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M20.359 5H3M20.359 18.186H14.573M20.36 11.593H8.78699",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Menu5 = {
  component: Menu5Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Menu5Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Menu5Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Menu6Component = function Menu6Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M20.359 11.592H3M8.786 18.186H3M14.573 5H3",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Menu6 = {
  component: Menu6Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Menu6Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Menu6Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Menu7Component = function Menu7Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M20.359 11.592H3M14.573 18.186H8.78699M17.466 5H5.89301",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Menu7 = {
  component: Menu7Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Menu7Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Menu7Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Menu8Component = function Menu8Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M20.359 11.592H3M8.786 18.186H3M14.573 5H3",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Menu8 = {
  component: Menu8Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Menu8Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Menu8Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var MenuHComponent = function MenuHComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M20.139 12.5C20.5532 12.5 20.889 12.1642 20.889 11.75C20.889 11.3358 20.5532 11 20.139 11C19.7248 11 19.389 11.3358 19.389 11.75C19.389 12.1642 19.7248 12.5 20.139 12.5Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12.444 12.5C12.8582 12.5 13.194 12.1642 13.194 11.75C13.194 11.3358 12.8582 11 12.444 11C12.0298 11 11.694 11.3358 11.694 11.75C11.694 12.1642 12.0298 12.5 12.444 12.5Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4.75 12.5C5.16421 12.5 5.5 12.1642 5.5 11.75C5.5 11.3358 5.16421 11 4.75 11C4.33579 11 4 11.3358 4 11.75C4 12.1642 4.33579 12.5 4.75 12.5Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var MenuH = {
  component: MenuHComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
MenuHComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
MenuHComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var MenuVComponent = function MenuVComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M11.75 5.5C12.1642 5.5 12.5 5.16421 12.5 4.75C12.5 4.33579 12.1642 4 11.75 4C11.3358 4 11 4.33579 11 4.75C11 5.16421 11.3358 5.5 11.75 5.5Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M11.75 13.194C12.1642 13.194 12.5 12.8582 12.5 12.444C12.5 12.0298 12.1642 11.694 11.75 11.694C11.3358 11.694 11 12.0298 11 12.444C11 12.8582 11.3358 13.194 11.75 13.194Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M11.75 20.889C12.1642 20.889 12.5 20.5532 12.5 20.139C12.5 19.7248 12.1642 19.389 11.75 19.389C11.3358 19.389 11 19.7248 11 20.139C11 20.5532 11.3358 20.889 11.75 20.889Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var MenuV = {
  component: MenuVComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
MenuVComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
MenuVComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var MessageComponent = function MessageComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M6.76923 4H5.00057C4.46996 4 3.96114 4.20663 3.58594 4.5745C3.21074 4.94237 3 5.44149 3 5.96175V14.0622C3 14.5825 3.21074 15.0816 3.58594 15.4494C3.96114 15.8173 4.46996 16.0239 5.00057 16.0239H8.13881C8.66842 16.0246 9.17605 16.231 9.55049 16.5982L11.9999 19L14.4495 16.5982C14.8239 16.231 15.3316 16.0246 15.8612 16.0239H18.9994C19.53 16.0239 20.0389 15.8173 20.4141 15.4494C20.7893 15.0816 21 14.5825 21 14.0622V5.96271C21 5.44246 20.7893 4.94358 20.4141 4.57571C20.0389 4.20783 19.53 4.00097 18.9994 4.00097H9.20557",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M16.0598 10.5475C16.1801 10.5475 16.2776 10.4479 16.2776 10.325C16.2776 10.2021 16.1801 10.1025 16.0598 10.1025C15.9395 10.1025 15.842 10.2021 15.842 10.325C15.842 10.4479 15.9395 10.5475 16.0598 10.5475Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.29385 10.5475C8.41415 10.5475 8.51167 10.4479 8.51167 10.325C8.51167 10.2021 8.41415 10.1025 8.29385 10.1025C8.17355 10.1025 8.07603 10.2021 8.07603 10.325C8.07603 10.4479 8.17355 10.5475 8.29385 10.5475Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12.1773 10.5475C12.2976 10.5475 12.3951 10.4479 12.3951 10.325C12.3951 10.2021 12.2976 10.1025 12.1773 10.1025C12.057 10.1025 11.9595 10.2021 11.9595 10.325C11.9595 10.4479 12.057 10.5475 12.1773 10.5475Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Message = {
  component: MessageComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
MessageComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
MessageComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var MicComponent = function MicComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M18.7729 12.2128C18.7729 13.9065 18.1002 15.5311 16.9026 16.7289C15.705 17.9266 14.0807 18.5997 12.387 18.6C10.693 18.6 9.0684 17.9272 7.87061 16.7294C6.67281 15.5316 6 13.9067 6 12.2128M12.3859 20.855V18.599M12.3859 3C13.8832 3 15.0969 4.21376 15.0969 5.711V12.176C15.0969 13.6732 13.8832 14.887 12.3859 14.887C10.8887 14.887 9.67493 13.6732 9.67493 12.176V5.711C9.67493 4.21376 10.8887 3 12.3859 3Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Mic = {
  component: MicComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
MicComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
MicComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var MicOffComponent = function MicOffComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M9.89197 13.9686C10.2551 14.3833 10.7362 14.6778 11.2709 14.8119C11.8056 14.946 12.3685 14.9138 12.8844 14.7196C13.4003 14.5254 13.8448 14.1784 14.1583 13.725C14.4718 13.2716 14.6395 12.7333 14.639 12.182V9.22205M20.855 3.00287L3 20.8579M14.5831 5.32056V5.16773C14.4484 4.5094 14.074 3.92457 13.5325 3.52662C12.9911 3.12866 12.3212 2.94591 11.6527 3.01392C10.9841 3.08193 10.3646 3.39546 9.91437 3.89429C9.46415 4.39313 9.21521 5.04167 9.21588 5.71363V10.5916M18.314 12.2156C18.314 13.9094 17.6412 15.534 16.4436 16.7318C15.246 17.9295 13.6217 18.6026 11.928 18.6028V20.8579M11.9321 18.6019C11.0596 18.6022 10.1962 18.423 9.39594 18.0755C8.59564 17.728 7.87539 17.2196 7.27997 16.5818M5.54102 12.2156C5.54049 12.8001 5.62029 13.3819 5.77808 13.9446",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var MicOff = {
  component: MicOffComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
MicOffComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
MicOffComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var MoonComponent = function MoonComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M11.9347 11.9237C11.13 10.5283 10.804 8.90801 11.0062 7.30993C11.2084 5.71185 11.9279 4.22362 13.0548 3.07263C11.4051 2.86082 9.72906 3.11447 8.21594 3.80505C6.70282 4.49563 5.41299 5.5958 4.49206 6.98083C3.57113 8.36586 3.05572 9.98048 3.00427 11.6429C2.95282 13.3054 3.36729 14.9492 4.2008 16.3885V16.3885C5.03048 17.8301 6.24662 19.011 7.71203 19.7977C9.17745 20.5845 10.8338 20.9456 12.4938 20.8407C14.1537 20.7357 15.7512 20.169 17.1058 19.204C18.4605 18.2389 19.5183 16.9143 20.1598 15.3798C18.5995 15.78 16.9512 15.6585 15.4662 15.0345C13.9812 14.4106 12.7409 13.3182 11.9347 11.9237V11.9237Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Moon = {
  component: MoonComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
MoonComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
MoonComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var MoveComponent = function MoveComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M15.1516 19.0984L12.5 21.75L9.84839 19.0984",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12.5 15V21.75",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.84839 4.90163L12.5 2.25L15.1516 4.90163",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12.5 9V2.25",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M5.40163 14.6516L2.75 12L5.40163 9.34839",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.5 12H2.75",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M19.5984 9.34839L22.25 12L19.5984 14.6516",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15.5 12H22.25",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Move = {
  component: MoveComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
MoveComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
MoveComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var MusicComponent = function MusicComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M16.5269 8.63965L9.02887 10.8247V6.01807L19.386 3V7.80566M19.387 7.80688V15.8169M19.387 15.8169C19.387 17.2059 18.261 18.3319 16.872 18.3319C15.483 18.3319 14.357 17.2059 14.357 15.8169C14.357 14.4279 15.483 13.3019 16.872 13.3019C18.261 13.3019 19.387 14.4279 19.387 15.8169ZM9.03 10.3308V18.3408M9.03 18.3408C9.03 19.7298 7.904 20.8568 6.515 20.8568C5.126 20.8568 4 19.7308 4 18.3418C4 16.9528 5.126 15.8268 6.515 15.8268C7.904 15.8268 9.03 16.9518 9.03 18.3408Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Music = {
  component: MusicComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
MusicComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
MusicComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var MuteComponent = function MuteComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M6.53394 9.11145H4.48999C4.09473 9.11172 3.71568 9.26887 3.43628 9.54846C3.15688 9.82805 3 10.2074 3 10.6027V12.7028C2.99987 12.8985 3.03822 13.0922 3.11304 13.2731C3.18786 13.454 3.29766 13.6185 3.43604 13.757C3.57441 13.8954 3.73884 14.0053 3.91968 14.0802C4.10052 14.1551 4.29424 14.1935 4.48999 14.1935H6.53394C6.91443 14.1934 7.28046 14.3392 7.55689 14.6007L10.2849 17.1744C10.356 17.2393 10.4444 17.2825 10.5393 17.2985C10.6342 17.3144 10.7317 17.3024 10.8201 17.2643C10.9084 17.2262 10.984 17.1636 11.0376 17.0836C11.0912 17.0037 11.1205 16.9098 11.1221 16.8136V6.49182C11.1205 6.39559 11.0912 6.30177 11.0376 6.2218C10.984 6.14184 10.9084 6.07877 10.8201 6.04065C10.7317 6.00253 10.6342 5.99103 10.5393 6.00696C10.4444 6.02289 10.356 6.06561 10.2849 6.13049L7.55689 8.70471C7.28024 8.96584 6.91435 9.11116 6.53394 9.11145V9.11145Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20.8547 8.43848L14.4277 14.8655",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M14.4277 8.43848L20.8547 14.8655",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Mute = {
  component: MuteComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
MuteComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
MuteComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var NetworkComponent = function NetworkComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M19.353 3V20.359M14.235 7.08911V20.3591M9.117 12.7761V20.3591M4 17.1162V20.3592",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Network = {
  component: NetworkComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
NetworkComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
NetworkComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var NextComponent = function NextComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M18.6979 3L18.6989 20.359M6.02783 3.64386L17.8069 11.1138C17.9021 11.1743 17.9806 11.2579 18.0349 11.3568C18.0892 11.4556 18.1177 11.5667 18.1177 11.6795C18.1177 11.7923 18.0892 11.9032 18.0349 12.002C17.9806 12.1009 17.9021 12.1844 17.8069 12.2449L6.02783 19.7139C5.92652 19.778 5.80999 19.8136 5.69019 19.8172C5.57038 19.8208 5.45168 19.7922 5.34668 19.7344C5.24168 19.6766 5.15427 19.5918 5.09326 19.4886C5.03225 19.3854 5.00006 19.2679 5 19.148V4.21002C5.00006 4.09016 5.03225 3.97238 5.09326 3.8692C5.15427 3.76603 5.24168 3.68116 5.34668 3.62335C5.45168 3.56554 5.57038 3.53697 5.69019 3.54059C5.80999 3.54421 5.92652 3.57982 6.02783 3.64386Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Next = {
  component: NextComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
NextComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
NextComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var NotificationBellComponent = function NotificationBellComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M6.96313 5.09998C7.54969 4.44229 8.26798 3.91545 9.07153 3.55365C9.87508 3.19185 10.746 3.0032 11.6272 3C12.4937 3.02102 13.3476 3.21254 14.1401 3.5636C14.9327 3.91466 15.6483 4.41838 16.2461 5.04602C16.8439 5.67366 17.3122 6.4129 17.6243 7.22156C17.9364 8.03022 18.0863 8.89243 18.0652 9.75897V11.859C17.9571 14.32 18.7339 16.7384 20.2551 18.676H3C4.52118 16.7384 5.29828 14.32 5.19019 11.859V9.75897C5.18864 8.88948 5.34829 8.02727 5.66113 7.216M12.7138 18.9397C12.8482 19.1553 12.923 19.4029 12.93 19.6569C12.9371 19.9109 12.8762 20.1622 12.754 20.385C12.6317 20.6077 12.4523 20.7938 12.2343 20.9242C12.0162 21.0547 11.7675 21.1248 11.5134 21.1272C11.2593 21.1296 11.0091 21.0642 10.7886 20.9379C10.5682 20.8115 10.3852 20.6288 10.2588 20.4084C10.1324 20.188 10.0672 19.9377 10.0695 19.6836C10.0718 19.4296 10.1414 19.1807 10.2717 18.9626",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var NotificationBell = {
  component: NotificationBellComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
NotificationBellComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
NotificationBellComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var PauseComponent = function PauseComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M15.25 6.75V17.25",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.75 6.75V17.25",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Pause = {
  component: PauseComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
PauseComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
PauseComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var PieComponent = function PieComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M10.3579 7.14514C8.67163 7.14514 7.05454 7.82236 5.8622 9.02773C4.66986 10.2331 3.99997 11.8681 3.99997 13.5728C3.99997 15.2774 4.66986 16.912 5.8622 18.1174C7.05454 19.3227 8.67163 19.9999 10.3579 19.9999V19.9999C12.0437 19.9987 13.6601 19.3211 14.8522 18.116C16.0443 16.9109 16.7145 15.2771 16.7157 13.5728H10.3579V7.14514Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M13.6424 3.99994V10.432H20.0003C20.0003 8.72691 19.3305 7.09172 18.1383 5.88563C16.9461 4.67953 15.329 4.00114 13.6424 3.99994Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Pie = {
  component: PieComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
PieComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
PieComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var PinComponent = function PinComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M15.736 5.16016L20.15 9.54004C20.336 9.72516 20.4409 9.97638 20.442 10.2388C20.4431 10.5012 20.3402 10.7532 20.1559 10.9399L18.8829 12.2231C18.6998 12.408 18.4512 12.5132 18.191 12.5166C17.9308 12.52 17.6799 12.4208 17.4921 12.2407L16.1539 10.959L14.901 12.2339C14.5198 12.6215 14.2223 13.0833 14.0272 13.5908C13.8321 14.0983 13.7436 14.6409 13.767 15.1841L13.8199 16.438C13.8316 16.713 13.7859 16.9873 13.6857 17.2437C13.5855 17.5 13.433 17.7326 13.2379 17.9268L11.7169 19.4429L7.35803 15.1182L3.08606 19.418M17.2539 6.667L12.8389 2.28663C12.6523 2.10214 12.4003 1.99907 12.1379 2.00001C11.8756 2.00094 11.6242 2.10618 11.439 2.292L10.166 3.57471C9.98266 3.75933 9.87924 4.00886 9.87793 4.26905C9.87662 4.52924 9.97744 4.77938 10.1589 4.96583L11.4509 6.29395L10.2139 7.55274C9.82802 7.94502 9.36486 8.25273 8.85376 8.45655C8.34266 8.66037 7.79478 8.75594 7.24487 8.73682L6.00098 8.69385C5.7295 8.68427 5.45892 8.73034 5.20605 8.8296C4.95319 8.92885 4.72348 9.07932 4.53101 9.271L3 10.7959L5.20605 12.9839",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Pin = {
  component: PinComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
PinComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
PinComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var PlayCircleComponent = function PlayCircleComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M10.1354 11.8261V9.01715L15.0941 11.9972L10.1354 14.9776",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var PlayCircle = {
  component: PlayCircleComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
PlayCircleComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
PlayCircleComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var PowerComponent = function PowerComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M16.5844 5.01849C17.9661 6.01285 19.0072 7.43129 19.5591 9.07088C20.1111 10.7105 20.1457 12.4875 19.6578 14.1484C19.17 15.8094 18.1847 17.2694 16.8428 18.3199C15.5008 19.3703 13.8708 19.9576 12.1853 19.9978C10.4997 20.038 8.84482 19.5288 7.45704 18.5435C6.06926 17.5581 5.01944 16.1466 4.45744 14.5106C3.89543 12.8747 3.85018 11.0981 4.32779 9.43399C4.80539 7.76986 5.78161 6.30357 7.1171 5.24445",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12.0001 10.4775V3",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Power = {
  component: PowerComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
PowerComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
PowerComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var PreviousComponent = function PreviousComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M5.001 3L5 20.359M17.6721 3.64388L5.89304 11.1139C5.79784 11.1743 5.71932 11.2579 5.66501 11.3568C5.6107 11.4556 5.58224 11.5667 5.58224 11.6795C5.58224 11.7923 5.6107 11.9032 5.66501 12.002C5.71932 12.1009 5.79784 12.1845 5.89304 12.245L17.6721 19.7139C17.7734 19.7783 17.89 19.8142 18.01 19.818C18.1299 19.8217 18.2488 19.793 18.354 19.7352C18.4591 19.6773 18.5468 19.5924 18.6079 19.4891C18.6689 19.3858 18.701 19.268 18.7009 19.148V4.21004C18.701 4.09003 18.6689 3.97206 18.6079 3.86874C18.5468 3.76541 18.4591 3.68048 18.354 3.62264C18.2488 3.5648 18.1299 3.53612 18.01 3.53988C17.89 3.54363 17.7734 3.57958 17.6721 3.64388Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Previous = {
  component: PreviousComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
PreviousComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
PreviousComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var PrintComponent = function PrintComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M4.98389 16.6428C4.4577 16.6428 3.95313 16.4338 3.58105 16.0618C3.20898 15.6897 3 15.1851 3 14.6589V9.19702C3 8.93653 3.05116 8.6784 3.15088 8.43774C3.2506 8.19709 3.39681 7.97834 3.58105 7.79419C3.7653 7.61004 3.98391 7.4641 4.22461 7.3645C4.46531 7.26491 4.72339 7.21398 4.98389 7.21411H18.8708C19.1313 7.21398 19.3894 7.26491 19.6301 7.3645C19.8708 7.4641 20.0894 7.61004 20.2737 7.79419C20.4579 7.97834 20.6041 8.19709 20.7039 8.43774C20.8036 8.6784 20.855 8.93653 20.855 9.19702V14.6589C20.855 15.1851 20.6458 15.6897 20.2737 16.0618C19.9016 16.4338 19.397 16.6428 18.8708 16.6428",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M6.13379 7.21289V3H17.7219V7.21289",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.03687 11.2341H17.7229V20.4269H6.13477V11.2341",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.61182 14.5939H14.4998",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.61182 16.9589H14.4998",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Print = {
  component: PrintComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
PrintComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
PrintComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ProfileComponent = function ProfileComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M11.9987 13.0811C14.5073 13.0811 16.5409 11.0482 16.5409 8.54054C16.5409 6.03287 14.5073 4 11.9987 4C9.49014 4 7.45654 6.03287 7.45654 8.54054C7.45654 11.0482 9.49014 13.0811 11.9987 13.0811Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20 20.0001C19.9997 18.1655 19.2707 16.4062 17.9728 15.109C16.675 13.8118 14.9148 13.083 13.0795 13.083H10.9205C9.08523 13.083 7.32522 13.8118 6.0274 15.109C4.72958 16.4062 4.00025 18.1655 4 20.0001",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Profile = {
  component: ProfileComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ProfileComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ProfileComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var PulseComponent = function PulseComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M3 14.166H6.56592L9.146 9.58301L11.751 18.1538L15.4351 6L17.7351 14.166H20.856",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Pulse = {
  component: PulseComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
PulseComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
PulseComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var RefreshComponent = function RefreshComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M16.1659 9.68896L19.5099 6.34399L16.1659 3M5 13.1918V9.16694C5 8.79635 5.07302 8.42924 5.21484 8.08686C5.35666 7.74448 5.56437 7.43338 5.82642 7.17134C6.08846 6.90929 6.39956 6.70158 6.74194 6.55976C7.08432 6.41794 7.45143 6.34492 7.82202 6.34492H19.511M8.34502 14.1661L5.00005 17.5111M5.00005 17.5111L8.34502 20.8551M5.00005 17.5111L16.689 17.511C17.4373 17.5107 18.1549 17.2133 18.6839 16.6841C19.2129 16.1549 19.51 15.4372 19.51 14.689V10.6641",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Refresh = {
  component: RefreshComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
RefreshComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
RefreshComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ReloadComponent = function ReloadComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M19.95 11C19.6971 9.07074 18.7498 7.29978 17.2853 6.01862C15.8209 4.73747 13.9397 4.03395 11.9939 4.03977C10.0482 4.04559 8.17123 4.76034 6.71446 6.05023C5.25769 7.34012 4.32096 9.11672 4.07962 11.0475C3.83828 12.9782 4.30887 14.9307 5.4033 16.5395C6.49774 18.1483 8.14098 19.3031 10.0254 19.7877C11.9099 20.2723 13.9064 20.0534 15.6411 19.1722C17.3759 18.2909 18.73 16.8077 19.45 15M19.95 20V15H14.95",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15.1222 10.0612C15.6801 10.0612 16.1324 9.60889 16.1324 9.05097C16.1324 8.49305 15.6801 8.04077 15.1222 8.04077C14.5643 8.04077 14.112 8.49305 14.112 9.05097C14.112 9.60889 14.5643 10.0612 15.1222 10.0612Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Reload = {
  component: ReloadComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ReloadComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ReloadComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var RightAlignComponent = function RightAlignComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M3 4H20.359M7.08899 9.11694H20.359M3 14.2349H20.359M11.095 19.353H20.359",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var RightAlign = {
  component: RightAlignComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
RightAlignComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
RightAlignComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var RocketComponent = function RocketComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M11.1521 19.553L12.7842 21.1849L13.5371 20.4319C14.0838 19.8851 14.396 19.1469 14.408 18.3738L14.459 15.1419L17.0161 12.5862C17.9502 12.3734 18.81 11.9137 19.5063 11.2557C20.2027 10.5977 20.71 9.76508 20.9753 8.84454C21.2407 7.924 21.2546 6.94947 21.0154 6.02179C20.7762 5.09411 20.2927 4.24756 19.6152 3.57013C18.9378 2.8927 18.0913 2.40896 17.1636 2.16974C16.2359 1.93052 15.2609 1.94441 14.3403 2.20978C13.4198 2.47515 12.5872 2.98221 11.9292 3.67853C11.2712 4.37485 10.812 5.23517 10.5991 6.16925L8.04199 8.72492L4.81006 8.77618C4.03731 8.78841 3.29973 9.10038 2.75317 9.64679L2 10.4002L3.66699 12.0672M15.5291 7.6521C15.7148 7.83845 15.8537 8.06624 15.9344 8.31665C16.015 8.56706 16.035 8.83333 15.993 9.09302C15.9509 9.3527 15.848 9.59864 15.6924 9.81079C15.5369 10.0229 15.3332 10.195 15.0982 10.3132C14.8689 10.4321 14.6145 10.4944 14.3562 10.4944C14.098 10.4944 13.8433 10.4321 13.614 10.3132C13.3791 10.1949 13.1757 10.0225 13.0203 9.8103C12.8648 9.5981 12.7617 9.3522 12.7198 9.09253C12.6778 8.83285 12.6981 8.56701 12.7788 8.31665C12.8595 8.06629 12.9984 7.83839 13.1841 7.6521C13.2285 7.60799 13.2754 7.56627 13.3242 7.5271M7.16709 13.4182L4.24109 16.3442M9.73309 16.0522L7.45309 18.3322",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Rocket = {
  component: RocketComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
RocketComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
RocketComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var RotateLeftComponent = function RotateLeftComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M20.8872 19.8799V15.8428C20.8872 15.0968 20.7402 14.3583 20.4546 13.6692C20.169 12.9801 19.7503 12.3539 19.2227 11.8267C18.695 11.2994 18.0685 10.8814 17.3792 10.5964C16.6898 10.3114 15.951 10.1651 15.2051 10.1658L6 10.1748M11.1692 5L6 10.1689L11.1692 15.3379",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var RotateLeft = {
  component: RotateLeftComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
RotateLeftComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
RotateLeftComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var RotateRightComponent = function RotateRightComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M5 19.8799V15.8428C5 15.0968 5.14695 14.3581 5.43262 13.6689C5.71829 12.9798 6.137 12.3537 6.66479 11.8264C7.19259 11.2992 7.81909 10.8811 8.50854 10.5962C9.198 10.3113 9.93684 10.165 10.6829 10.1658L19.8828 10.1748M14.718 5L19.887 10.1689L14.718 15.3379",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var RotateRight = {
  component: RotateRightComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
RotateRightComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
RotateRightComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ScanCardComponent = function ScanCardComponent(_ref) {
  var fill = _ref.fill,
    stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M5 7.66667C5 6.19391 6.19391 5 7.66667 5H25.4444C26.9172 5 28.1111 6.19391 28.1111 7.66667V18.3333C28.1111 19.8061 26.9172 21 25.4444 21H7.66667C6.19391 21 5 19.8061 5 18.3333V7.66667ZM7.66667 6.77778C7.17575 6.77778 6.77778 7.17575 6.77778 7.66667V18.3333C6.77778 18.8243 7.17575 19.2222 7.66667 19.2222H25.4444C25.9354 19.2222 26.3333 18.8243 26.3333 18.3333V7.66667C26.3333 7.17575 25.9354 6.77778 25.4444 6.77778H7.66667Z",
    fill: smartColor || fill
  }), /*#__PURE__*/React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M27.6667 11.4457H5.66675V9.66797H27.6667V11.4457Z",
    fill: smartColor || fill
  }), /*#__PURE__*/React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M19.2222 16.5569C19.2222 16.0659 19.6201 15.668 20.1111 15.668H23.6666C24.1575 15.668 24.5555 16.0659 24.5555 16.5569C24.5555 17.0478 24.1575 17.4457 23.6666 17.4457H20.1111C19.6201 17.4457 19.2222 17.0478 19.2222 16.5569Z",
    fill: smartColor || fill
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M5 1H1V5",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M5 25H1V21",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M28 1H32V5",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M28 25H32V21",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
ScanCardComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ScanCardComponent.defaultProps = {
  fill: "#B8C4CE",
  stroke: "#B8C4CE",
  strokeWidth: "2",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};
var ScanCard = {
  component: ScanCardComponent,
  viewBox: "0 0 33 26",
  fill: "none"
};

var ScrollComponent = function ScrollComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M19.585 20.856H6.47192C5.55109 20.856 4.66797 20.4905 4.01685 19.8394C3.36572 19.1882 3 18.3051 3 17.3843V3.99219C3 3.86192 3.02559 3.73266 3.07544 3.6123C3.12529 3.49195 3.19841 3.38264 3.29053 3.29053C3.38264 3.19841 3.49195 3.12554 3.6123 3.07568C3.73266 3.02583 3.86167 3 3.99194 3H16.0779C16.2082 3 16.3372 3.02583 16.4575 3.07568C16.5779 3.12554 16.6874 3.19841 16.7795 3.29053C16.8717 3.38264 16.9445 3.49195 16.9944 3.6123C17.0442 3.73266 17.0701 3.86192 17.0701 3.99219V15.3989",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M17.0698 11.1082V18.6008C17.0701 19.1988 17.3079 19.7722 17.7307 20.1951C18.1535 20.6179 18.727 20.8559 19.325 20.8562C19.9231 20.8562 20.4966 20.6184 20.9197 20.1956C21.3427 19.7727 21.5805 19.199 21.5808 18.6008V12.1008C21.5808 11.8377 21.4763 11.5857 21.2903 11.3997C21.1042 11.2136 20.852 11.1091 20.5889 11.1091H19.9109",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M6.24902 8.0871H8.77302",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M6.24902 11.5331H13.421",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M6.24902 14.9801H13.547",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Scroll = {
  component: ScrollComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ScrollComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ScrollComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var SearchComponent = function SearchComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M19.25 19.25L15.5 15.5L19.25 19.25ZM4.75 11C4.75 7.54822 7.54822 4.75 11 4.75C14.4518 4.75 17.25 7.54822 17.25 11C17.25 14.4518 14.4518 17.25 11 17.25C7.54822 17.25 4.75 14.4518 4.75 11Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Search = {
  component: SearchComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
SearchComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
SearchComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var SelectItemComponent = function SelectItemComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M17.3609 12.0708V18.2217C17.3609 18.6933 17.1737 19.1456 16.8403 19.479C16.5068 19.8125 16.0545 20 15.5829 20H5.77778C5.30626 20 4.85411 19.8125 4.52069 19.479C4.18727 19.1456 4 18.6933 4 18.2217V8.41597C4 7.94437 4.18727 7.49215 4.52069 7.15868C4.85411 6.82521 5.30626 6.6377 5.77778 6.6377H11.9547",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M14.7218 6.59932V6.67459C14.7275 7.36916 15.0086 8.03312 15.5035 8.52047C15.9983 9.00783 16.6664 9.27863 17.3609 9.27362V9.27362C18.0554 9.27863 18.7235 9.00783 19.2183 8.52047C19.7132 8.03312 19.9943 7.36916 20 6.67459V6.59932C19.9941 5.90482 19.7129 5.24096 19.2181 4.75365C18.7233 4.26635 18.0553 3.99529 17.3609 4.00007V4.00007C16.6664 3.99506 15.9983 4.26608 15.5035 4.75343C15.0086 5.24079 14.7275 5.90475 14.7218 6.59932V6.59932Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var SelectItem = {
  component: SelectItemComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
SelectItemComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
SelectItemComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var SendComponent = function SendComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M10 14L21 3",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20 4L14.3234 19.7198C14.2851 19.8034 14.2236 19.8742 14.1462 19.9239C14.0688 19.9736 13.9787 20 13.8868 20C13.7948 20 13.7047 19.9736 13.6273 19.9239C13.5499 19.8742 13.4884 19.8034 13.4501 19.7198L10.3935 13.6065L4.28022 10.5499C4.19661 10.5116 4.12576 10.4501 4.07608 10.3727C4.02641 10.2953 4 10.2052 4 10.1132C4 10.0213 4.02641 9.93123 4.07608 9.85383C4.12576 9.77642 4.19661 9.7149 4.28022 9.67659L20 4Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Send = {
  component: SendComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
SendComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
SendComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var SettingsComponent = function SettingsComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M11.922 14.8101C13.5137 14.8101 14.804 13.5198 14.804 11.9281C14.804 10.3365 13.5137 9.04614 11.922 9.04614C10.3304 9.04614 9.04004 10.3365 9.04004 11.9281C9.04004 13.5198 10.3304 14.8101 11.922 14.8101Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20.8489 13.6101V10.2471H18.1489C18.0052 9.71112 17.7924 9.19615 17.5159 8.71509L19.426 6.80505L17.0481 4.427L15.1379 6.33801C14.6566 6.06076 14.1418 5.84641 13.606 5.70007V3H10.2429V5.70007C9.70703 5.84624 9.19217 6.0606 8.71094 6.33801L6.80103 4.427L4.4231 6.80505L6.33301 8.71509C6.05677 9.19629 5.84395 9.71122 5.69995 10.2471H3V13.6101H5.69995C5.84395 14.146 6.05677 14.6609 6.33301 15.1421L4.4231 17.052L6.80103 19.4301L8.71094 17.519C9.19217 17.7965 9.70703 18.0109 10.2429 18.1571V20.8571H13.606V18.1571C14.1418 18.0108 14.6566 17.7963 15.1379 17.519L17.0481 19.4301L19.426 17.052L17.5159 15.1421C17.7924 14.661 18.0052 14.1461 18.1489 13.6101H20.8489Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Settings = {
  component: SettingsComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
SettingsComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
SettingsComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ShareComponent = function ShareComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M6 15C7.65685 15 9 13.6569 9 12C9 10.3431 7.65685 9 6 9C4.34315 9 3 10.3431 3 12C3 13.6569 4.34315 15 6 15Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M18 9C19.6569 9 21 7.65685 21 6C21 4.34315 19.6569 3 18 3C16.3431 3 15 4.34315 15 6C15 7.65685 16.3431 9 18 9Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M18 21C19.6569 21 21 19.6569 21 18C21 16.3431 19.6569 15 18 15C16.3431 15 15 16.3431 15 18C15 19.6569 16.3431 21 18 21Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.7 10.7L15.3 7.29999",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.7 13.3L15.3 16.7",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Share = {
  component: ShareComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ShareComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ShareComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ShieldComponent$1 = function ShieldComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M9.45518 4.021L12.13 3L19.2591 5.72021V11.2783C19.2589 13.4292 18.5651 15.5227 17.2809 17.248C15.9966 18.9734 14.1903 20.2384 12.13 20.856C10.0695 20.2386 8.26294 18.9725 6.97852 17.2471C5.6941 15.5217 5.00028 13.4283 5 11.2773V5.71924L6.9751 4.96631",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Shield$1 = {
  component: ShieldComponent$1,
  viewBox: "0 0 24 24",
  fill: "none"
};
ShieldComponent$1.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ShieldComponent$1.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var _excluded$N = ["fill", "stroke", "smartColor", "strokeWidth", "strokeLineCap", "strokeLineJoin"];
var ShieldComponent = function ShieldComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _objectWithoutProperties(_ref, _excluded$N);
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M15.4601 9.38818L11.3591 13.4892L9.09308 11.4232M9.45518 4.021L12.13 3L19.2601 5.72021V11.2783C19.2598 13.4293 18.566 15.5226 17.2816 17.248C15.9972 18.9735 14.1905 20.2386 12.13 20.856C10.0695 20.2386 8.26294 18.9725 6.97852 17.2471C5.6941 15.5217 5.00028 13.4284 5 11.2774V5.71926L6.97412 4.96633",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Shield = {
  component: ShieldComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ShieldComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ShieldComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ShieldFlashComponent = function ShieldFlashComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12.13 20.855C14.1905 20.2377 15.9971 18.9725 17.2816 17.2471C18.566 15.5217 19.2598 13.4279 19.2601 11.2769V5.71979L12.13 3.00006L9.4549 4.02008",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M6.97507 4.96594L4.99997 5.71887V11.277C5.00025 13.428 5.69406 15.5218 6.97849 17.2472C8.26291 18.9726 10.0696 20.2378 12.1301 20.8551",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12.1301 7.53906L9.80811 11.0981H14.4519L12.1301 14.9272",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var ShieldFlash = {
  component: ShieldFlashComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ShieldFlashComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ShieldFlashComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var ShopComponent = function ShopComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M19.2131 11.7781V18.373C19.2131 18.8992 19.0042 19.4041 18.6321 19.7761C18.26 20.1482 17.7554 20.3572 17.2292 20.3572H6.63916C6.11297 20.3572 5.6084 20.1482 5.23633 19.7761C4.86426 19.4041 4.65527 18.8992 4.65527 18.373V14.1931",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M5.72049 5C5.41129 4.99994 5.10968 5.09618 4.8577 5.27539C4.60573 5.45461 4.4159 5.70789 4.31449 6L3.13163 9.41797C3.01738 9.69213 2.97644 9.99138 3.01298 10.2861C3.04951 10.5809 3.16216 10.8612 3.33988 11.0991C3.5176 11.3371 3.75415 11.5246 4.0264 11.6433C4.29866 11.762 4.5973 11.8078 4.89261 11.7761C5.41002 11.7633 5.91652 11.6248 6.36844 11.3726C6.82037 11.1203 7.20413 10.7618 7.48661 10.3281C7.63221 10.7646 7.91567 11.1419 8.29447 11.4031C8.67327 11.6643 9.12673 11.7952 9.58646 11.7761C9.8051 11.3402 10.1407 10.9737 10.5557 10.7175C10.9707 10.4614 11.4489 10.3257 11.9366 10.3257C12.4242 10.3257 12.9024 10.4614 13.3174 10.7175C13.7324 10.9737 14.068 11.3402 14.2867 11.7761C14.7464 11.7952 15.1998 11.6643 15.5786 11.4031C15.9575 11.1419 16.2409 10.7646 16.3865 10.3281C16.669 10.7618 17.0528 11.1203 17.5047 11.3726C17.9566 11.6248 18.4631 11.7633 18.9805 11.7761C19.2758 11.8078 19.5742 11.762 19.8465 11.6433C20.1187 11.5246 20.3555 11.3371 20.5332 11.0991C20.711 10.8612 20.8236 10.5809 20.8601 10.2861C20.8967 9.99138 20.8557 9.69213 20.7415 9.41797L19.5596 6C19.4582 5.70789 19.2681 5.45461 19.0161 5.27539C18.7642 5.09618 18.4628 4.99994 18.1536 5H5.72049Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M14.0823 20.356H9.83936V16.5081C9.83936 15.9728 10.052 15.4595 10.4304 15.0811C10.8089 14.7026 11.322 14.49 11.8572 14.49H12.0632C12.5984 14.49 13.1118 14.7026 13.4902 15.0811C13.8687 15.4595 14.0813 15.9728 14.0813 16.5081L14.0823 20.356Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Shop = {
  component: ShopComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
ShopComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
ShopComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var SortComponent = function SortComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M6 9L12 3L18 9M18 15L12 21L6 15",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Sort = {
  component: SortComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
SortComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
SortComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var Sort2Component = function Sort2Component(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M3 9L7 5M7 5L11 9M7 5V19",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M21 15L17 19M17 19L13 15M17 19V5",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Sort2 = {
  component: Sort2Component,
  viewBox: "0 0 24 24",
  fill: "none"
};
Sort2Component.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Sort2Component.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var SortAscendingComponent = function SortAscendingComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M4 6H11",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4 12H11",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4 18H13",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15 9L18 6L21 9",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M18 6V18",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var SortAscending = {
  component: SortAscendingComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
SortAscendingComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
SortAscendingComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var SortDescendingComponent = function SortDescendingComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M4.5 6H13.5",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4.5 12H11.5",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M4.5 18H11.5",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15.5 15L18.5 18L21.5 15",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M18.5 6V18",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var SortDescending = {
  component: SortDescendingComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
SortDescendingComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
SortDescendingComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var SoundComponent = function SoundComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M6.52808 9.71173H4.48804C4.09339 9.71173 3.71485 9.86871 3.43579 10.1478C3.15674 10.4268 3 10.8054 3 11.2V13.2938C3 13.6884 3.15674 14.067 3.43579 14.346C3.71485 14.6251 4.09339 14.7816 4.48804 14.7816H6.52808C6.90774 14.7817 7.273 14.9272 7.54907 15.1878L10.271 17.7576C10.3421 17.8222 10.4304 17.8649 10.5251 17.8807C10.6199 17.8964 10.7172 17.8846 10.8054 17.8465C10.8936 17.8084 10.969 17.7461 11.0225 17.6663C11.076 17.5865 11.1054 17.4928 11.1072 17.3968V7.09698C11.1054 7.00095 11.076 6.90723 11.0225 6.82745C10.969 6.74768 10.8936 6.68487 10.8054 6.64679C10.7172 6.60871 10.6199 6.59686 10.5251 6.61261C10.4304 6.62836 10.3421 6.67109 10.271 6.73566L7.54907 9.30597C7.27311 9.56678 6.90778 9.71181 6.52808 9.71173V9.71173Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15.0859 14.6928C15.5295 14.383 15.8918 13.9705 16.1418 13.4907C16.3919 13.0109 16.5225 12.4781 16.5225 11.937C16.5225 11.3959 16.3919 10.8626 16.1418 10.3828C15.8918 9.90298 15.5295 9.49052 15.0859 9.18063",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M18.07 6C18.9429 6.72356 19.6454 7.63063 20.1276 8.65674C20.6099 9.68284 20.8598 10.8028 20.8598 11.9365C20.8598 13.0703 20.6099 14.1897 20.1276 15.2158C19.6454 16.2419 18.9429 17.1495 18.07 17.873",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Sound = {
  component: SoundComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
SoundComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
SoundComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var StackComponent = function StackComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M16.6129 11.937L11.9659 15.0908L7.26012 11.918",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M16.614 11.937L20.874 9.0459L11.908 3L3.00001 9.0459L7.26002 11.9189",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M16.614 11.937L20.874 14.8101L11.9661 20.855L3.00001 14.8101L5.04688 13.4199",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Stack = {
  component: StackComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
StackComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
StackComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var StaffComponent = function StaffComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M11.9119 13.118C14.7059 13.118 16.9709 10.853 16.9709 8.059C16.9709 5.26499 14.7059 3 11.9119 3C9.11791 3 6.85292 5.26499 6.85292 8.059C6.85292 10.853 9.11791 13.118 11.9119 13.118Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20.8259 20.83C20.8261 19.8176 20.6268 18.8153 20.2395 17.88C19.8522 16.9447 19.2844 16.0948 18.5686 15.3789C17.8528 14.663 17.0031 14.0952 16.0679 13.7078C15.1326 13.3203 14.1302 13.121 13.1179 13.121H10.708C8.66363 13.1212 6.70307 13.9336 5.25757 15.3793C3.81207 16.825 3 18.7856 3 20.83V20.83",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M16.4448 17.989H17.1021",
    stroke: smartColor || stroke,
    strokeLinecap: strokeLineCap
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M11.9127 13.5181L9.75397 19.4671L11.9127 13.5181Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M11.398 13.5181L13.6328 19.4671L11.398 13.5181Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Staff = {
  component: StaffComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
StaffComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
StaffComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var StarComponent = function StarComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12.1741 17.5499L17.845 20.5499L16.762 14.2019L21.3499 9.7019L15.01 8.776L12.175 3L9.34009 8.776L3 9.7019L7.58789 14.2019L6.50488 20.5499L12.1741 17.5499Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Star = {
  component: StarComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
StarComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
StarComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var StopCircleComponent = function StopCircleComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M11.9987 9.28864H14.7103V14.7122H9.28558V9.28864",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var StopCircle = {
  component: StopCircleComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
StopCircleComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
StopCircleComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var StopwatchComponent = function StopwatchComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12.412 20.856C16.5055 20.856 19.824 17.5375 19.824 13.444C19.824 9.35045 16.5055 6.03198 12.412 6.03198C8.31847 6.03198 5 9.35045 5 13.444C5 17.5375 8.31847 20.856 12.412 20.856Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12.4109 9.26715V13.4439L14.711 15.5108",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9 3H15.378",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12 3V6.032",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Stopwatch = {
  component: StopwatchComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
StopwatchComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
StopwatchComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var SunComponent = function SunComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M11.928 3V4.994M11.928 18.861V20.855M3 11.927H4.994M18.861 11.927H20.855M18.24 5.61499L16.83 7.02499M7.02501 16.83L5.61501 18.24M5.61501 5.61499L7.02501 7.02499M16.83 16.83L18.24 18.24M15.751 11.928C15.751 14.0394 14.0394 15.751 11.928 15.751C9.81661 15.751 8.105 14.0394 8.105 11.928C8.105 9.8166 9.81661 8.10498 11.928 8.10498C14.0394 8.10498 15.751 9.8166 15.751 11.928Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Sun = {
  component: SunComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
SunComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
SunComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var SupportComponent = function SupportComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M14.0361 20.5952C12.6519 20.9429 11.2032 20.9429 9.81904 20.5952V15.4622M14.0361 20.5952C15.625 20.2076 17.0768 19.3909 18.2333 18.2344C19.3898 17.0779 20.2066 15.626 20.5941 14.0371M14.0361 20.5952L14.036 15.4619M14.0361 3.26076C12.6519 2.91308 11.2032 2.91308 9.81904 3.26076M14.0361 3.26076C15.6251 3.64823 17.077 4.46484 18.2335 5.62134C19.39 6.77784 20.2075 8.23011 20.5949 9.81909M14.0361 3.26076V8.39185M9.81904 3.26076C8.23011 3.64833 6.77826 4.46534 5.62178 5.62183C4.46529 6.77831 3.64851 8.23016 3.26094 9.81909M9.81904 3.26076V8.39185M20.5949 9.81909C20.9429 11.2032 20.9429 12.6518 20.5949 14.0359L15.463 14.0361M20.5949 9.81909H15.463C15.8459 10.4557 16.0482 11.1846 16.0482 11.9275C16.0482 12.6704 15.8459 13.3995 15.463 14.0361M3.26094 9.81909C2.91292 11.2032 2.91307 12.6518 3.26108 14.0359H8.3921C8.00951 13.3991 7.80738 12.6704 7.80738 11.9275C7.80738 11.1846 8.00951 10.4559 8.3921 9.81909H3.26094ZM9.82197 20.5933C8.23309 20.2056 6.78117 19.3889 5.62471 18.2324C4.46824 17.076 3.65179 15.624 3.26411 14.0352M14.0361 8.39185C13.3995 8.00873 12.6704 7.8064 11.9274 7.8064C11.1845 7.8064 10.4556 8.00873 9.81904 8.39185M14.0361 8.39185C14.6223 8.74188 15.1126 9.23186 15.463 9.81787M9.81904 8.39185C9.23294 8.74208 8.74274 9.23201 8.3921 9.81787M14.036 15.4619C14.6223 15.1119 15.1126 14.6222 15.463 14.0361M14.036 15.4619C13.3994 15.845 12.6704 16.0476 11.9274 16.0476C11.1845 16.0476 10.4556 15.8453 9.81904 15.4622M9.81904 15.4622C9.23289 15.112 8.74268 14.623 8.3921 14.0371",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Support = {
  component: SupportComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
SupportComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
SupportComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var TableComponent = function TableComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    var fillRule = _ref.fillRule,
    clipRule = _ref.clipRule;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    fillRule: fillRule,
    clipRule: clipRule,
    fill: smartColor || fill,
    d: "M2.25 5.25C2.25 4.83579 2.58579 4.5 3 4.5H21C21.4142 4.5 21.75 4.83579 21.75 5.25V18C21.75 18.3978 21.592 18.7794 21.3107 19.0607C21.0294 19.342 20.6478 19.5 20.25 19.5H3.75C3.35218 19.5 2.97065 19.342 2.68934 19.0607C2.40804 18.7794 2.25 18.3978 2.25 18V5.25ZM3.75 10.5V13.5H7.50001V10.5H3.75ZM3.75 9V6H20.25V9H3.75ZM9.00001 10.5V13.5H20.25V10.5H9.00001ZM20.25 15H9.00001V18H20.25V15ZM7.50001 18V15H3.75V18H7.50001Z"
  }));
};
var Table$1 = {
  component: TableComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
TableComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string,
  fillRule: propTypes.exports.string,
  clipRule: propTypes.exports.string
};
TableComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round",
  fillRule: "evenodd",
  clipRule: "evenodd"
};

var TagComponent = function TagComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M3.73396 15.2779L8.72224 20.2663C9.19206 20.736 9.82939 21 10.4938 21C11.1581 21 11.7952 20.736 12.265 20.2663L19.5595 12.9717C19.8412 12.6897 19.9996 12.3075 20 11.909V4H12.0914C11.6928 4.00009 11.3105 4.15856 11.0287 4.44048L3.73396 11.7351C3.50124 11.9676 3.3166 12.2438 3.19064 12.5477C3.06469 12.8517 3 13.1774 3 13.5064C3 13.8354 3.06469 14.1613 3.19064 14.4653C3.3166 14.7692 3.50124 15.0454 3.73396 15.2779Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15.1222 10.0612C15.6801 10.0612 16.1324 9.60889 16.1324 9.05097C16.1324 8.49305 15.6801 8.04077 15.1222 8.04077C14.5643 8.04077 14.112 8.49305 14.112 9.05097C14.112 9.60889 14.5643 10.0612 15.1222 10.0612Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Tag = {
  component: TagComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
TagComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
TagComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var TextComponent = function TextComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M9.28998 19.0481H13.912M11.601 4V19.048M5 5.53589V4.00024H18.2V5.53589",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Text = {
  component: TextComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
TextComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
TextComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var TimeComponent = function TimeComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M11.928 20.856C16.8588 20.856 20.856 16.8588 20.856 11.928C20.856 6.9972 16.8588 3 11.928 3C6.9972 3 3 6.9972 3 11.928C3 16.8588 6.9972 20.856 11.928 20.856Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M11.9238 6.89587V11.9271H16.6289",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Time = {
  component: TimeComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
TimeComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
TimeComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var TransferComponent = function TransferComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M21 7H3",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M18 10L21 7L18 4",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M6 20L3 17L6 14",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M3 17H21",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Transfer = {
  component: TransferComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
TransferComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
TransferComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var TrophyComponent = function TrophyComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M8.99103 4H15.7371C16.1318 4 16.5103 4.15649 16.7894 4.43555C17.0684 4.7146 17.2252 5.09315 17.2252 5.48779V9.9458C17.2349 11.4514 16.6587 12.9017 15.6185 13.9902C14.5783 15.0788 13.1557 15.7202 11.6512 15.7788C10.1467 15.7202 8.72384 15.0788 7.68365 13.9902C6.64346 12.9017 6.0675 11.4514 6.07721 9.9458V4.84619M15.747 19.9058V19.9542C15.747 20.1929 15.6521 20.4216 15.4833 20.5904C15.3146 20.7592 15.0858 20.8541 14.8471 20.8541H8.44696C8.32877 20.8541 8.21167 20.8304 8.10248 20.7852C7.99329 20.74 7.8943 20.674 7.81073 20.5904C7.72716 20.5068 7.66065 20.4076 7.61542 20.2984C7.57019 20.1892 7.54706 20.0724 7.54706 19.9542V19.9058M11.65 15.779V20.852M20.3 6.46509V11.1941M3 11.1941V6.46509",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Trophy = {
  component: TrophyComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
TrophyComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
TrophyComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var UnlockComponent = function UnlockComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M15.0996 8.1153H9.90036C7.19397 8.1153 5 10.3703 5 13.1519V15.9633C5 18.745 7.19397 21 9.90036 21H15.0996C17.806 21 20 18.745 20 15.9633V13.1519C20 10.3703 17.806 8.1153 15.0996 8.1153Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8.77323 8.11628L8.73016 8.00266C8.58106 7.5228 8.52535 7.01726 8.56626 6.51529C8.60717 6.01331 8.74402 5.52477 8.96872 5.0771C9.19342 4.62942 9.50154 4.23121 9.87581 3.90599C10.2501 3.58077 10.6831 3.33473 11.15 3.18148C11.8987 2.93598 12.7037 2.93969 13.4503 3.19181C14.197 3.44394 14.8474 3.93167 15.3086 4.58573",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M11.0953 14.5581H13.9081",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Unlock = {
  component: UnlockComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
UnlockComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
UnlockComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var UploadComponent = function UploadComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M4.69312 10.03L3.47412 8.63C3.16854 8.27784 3.00012 7.82722 3 7.36096V4.58301C3 4.16317 3.16675 3.76049 3.46362 3.46362C3.76049 3.16675 4.16317 3 4.58301 3H18.8281C19.248 3 19.6506 3.16675 19.9475 3.46362C20.2444 3.76049 20.4111 4.16317 20.4111 4.58301V7.36096C20.4111 7.82724 20.2427 8.27789 19.937 8.63L18.718 10.03M7.07599 14.2091L11.7032 9.58105L16.3311 14.2091M11.7041 20.8532V9.81519",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Upload = {
  component: UploadComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
UploadComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
UploadComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var VerticalArrowsComponent = function VerticalArrowsComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M8 7L12 3L16 7",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M8 17L12 21L16 17",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12 3V21",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var VerticalArrows = {
  component: VerticalArrowsComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
VerticalArrowsComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
VerticalArrowsComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var VideoComponent = function VideoComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M4.98413 6.00195C4.45794 6.00195 3.95313 6.21094 3.58105 6.58301C3.20898 6.95508 3 7.45965 3 7.98584V16.0068C3 16.533 3.20898 17.0376 3.58105 17.4097C3.95313 17.7817 4.45794 17.9907 4.98413 17.9907H13.0051C13.5313 17.9907 14.0359 17.7817 14.408 17.4097C14.78 17.0376 14.989 16.533 14.989 16.0068V14.2158L19.4121 16.479C19.5633 16.5564 19.7318 16.5933 19.9016 16.5869C20.0714 16.5805 20.2367 16.5305 20.3816 16.4419C20.5265 16.3533 20.6462 16.2292 20.7292 16.0811C20.8123 15.9329 20.856 15.7656 20.856 15.5957V8.396C20.856 8.22611 20.8123 8.05883 20.7292 7.91064C20.6462 7.76246 20.5265 7.63794 20.3816 7.54932C20.2367 7.46069 20.0714 7.41122 19.9016 7.40479C19.7318 7.39835 19.5633 7.43529 19.4121 7.5127L14.989 9.77588V7.98389C14.989 7.4577 14.78 6.95313 14.408 6.58105C14.0359 6.20898 13.5313 6 13.0051 6H7.46313",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Video = {
  component: VideoComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
VideoComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
VideoComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var VideoOffComponent = function VideoOffComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M4.94006 17.3965C5.25995 17.5966 5.63155 17.7027 6.0109 17.702H14.0912C14.6212 17.702 15.1295 17.4954 15.5044 17.1277C15.8792 16.7599 16.0897 16.2611 16.0897 15.741V13.9707L20.5455 16.2073C20.6978 16.2838 20.8676 16.3208 21.0386 16.3144C21.2096 16.3081 21.3761 16.2587 21.5221 16.1711C21.6681 16.0835 21.7886 15.9604 21.8723 15.8139C21.956 15.6674 22.0002 15.5026 22.0002 15.3347V8.21764C22.0001 8.04974 21.956 7.88482 21.8723 7.73838C21.7886 7.59193 21.6681 7.46889 21.5221 7.38122C21.3762 7.29356 21.2098 7.24393 21.0388 7.23739C20.8678 7.23086 20.6979 7.2678 20.5455 7.34406L16.0897 9.58061V7.81029C16.0902 7.45152 15.9899 7.09976 15.7997 6.79337",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M12.2896 5.85147H6.00666C5.47659 5.85147 4.96804 6.05804 4.59322 6.42581C4.2184 6.79359 4.00787 7.29233 4.00787 7.81244V14.3749",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M18.3066 4L2 20",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var VideoOff = {
  component: VideoOffComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
VideoOffComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
VideoOffComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var VoucherComponent = function VoucherComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M11.9998 18H20.5775C20.6895 18 20.797 17.9575 20.8763 17.882C20.9555 17.8065 20.9998 17.7042 20.9998 17.5974V14.35H20.9656C20.6466 14.3502 20.3308 14.2904 20.036 14.1741C19.7413 14.0578 19.4733 13.8874 19.2477 13.6725C19.0221 13.4575 18.8432 13.2021 18.7211 12.9212C18.599 12.6403 18.5362 12.3392 18.5362 12.0351V12.0351C18.5362 11.4208 18.7921 10.8318 19.2477 10.3974C19.7034 9.9631 20.3213 9.71916 20.9656 9.71916H20.9998V6.4026C20.9998 6.29581 20.9555 6.19353 20.8763 6.11801C20.797 6.0425 20.6895 6 20.5775 6H8.78311",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M20.9987 9.71899H20.9645C20.3204 9.71925 19.7025 9.96344 19.2471 10.3977C18.7918 10.832 18.5359 11.4208 18.5359 12.0349V12.0349C18.5358 12.339 18.5985 12.6403 18.7205 12.9213C18.8425 13.2023 19.0214 13.4575 19.2469 13.6725C19.4724 13.8876 19.7403 14.0582 20.0349 14.1746C20.3296 14.291 20.6455 14.351 20.9645 14.351H20.9987",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M11.9999 18H3.42348C3.36793 18.0001 3.3129 17.9897 3.26154 17.9695C3.21018 17.9493 3.16329 17.9198 3.12396 17.8824C3.08463 17.845 3.05345 17.8004 3.03216 17.7515C3.01087 17.7026 2.99992 17.6503 2.99992 17.5974V14.35H3.03438C3.35337 14.3502 3.66919 14.2904 3.96394 14.1741C4.25869 14.0578 4.52638 13.8874 4.75199 13.6725C4.97759 13.4575 5.15656 13.2021 5.27866 12.9212C5.40077 12.6403 5.46374 12.3392 5.46374 12.0351V12.0351C5.46374 11.4208 5.20784 10.8318 4.75223 10.3974C4.29662 9.9631 3.67871 9.71916 3.03438 9.71916H2.99992V6.4026C3.00019 6.29572 3.04508 6.1935 3.12446 6.11801C3.20383 6.04253 3.31136 6 3.42348 6H5.78417",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M3 9.71899H3.03446C3.67879 9.71899 4.2967 9.96294 4.75231 10.3973C5.20792 10.8316 5.46381 11.4207 5.46381 12.0349V12.0349C5.46381 12.6491 5.20792 13.2384 4.75231 13.6728C4.2967 14.1071 3.67879 14.351 3.03446 14.351H3",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.70652 10.5858H14.2922",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.70652 10.5858H14.2922",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M9.7065 13.4141H14.2922",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Voucher = {
  component: VoucherComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
VoucherComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
VoucherComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var WalletComponent = function WalletComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M20.999 6.26391V5.93689C20.999 5.42317 20.7884 4.93055 20.4135 4.56729C20.0385 4.20404 19.5298 4.00001 18.9995 4.00001H5.42472C5.10625 3.99936 4.79077 4.05957 4.49641 4.17734C4.20206 4.29511 3.93477 4.46807 3.70958 4.68623C3.48438 4.90439 3.30585 5.16357 3.18428 5.44873C3.06272 5.7339 3.00032 6.03953 3.00098 6.34805V6.34805C3.00032 6.65658 3.06272 6.96221 3.18428 7.24737C3.30585 7.53254 3.48438 7.79147 3.70958 8.00963C3.93477 8.2278 4.20206 8.40075 4.49641 8.51852C4.79077 8.6363 5.10625 8.6965 5.42472 8.69586H18.9955C19.5258 8.69586 20.0343 8.90013 20.4093 9.26339C20.7843 9.62664 20.9949 10.1193 20.9949 10.633V17.5472C20.9949 17.9325 20.8369 18.3021 20.5557 18.5745C20.2745 18.847 19.8932 19 19.4955 19H5.99923C5.2038 19 4.44106 18.6937 3.87861 18.1488C3.31616 17.6039 3 16.865 3 16.0944V6.45722C3 5.80549 3.26734 5.18045 3.74304 4.7196C4.21874 4.25876 4.86393 4.00001 5.53667 4.00001H15.2939",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M16.831 11.9745H21.0002V15.4462H16.831C16.3558 15.4462 15.9001 15.2633 15.564 14.9378C15.228 14.6123 15.0392 14.1707 15.0392 13.7104V13.7104C15.0392 13.25 15.228 12.8085 15.564 12.4829C15.9001 12.1574 16.3558 11.9745 16.831 11.9745V11.9745Z",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Wallet = {
  component: WalletComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
WalletComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
WalletComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var WarningComponent = function WarningComponent(_ref) {
  var fill = _ref.fill;
    _ref.stroke;
    var smartColor = _ref.smartColor;
    _ref.strokeWidth;
    _ref.strokeLineCap;
    _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.0001 2.24172C11.0768 2.24172 10.4033 2.79754 9.82709 3.52159C9.26349 4.22979 8.66372 5.26581 7.92199 6.54703L7.88928 6.60352L3.82707 13.6201L3.79433 13.6766L3.79432 13.6766C3.04978 14.9626 2.44788 16.0022 2.11333 16.8461C1.77141 17.7086 1.62431 18.5718 2.08656 19.3736C2.5488 20.1753 3.36953 20.4805 4.28727 20.6167C5.18526 20.75 6.38653 20.75 7.8725 20.75H7.93784H16.0623H16.1276C17.6136 20.75 18.8148 20.75 19.7128 20.6167C20.6306 20.4805 21.4513 20.1753 21.9136 19.3736C22.3758 18.5718 22.2287 17.7086 21.8868 16.8461C21.5522 16.0022 20.9504 14.9627 20.2059 13.6767L20.2058 13.6766L20.173 13.6201L16.1108 6.60353L16.0781 6.54702C15.3364 5.2658 14.7366 4.22979 14.173 3.52159C13.5968 2.79755 12.9233 2.24172 12.0001 2.24172ZM12.75 9.00002C12.75 8.58581 12.4143 8.25002 12 8.25002C11.5858 8.25002 11.25 8.58581 11.25 9.00002V13C11.25 13.4142 11.5858 13.75 12 13.75C12.4143 13.75 12.75 13.4142 12.75 13V9.00002ZM13.0001 16C13.0001 16.5523 12.5523 17 12.0001 17C11.4478 17 11.0001 16.5523 11.0001 16C11.0001 15.4477 11.4478 15 12.0001 15C12.5523 15 13.0001 15.4477 13.0001 16Z",
    fill: smartColor || fill
  }));
};
WarningComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
WarningComponent.defaultProps = {
  fill: "#212934"
};
var Warning = {
  component: WarningComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};

var WaveComponent = function WaveComponent(_ref) {
  _ref.fill;
    var stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M9.26312 12.7419V18.7629C9.26312 19.125 9.40679 19.4723 9.66278 19.7283C9.91877 19.9843 10.2661 20.1282 10.6281 20.1282C10.9901 20.1282 11.3372 19.9843 11.5932 19.7283C11.8492 19.4723 11.9931 19.125 11.9931 18.7629L11.993 5.36523C11.993 5.00321 12.1369 4.65589 12.3929 4.3999C12.6489 4.14392 12.996 4 13.358 4C13.72 4 14.0671 4.14392 14.3231 4.3999C14.579 4.65589 14.723 5.00321 14.723 5.36523L14.7229 16.0642C14.7229 16.4262 14.8668 16.7736 15.1228 17.0296C15.3788 17.2855 15.7261 17.429 16.0881 17.429C16.4502 17.429 16.7972 17.2855 17.0532 17.0296C17.3092 16.7736 17.4531 16.4262 17.4531 16.0642V14.3342C17.4636 13.9073 17.6408 13.5015 17.947 13.2039C18.2532 12.9062 18.664 12.7403 19.0911 12.742L20.855 12.7422M9.26208 12.7423V8.86438C9.26208 8.50236 9.11817 8.15504 8.86218 7.89905C8.6062 7.64306 8.25912 7.49915 7.89709 7.49915C7.53507 7.49915 7.18775 7.64306 6.93176 7.89905C6.67578 8.15504 6.5321 8.50236 6.5321 8.86438V11.194C6.5321 11.6045 6.3688 11.9984 6.07849 12.2887C5.78818 12.579 5.39456 12.7423 4.98401 12.7423L3 12.7422",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Wave = {
  component: WaveComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
WaveComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
WaveComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var WithdrawComponent = function WithdrawComponent(_ref) {
  var fill = _ref.fill,
    stroke = _ref.stroke,
    smartColor = _ref.smartColor,
    strokeWidth = _ref.strokeWidth,
    strokeLineCap = _ref.strokeLineCap,
    strokeLineJoin = _ref.strokeLineJoin;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M12.0001 9.51472V20.4853",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M7 12.75C7.41421 12.75 7.75 12.4142 7.75 12C7.75 11.5858 7.41421 11.25 7 11.25V12.75ZM17 11.25C16.5858 11.25 16.25 11.5858 16.25 12C16.25 12.4142 16.5858 12.75 17 12.75V11.25ZM6 4.75H18V3.25H6V4.75ZM19.25 6V10H20.75V6H19.25ZM4.75 10V6H3.25V10H4.75ZM7 11.25H6V12.75H7V11.25ZM18 11.25H17V12.75H18V11.25ZM3.25 10C3.25 11.5188 4.48122 12.75 6 12.75V11.25C5.30964 11.25 4.75 10.6904 4.75 10H3.25ZM19.25 10C19.25 10.6904 18.6904 11.25 18 11.25V12.75C19.5188 12.75 20.75 11.5188 20.75 10H19.25ZM18 4.75C18.6904 4.75 19.25 5.30964 19.25 6H20.75C20.75 4.48122 19.5188 3.25 18 3.25V4.75ZM6 3.25C4.48122 3.25 3.25 4.48122 3.25 6H4.75C4.75 5.30964 5.30964 4.75 6 4.75V3.25Z",
    stroke: smartColor || fill
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M16.2427 16.2426L12.0001 20.4852L7.75742 16.2426",
    stroke: smartColor || stroke,
    strokeWidth: strokeWidth,
    strokeLinecap: strokeLineCap,
    strokeLinejoin: strokeLineJoin
  }));
};
var Withdraw = {
  component: WithdrawComponent,
  viewBox: "0 0 24 24",
  fill: "none"
};
WithdrawComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
WithdrawComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var _excluded$M = ["title", "leftIconActive", "leftIconInactive", "rightIcon", "children", "className"];
var Accordion = function Accordion(_ref) {
  var title = _ref.title,
    leftIconActive = _ref.leftIconActive,
    leftIconInactive = _ref.leftIconInactive,
    rightIcon = _ref.rightIcon,
    children = _ref.children,
    className = _ref.className;
    _objectWithoutProperties(_ref, _excluded$M);
  var _useState = useState(false),
    _useState2 = _slicedToArray$4(_useState, 2),
    visible = _useState2[0],
    setVisible = _useState2[1];
  var generateAccordionHeaderClassName = classNames(_defineProperty$6({
    active: visible,
    "ui-accordion__header": true
  }, className, true));
  return /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-accordion"
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: generateAccordionHeaderClassName,
    onClick: function onClick() {
      return setVisible(!visible);
    }
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-accordion__header__left-content"
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-accordion__header__left-icon"
  }, visible ? leftIconActive || /*#__PURE__*/React__default.createElement(Box, {
    className: "text-grey-500"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: ChevronFilledUp,
    height: "32px",
    width: "32px"
  })) : leftIconInactive || /*#__PURE__*/React__default.createElement(Box, {
    className: "text-grey-500"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: ChevronFilledDown,
    height: "32px",
    width: "32px"
  }))), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-accordion__header__title"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    marginY: "0",
    fontFace: "circularSTD",
    scale: "subhead",
    className: "text-grey-600"
  }, title)), rightIcon && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-accordion__header__right-icon"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    height: "32px",
    width: "32px",
    icon: rightIcon
  })))), visible && /*#__PURE__*/React__default.createElement(Box, {
    class: "ui-accordion__content"
  }, children));
};
Accordion.propTypes = {
  title: propTypes.exports.string.isRequired,
  children: propTypes.exports.node,
  leftIconActive: propTypes.exports.element,
  leftIconInactive: propTypes.exports.element,
  rightIcon: propTypes.exports.element
};

var makeBuiltIn = makeBuiltIn$3.exports;
var defineProperty$6 = objectDefineProperty;

var defineBuiltInAccessor$2 = function (target, name, descriptor) {
  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });
  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });
  return defineProperty$6.f(target, name, descriptor);
};

var $$c = _export;
var DESCRIPTORS$5 = descriptors;
var global$8 = global$j;
var uncurryThis$g = functionUncurryThis;
var hasOwn$4 = hasOwnProperty_1;
var isCallable$9 = isCallable$l;
var isPrototypeOf$2 = objectIsPrototypeOf;
var toString$d = toString$f;
var defineBuiltInAccessor$1 = defineBuiltInAccessor$2;
var copyConstructorProperties = copyConstructorProperties$2;

var NativeSymbol = global$8.Symbol;
var SymbolPrototype = NativeSymbol && NativeSymbol.prototype;

if (DESCRIPTORS$5 && isCallable$9(NativeSymbol) && (!('description' in SymbolPrototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : toString$d(arguments[0]);
    var result = isPrototypeOf$2(SymbolPrototype, this)
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };

  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  SymbolWrapper.prototype = SymbolPrototype;
  SymbolPrototype.constructor = SymbolWrapper;

  var NATIVE_SYMBOL = String(NativeSymbol('test')) == 'Symbol(test)';
  var thisSymbolValue = uncurryThis$g(SymbolPrototype.valueOf);
  var symbolDescriptiveString = uncurryThis$g(SymbolPrototype.toString);
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  var replace$3 = uncurryThis$g(''.replace);
  var stringSlice$7 = uncurryThis$g(''.slice);

  defineBuiltInAccessor$1(SymbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = thisSymbolValue(this);
      if (hasOwn$4(EmptyStringDescriptionStore, symbol)) return '';
      var string = symbolDescriptiveString(symbol);
      var desc = NATIVE_SYMBOL ? stringSlice$7(string, 7, -1) : replace$3(string, regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $$c({ global: true, constructor: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}

// This file is autogenerated. It's used to publish ESM to npm.
function _typeof$5(obj) {
  "@babel/helpers - typeof";

  return _typeof$5 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof$5(obj);
}

// https://github.com/bgrins/TinyColor
// Brian Grinstead, MIT License

var trimLeft = /^\s+/;
var trimRight = /\s+$/;
function tinycolor(color, opts) {
  color = color ? color : "";
  opts = opts || {};

  // If input is already a tinycolor, return itself
  if (color instanceof tinycolor) {
    return color;
  }
  // If we are called as a function, call using new instead
  if (!(this instanceof tinycolor)) {
    return new tinycolor(color, opts);
  }
  var rgb = inputToRGB(color);
  this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = Math.round(100 * this._a) / 100, this._format = opts.format || rgb.format;
  this._gradientType = opts.gradientType;

  // Don't let the range of [0,255] come back in [0,1].
  // Potentially lose a little bit of precision here, but will fix issues where
  // .5 gets interpreted as half of the total, instead of half of 1
  // If it was supposed to be 128, this was already taken care of by `inputToRgb`
  if (this._r < 1) this._r = Math.round(this._r);
  if (this._g < 1) this._g = Math.round(this._g);
  if (this._b < 1) this._b = Math.round(this._b);
  this._ok = rgb.ok;
}
tinycolor.prototype = {
  isDark: function isDark() {
    return this.getBrightness() < 128;
  },
  isLight: function isLight() {
    return !this.isDark();
  },
  isValid: function isValid() {
    return this._ok;
  },
  getOriginalInput: function getOriginalInput() {
    return this._originalInput;
  },
  getFormat: function getFormat() {
    return this._format;
  },
  getAlpha: function getAlpha() {
    return this._a;
  },
  getBrightness: function getBrightness() {
    //http://www.w3.org/TR/AERT#color-contrast
    var rgb = this.toRgb();
    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;
  },
  getLuminance: function getLuminance() {
    //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
    var rgb = this.toRgb();
    var RsRGB, GsRGB, BsRGB, R, G, B;
    RsRGB = rgb.r / 255;
    GsRGB = rgb.g / 255;
    BsRGB = rgb.b / 255;
    if (RsRGB <= 0.03928) R = RsRGB / 12.92;else R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);
    if (GsRGB <= 0.03928) G = GsRGB / 12.92;else G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);
    if (BsRGB <= 0.03928) B = BsRGB / 12.92;else B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);
    return 0.2126 * R + 0.7152 * G + 0.0722 * B;
  },
  setAlpha: function setAlpha(value) {
    this._a = boundAlpha(value);
    this._roundA = Math.round(100 * this._a) / 100;
    return this;
  },
  toHsv: function toHsv() {
    var hsv = rgbToHsv(this._r, this._g, this._b);
    return {
      h: hsv.h * 360,
      s: hsv.s,
      v: hsv.v,
      a: this._a
    };
  },
  toHsvString: function toHsvString() {
    var hsv = rgbToHsv(this._r, this._g, this._b);
    var h = Math.round(hsv.h * 360),
      s = Math.round(hsv.s * 100),
      v = Math.round(hsv.v * 100);
    return this._a == 1 ? "hsv(" + h + ", " + s + "%, " + v + "%)" : "hsva(" + h + ", " + s + "%, " + v + "%, " + this._roundA + ")";
  },
  toHsl: function toHsl() {
    var hsl = rgbToHsl(this._r, this._g, this._b);
    return {
      h: hsl.h * 360,
      s: hsl.s,
      l: hsl.l,
      a: this._a
    };
  },
  toHslString: function toHslString() {
    var hsl = rgbToHsl(this._r, this._g, this._b);
    var h = Math.round(hsl.h * 360),
      s = Math.round(hsl.s * 100),
      l = Math.round(hsl.l * 100);
    return this._a == 1 ? "hsl(" + h + ", " + s + "%, " + l + "%)" : "hsla(" + h + ", " + s + "%, " + l + "%, " + this._roundA + ")";
  },
  toHex: function toHex(allow3Char) {
    return rgbToHex(this._r, this._g, this._b, allow3Char);
  },
  toHexString: function toHexString(allow3Char) {
    return "#" + this.toHex(allow3Char);
  },
  toHex8: function toHex8(allow4Char) {
    return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
  },
  toHex8String: function toHex8String(allow4Char) {
    return "#" + this.toHex8(allow4Char);
  },
  toRgb: function toRgb() {
    return {
      r: Math.round(this._r),
      g: Math.round(this._g),
      b: Math.round(this._b),
      a: this._a
    };
  },
  toRgbString: function toRgbString() {
    return this._a == 1 ? "rgb(" + Math.round(this._r) + ", " + Math.round(this._g) + ", " + Math.round(this._b) + ")" : "rgba(" + Math.round(this._r) + ", " + Math.round(this._g) + ", " + Math.round(this._b) + ", " + this._roundA + ")";
  },
  toPercentageRgb: function toPercentageRgb() {
    return {
      r: Math.round(bound01(this._r, 255) * 100) + "%",
      g: Math.round(bound01(this._g, 255) * 100) + "%",
      b: Math.round(bound01(this._b, 255) * 100) + "%",
      a: this._a
    };
  },
  toPercentageRgbString: function toPercentageRgbString() {
    return this._a == 1 ? "rgb(" + Math.round(bound01(this._r, 255) * 100) + "%, " + Math.round(bound01(this._g, 255) * 100) + "%, " + Math.round(bound01(this._b, 255) * 100) + "%)" : "rgba(" + Math.round(bound01(this._r, 255) * 100) + "%, " + Math.round(bound01(this._g, 255) * 100) + "%, " + Math.round(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
  },
  toName: function toName() {
    if (this._a === 0) {
      return "transparent";
    }
    if (this._a < 1) {
      return false;
    }
    return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
  },
  toFilter: function toFilter(secondColor) {
    var hex8String = "#" + rgbaToArgbHex(this._r, this._g, this._b, this._a);
    var secondHex8String = hex8String;
    var gradientType = this._gradientType ? "GradientType = 1, " : "";
    if (secondColor) {
      var s = tinycolor(secondColor);
      secondHex8String = "#" + rgbaToArgbHex(s._r, s._g, s._b, s._a);
    }
    return "progid:DXImageTransform.Microsoft.gradient(" + gradientType + "startColorstr=" + hex8String + ",endColorstr=" + secondHex8String + ")";
  },
  toString: function toString(format) {
    var formatSet = !!format;
    format = format || this._format;
    var formattedString = false;
    var hasAlpha = this._a < 1 && this._a >= 0;
    var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "hex4" || format === "hex8" || format === "name");
    if (needsAlphaFormat) {
      // Special case for "transparent", all other non-alpha formats
      // will return rgba when there is transparency.
      if (format === "name" && this._a === 0) {
        return this.toName();
      }
      return this.toRgbString();
    }
    if (format === "rgb") {
      formattedString = this.toRgbString();
    }
    if (format === "prgb") {
      formattedString = this.toPercentageRgbString();
    }
    if (format === "hex" || format === "hex6") {
      formattedString = this.toHexString();
    }
    if (format === "hex3") {
      formattedString = this.toHexString(true);
    }
    if (format === "hex4") {
      formattedString = this.toHex8String(true);
    }
    if (format === "hex8") {
      formattedString = this.toHex8String();
    }
    if (format === "name") {
      formattedString = this.toName();
    }
    if (format === "hsl") {
      formattedString = this.toHslString();
    }
    if (format === "hsv") {
      formattedString = this.toHsvString();
    }
    return formattedString || this.toHexString();
  },
  clone: function clone() {
    return tinycolor(this.toString());
  },
  _applyModification: function _applyModification(fn, args) {
    var color = fn.apply(null, [this].concat([].slice.call(args)));
    this._r = color._r;
    this._g = color._g;
    this._b = color._b;
    this.setAlpha(color._a);
    return this;
  },
  lighten: function lighten() {
    return this._applyModification(_lighten, arguments);
  },
  brighten: function brighten() {
    return this._applyModification(_brighten, arguments);
  },
  darken: function darken() {
    return this._applyModification(_darken, arguments);
  },
  desaturate: function desaturate() {
    return this._applyModification(_desaturate, arguments);
  },
  saturate: function saturate() {
    return this._applyModification(_saturate, arguments);
  },
  greyscale: function greyscale() {
    return this._applyModification(_greyscale, arguments);
  },
  spin: function spin() {
    return this._applyModification(_spin, arguments);
  },
  _applyCombination: function _applyCombination(fn, args) {
    return fn.apply(null, [this].concat([].slice.call(args)));
  },
  analogous: function analogous() {
    return this._applyCombination(_analogous, arguments);
  },
  complement: function complement() {
    return this._applyCombination(_complement, arguments);
  },
  monochromatic: function monochromatic() {
    return this._applyCombination(_monochromatic, arguments);
  },
  splitcomplement: function splitcomplement() {
    return this._applyCombination(_splitcomplement, arguments);
  },
  // Disabled until https://github.com/bgrins/TinyColor/issues/254
  // polyad: function (number) {
  //   return this._applyCombination(polyad, [number]);
  // },
  triad: function triad() {
    return this._applyCombination(polyad, [3]);
  },
  tetrad: function tetrad() {
    return this._applyCombination(polyad, [4]);
  }
};

// If input is an object, force 1 into "1.0" to handle ratios properly
// String input requires "1.0" as input, so 1 will be treated as 1
tinycolor.fromRatio = function (color, opts) {
  if (_typeof$5(color) == "object") {
    var newColor = {};
    for (var i in color) {
      if (color.hasOwnProperty(i)) {
        if (i === "a") {
          newColor[i] = color[i];
        } else {
          newColor[i] = convertToPercentage(color[i]);
        }
      }
    }
    color = newColor;
  }
  return tinycolor(color, opts);
};

// Given a string or object, convert that input to RGB
// Possible string inputs:
//
//     "red"
//     "#f00" or "f00"
//     "#ff0000" or "ff0000"
//     "#ff000000" or "ff000000"
//     "rgb 255 0 0" or "rgb (255, 0, 0)"
//     "rgb 1.0 0 0" or "rgb (1, 0, 0)"
//     "rgba (255, 0, 0, 1)" or "rgba 255, 0, 0, 1"
//     "rgba (1.0, 0, 0, 1)" or "rgba 1.0, 0, 0, 1"
//     "hsl(0, 100%, 50%)" or "hsl 0 100% 50%"
//     "hsla(0, 100%, 50%, 1)" or "hsla 0 100% 50%, 1"
//     "hsv(0, 100%, 100%)" or "hsv 0 100% 100%"
//
function inputToRGB(color) {
  var rgb = {
    r: 0,
    g: 0,
    b: 0
  };
  var a = 1;
  var s = null;
  var v = null;
  var l = null;
  var ok = false;
  var format = false;
  if (typeof color == "string") {
    color = stringInputToObject(color);
  }
  if (_typeof$5(color) == "object") {
    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
      rgb = rgbToRgb(color.r, color.g, color.b);
      ok = true;
      format = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
      s = convertToPercentage(color.s);
      v = convertToPercentage(color.v);
      rgb = hsvToRgb(color.h, s, v);
      ok = true;
      format = "hsv";
    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
      s = convertToPercentage(color.s);
      l = convertToPercentage(color.l);
      rgb = hslToRgb(color.h, s, l);
      ok = true;
      format = "hsl";
    }
    if (color.hasOwnProperty("a")) {
      a = color.a;
    }
  }
  a = boundAlpha(a);
  return {
    ok: ok,
    format: color.format || format,
    r: Math.min(255, Math.max(rgb.r, 0)),
    g: Math.min(255, Math.max(rgb.g, 0)),
    b: Math.min(255, Math.max(rgb.b, 0)),
    a: a
  };
}

// Conversion Functions
// --------------------

// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:
// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>

// `rgbToRgb`
// Handle bounds / percentage checking to conform to CSS color spec
// <http://www.w3.org/TR/css3-color/>
// *Assumes:* r, g, b in [0, 255] or [0, 1]
// *Returns:* { r, g, b } in [0, 255]
function rgbToRgb(r, g, b) {
  return {
    r: bound01(r, 255) * 255,
    g: bound01(g, 255) * 255,
    b: bound01(b, 255) * 255
  };
}

// `rgbToHsl`
// Converts an RGB color value to HSL.
// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]
// *Returns:* { h, s, l } in [0,1]
function rgbToHsl(r, g, b) {
  r = bound01(r, 255);
  g = bound01(g, 255);
  b = bound01(b, 255);
  var max = Math.max(r, g, b),
    min = Math.min(r, g, b);
  var h,
    s,
    l = (max + min) / 2;
  if (max == min) {
    h = s = 0; // achromatic
  } else {
    var d = max - min;
    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
    switch (max) {
      case r:
        h = (g - b) / d + (g < b ? 6 : 0);
        break;
      case g:
        h = (b - r) / d + 2;
        break;
      case b:
        h = (r - g) / d + 4;
        break;
    }
    h /= 6;
  }
  return {
    h: h,
    s: s,
    l: l
  };
}

// `hslToRgb`
// Converts an HSL color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
function hslToRgb(h, s, l) {
  var r, g, b;
  h = bound01(h, 360);
  s = bound01(s, 100);
  l = bound01(l, 100);
  function hue2rgb(p, q, t) {
    if (t < 0) t += 1;
    if (t > 1) t -= 1;
    if (t < 1 / 6) return p + (q - p) * 6 * t;
    if (t < 1 / 2) return q;
    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
    return p;
  }
  if (s === 0) {
    r = g = b = l; // achromatic
  } else {
    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
    var p = 2 * l - q;
    r = hue2rgb(p, q, h + 1 / 3);
    g = hue2rgb(p, q, h);
    b = hue2rgb(p, q, h - 1 / 3);
  }
  return {
    r: r * 255,
    g: g * 255,
    b: b * 255
  };
}

// `rgbToHsv`
// Converts an RGB color value to HSV
// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
// *Returns:* { h, s, v } in [0,1]
function rgbToHsv(r, g, b) {
  r = bound01(r, 255);
  g = bound01(g, 255);
  b = bound01(b, 255);
  var max = Math.max(r, g, b),
    min = Math.min(r, g, b);
  var h,
    s,
    v = max;
  var d = max - min;
  s = max === 0 ? 0 : d / max;
  if (max == min) {
    h = 0; // achromatic
  } else {
    switch (max) {
      case r:
        h = (g - b) / d + (g < b ? 6 : 0);
        break;
      case g:
        h = (b - r) / d + 2;
        break;
      case b:
        h = (r - g) / d + 4;
        break;
    }
    h /= 6;
  }
  return {
    h: h,
    s: s,
    v: v
  };
}

// `hsvToRgb`
// Converts an HSV color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
function hsvToRgb(h, s, v) {
  h = bound01(h, 360) * 6;
  s = bound01(s, 100);
  v = bound01(v, 100);
  var i = Math.floor(h),
    f = h - i,
    p = v * (1 - s),
    q = v * (1 - f * s),
    t = v * (1 - (1 - f) * s),
    mod = i % 6,
    r = [v, q, p, p, t, v][mod],
    g = [t, v, v, q, p, p][mod],
    b = [p, p, t, v, v, q][mod];
  return {
    r: r * 255,
    g: g * 255,
    b: b * 255
  };
}

// `rgbToHex`
// Converts an RGB color to hex
// Assumes r, g, and b are contained in the set [0, 255]
// Returns a 3 or 6 character hex
function rgbToHex(r, g, b, allow3Char) {
  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];

  // Return a 3 character hex if possible
  if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
  }
  return hex.join("");
}

// `rgbaToHex`
// Converts an RGBA color plus alpha transparency to hex
// Assumes r, g, b are contained in the set [0, 255] and
// a in [0, 1]. Returns a 4 or 8 character rgba hex
function rgbaToHex(r, g, b, a, allow4Char) {
  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16)), pad2(convertDecimalToHex(a))];

  // Return a 4 character hex if possible
  if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {
    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
  }
  return hex.join("");
}

// `rgbaToArgbHex`
// Converts an RGBA color to an ARGB Hex8 string
// Rarely used, but required for "toFilter()"
function rgbaToArgbHex(r, g, b, a) {
  var hex = [pad2(convertDecimalToHex(a)), pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];
  return hex.join("");
}

// `equals`
// Can be called with any tinycolor input
tinycolor.equals = function (color1, color2) {
  if (!color1 || !color2) return false;
  return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();
};
tinycolor.random = function () {
  return tinycolor.fromRatio({
    r: Math.random(),
    g: Math.random(),
    b: Math.random()
  });
};

// Modification Functions
// ----------------------
// Thanks to less.js for some of the basics here
// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>

function _desaturate(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var hsl = tinycolor(color).toHsl();
  hsl.s -= amount / 100;
  hsl.s = clamp01(hsl.s);
  return tinycolor(hsl);
}
function _saturate(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var hsl = tinycolor(color).toHsl();
  hsl.s += amount / 100;
  hsl.s = clamp01(hsl.s);
  return tinycolor(hsl);
}
function _greyscale(color) {
  return tinycolor(color).desaturate(100);
}
function _lighten(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var hsl = tinycolor(color).toHsl();
  hsl.l += amount / 100;
  hsl.l = clamp01(hsl.l);
  return tinycolor(hsl);
}
function _brighten(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var rgb = tinycolor(color).toRgb();
  rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));
  rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));
  rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));
  return tinycolor(rgb);
}
function _darken(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var hsl = tinycolor(color).toHsl();
  hsl.l -= amount / 100;
  hsl.l = clamp01(hsl.l);
  return tinycolor(hsl);
}

// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.
// Values outside of this range will be wrapped into this range.
function _spin(color, amount) {
  var hsl = tinycolor(color).toHsl();
  var hue = (hsl.h + amount) % 360;
  hsl.h = hue < 0 ? 360 + hue : hue;
  return tinycolor(hsl);
}

// Combination Functions
// ---------------------
// Thanks to jQuery xColor for some of the ideas behind these
// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>

function _complement(color) {
  var hsl = tinycolor(color).toHsl();
  hsl.h = (hsl.h + 180) % 360;
  return tinycolor(hsl);
}
function polyad(color, number) {
  if (isNaN(number) || number <= 0) {
    throw new Error("Argument to polyad must be a positive number");
  }
  var hsl = tinycolor(color).toHsl();
  var result = [tinycolor(color)];
  var step = 360 / number;
  for (var i = 1; i < number; i++) {
    result.push(tinycolor({
      h: (hsl.h + i * step) % 360,
      s: hsl.s,
      l: hsl.l
    }));
  }
  return result;
}
function _splitcomplement(color) {
  var hsl = tinycolor(color).toHsl();
  var h = hsl.h;
  return [tinycolor(color), tinycolor({
    h: (h + 72) % 360,
    s: hsl.s,
    l: hsl.l
  }), tinycolor({
    h: (h + 216) % 360,
    s: hsl.s,
    l: hsl.l
  })];
}
function _analogous(color, results, slices) {
  results = results || 6;
  slices = slices || 30;
  var hsl = tinycolor(color).toHsl();
  var part = 360 / slices;
  var ret = [tinycolor(color)];
  for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {
    hsl.h = (hsl.h + part) % 360;
    ret.push(tinycolor(hsl));
  }
  return ret;
}
function _monochromatic(color, results) {
  results = results || 6;
  var hsv = tinycolor(color).toHsv();
  var h = hsv.h,
    s = hsv.s,
    v = hsv.v;
  var ret = [];
  var modification = 1 / results;
  while (results--) {
    ret.push(tinycolor({
      h: h,
      s: s,
      v: v
    }));
    v = (v + modification) % 1;
  }
  return ret;
}

// Utility Functions
// ---------------------

tinycolor.mix = function (color1, color2, amount) {
  amount = amount === 0 ? 0 : amount || 50;
  var rgb1 = tinycolor(color1).toRgb();
  var rgb2 = tinycolor(color2).toRgb();
  var p = amount / 100;
  var rgba = {
    r: (rgb2.r - rgb1.r) * p + rgb1.r,
    g: (rgb2.g - rgb1.g) * p + rgb1.g,
    b: (rgb2.b - rgb1.b) * p + rgb1.b,
    a: (rgb2.a - rgb1.a) * p + rgb1.a
  };
  return tinycolor(rgba);
};

// Readability Functions
// ---------------------
// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)

// `contrast`
// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)
tinycolor.readability = function (color1, color2) {
  var c1 = tinycolor(color1);
  var c2 = tinycolor(color2);
  return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);
};

// `isReadable`
// Ensure that foreground and background color combinations meet WCAG2 guidelines.
// The third argument is an optional Object.
//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';
//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.
// If the entire object is absent, isReadable defaults to {level:"AA",size:"small"}.

// *Example*
//    tinycolor.isReadable("#000", "#111") => false
//    tinycolor.isReadable("#000", "#111",{level:"AA",size:"large"}) => false
tinycolor.isReadable = function (color1, color2, wcag2) {
  var readability = tinycolor.readability(color1, color2);
  var wcag2Parms, out;
  out = false;
  wcag2Parms = validateWCAG2Parms(wcag2);
  switch (wcag2Parms.level + wcag2Parms.size) {
    case "AAsmall":
    case "AAAlarge":
      out = readability >= 4.5;
      break;
    case "AAlarge":
      out = readability >= 3;
      break;
    case "AAAsmall":
      out = readability >= 7;
      break;
  }
  return out;
};

// `mostReadable`
// Given a base color and a list of possible foreground or background
// colors for that base, returns the most readable color.
// Optionally returns Black or White if the most readable color is unreadable.
// *Example*
//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:false}).toHexString(); // "#112255"
//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:true}).toHexString();  // "#ffffff"
//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"large"}).toHexString(); // "#faf3f3"
//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"small"}).toHexString(); // "#ffffff"
tinycolor.mostReadable = function (baseColor, colorList, args) {
  var bestColor = null;
  var bestScore = 0;
  var readability;
  var includeFallbackColors, level, size;
  args = args || {};
  includeFallbackColors = args.includeFallbackColors;
  level = args.level;
  size = args.size;
  for (var i = 0; i < colorList.length; i++) {
    readability = tinycolor.readability(baseColor, colorList[i]);
    if (readability > bestScore) {
      bestScore = readability;
      bestColor = tinycolor(colorList[i]);
    }
  }
  if (tinycolor.isReadable(baseColor, bestColor, {
    level: level,
    size: size
  }) || !includeFallbackColors) {
    return bestColor;
  } else {
    args.includeFallbackColors = false;
    return tinycolor.mostReadable(baseColor, ["#fff", "#000"], args);
  }
};

// Big List of Colors
// ------------------
// <https://www.w3.org/TR/css-color-4/#named-colors>
var names = tinycolor.names = {
  aliceblue: "f0f8ff",
  antiquewhite: "faebd7",
  aqua: "0ff",
  aquamarine: "7fffd4",
  azure: "f0ffff",
  beige: "f5f5dc",
  bisque: "ffe4c4",
  black: "000",
  blanchedalmond: "ffebcd",
  blue: "00f",
  blueviolet: "8a2be2",
  brown: "a52a2a",
  burlywood: "deb887",
  burntsienna: "ea7e5d",
  cadetblue: "5f9ea0",
  chartreuse: "7fff00",
  chocolate: "d2691e",
  coral: "ff7f50",
  cornflowerblue: "6495ed",
  cornsilk: "fff8dc",
  crimson: "dc143c",
  cyan: "0ff",
  darkblue: "00008b",
  darkcyan: "008b8b",
  darkgoldenrod: "b8860b",
  darkgray: "a9a9a9",
  darkgreen: "006400",
  darkgrey: "a9a9a9",
  darkkhaki: "bdb76b",
  darkmagenta: "8b008b",
  darkolivegreen: "556b2f",
  darkorange: "ff8c00",
  darkorchid: "9932cc",
  darkred: "8b0000",
  darksalmon: "e9967a",
  darkseagreen: "8fbc8f",
  darkslateblue: "483d8b",
  darkslategray: "2f4f4f",
  darkslategrey: "2f4f4f",
  darkturquoise: "00ced1",
  darkviolet: "9400d3",
  deeppink: "ff1493",
  deepskyblue: "00bfff",
  dimgray: "696969",
  dimgrey: "696969",
  dodgerblue: "1e90ff",
  firebrick: "b22222",
  floralwhite: "fffaf0",
  forestgreen: "228b22",
  fuchsia: "f0f",
  gainsboro: "dcdcdc",
  ghostwhite: "f8f8ff",
  gold: "ffd700",
  goldenrod: "daa520",
  gray: "808080",
  green: "008000",
  greenyellow: "adff2f",
  grey: "808080",
  honeydew: "f0fff0",
  hotpink: "ff69b4",
  indianred: "cd5c5c",
  indigo: "4b0082",
  ivory: "fffff0",
  khaki: "f0e68c",
  lavender: "e6e6fa",
  lavenderblush: "fff0f5",
  lawngreen: "7cfc00",
  lemonchiffon: "fffacd",
  lightblue: "add8e6",
  lightcoral: "f08080",
  lightcyan: "e0ffff",
  lightgoldenrodyellow: "fafad2",
  lightgray: "d3d3d3",
  lightgreen: "90ee90",
  lightgrey: "d3d3d3",
  lightpink: "ffb6c1",
  lightsalmon: "ffa07a",
  lightseagreen: "20b2aa",
  lightskyblue: "87cefa",
  lightslategray: "789",
  lightslategrey: "789",
  lightsteelblue: "b0c4de",
  lightyellow: "ffffe0",
  lime: "0f0",
  limegreen: "32cd32",
  linen: "faf0e6",
  magenta: "f0f",
  maroon: "800000",
  mediumaquamarine: "66cdaa",
  mediumblue: "0000cd",
  mediumorchid: "ba55d3",
  mediumpurple: "9370db",
  mediumseagreen: "3cb371",
  mediumslateblue: "7b68ee",
  mediumspringgreen: "00fa9a",
  mediumturquoise: "48d1cc",
  mediumvioletred: "c71585",
  midnightblue: "191970",
  mintcream: "f5fffa",
  mistyrose: "ffe4e1",
  moccasin: "ffe4b5",
  navajowhite: "ffdead",
  navy: "000080",
  oldlace: "fdf5e6",
  olive: "808000",
  olivedrab: "6b8e23",
  orange: "ffa500",
  orangered: "ff4500",
  orchid: "da70d6",
  palegoldenrod: "eee8aa",
  palegreen: "98fb98",
  paleturquoise: "afeeee",
  palevioletred: "db7093",
  papayawhip: "ffefd5",
  peachpuff: "ffdab9",
  peru: "cd853f",
  pink: "ffc0cb",
  plum: "dda0dd",
  powderblue: "b0e0e6",
  purple: "800080",
  rebeccapurple: "663399",
  red: "f00",
  rosybrown: "bc8f8f",
  royalblue: "4169e1",
  saddlebrown: "8b4513",
  salmon: "fa8072",
  sandybrown: "f4a460",
  seagreen: "2e8b57",
  seashell: "fff5ee",
  sienna: "a0522d",
  silver: "c0c0c0",
  skyblue: "87ceeb",
  slateblue: "6a5acd",
  slategray: "708090",
  slategrey: "708090",
  snow: "fffafa",
  springgreen: "00ff7f",
  steelblue: "4682b4",
  tan: "d2b48c",
  teal: "008080",
  thistle: "d8bfd8",
  tomato: "ff6347",
  turquoise: "40e0d0",
  violet: "ee82ee",
  wheat: "f5deb3",
  white: "fff",
  whitesmoke: "f5f5f5",
  yellow: "ff0",
  yellowgreen: "9acd32"
};

// Make it easy to access colors via `hexNames[hex]`
var hexNames = tinycolor.hexNames = flip$3(names);

// Utilities
// ---------

// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`
function flip$3(o) {
  var flipped = {};
  for (var i in o) {
    if (o.hasOwnProperty(i)) {
      flipped[o[i]] = i;
    }
  }
  return flipped;
}

// Return a valid alpha value [0,1] with all invalid values being set to 1
function boundAlpha(a) {
  a = parseFloat(a);
  if (isNaN(a) || a < 0 || a > 1) {
    a = 1;
  }
  return a;
}

// Take input from [0, n] and return it as [0, 1]
function bound01(n, max) {
  if (isOnePointZero(n)) n = "100%";
  var processPercent = isPercentage(n);
  n = Math.min(max, Math.max(0, parseFloat(n)));

  // Automatically convert percentage into number
  if (processPercent) {
    n = parseInt(n * max, 10) / 100;
  }

  // Handle floating point rounding errors
  if (Math.abs(n - max) < 0.000001) {
    return 1;
  }

  // Convert into [0, 1] range if it isn't already
  return n % max / parseFloat(max);
}

// Force a number between 0 and 1
function clamp01(val) {
  return Math.min(1, Math.max(0, val));
}

// Parse a base-16 hex value into a base-10 integer
function parseIntFromHex(val) {
  return parseInt(val, 16);
}

// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1
// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>
function isOnePointZero(n) {
  return typeof n == "string" && n.indexOf(".") != -1 && parseFloat(n) === 1;
}

// Check to see if string passed in is a percentage
function isPercentage(n) {
  return typeof n === "string" && n.indexOf("%") != -1;
}

// Force a hex value to have 2 characters
function pad2(c) {
  return c.length == 1 ? "0" + c : "" + c;
}

// Replace a decimal with it's percentage value
function convertToPercentage(n) {
  if (n <= 1) {
    n = n * 100 + "%";
  }
  return n;
}

// Converts a decimal to a hex value
function convertDecimalToHex(d) {
  return Math.round(parseFloat(d) * 255).toString(16);
}
// Converts a hex value to a decimal
function convertHexToDecimal(h) {
  return parseIntFromHex(h) / 255;
}
var matchers = function () {
  // <http://www.w3.org/TR/css3-values/#integers>
  var CSS_INTEGER = "[-\\+]?\\d+%?";

  // <http://www.w3.org/TR/css3-values/#number-value>
  var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";

  // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.
  var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";

  // Actual matching.
  // Parentheses and commas are optional, but not required.
  // Whitespace can take the place of commas or opening paren
  var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
  var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
  return {
    CSS_UNIT: new RegExp(CSS_UNIT),
    rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
    rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
    hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
    hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
    hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
    hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
  };
}();

// `isValidCSSUnit`
// Take in a single string / number and check to see if it looks like a CSS unit
// (see `matchers` above for definition).
function isValidCSSUnit(color) {
  return !!matchers.CSS_UNIT.exec(color);
}

// `stringInputToObject`
// Permissive string parsing.  Take in a number of formats, and output an object
// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`
function stringInputToObject(color) {
  color = color.replace(trimLeft, "").replace(trimRight, "").toLowerCase();
  var named = false;
  if (names[color]) {
    color = names[color];
    named = true;
  } else if (color == "transparent") {
    return {
      r: 0,
      g: 0,
      b: 0,
      a: 0,
      format: "name"
    };
  }

  // Try to match string input using regular expressions.
  // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]
  // Just return an object and let the conversion functions handle that.
  // This way the result will be the same whether the tinycolor is initialized with string or object.
  var match;
  if (match = matchers.rgb.exec(color)) {
    return {
      r: match[1],
      g: match[2],
      b: match[3]
    };
  }
  if (match = matchers.rgba.exec(color)) {
    return {
      r: match[1],
      g: match[2],
      b: match[3],
      a: match[4]
    };
  }
  if (match = matchers.hsl.exec(color)) {
    return {
      h: match[1],
      s: match[2],
      l: match[3]
    };
  }
  if (match = matchers.hsla.exec(color)) {
    return {
      h: match[1],
      s: match[2],
      l: match[3],
      a: match[4]
    };
  }
  if (match = matchers.hsv.exec(color)) {
    return {
      h: match[1],
      s: match[2],
      v: match[3]
    };
  }
  if (match = matchers.hsva.exec(color)) {
    return {
      h: match[1],
      s: match[2],
      v: match[3],
      a: match[4]
    };
  }
  if (match = matchers.hex8.exec(color)) {
    return {
      r: parseIntFromHex(match[1]),
      g: parseIntFromHex(match[2]),
      b: parseIntFromHex(match[3]),
      a: convertHexToDecimal(match[4]),
      format: named ? "name" : "hex8"
    };
  }
  if (match = matchers.hex6.exec(color)) {
    return {
      r: parseIntFromHex(match[1]),
      g: parseIntFromHex(match[2]),
      b: parseIntFromHex(match[3]),
      format: named ? "name" : "hex"
    };
  }
  if (match = matchers.hex4.exec(color)) {
    return {
      r: parseIntFromHex(match[1] + "" + match[1]),
      g: parseIntFromHex(match[2] + "" + match[2]),
      b: parseIntFromHex(match[3] + "" + match[3]),
      a: convertHexToDecimal(match[4] + "" + match[4]),
      format: named ? "name" : "hex8"
    };
  }
  if (match = matchers.hex3.exec(color)) {
    return {
      r: parseIntFromHex(match[1] + "" + match[1]),
      g: parseIntFromHex(match[2] + "" + match[2]),
      b: parseIntFromHex(match[3] + "" + match[3]),
      format: named ? "name" : "hex"
    };
  }
  return false;
}
function validateWCAG2Parms(parms) {
  // return valid WCAG2 parms for isReadable.
  // If input parms are invalid, return {"level":"AA", "size":"small"}
  var level, size;
  parms = parms || {
    level: "AA",
    size: "small"
  };
  level = (parms.level || "AA").toUpperCase();
  size = (parms.size || "small").toLowerCase();
  if (level !== "AA" && level !== "AAA") {
    level = "AA";
  }
  if (size !== "small" && size !== "large") {
    size = "small";
  }
  return {
    level: level,
    size: size
  };
}

var anObject$8 = anObject$b;

// `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
var regexpFlags$1 = function () {
  var that = anObject$8(this);
  var result = '';
  if (that.hasIndices) result += 'd';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.unicodeSets) result += 'v';
  if (that.sticky) result += 'y';
  return result;
};

var fails$d = fails$o;
var global$7 = global$j;

// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
var $RegExp$2 = global$7.RegExp;

var UNSUPPORTED_Y$2 = fails$d(function () {
  var re = $RegExp$2('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') != null;
});

// UC Browser bug
// https://github.com/zloirock/core-js/issues/1008
var MISSED_STICKY$1 = UNSUPPORTED_Y$2 || fails$d(function () {
  return !$RegExp$2('a', 'y').sticky;
});

var BROKEN_CARET = UNSUPPORTED_Y$2 || fails$d(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = $RegExp$2('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') != null;
});

var regexpStickyHelpers = {
  BROKEN_CARET: BROKEN_CARET,
  MISSED_STICKY: MISSED_STICKY$1,
  UNSUPPORTED_Y: UNSUPPORTED_Y$2
};

var objectDefineProperties = {};

var internalObjectKeys = objectKeysInternal;
var enumBugKeys$1 = enumBugKeys$3;

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
var objectKeys$2 = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys$1);
};

var DESCRIPTORS$4 = descriptors;
var V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;
var definePropertyModule$1 = objectDefineProperty;
var anObject$7 = anObject$b;
var toIndexedObject$1 = toIndexedObject$5;
var objectKeys$1 = objectKeys$2;

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
objectDefineProperties.f = DESCRIPTORS$4 && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject$7(O);
  var props = toIndexedObject$1(Properties);
  var keys = objectKeys$1(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule$1.f(O, key = keys[index++], props[key]);
  return O;
};

var getBuiltIn$1 = getBuiltIn$4;

var html$1 = getBuiltIn$1('document', 'documentElement');

/* global ActiveXObject -- old IE, WSH */

var anObject$6 = anObject$b;
var definePropertiesModule = objectDefineProperties;
var enumBugKeys = enumBugKeys$3;
var hiddenKeys = hiddenKeys$4;
var html = html$1;
var documentCreateElement$1 = documentCreateElement$2;
var sharedKey$1 = sharedKey$3;

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO$1 = sharedKey$1('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement$1('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = typeof document != 'undefined'
    ? document.domain && activeXDocument
      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
      : NullProtoObjectViaIFrame()
    : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO$1] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
// eslint-disable-next-line es/no-object-create -- safe
var objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject$6(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO$1] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
};

var fails$c = fails$o;
var global$6 = global$j;

// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError
var $RegExp$1 = global$6.RegExp;

var regexpUnsupportedDotAll = fails$c(function () {
  var re = $RegExp$1('.', 's');
  return !(re.dotAll && re.exec('\n') && re.flags === 's');
});

var fails$b = fails$o;
var global$5 = global$j;

// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError
var $RegExp = global$5.RegExp;

var regexpUnsupportedNcg = fails$b(function () {
  var re = $RegExp('(?<a>b)', 'g');
  return re.exec('b').groups.a !== 'b' ||
    'b'.replace(re, '$<a>c') !== 'bc';
});

/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */
/* eslint-disable regexp/no-useless-quantifier -- testing */
var call$9 = functionCall;
var uncurryThis$f = functionUncurryThis;
var toString$c = toString$f;
var regexpFlags = regexpFlags$1;
var stickyHelpers$1 = regexpStickyHelpers;
var shared$1 = shared$5.exports;
var create$3 = objectCreate;
var getInternalState$1 = internalState.get;
var UNSUPPORTED_DOT_ALL$1 = regexpUnsupportedDotAll;
var UNSUPPORTED_NCG$1 = regexpUnsupportedNcg;

var nativeReplace = shared$1('native-string-replace', String.prototype.replace);
var nativeExec = RegExp.prototype.exec;
var patchedExec = nativeExec;
var charAt$5 = uncurryThis$f(''.charAt);
var indexOf$1 = uncurryThis$f(''.indexOf);
var replace$2 = uncurryThis$f(''.replace);
var stringSlice$6 = uncurryThis$f(''.slice);

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  call$9(nativeExec, re1, 'a');
  call$9(nativeExec, re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

var UNSUPPORTED_Y$1 = stickyHelpers$1.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y$1 || UNSUPPORTED_DOT_ALL$1 || UNSUPPORTED_NCG$1;

if (PATCH) {
  patchedExec = function exec(string) {
    var re = this;
    var state = getInternalState$1(re);
    var str = toString$c(string);
    var raw = state.raw;
    var result, reCopy, lastIndex, match, i, object, group;

    if (raw) {
      raw.lastIndex = re.lastIndex;
      result = call$9(patchedExec, raw, str);
      re.lastIndex = raw.lastIndex;
      return result;
    }

    var groups = state.groups;
    var sticky = UNSUPPORTED_Y$1 && re.sticky;
    var flags = call$9(regexpFlags, re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = replace$2(flags, 'y', '');
      if (indexOf$1(flags, 'g') === -1) {
        flags += 'g';
      }

      strCopy = stringSlice$6(str, re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt$5(str, re.lastIndex - 1) !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

    match = call$9(nativeExec, sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = stringSlice$6(match.input, charsAdded);
        match[0] = stringSlice$6(match[0], charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn't work for /(.?)?/
      call$9(nativeReplace, match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    if (match && groups) {
      match.groups = object = create$3(null);
      for (i = 0; i < groups.length; i++) {
        group = groups[i];
        object[group[0]] = match[group[1]];
      }
    }

    return match;
  };
}

var regexpExec$2 = patchedExec;

var $$b = _export;
var exec$2 = regexpExec$2;

// `RegExp.prototype.exec` method
// https://tc39.es/ecma262/#sec-regexp.prototype.exec
$$b({ target: 'RegExp', proto: true, forced: /./.exec !== exec$2 }, {
  exec: exec$2
});

// TODO: Remove from `core-js@4` since it's moved to entry points

var $$a = _export;
var call$8 = functionCall;
var isCallable$8 = isCallable$l;
var anObject$5 = anObject$b;
var toString$b = toString$f;

var DELEGATES_TO_EXEC = function () {
  var execCalled = false;
  var re = /[ac]/;
  re.exec = function () {
    execCalled = true;
    return /./.exec.apply(this, arguments);
  };
  return re.test('abc') === true && execCalled;
}();

var nativeTest = /./.test;

// `RegExp.prototype.test` method
// https://tc39.es/ecma262/#sec-regexp.prototype.test
$$a({ target: 'RegExp', proto: true, forced: !DELEGATES_TO_EXEC }, {
  test: function (S) {
    var R = anObject$5(this);
    var string = toString$b(S);
    var exec = R.exec;
    if (!isCallable$8(exec)) return call$8(nativeTest, R, string);
    var result = call$8(exec, R, string);
    if (result === null) return false;
    anObject$5(result);
    return true;
  }
});

var global$4 = global$j;
var fails$a = fails$o;
var uncurryThis$e = functionUncurryThis;
var toString$a = toString$f;
var trim$1 = stringTrim.trim;
var whitespaces$1 = whitespaces$4;

var $parseInt$1 = global$4.parseInt;
var Symbol$2 = global$4.Symbol;
var ITERATOR$4 = Symbol$2 && Symbol$2.iterator;
var hex = /^[+-]?0x/i;
var exec$1 = uncurryThis$e(hex.exec);
var FORCED$2 = $parseInt$1(whitespaces$1 + '08') !== 8 || $parseInt$1(whitespaces$1 + '0x16') !== 22
  // MS Edge 18- broken with boxed symbols
  || (ITERATOR$4 && !fails$a(function () { $parseInt$1(Object(ITERATOR$4)); }));

// `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix
var numberParseInt = FORCED$2 ? function parseInt(string, radix) {
  var S = trim$1(toString$a(string));
  return $parseInt$1(S, (radix >>> 0) || (exec$1(hex, S) ? 16 : 10));
} : $parseInt$1;

var $$9 = _export;
var $parseInt = numberParseInt;

// `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix
$$9({ global: true, forced: parseInt != $parseInt }, {
  parseInt: $parseInt
});

function handleChannelOverlay(front, alpha) {
  var back = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  return back + (front - back) * alpha / 255;
}
function overlayWithBlack(color, alpha) {
  var rgb = color.toRgb();
  return tinycolor({
    r: handleChannelOverlay(rgb.r, alpha),
    g: handleChannelOverlay(rgb.g, alpha),
    b: handleChannelOverlay(rgb.b, alpha)
  });
}
function overlayWithWhite(color, alpha) {
  var rgb = color.toRgb();
  return tinycolor({
    r: handleChannelOverlay(rgb.r, alpha, 255),
    g: handleChannelOverlay(rgb.g, alpha, 255),
    b: handleChannelOverlay(rgb.b, alpha, 255)
  });
}
function generateColorSpectrum(color) {
  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "--light-primary-";
  var hexColor = "".concat(color.toLowerCase());
  var mapper = [{
    level: "100",
    darken: false,
    isOriginal: false,
    darkLightFactor: 0,
    alpha: 28,
    brighten: 0,
    saturate: 0,
    original: "#F2FAFC"
  }, {
    level: "200",
    darken: false,
    isOriginal: false,
    darkLightFactor: 0,
    brighten: 1,
    alpha: 70,
    saturate: 0,
    original: "#BDF3FC"
  }, {
    level: "300",
    darken: false,
    isOriginal: false,
    darkLightFactor: 0,
    brighten: 0,
    alpha: 130,
    saturate: 0,
    original: "#75E2FA"
  }, {
    level: "400",
    darken: false,
    isOriginal: false,
    darkLightFactor: 0,
    brighten: 0,
    alpha: 198,
    saturate: 0,
    original: "#43D2FA"
  }, {
    level: "500",
    darken: true,
    isOriginal: true,
    darkLightFactor: 0
  }, {
    level: "600",
    darken: true,
    isOriginal: false,
    darkLightFactor: 3,
    brighten: 1,
    alpha: 233,
    saturate: 1.5,
    original: "#0C9CCC"
  }, {
    level: "700",
    darken: true,
    isOriginal: false,
    darkLightFactor: 0,
    brighten: 0.5,
    alpha: 186,
    saturate: -0.5,
    original: "#0B87B0"
  }, {
    level: "800",
    darken: true,
    isOriginal: false,
    darkLightFactor: 0,
    brighten: 0,
    alpha: 130,
    saturate: -2,
    original: "#085E7A"
  }, {
    level: "900",
    darken: true,
    isOriginal: false,
    darkLightFactor: 0,
    brighten: 0,
    alpha: 90,
    saturate: -12,
    original: "#094357"
  }];
  var returnedSpectrum = {};
  mapper.forEach(function (item) {
    var hex = hexColor;
    if (!item.isOriginal) {
      var _color = tinycolor(hex);
      _color = item.darken ? _color.darken(item.darkLightFactor) : _color.lighten(item.darkLightFactor);
      _color = _color.brighten(item.brighten);
      _color = item.saturate > 0 ? _color.saturate(item.saturate) : _color.desaturate(Math.abs(item.saturate));
      _color = item.darken ? overlayWithBlack(_color, item.alpha) : overlayWithWhite(_color, item.alpha);
      returnedSpectrum["".concat(prefix).concat(item.level)] = _color.toHexString();
    } else {
      returnedSpectrum["".concat(prefix, "500")] = hex;
    }
  });
  return returnedSpectrum;
}
function getTextColor(hex) {
  var light = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "#ffffff";
  var dark = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "#212934";
  if (!hex) {
    return "";
  }
  if (!/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
    return "";
  }
  var hexCode = hex.charAt(0) === "#" ? hex.substr(1, 6) : hex;
  var hexR = parseInt(hexCode.substr(0, 2), 16);
  var hexG = parseInt(hexCode.substr(2, 2), 16);
  var hexB = parseInt(hexCode.substr(4, 2), 16);
  var contrastRatio = (hexR + hexG + hexB) / (255 * 3);
  return contrastRatio >= 0.5 ? dark : light;
}
function hexToRgbA(hex) {
  var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  if (alpha > 1) alpha = 1;
  if (alpha < 0) alpha = 0;
  var c;
  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
    c = hex.substring(1).split("");
    if (c.length == 3) {
      c = [c[0], c[0], c[1], c[1], c[2], c[2]];
    }
    c = "0x" + c.join("");
    return "rgba(" + [c >> 16 & 255, c >> 8 & 255, c & 255].join(",") + "," + alpha + ")";
  }
  throw new Error("Bad Hex");
}

var _excluded$L = ["is", "leftIcon", "rightIcon", "dropDown", "disabled", "size", "className", "colorScheme", "responsive", "text", "loading", "loadingText", "pill", "smartColor", "smartHoverColor"];
var Button = function Button(_ref) {
  var _classNames;
  var is = _ref.is,
    leftIcon = _ref.leftIcon,
    rightIcon = _ref.rightIcon,
    dropDown = _ref.dropDown,
    disabled = _ref.disabled,
    size = _ref.size,
    className = _ref.className,
    colorScheme = _ref.colorScheme,
    responsive = _ref.responsive,
    text = _ref.text,
    loading = _ref.loading,
    loadingText = _ref.loadingText,
    pill = _ref.pill,
    smartColor = _ref.smartColor,
    smartHoverColor = _ref.smartHoverColor,
    props = _objectWithoutProperties(_ref, _excluded$L);
  var generatedClassName = classNames((_classNames = {
    "ui-button": true
  }, _defineProperty$6(_classNames, "semantic__".concat(colorScheme), colorScheme), _defineProperty$6(_classNames, "state__disabled", disabled), _defineProperty$6(_classNames, "size__".concat(size), size), _defineProperty$6(_classNames, "responsive", responsive), _defineProperty$6(_classNames, "smartColor", smartColor), _defineProperty$6(_classNames, "smartHoverColor", smartHoverColor), _defineProperty$6(_classNames, "pill", pill), _classNames), className);
  var smartCalculatedHoverColor = tinycolor(smartColor).darken(10).toHexString();
  var cssVars = _objectSpread2$1(_objectSpread2$1({
    "--smart-color": smartColor,
    "--smart-hover-color": smartHoverColor
  }, smartColor ? {
    "--smart-calculated-hover-color": smartCalculatedHoverColor,
    "--smart-calculated-hover-text-color": getTextColor(smartCalculatedHoverColor)
  } : {}), {}, {
    "--smart-text-color": getTextColor(smartColor),
    "--smart-hover-text-color": getTextColor(smartHoverColor)
  });
  return /*#__PURE__*/React__default.createElement(Box, _extends$1({
    is: is
  }, props, {
    disabled: loading || disabled,
    className: generatedClassName,
    style: cssVars
  }), leftIcon && /*#__PURE__*/React__default.createElement(Icon, {
    className: "ui-button__left-icon",
    icon: leftIcon
  }), /*#__PURE__*/React__default.createElement("span", {
    className: classNames({
      "loader-text": loading,
      "ui-button__button-text": true
    })
  }, loading ? /*#__PURE__*/React__default.createElement("span", null, loadingText, " ") : text || props.children), dropDown && /*#__PURE__*/React__default.createElement(Icon, {
    className: "ui-button__dropdown-icon",
    icon: ChevronFilledDown
  }), rightIcon && !dropDown && /*#__PURE__*/React__default.createElement(Icon, {
    className: "ui-button__dropdown-icon",
    icon: rightIcon
  }));
};
Button.propTypes = {
  is: propTypes.exports.oneOfType([propTypes.exports.oneOf(["button", "a", "span", "div"]), propTypes.exports.elementType]),
  colorScheme: propTypes.exports.oneOf(["primary", "danger", "success", "outline", "invisible", "default", "info"]),
  disabled: propTypes.exports.bool,
  size: propTypes.exports.oneOf(["small", "medium", "large", "xlarge", "huge", "massive"]),
  leftIcon: propTypes.exports.object,
  rightIcon: propTypes.exports.object,
  dropDown: propTypes.exports.bool,
  responsive: propTypes.exports.bool,
  text: propTypes.exports.string,
  loading: propTypes.exports.bool,
  loadingText: propTypes.exports.string,
  pill: propTypes.exports.bool,
  smartColor: propTypes.exports.string,
  smartHoverColor: propTypes.exports.string
};
Button.defaultProps = {
  is: "button",
  dropDown: false,
  leftIcon: null,
  size: "small",
  loadingText: "Loading",
  colorScheme: "default"
};

var _excluded$K = ["className", "equalLineHeight", "scale", "uppercase", "center"];
var Heading = function Heading(_ref) {
  var _props$is, _classNames;
  var className = _ref.className,
    equalLineHeight = _ref.equalLineHeight,
    scale = _ref.scale,
    uppercase = _ref.uppercase,
    center = _ref.center,
    props = _objectWithoutProperties(_ref, _excluded$K);
  var is = (_props$is = props.is) !== null && _props$is !== void 0 ? _props$is : "h2";
  var generatedClass = classNames((_classNames = {}, _defineProperty$6(_classNames, scale, scale), _defineProperty$6(_classNames, is, is), _defineProperty$6(_classNames, "uppercase", uppercase), _defineProperty$6(_classNames, "ui-heading", true), _defineProperty$6(_classNames, "equal-line-height", equalLineHeight), _defineProperty$6(_classNames, "customFontWeight", props.fontWeight), _defineProperty$6(_classNames, "customFontSize", props.fontSize), _defineProperty$6(_classNames, "customLineHeight", props.lineHeight), _defineProperty$6(_classNames, "center", center), _classNames), className);
  return /*#__PURE__*/React__default.createElement(Box, _extends$1({
    is: is
  }, props, {
    "data-testid": "heading",
    className: generatedClass
  }), props.children);
};
Heading.propTypes = {
  is: propTypes.exports.oneOf(["h1", "h2", "h3", "h4", "h5", "h6"]),
  scale: propTypes.exports.oneOf(["h1", "h2", "h3", "h4", "h5", "h6", "subtitle-1", "subtitle-2", "subhead"]),
  uppercase: propTypes.exports.bool,
  equalLineHeight: propTypes.exports.bool,
  fontFace: propTypes.exports.string,
  darkClassName: propTypes.exports.string,
  lightClassName: propTypes.exports.string,
  center: propTypes.exports.bool
};
Heading.defaultProps = {
  is: "h2",
  scale: null,
  uppercase: false,
  equalLineHeight: false,
  darkClassName: "text-neutral-300"
};

var DESCRIPTORS$3 = descriptors;
var uncurryThis$d = functionUncurryThis;
var call$7 = functionCall;
var fails$9 = fails$o;
var objectKeys = objectKeys$2;
var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
var propertyIsEnumerableModule = objectPropertyIsEnumerable;
var toObject$3 = toObject$6;
var IndexedObject = indexedObject;

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty$5 = Object.defineProperty;
var concat$1 = uncurryThis$d([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
var objectAssign = !$assign || fails$9(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS$3 && $assign({ b: 1 }, $assign(defineProperty$5({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty$5(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] != 7 || objectKeys($assign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject$3(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat$1(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS$3 || call$7(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;

var $$8 = _export;
var assign$1 = objectAssign;

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$$8({ target: 'Object', stat: true, arity: 2, forced: Object.assign !== assign$1 }, {
  assign: assign$1
});

var convertObjToVars = function convertObjToVars(obj) {
  return Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.keys(obj).map(function (key) {
    return _defineProperty$6({}, key.substring(0, 2) === "--" ? key : "--" + key, obj[key]);
  }))));
};

var defaultTheme = {
  "light-primary-action-color": "#0db9e9",
  "light-primary-action-text-color": "#212934",
  "light-text-color": "#212934",
  "light-primary-action-hover-color": "#43d2fa",
  "light-primary-action-text-hover-color": "#ffffff",
  "light-primary-action-disabled-color": "#bdf3fc",
  // light-primary-action-disabled-text-color: "",
  "light-primary-action-box-shadow-color": "rgba(67, 210, 250, 0.25)",
  "light-secondary-action-color": "",
  "light-subtle-text-color": "#ced6de",
  "light-secondary-action-disabled-color": "",
  "light-input-background-color": "#ffffff",
  "light-background-color": "#ffffff",
  "light-outline-action-color": "#0d7fe9",
  "light-outline-action-disabled-color": "#acd7ff",
  "light-outline-action-box-shadow-color": "rgba(27, 92, 224, 0.2)",
  "light-danger-color": "#D62F4B",
  "light-danger-text-color": "#ffffff",
  "light-danger-box-shadow-color": "rgba(214, 47, 75, 0.3)",
  "light-danger-100": "#FFF0F2",
  "light-danger-200": "#FCC5CE",
  "light-danger-300": "#F99BAB",
  "light-danger-400": "#E85E75",
  "light-danger-500": "#D62F4B",
  "light-danger-600": "#AD283D",
  "light-danger-700": "#842432",
  "light-danger-800": "#5C1E27",
  "light-danger-900": "#331418",
  "dark-danger-color": "#df5e74",
  "dark-danger-text-color": "#121A26",
  "dark-danger-box-shadow-color": "rgba(214, 47, 75, 0.3)",
  "dark-danger-100": "#EEA7B3",
  "dark-danger-200": "#EB98A6",
  "dark-danger-300": "#E88898",
  "dark-danger-400": "#E47588",
  "dark-danger-500": "#DF5E74",
  "dark-danger-600": "#D93F59",
  "dark-danger-700": "#C12640",
  "dark-danger-800": "#911C30",
  "dark-danger-900": "#350A12",
  "light-success-color": "#00b058",
  "light-success-text-color": "#ffffff",
  "light-success-box-shadow-color": "rgba(0, 176, 88, 0.3)",
  "light-success-100": "#C4EFDF",
  "light-success-200": "#9BDFC4",
  "light-success-300": "#71D0A7",
  "light-success-400": "#27C079",
  "light-success-500": "#00B058",
  "light-success-600": "#158957",
  "light-success-700": "#1F624A",
  "light-success-800": "#1D3B32",
  "light-success-900": "#0D1E19",
  "dark-success-color": "#2eab6c",
  "dark-success-text-color": "#121A26",
  "dark-success-box-shadow-color": "rgba(0, 176, 88, 0.3)",
  "dark-success-100": "#71D0A7",
  "dark-success-200": "#53D091",
  "dark-success-300": "#36C77D",
  "dark-success-400": "#32BA75",
  "dark-success-500": "#2EAB6C",
  "dark-success-600": "#2A9B62",
  "dark-success-700": "#1F7348",
  "dark-success-800": "#175636",
  "dark-success-900": "#081E13",
  "light-warning-color": "#FFB44F",
  "light-warning-text-color": getTextColor("#ffb44f"),
  "light-warning-box-shadow-color": hexToRgbA("#FFB44F", 0.2),
  "light-warning-100": "#FFF8F0",
  "light-warning-200": "#FFF0DB",
  "light-warning-300": "#FFE5C2",
  "light-warning-400": "#FFD49B",
  "light-warning-500": "#FFB44F",
  "light-warning-600": "#FF9505",
  "light-warning-700": "#E08304",
  "light-warning-800": "#995A06",
  "light-warning-900": "#573302",
  "dark-warning-color": "#C87503",
  "dark-warning-text-color": getTextColor("#C87503"),
  "dark-warning-box-shadow-color": hexToRgbA("#C87503", 0.2),
  "dark-warning-100": "#FCA835",
  "dark-warning-200": "#FB9810",
  "dark-warning-300": "#EF8C04",
  "dark-warning-400": "#DC8104",
  "dark-warning-500": "#C87503",
  "dark-warning-600": "#B06703",
  "dark-warning-700": "#935703",
  "dark-warning-800": "#6E4102",
  "dark-warning-900": "#271701",
  "dark-primary-action-color": "#0db9e9",
  "dark-text-color": "#212934",
  "dark-primary-action-hover-color": "#43d2fa",
  "dark-primary-action-disabled-color": "#bdf3fc",
  "dark-primary-action-box-shadow-color": "rgba(67, 210, 250, 0.25)",
  "dark-secondary-action-color": "",
  "dark-subtle-text-color": "#ced6de",
  "dark-secondary-action-disabled-color": "",
  "dark-input-background-color": "#1F2B3B",
  "dark-input-label-color": "#94A3B8",
  "dark-input-border-color": "#384860",
  "dark-input-icon-color": "#94A3B8",
  "dark-background-color": "#121A26",
  "dark-input-disabled-text-color": "rgba(148, 163, 184, 0.8)",
  "light-primary-color": "#0db9e9",
  "light-primary-100": "#f2fafc",
  "light-primary-200": "#bdf3fc",
  "light-primary-300": "#75e2fa",
  "light-primary-400": "#43d2fa",
  "light-primary-500": "#0db9e9",
  "light-primary-600": "#0c9ccc",
  "light-primary-700": "#0b87b0",
  "light-primary-800": "#085e7a",
  "light-primary-900": "#094357",
  "dark-primary-color": "#0db9e9",
  "dark-primary-100": "#56c7ee",
  "dark-primary-200": "#36bdea",
  "dark-primary-300": "#0ea2d3",
  "dark-primary-400": "#0b7fa5",
  "dark-primary-500": "#0db9e9",
  "dark-primary-600": "#1182a8",
  "dark-primary-700": "#0f6d8d",
  "dark-primary-800": "#085e7a",
  "dark-primary-900": "#094357",
  "default-font-face": null,
  "dark-background-100": "#e5e6e7",
  "dark-background-200": "#bfc1c4",
  "dark-background-300": "#868a90",
  "dark-background-400": "#474d57",
  "dark-background-500": "#121a26",
  "dark-background-600": "#0f141c",
  "dark-background-700": "#0e141c",
  "dark-background-800": "#0a0d13",
  "dark-background-900": "#070a0c"
};
_objectSpread2$1({}, convertObjToVars(defaultTheme));

var _excluded$J = ["initialTheme", "children"];
var ThemeContext = /*#__PURE__*/createContext({
  theme: _objectSpread2$1({}, convertObjToVars(defaultTheme))
});
var ThemeProvider = function ThemeProvider(_ref) {
  var initialTheme = _ref.initialTheme,
    children = _ref.children;
    _objectWithoutProperties(_ref, _excluded$J);
  var _useState = useState({}),
    _useState2 = _slicedToArray$4(_useState, 2),
    theme = _useState2[0],
    setTheme = _useState2[1];
  var _useState3 = useState({
      theme: _objectSpread2$1(_objectSpread2$1(_objectSpread2$1({}, convertObjToVars(defaultTheme)), convertObjToVars(initialTheme)), convertObjToVars(theme)),
      setTheme: setTheme
    }),
    _useState4 = _slicedToArray$4(_useState3, 2),
    initialState = _useState4[0],
    setInitialState = _useState4[1];
  useEffect(function () {
    var computedTheme = _objectSpread2$1(_objectSpread2$1(_objectSpread2$1({}, defaultTheme), initialTheme), theme);
    var primaryColor = computedTheme.primaryColor || computedTheme["primary-color"];
    if (primaryColor) {
      computedTheme["light-primary-action-color"] = primaryColor;
      computedTheme["dark-primary-action-color"] = primaryColor;
      computedTheme["light-primary-color"] = primaryColor;
      computedTheme["dark-primary-color"] = primaryColor;
      computedTheme["primarycolor"] = primaryColor;
    }

    // Depends on light primary action color
    // Configure the light primary themes whenever we hydrate the themes
    computedTheme["light-primary-action-text-color"] = getTextColor(computedTheme["light-primary-action-color"]);
    computedTheme["light-primary-color"] = computedTheme["light-primary-action-color"];
    computedTheme["light-primary-action-hover-color"] = "#".concat(tinycolor(computedTheme["light-primary-action-color"]).lighten(15).toHex());
    computedTheme["light-primary-action-disabled-color"] = "#".concat(tinycolor(computedTheme["light-primary-action-color"]).lighten(38).toHex());
    computedTheme["light-primary-action-disabled-text-color"] = getTextColor(computedTheme["light-primary-action-disabled-color"], true);
    computedTheme["light-primary-action-text-hover-color"] = getTextColor(computedTheme["light-primary-action-hover-color"]);
    computedTheme["light-primary-action-box-shadow-color"] = hexToRgbA(computedTheme["light-primary-action-color"], 0.2);

    // Configure the semantic color text and boxshadow colors whenever we hydrate the theme
    computedTheme["light-danger-box-shadow-color"] = hexToRgbA(computedTheme["light-danger-color"], 0.2);
    computedTheme["light-warning-box-shadow-color"] = hexToRgbA(computedTheme["light-warning-color"], 0.2);
    computedTheme["light-success-box-shadow-color"] = hexToRgbA(computedTheme["light-success-color"], 0.2);
    computedTheme["dark-danger-box-shadow-color"] = hexToRgbA(computedTheme["dark-danger-color"], 0.2);
    computedTheme["dark-warning-box-shadow-color"] = hexToRgbA(computedTheme["dark-warning-color"], 0.2);
    computedTheme["dark-success-box-shadow-color"] = hexToRgbA(computedTheme["dark-success-color"], 0.2);
    computedTheme["light-danger-text-color"] = getTextColor(computedTheme["light-danger-color"]);
    computedTheme["dark-danger-text-color"] = getTextColor(computedTheme["dark-danger-color"]);
    computedTheme["light-success-text-color"] = getTextColor(computedTheme["light-success-color"]);
    computedTheme["dark-success-text-color"] = getTextColor(computedTheme["dark-success-color"]);
    computedTheme["light-warning-text-color"] = getTextColor(computedTheme["light-warning-color"]);
    computedTheme["dark-warning-text-color"] = getTextColor(computedTheme["dark-warning-color"]);

    // Depends on dark primary action color
    computedTheme["dark-primary-action-text-color"] = getTextColor(computedTheme["dark-primary-action-color"]);
    computedTheme["light-primary-color"] = computedTheme["light-primary-action-color"];
    computedTheme["dark-primary-action-hover-color"] = "#".concat(tinycolor(computedTheme["dark-primary-action-color"]).lighten(15).toHex());
    computedTheme["dark-primary-action-disabled-color"] = "#".concat(tinycolor(computedTheme["dark-primary-action-color"]).lighten(38).toHex());
    computedTheme["dark-primary-action-disabled-text-color"] = getTextColor(computedTheme["dark-primary-action-disabled-color"], true);
    computedTheme["dark-primary-action-text-hover-color"] = getTextColor(computedTheme["dark-primary-action-hover-color"]);
    computedTheme["dark-primary-action-box-shadow-color"] = hexToRgbA(computedTheme["dark-primary-action-color"], 0.2);

    // Depends on dark background color
    computedTheme["dark-input-background-color"] = "#".concat(tinycolor(computedTheme["dark-background-color"]).lighten(8).toHex());
    computedTheme["dark-input-border-color"] = "#".concat(tinycolor(computedTheme["dark-input-background-color"]).lighten(23).toHex());
    computedTheme["dark-input-label-color"] = "#".concat(tinycolor(computedTheme["dark-input-background-color"]).lighten(58).toHex());
    computedTheme["dark-input-disabled-color"] = "#".concat(tinycolor(computedTheme["dark-input-background-color"]).lighten(2).toHex());
    computedTheme["dark-input-disabled-text-color"] = hexToRgbA(computedTheme["dark-input-label-color"], 0.8);
    computedTheme["dark-input-icon-color"] = "#".concat(tinycolor(computedTheme["dark-input-background-color"]).lighten(58).toHex());
    setInitialState({
      theme: _objectSpread2$1(_objectSpread2$1(_objectSpread2$1(_objectSpread2$1(_objectSpread2$1(_objectSpread2$1(_objectSpread2$1(_objectSpread2$1(_objectSpread2$1(_objectSpread2$1({}, convertObjToVars(computedTheme)), generateColorSpectrum(computedTheme["light-primary-action-color"])), generateColorSpectrum(computedTheme["dark-primary-action-color"], "--dark-primary-")), generateColorSpectrum(computedTheme["dark-background-color"], "--dark-background-")), generateColorSpectrum(computedTheme["light-danger-color"], "--light-danger-")), generateColorSpectrum(computedTheme["dark-danger-color"], "--dark-danger-")), generateColorSpectrum(computedTheme["light-success-color"], "--light-success-")), generateColorSpectrum(computedTheme["dark-success-color"], "--dark-success-")), generateColorSpectrum(computedTheme["light-warning-color"], "--light-warning-")), generateColorSpectrum(computedTheme["dark-warning-color"], "--dark-warning-")),
      setTheme: setTheme
    });
  }, [initialTheme, theme]);
  useLayoutEffect(function () {
    var savedCssEntries = Object.entries(_objectSpread2$1({}, convertObjToVars(initialState.theme)));
    var cssRules = "\n      box-sizing: border-box;\n      -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-rendering: optimizeLegibility;\n    -webkit-tap-highlight-color: transparent;\n      ";
    var themeRules = "";
    if (savedCssEntries.length) {
      themeRules += savedCssEntries.map(function (_ref2) {
        var _ref3 = _slicedToArray$4(_ref2, 2),
          k = _ref3[0],
          v = _ref3[1];
        return "".concat(k, ":").concat(v);
      }).join(";");
    }
    if (document.getElementById("ui-kit-react-theme-tag")) {
      var styleTag = document.getElementById("ui-kit-react-theme-tag");
      styleTag.setAttribute("id", "ui-kit-react-theme-tag");
      styleTag.setAttribute("type", "text/css");
      styleTag.innerHTML = ":root{".concat(themeRules, "}.ui-kit-general-box{").concat(cssRules, "}");
    } else {
      var _styleTag = document.createElement("style");
      _styleTag.setAttribute("id", "ui-kit-react-theme-tag");
      _styleTag.setAttribute("type", "text/css");
      _styleTag.innerHTML = ":root{".concat(themeRules, "}.ui-kit-general-box{").concat(cssRules, "}");
      document.head.appendChild(_styleTag);
    }
  }, [initialState, theme, initialTheme]);
  return /*#__PURE__*/React__default.createElement(ThemeContext.Provider, {
    value: initialState
  }, children);
};
ThemeProvider.propTypes = {
  initialTheme: propTypes.exports.object
};
ThemeProvider.defaultProps = {
  initialTheme: {}
};

var _excluded$I = ["message", "description", "colorScheme", "theme", "button", "buttonAction", "onAction", "className", "closable", "bordered", "smartColor", "iconColor", "icon"];
var Alert = function Alert(_ref) {
  var _classNames;
  var message = _ref.message,
    description = _ref.description,
    colorScheme = _ref.colorScheme,
    theme = _ref.theme,
    button = _ref.button;
    _ref.buttonAction;
    _ref.onAction;
    var className = _ref.className,
    closable = _ref.closable;
    _ref.bordered;
    var smartColor = _ref.smartColor,
    iconColor = _ref.iconColor,
    icon = _ref.icon,
    props = _objectWithoutProperties(_ref, _excluded$I);
  var _useState = useState(true),
    _useState2 = _slicedToArray$4(_useState, 2),
    showAlert = _useState2[0],
    setShowAlert = _useState2[1];
  var _useContext = useContext(ThemeContext),
    d__theme = _useContext.theme;
  var generateAlertClassName = classNames((_classNames = {}, _defineProperty$6(_classNames, "theme__".concat(theme), true), _defineProperty$6(_classNames, "color-scheme__".concat(colorScheme), true), _defineProperty$6(_classNames, "ui-alert", true), _defineProperty$6(_classNames, "is-toast", closable), _defineProperty$6(_classNames, "smartColor", smartColor), _defineProperty$6(_classNames, "iconColor", iconColor), _classNames), className);
  var smartColors = {
    "--smart-color": smartColor,
    "--icon-color": iconColor,
    "--smart-text-color": getTextColor(smartColor),
    "--light-primary-title-text-color": getTextColor(d__theme["--light-primary-action-color"], "#ffffff", "#212934"),
    "--light-primary-description-text-color": getTextColor(d__theme["--light-primary-action-color"], "#ffffff", "#5f6b7a"),
    "--dark-primary-title-text-color": getTextColor(d__theme["--dark-primary-action-color"], "#ffffff", "#212934"),
    "--dark-primary-description-text-color": getTextColor(d__theme["--dark-primary-action-color"], "#ffffff", "#5f6b7a")
  };
  var schemeIcons = {
    info: Info,
    warning: Warning,
    error: Error$1,
    success: Check
  };
  var remove = function remove() {
    setShowAlert(false);
  };
  return showAlert ? /*#__PURE__*/React__default.createElement(Box, _extends$1({
    className: generateAlertClassName
  }, props, {
    style: smartColors
  }), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-alert__content-wrapper"
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-alert__content"
  }, colorScheme !== "default" && /*#__PURE__*/React__default.createElement(Icon, {
    className: "ui-alert__header-icon",
    icon: icon || schemeIcons[colorScheme]
  }), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-alert__text"
  }, message && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-alert__header"
  }, /*#__PURE__*/React__default.createElement(Heading, {
    scale: "subtitle-2",
    className: "ui-alert__header-text"
  }, message)), description && theme !== "inline" && /*#__PURE__*/React__default.createElement(Text$1, {
    marginTop: 0,
    scale: "subhead",
    className: "ui-alert__body no-top"
  }, description), button && theme !== "inline" && /*#__PURE__*/React__default.createElement(Button, _extends$1({
    className: "ui-alert__call-to-action"
  }, button))))), closable && theme !== "inline" && /*#__PURE__*/React__default.createElement(Icon, {
    smartcolor: "currentcolor",
    className: "ui-alert__close-icon",
    icon: Close,
    onClick: props.onClose || props.onClick || remove
  })) : /*#__PURE__*/React__default.createElement("div", null);
};
Alert.propTypes = {
  message: propTypes.exports.string,
  description: propTypes.exports.string,
  colorScheme: propTypes.exports.oneOf(["default", "info", "warning", "error", "success"]).isRequired,
  theme: propTypes.exports.oneOf(["flat", "filled", "inline"]).isRequired,
  button: propTypes.exports.object,
  action: propTypes.exports.func,
  closable: propTypes.exports.bool,
  bordered: propTypes.exports.bool,
  smartColor: propTypes.exports.string,
  iconColor: propTypes.exports.string,
  icon: propTypes.exports.object
};
Alert.defaultProps = {
  colorScheme: "default",
  theme: "flat",
  closable: false
};

var _excluded$H = ["alignment", "wrap", "stretchItems", "itemSpacing", "direction", "children", "className"];
var AutoLayout = function AutoLayout(_ref) {
  var _classNames;
  var alignment = _ref.alignment,
    wrap = _ref.wrap,
    stretchItems = _ref.stretchItems,
    itemSpacing = _ref.itemSpacing,
    direction = _ref.direction,
    children = _ref.children,
    className = _ref.className,
    props = _objectWithoutProperties(_ref, _excluded$H);
  return /*#__PURE__*/React__default.createElement(Box, _extends$1({
    className: classNames((_classNames = {
      "d-auto-layout": true
    }, _defineProperty$6(_classNames, "align__".concat(alignment), alignment), _defineProperty$6(_classNames, "direction__".concat(direction), direction), _defineProperty$6(_classNames, "wrap", wrap), _defineProperty$6(_classNames, "stretchItems", stretchItems), _classNames), className),
    style: _defineProperty$6({}, "--spacing-value", itemSpacing)
  }, props), children);
};
AutoLayout.propTypes = {
  direction: propTypes.exports.oneOf(["horizontal", "vertical"]),
  itemSpacing: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.string]),
  alignment: propTypes.exports.oneOf(["top-left", "top-center", "top-right", "center-right", "center", "center-left", "bottom-left", "bottom-center", "bottom-right"]),
  wrap: propTypes.exports.bool,
  stretchItems: propTypes.exports.bool
};
AutoLayout.defaultProps = {
  direction: "horizontal",
  itemSpacing: "10px"
};

var NATIVE_BIND = functionBindNative;

var FunctionPrototype = Function.prototype;
var apply$2 = FunctionPrototype.apply;
var call$6 = FunctionPrototype.call;

// eslint-disable-next-line es/no-reflect -- safe
var functionApply = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call$6.bind(apply$2) : function () {
  return call$6.apply(apply$2, arguments);
});

var classofRaw = classofRaw$2;
var uncurryThis$c = functionUncurryThis;

var functionUncurryThisClause = function (fn) {
  // Nashorn bug:
  //   https://github.com/zloirock/core-js/issues/1128
  //   https://github.com/zloirock/core-js/issues/1130
  if (classofRaw(fn) === 'Function') return uncurryThis$c(fn);
};

// TODO: Remove from `core-js@4` since it's moved to entry points

var uncurryThis$b = functionUncurryThisClause;
var defineBuiltIn$4 = defineBuiltIn$6;
var regexpExec$1 = regexpExec$2;
var fails$8 = fails$o;
var wellKnownSymbol$b = wellKnownSymbol$f;
var createNonEnumerableProperty$3 = createNonEnumerableProperty$6;

var SPECIES$1 = wellKnownSymbol$b('species');
var RegExpPrototype$3 = RegExp.prototype;

var fixRegexpWellKnownSymbolLogic = function (KEY, exec, FORCED, SHAM) {
  var SYMBOL = wellKnownSymbol$b(KEY);

  var DELEGATES_TO_SYMBOL = !fails$8(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails$8(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {};
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES$1] = function () { return re; };
      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }

    re.exec = function () { execCalled = true; return null; };

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    FORCED
  ) {
    var uncurriedNativeRegExpMethod = uncurryThis$b(/./[SYMBOL]);
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      var uncurriedNativeMethod = uncurryThis$b(nativeMethod);
      var $exec = regexp.exec;
      if ($exec === regexpExec$1 || $exec === RegExpPrototype$3.exec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };
        }
        return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };
      }
      return { done: false };
    });

    defineBuiltIn$4(String.prototype, KEY, methods[0]);
    defineBuiltIn$4(RegExpPrototype$3, SYMBOL, methods[1]);
  }

  if (SHAM) createNonEnumerableProperty$3(RegExpPrototype$3[SYMBOL], 'sham', true);
};

var uncurryThis$a = functionUncurryThis;
var toIntegerOrInfinity$1 = toIntegerOrInfinity$4;
var toString$9 = toString$f;
var requireObjectCoercible$6 = requireObjectCoercible$a;

var charAt$4 = uncurryThis$a(''.charAt);
var charCodeAt = uncurryThis$a(''.charCodeAt);
var stringSlice$5 = uncurryThis$a(''.slice);

var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = toString$9(requireObjectCoercible$6($this));
    var position = toIntegerOrInfinity$1(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = charCodeAt(S, position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING
          ? charAt$4(S, position)
          : first
        : CONVERT_TO_STRING
          ? stringSlice$5(S, position, position + 2)
          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

var stringMultibyte = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};

var charAt$3 = stringMultibyte.charAt;

// `AdvanceStringIndex` abstract operation
// https://tc39.es/ecma262/#sec-advancestringindex
var advanceStringIndex$1 = function (S, index, unicode) {
  return index + (unicode ? charAt$3(S, index).length : 1);
};

var uncurryThis$9 = functionUncurryThis;
var toObject$2 = toObject$6;

var floor$1 = Math.floor;
var charAt$2 = uncurryThis$9(''.charAt);
var replace$1 = uncurryThis$9(''.replace);
var stringSlice$4 = uncurryThis$9(''.slice);
// eslint-disable-next-line redos/no-vulnerable -- safe
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;

// `GetSubstitution` abstract operation
// https://tc39.es/ecma262/#sec-getsubstitution
var getSubstitution$2 = function (matched, str, position, captures, namedCaptures, replacement) {
  var tailPos = position + matched.length;
  var m = captures.length;
  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
  if (namedCaptures !== undefined) {
    namedCaptures = toObject$2(namedCaptures);
    symbols = SUBSTITUTION_SYMBOLS;
  }
  return replace$1(replacement, symbols, function (match, ch) {
    var capture;
    switch (charAt$2(ch, 0)) {
      case '$': return '$';
      case '&': return matched;
      case '`': return stringSlice$4(str, 0, position);
      case "'": return stringSlice$4(str, tailPos);
      case '<':
        capture = namedCaptures[stringSlice$4(ch, 1, -1)];
        break;
      default: // \d\d?
        var n = +ch;
        if (n === 0) return match;
        if (n > m) {
          var f = floor$1(n / 10);
          if (f === 0) return match;
          if (f <= m) return captures[f - 1] === undefined ? charAt$2(ch, 1) : captures[f - 1] + charAt$2(ch, 1);
          return match;
        }
        capture = captures[n - 1];
    }
    return capture === undefined ? '' : capture;
  });
};

var call$5 = functionCall;
var anObject$4 = anObject$b;
var isCallable$7 = isCallable$l;
var classof$1 = classofRaw$2;
var regexpExec = regexpExec$2;

var $TypeError$4 = TypeError;

// `RegExpExec` abstract operation
// https://tc39.es/ecma262/#sec-regexpexec
var regexpExecAbstract = function (R, S) {
  var exec = R.exec;
  if (isCallable$7(exec)) {
    var result = call$5(exec, R, S);
    if (result !== null) anObject$4(result);
    return result;
  }
  if (classof$1(R) === 'RegExp') return call$5(regexpExec, R, S);
  throw $TypeError$4('RegExp#exec called on incompatible receiver');
};

var apply$1 = functionApply;
var call$4 = functionCall;
var uncurryThis$8 = functionUncurryThis;
var fixRegExpWellKnownSymbolLogic$1 = fixRegexpWellKnownSymbolLogic;
var fails$7 = fails$o;
var anObject$3 = anObject$b;
var isCallable$6 = isCallable$l;
var isNullOrUndefined$2 = isNullOrUndefined$5;
var toIntegerOrInfinity = toIntegerOrInfinity$4;
var toLength$2 = toLength$4;
var toString$8 = toString$f;
var requireObjectCoercible$5 = requireObjectCoercible$a;
var advanceStringIndex = advanceStringIndex$1;
var getMethod$2 = getMethod$4;
var getSubstitution$1 = getSubstitution$2;
var regExpExec$1 = regexpExecAbstract;
var wellKnownSymbol$a = wellKnownSymbol$f;

var REPLACE$1 = wellKnownSymbol$a('replace');
var max$7 = Math.max;
var min$6 = Math.min;
var concat = uncurryThis$8([].concat);
var push$1 = uncurryThis$8([].push);
var stringIndexOf$3 = uncurryThis$8(''.indexOf);
var stringSlice$3 = uncurryThis$8(''.slice);

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0 = (function () {
  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
  return 'a'.replace(/./, '$0') === '$0';
})();

// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
  if (/./[REPLACE$1]) {
    return /./[REPLACE$1]('a', '$0') === '';
  }
  return false;
})();

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails$7(function () {
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive
  return ''.replace(re, '$<a>') !== '7';
});

// @@replace logic
fixRegExpWellKnownSymbolLogic$1('replace', function (_, nativeReplace, maybeCallNative) {
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

  return [
    // `String.prototype.replace` method
    // https://tc39.es/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible$5(this);
      var replacer = isNullOrUndefined$2(searchValue) ? undefined : getMethod$2(searchValue, REPLACE$1);
      return replacer
        ? call$4(replacer, searchValue, O, replaceValue)
        : call$4(nativeReplace, toString$8(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
    function (string, replaceValue) {
      var rx = anObject$3(this);
      var S = toString$8(string);

      if (
        typeof replaceValue == 'string' &&
        stringIndexOf$3(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&
        stringIndexOf$3(replaceValue, '$<') === -1
      ) {
        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
        if (res.done) return res.value;
      }

      var functionalReplace = isCallable$6(replaceValue);
      if (!functionalReplace) replaceValue = toString$8(replaceValue);

      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec$1(rx, S);
        if (result === null) break;

        push$1(results, result);
        if (!global) break;

        var matchStr = toString$8(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength$2(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = toString$8(result[0]);
        var position = max$7(min$6(toIntegerOrInfinity(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) push$1(captures, maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = concat([matched], captures, position, S);
          if (namedCaptures !== undefined) push$1(replacerArgs, namedCaptures);
          var replacement = toString$8(apply$1(replaceValue, undefined, replacerArgs));
        } else {
          replacement = getSubstitution$1(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += stringSlice$3(S, nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + stringSlice$3(S, nextSourcePosition);
    }
  ];
}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);

var getInitials = function getInitials(name) {
  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "?";
  if (!name || typeof name !== "string") return fallback;
  return name.replace(/\s+/, " ").split(" ").slice(0, 3).map(function (firstLetter) {
    return firstLetter && firstLetter[0];
  }).join("");
};

function keyGen() {
  var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;
  var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
  var result = '';
  for (var i = 0; i < length; i++) {
    result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));
  }
  return result;
}

var _excluded$G = ["avatar", "subtle", "dropdown", "size", "visibleAvatars", "stacked", "avatars", "className"];
var colorSchemes = ["cyan", "green", "orange", "red", "gray", "blue"];
var generateAvatarColorScheme = function generateAvatarColorScheme(avatar, index) {
  return avatar.colorScheme || (index < colorSchemes.length ? colorSchemes[index] : colorSchemes[index % colorSchemes.length]);
};
var generateAvatarClassName = function generateAvatarClassName(avatar) {
  var _classNames;
  var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  return classNames((_classNames = {}, _defineProperty$6(_classNames, "background__".concat(generateAvatarColorScheme(avatar, index)), !avatar.imgURL), _defineProperty$6(_classNames, "status__".concat(avatar.status), avatar.status), _classNames), "ui-avatar");
};
var Avatar = function Avatar(_ref) {
  var _classNames2;
  var avatar = _ref.avatar,
    subtle = _ref.subtle,
    dropdown = _ref.dropdown,
    size = _ref.size,
    visibleAvatars = _ref.visibleAvatars,
    stacked = _ref.stacked,
    avatars = _ref.avatars,
    className = _ref.className,
    props = _objectWithoutProperties(_ref, _excluded$G);
  var wrapperClassName = classNames((_classNames2 = {
    "ui-avatars__wrapper": true,
    subtle: subtle
  }, _defineProperty$6(_classNames2, "size__".concat(size), true), _defineProperty$6(_classNames2, "padded", avatars.length & !stacked), _defineProperty$6(_classNames2, "stacked", avatars.length && stacked), _classNames2), className);
  var extraAvatars = avatars && avatars.length ? avatars.length - visibleAvatars : 0;
  var avatarFactory = function avatarFactory(avatar) {
    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("div", {
      style: _objectSpread2$1({}, avatar.imgURL ? {
        backgroundImage: "url(".concat(avatar.imgURL, ")")
      } : {}),
      className: generateAvatarClassName(avatar, index)
    }, !avatar.imgURL && /*#__PURE__*/React__default.createElement(Text$1, {
      equalLineHeight: true,
      scale: size === "small" ? "overline" : "footnote"
    }, getInitials(avatar.name)), avatar.status && !stacked && /*#__PURE__*/React__default.createElement("div", {
      className: "ui-avatar__avatar-status"
    })), dropdown && !stacked && /*#__PURE__*/React__default.createElement(Icon, {
      className: "ui-avatar__dropdown-icon",
      icon: ChevronFilledDown
    }));
  };
  var generatedAvatars = avatars.length ? avatars.slice(0, visibleAvatars).map(function (avatar, index) {
    return /*#__PURE__*/React__default.createElement("div", {
      key: "ui-avatar__".concat(keyGen()),
      className: "ui-avatar__wrapper"
    }, avatarFactory(avatar, index));
  }) : /*#__PURE__*/React__default.createElement("div", {
    className: "ui-avatar__wrapper"
  }, avatarFactory(avatar));
  return /*#__PURE__*/React__default.createElement(Box, _extends$1({
    is: "div",
    className: wrapperClassName
  }, props), generatedAvatars, extraAvatars > 0 && /*#__PURE__*/React__default.createElement("div", {
    className: "ui-avatar__wrapper"
  }, /*#__PURE__*/React__default.createElement("div", {
    className: "ui-avatar background__extra"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    scale: size === "small" ? "overline" : "footnote"
  }, "+", extraAvatars))));
};
Avatar.propTypes = {
  subtle: propTypes.exports.bool,
  stacked: propTypes.exports.bool,
  size: propTypes.exports.oneOf(["small", "medium", "large"]),
  avatar: propTypes.exports.object,
  avatars: propTypes.exports.array,
  dropdown: propTypes.exports.bool,
  visibleAvatars: propTypes.exports.number
};
Avatar.defaultProps = {
  subtle: false,
  stacked: false,
  size: "large",
  avatar: {
    name: "Eric Aprioku"
  },
  dropdown: false,
  visibleAvatars: 6,
  avatars: []
};

var _excluded$F = ["children", "colorScheme", "className", "subtle", "size", "customSize", "smartColor"];
var Badge = function Badge(_ref) {
  var _classNames;
  var children = _ref.children,
    colorScheme = _ref.colorScheme,
    className = _ref.className,
    subtle = _ref.subtle,
    size = _ref.size,
    customSize = _ref.customSize,
    smartColor = _ref.smartColor;
    _objectWithoutProperties(_ref, _excluded$F);
  var generatedClassName = classNames((_classNames = {}, _defineProperty$6(_classNames, "color-scheme__".concat(colorScheme), true), _defineProperty$6(_classNames, "subtle", subtle), _defineProperty$6(_classNames, "size__".concat(size), true), _defineProperty$6(_classNames, "ui-badge", true), _defineProperty$6(_classNames, "sizeCustom", customSize), _defineProperty$6(_classNames, "smartColor", smartColor), _classNames), className);
  var cssVars = {
    "--size": typeof customSize === "number" ? "".concat(customSize, "px") : customSize,
    "--smart-color": smartColor,
    "--smart-text-color": getTextColor(smartColor)
  };
  return /*#__PURE__*/React__default.createElement(Box, {
    className: generatedClassName,
    style: cssVars
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    equalLineHeight: true,
    className: "ui-badge__text",
    scale: size === "large" ? "footnote" : "overline",
    fontSize: size === "huge" ? "12px" : null
  }, children));
};
Badge.propTypes = {
  colorScheme: propTypes.exports.oneOf(["neutral", "green", "red", "yellow", "cyan", "blue"]).isRequired,
  subtle: propTypes.exports.bool,
  size: propTypes.exports.oneOf(["small", "medium", "large", "huge"]).isRequired,
  customSize: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
Badge.defaultProps = {
  colorScheme: "neutral",
  subtle: false,
  size: "small"
};

var _excluded$E = ["colorScheme", "title", "description", "removable", "full", "onRemove", "alignTop", "icon", "iconColor", "noIcon", "smartColor", "className"];
var Banner = function Banner(_ref) {
  var _classNames;
  var colorScheme = _ref.colorScheme,
    title = _ref.title,
    description = _ref.description,
    removable = _ref.removable,
    full = _ref.full,
    onRemove = _ref.onRemove,
    alignTop = _ref.alignTop,
    icon = _ref.icon,
    iconColor = _ref.iconColor,
    noIcon = _ref.noIcon,
    smartColor = _ref.smartColor,
    className = _ref.className,
    props = _objectWithoutProperties(_ref, _excluded$E);
  var _useState = useState(true),
    _useState2 = _slicedToArray$4(_useState, 2),
    visible = _useState2[0],
    setVisible = _useState2[1];
  var schemeIcons = {
    info: Info,
    warning: Warning,
    error: Error$1,
    success: Check
  };
  var cssVars = {
    "--smart-color": smartColor,
    "--smart-title-color": getTextColor(smartColor),
    "--smart-description-color": getTextColor(smartColor, "#6D7786", "#94A3B8"),
    "--icon-color": iconColor
  };
  var bannerClasses = classNames((_classNames = {
    "ui-banner": true
  }, _defineProperty$6(_classNames, "color-scheme__".concat(colorScheme), true), _defineProperty$6(_classNames, "alignTop", alignTop), _defineProperty$6(_classNames, "full", full), _defineProperty$6(_classNames, "smartColor", smartColor), _defineProperty$6(_classNames, "iconColor", iconColor), _classNames), className);
  var remove = function remove() {
    if (onRemove && typeof onRemove === "function") {
      onRemove();
    }
    setVisible(false);
  };
  return visible ? /*#__PURE__*/React__default.createElement(Box, _extends$1({
    className: bannerClasses,
    style: cssVars
  }, props), /*#__PURE__*/React__default.createElement(Box, {
    className: "text-content"
  }, (colorScheme !== "default" || icon) && !noIcon && /*#__PURE__*/React__default.createElement(Icon, {
    className: "ui-banner-icon",
    icon: icon ? icon : schemeIcons[colorScheme]
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    scale: "subhead",
    className: "ui-banner__title text-gray-700",
    "font-face": "circularSTD"
  }, title), /*#__PURE__*/React__default.createElement(Text$1, {
    scale: "subhead",
    className: "ui-banner__description text-gray-600",
    "font-face": "circularSTD"
  }, /*#__PURE__*/React__default.createElement("span", {
    dangerouslySetInnerHTML: {
      __html: description
    }
  }))), removable && /*#__PURE__*/React__default.createElement(Icon, {
    icon: Close,
    onClick: remove,
    className: "ui-banner__close-icon",
    cursor: "pointer"
  })) : /*#__PURE__*/React__default.createElement("div", null);
};
Banner.defaultProps = {
  colorScheme: "default",
  full: true,
  noIcon: false
};
Banner.propTypes = {
  title: propTypes.exports.string,
  description: propTypes.exports.string,
  colorScheme: propTypes.exports.oneOf(["default", "info", "warning", "error", "success"]),
  removable: propTypes.exports.bool,
  onRemove: propTypes.exports.func,
  full: propTypes.exports.bool,
  alignTop: propTypes.exports.bool,
  icon: propTypes.exports.object,
  iconColor: propTypes.exports.string,
  noIcon: propTypes.exports.bool,
  smartColor: propTypes.exports.string
};

var _excluded$D = ["className", "children", "ringed", "alignToTop", "label", "value", "disabled", "labelClass", "alignRight", "checked", "onChange", "labelComponent", "ringSize", "ringThickness"];
var Radio = function Radio(_ref) {
  var className = _ref.className,
    children = _ref.children,
    ringed = _ref.ringed,
    alignToTop = _ref.alignToTop,
    label = _ref.label,
    value = _ref.value,
    disabled = _ref.disabled,
    labelClass = _ref.labelClass,
    alignRight = _ref.alignRight,
    checked = _ref.checked,
    onChange = _ref.onChange,
    labelComponent = _ref.labelComponent,
    ringSize = _ref.ringSize,
    ringThickness = _ref.ringThickness,
    props = _objectWithoutProperties(_ref, _excluded$D);
  var radio = useRef();
  useEffect(function () {
    radio.current.checked = checked;
  }, [checked]);
  var handleOnChange = function handleOnChange(e) {
    if (checked === undefined) {
      if (onChange && typeof onChange === "function") {
        onChange(e);
      }
    } else {
      if (onChange && typeof onChange === "function") {
        onChange(e, !checked);
      }
    }
  };
  var generateRadioClassName = classNames({
    ringed: ringed,
    "ui-radio__wrapper": true,
    alignToTop: alignToTop,
    alignRight: alignRight
  }, className);
  return /*#__PURE__*/React__default.createElement(Box, {
    is: "label",
    className: generateRadioClassName,
    style: {
      "--ring-size": ringSize,
      "--ring-thickness": ringThickness
    }
  }, /*#__PURE__*/React__default.createElement(Box, _extends$1({
    is: "input",
    className: classNames({
      "ui-radio": true,
      hasLabel: label || children
    }),
    type: "radio"
  }, props, {
    disabled: disabled,
    ref: radio,
    onChange: handleOnChange,
    value: value
  })), children ? /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-radio__label-wrap"
  }, children) : labelComponent ? /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-radio__label-text"
  }, labelComponent) : /*#__PURE__*/React__default.createElement(Text$1, {
    className: classNames(_defineProperty$6({
      "ui-radio__label-text": true
    }, labelClass, labelClass)),
    marginY: 0
  }, label));
};
Radio.defaultProps = {
  ringed: false,
  alignToTop: false,
  ringSize: "16px",
  ringThickness: "5px"
};
Radio.propTypes = {
  ringed: propTypes.exports.bool,
  alignToTop: propTypes.exports.bool,
  label: propTypes.exports.string,
  value: propTypes.exports.string,
  disabled: propTypes.exports.bool,
  labelClass: propTypes.exports.string,
  labelComponent: propTypes.exports.node,
  alignRight: propTypes.exports.bool,
  checked: propTypes.exports.bool,
  onChange: propTypes.exports.func,
  ringSize: propTypes.exports.string,
  ringThickness: propTypes.exports.string
};

var _excluded$C = ["children", "label", "alignToTop", "dashed", "disabled", "labelClass", "wrapperClass", "labelComponent", "className", "checked", "onChange", "size"];
var Checkbox = function Checkbox(_ref) {
  var _classNames;
  var children = _ref.children,
    label = _ref.label,
    alignToTop = _ref.alignToTop,
    dashed = _ref.dashed,
    disabled = _ref.disabled,
    labelClass = _ref.labelClass,
    wrapperClass = _ref.wrapperClass,
    labelComponent = _ref.labelComponent,
    className = _ref.className,
    checked = _ref.checked,
    onChange = _ref.onChange,
    size = _ref.size,
    props = _objectWithoutProperties(_ref, _excluded$C);
  var checkbox = useRef();
  useEffect(function () {
    checkbox.current.checked = checked;
  }, [checked]);
  var handleOnChange = function handleOnChange(e) {
    if (checked === undefined) {
      if (onChange && typeof onChange === "function") {
        onChange(e);
      }
    } else {
      if (onChange && typeof onChange === "function") {
        onChange(e, !checked);
      }
    }
  };
  var checkboxClassName = classNames((_classNames = {
    "ui-checkbox__wrapper": true,
    alignToTop: alignToTop,
    dashed: dashed,
    disabled: disabled
  }, _defineProperty$6(_classNames, wrapperClass, wrapperClass), _defineProperty$6(_classNames, className, className), _classNames));
  return /*#__PURE__*/React__default.createElement(Box, {
    is: "label",
    className: checkboxClassName,
    style: {
      "--checkbox-size": size
    }
  }, /*#__PURE__*/React__default.createElement(Box, _extends$1({
    is: "input",
    className: classNames({
      "ui-checkbox": true,
      hasLabel: label || labelComponent || children
    }),
    type: "checkbox",
    disabled: disabled
  }, props, {
    ref: checkbox,
    onChange: handleOnChange
  })), children || labelComponent ? /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-checkbox__label-wrap"
  }, labelComponent ? labelComponent : children) : /*#__PURE__*/React__default.createElement(Text$1, {
    className: classNames(_defineProperty$6({
      "ui-checkbox__label-text": true
    }, labelClass, labelClass)),
    marginY: 0
  }, label));
};
Checkbox.defaultProps = {
  alignToTop: false,
  disabled: false,
  dashed: false,
  checked: undefined,
  size: "16px"
};
Checkbox.propTypes = {
  label: propTypes.exports.string,
  alignToTop: propTypes.exports.bool,
  dashed: propTypes.exports.bool,
  disabled: propTypes.exports.bool,
  labelClass: propTypes.exports.string,
  wrapperClass: propTypes.exports.string,
  labelComponent: propTypes.exports.node,
  checked: propTypes.exports.bool,
  onChange: propTypes.exports.func,
  size: propTypes.exports.string
};

var _excluded$B = ["title", "subtitle", "desc", "children", "radio", "checkbox", "icon", "isSelected", "className", "ringedRadio", "dashedCheckbox", "wrapperClass", "hoverColor", "border", "cardClass", "header", "footer", "onChange", "checked"];
var Card = function Card(_ref) {
  var _classNames;
  var title = _ref.title,
    subtitle = _ref.subtitle,
    desc = _ref.desc,
    children = _ref.children,
    radio = _ref.radio,
    checkbox = _ref.checkbox,
    icon = _ref.icon,
    isSelected = _ref.isSelected,
    className = _ref.className;
    _ref.ringedRadio;
    _ref.dashedCheckbox;
    var wrapperClass = _ref.wrapperClass,
    hoverColor = _ref.hoverColor,
    border = _ref.border,
    cardClass = _ref.cardClass,
    header = _ref.header,
    footer = _ref.footer,
    onChange = _ref.onChange,
    checked = _ref.checked,
    props = _objectWithoutProperties(_ref, _excluded$B);
  var _useState = useState(isSelected),
    _useState2 = _slicedToArray$4(_useState, 2),
    selected = _useState2[0],
    setSelected = _useState2[1];
  useEffect(function () {
    setSelected(checked);
  }, [checked]);
  var handleChange = function handleChange(e) {
    if (onChange && typeof onChange === "function") {
      onChange(e);
    }
  };
  return /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-card__wrapper"
  }, header, /*#__PURE__*/React__default.createElement(Box, {
    is: radio || checkbox ? "label" : "div",
    className: classNames((_classNames = {
      "ui-card": true,
      state__selected: selected
    }, _defineProperty$6(_classNames, wrapperClass, wrapperClass), _defineProperty$6(_classNames, "shouldHover", radio || checkbox || hoverColor), _defineProperty$6(_classNames, "isForm", radio || checkbox), _defineProperty$6(_classNames, "border", border), _defineProperty$6(_classNames, "hasHeader", header), _defineProperty$6(_classNames, "hasFooter", footer), _defineProperty$6(_classNames, "selected", selected), _defineProperty$6(_classNames, cardClass, true), _classNames), className),
    marginLeft: "0",
    marginRight: "0",
    marginX: "0",
    marginY: "0",
    marginTop: "0",
    marginBottom: "0",
    width: "100%"
  }, radio && /*#__PURE__*/React__default.createElement(Radio, _extends$1({
    is: "input",
    className: "ui-radio ui-card__form-selector",
    type: "radio",
    onChange: handleChange
  }, props, {
    checked: checked
  })) || checkbox && /*#__PURE__*/React__default.createElement(Checkbox, _extends$1({
    is: "input",
    className: "ui-checkbox ui-card__form-selector",
    type: "checkbox",
    onChange: handleChange
  }, props, {
    checked: checked
  })), /*#__PURE__*/React__default.createElement("div", {
    className: "ui-card__content"
  }, /*#__PURE__*/React__default.createElement("div", {
    className: "ui-card__title ".concat(classNames({
      centered_title: !radio && !checkbox
    }))
  }, title), /*#__PURE__*/React__default.createElement("div", {
    className: "ui-card__subtitle"
  }, subtitle), (desc || children) && /*#__PURE__*/React__default.createElement("div", {
    className: "ui-card__card-text"
  }, desc || children)), icon && /*#__PURE__*/React__default.createElement(Icon, {
    className: "ui-card__icon",
    icon: icon
  })), footer);
};
Card.propTypes = {
  title: propTypes.exports.string,
  icon: propTypes.exports.object,
  selected: propTypes.exports.bool,
  subtitle: propTypes.exports.string,
  isSelected: propTypes.exports.bool,
  radio: propTypes.exports.bool,
  value: propTypes.exports.bool,
  checkbox: propTypes.exports.bool,
  desc: propTypes.exports.string,
  ringedRadio: propTypes.exports.bool,
  dashedCheckbox: propTypes.exports.bool,
  wrapperClass: propTypes.exports.string,
  border: propTypes.exports.string,
  hoverColor: propTypes.exports.string,
  cardClass: propTypes.exports.string,
  header: propTypes.exports.object,
  footer: propTypes.exports.object,
  checked: propTypes.exports.bool
};
Card.defaultProps = {
  icon: false,
  isSelected: false,
  radio: false,
  checkbox: false,
  checked: undefined
  // icon: ChevronFilledDown
};

var isObject$3 = isObject$9;
var classof = classofRaw$2;
var wellKnownSymbol$9 = wellKnownSymbol$f;

var MATCH$2 = wellKnownSymbol$9('match');

// `IsRegExp` abstract operation
// https://tc39.es/ecma262/#sec-isregexp
var isRegexp = function (it) {
  var isRegExp;
  return isObject$3(it) && ((isRegExp = it[MATCH$2]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
};

var call$3 = functionCall;
var hasOwn$3 = hasOwnProperty_1;
var isPrototypeOf$1 = objectIsPrototypeOf;
var regExpFlags = regexpFlags$1;

var RegExpPrototype$2 = RegExp.prototype;

var regexpGetFlags = function (R) {
  var flags = R.flags;
  return flags === undefined && !('flags' in RegExpPrototype$2) && !hasOwn$3(R, 'flags') && isPrototypeOf$1(RegExpPrototype$2, R)
    ? call$3(regExpFlags, R) : flags;
};

var $$7 = _export;
var call$2 = functionCall;
var uncurryThis$7 = functionUncurryThis;
var requireObjectCoercible$4 = requireObjectCoercible$a;
var isCallable$5 = isCallable$l;
var isNullOrUndefined$1 = isNullOrUndefined$5;
var isRegExp$2 = isRegexp;
var toString$7 = toString$f;
var getMethod$1 = getMethod$4;
var getRegExpFlags$2 = regexpGetFlags;
var getSubstitution = getSubstitution$2;
var wellKnownSymbol$8 = wellKnownSymbol$f;

var REPLACE = wellKnownSymbol$8('replace');
var $TypeError$3 = TypeError;
var indexOf = uncurryThis$7(''.indexOf);
uncurryThis$7(''.replace);
var stringSlice$2 = uncurryThis$7(''.slice);
var max$6 = Math.max;

var stringIndexOf$2 = function (string, searchValue, fromIndex) {
  if (fromIndex > string.length) return -1;
  if (searchValue === '') return fromIndex;
  return indexOf(string, searchValue, fromIndex);
};

// `String.prototype.replaceAll` method
// https://tc39.es/ecma262/#sec-string.prototype.replaceall
$$7({ target: 'String', proto: true }, {
  replaceAll: function replaceAll(searchValue, replaceValue) {
    var O = requireObjectCoercible$4(this);
    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;
    var position = 0;
    var endOfLastMatch = 0;
    var result = '';
    if (!isNullOrUndefined$1(searchValue)) {
      IS_REG_EXP = isRegExp$2(searchValue);
      if (IS_REG_EXP) {
        flags = toString$7(requireObjectCoercible$4(getRegExpFlags$2(searchValue)));
        if (!~indexOf(flags, 'g')) throw $TypeError$3('`.replaceAll` does not allow non-global regexes');
      }
      replacer = getMethod$1(searchValue, REPLACE);
      if (replacer) {
        return call$2(replacer, searchValue, O, replaceValue);
      }
    }
    string = toString$7(O);
    searchString = toString$7(searchValue);
    functionalReplace = isCallable$5(replaceValue);
    if (!functionalReplace) replaceValue = toString$7(replaceValue);
    searchLength = searchString.length;
    advanceBy = max$6(1, searchLength);
    position = stringIndexOf$2(string, searchString, 0);
    while (position !== -1) {
      replacement = functionalReplace
        ? toString$7(replaceValue(searchString, position, string))
        : getSubstitution(searchString, string, position, [], undefined, replaceValue);
      result += stringSlice$2(string, endOfLastMatch, position) + replacement;
      endOfLastMatch = position + searchLength;
      position = stringIndexOf$2(string, searchString, position + advanceBy);
    }
    if (endOfLastMatch < string.length) {
      result += stringSlice$2(string, endOfLastMatch);
    }
    return result;
  }
});

var global$3 = global$j;
var fails$6 = fails$o;
var uncurryThis$6 = functionUncurryThis;
var toString$6 = toString$f;
var trim = stringTrim.trim;
var whitespaces = whitespaces$4;

var charAt$1 = uncurryThis$6(''.charAt);
var $parseFloat$1 = global$3.parseFloat;
var Symbol$1 = global$3.Symbol;
var ITERATOR$3 = Symbol$1 && Symbol$1.iterator;
var FORCED$1 = 1 / $parseFloat$1(whitespaces + '-0') !== -Infinity
  // MS Edge 18- broken with boxed symbols
  || (ITERATOR$3 && !fails$6(function () { $parseFloat$1(Object(ITERATOR$3)); }));

// `parseFloat` method
// https://tc39.es/ecma262/#sec-parsefloat-string
var numberParseFloat = FORCED$1 ? function parseFloat(string) {
  var trimmedString = trim(toString$6(string));
  var result = $parseFloat$1(trimmedString);
  return result === 0 && charAt$1(trimmedString, 0) == '-' ? -0 : result;
} : $parseFloat$1;

var $$6 = _export;
var $parseFloat = numberParseFloat;

// `parseFloat` method
// https://tc39.es/ecma262/#sec-parsefloat-string
$$6({ global: true, forced: parseFloat != $parseFloat }, {
  parseFloat: $parseFloat
});

var PROPER_FUNCTION_NAME$1 = functionName.PROPER;
var defineBuiltIn$3 = defineBuiltIn$6;
var anObject$2 = anObject$b;
var $toString = toString$f;
var fails$5 = fails$o;
var getRegExpFlags$1 = regexpGetFlags;

var TO_STRING = 'toString';
var RegExpPrototype$1 = RegExp.prototype;
var nativeToString = RegExpPrototype$1[TO_STRING];

var NOT_GENERIC = fails$5(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });
// FF44- RegExp#toString has a wrong name
var INCORRECT_NAME = PROPER_FUNCTION_NAME$1 && nativeToString.name != TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.es/ecma262/#sec-regexp.prototype.tostring
if (NOT_GENERIC || INCORRECT_NAME) {
  defineBuiltIn$3(RegExp.prototype, TO_STRING, function toString() {
    var R = anObject$2(this);
    var pattern = $toString(R.source);
    var flags = $toString(getRegExpFlags$1(R));
    return '/' + pattern + '/' + flags;
  }, { unsafe: true });
}

var brands = [{
  brand: "American Xpress",
  src: "https://assets.deposits.inc/img/card-brands/amexcard.svg"
}, {
  brand: "Discover",
  src: "https://assets.deposits.inc/img/card-brands/discovercard.svg"
}, {
  brand: "Mastercard",
  src: "https://assets.deposits.inc/img/card-brands/mastercard.svg"
}, {
  brand: "Visacard",
  src: "https://assets.deposits.inc/img/card-brands/visacard.svg"
}];
var BRAND_ALIAS$1 = {
  AMEX: 0,
  DISCOVER: 1,
  MASTERCARD: 2,
  VISACARD: 3,
  NOCARD: -1
};

var inputPropTypes = {
  label: propTypes.exports.string,
  fontFace: propTypes.exports.string,
  size: propTypes.exports.oneOf(["small", "medium", "large", "xlarge", "huge", "massive"]),
  errorMessage: propTypes.exports.string,
  showError: propTypes.exports.bool,
  modelValue: propTypes.exports.string,
  onlyNumbers: propTypes.exports.bool,
  wrapperClass: propTypes.exports.string,
  invisible: propTypes.exports.bool,
  labelClass: propTypes.exports.oneOf([String, Object, Array]),
  leftIcon: propTypes.exports.object,
  rightIcon: propTypes.exports.object,
  disabled: propTypes.exports.bool,
  labelFontFace: propTypes.exports.string,
  autocomplete: propTypes.exports.string,
  form: propTypes.exports.string,
  list: propTypes.exports.string,
  minlength: propTypes.exports.string,
  max: propTypes.exports.string,
  min: propTypes.exports.string,
  multiple: propTypes.exports.string,
  name: propTypes.exports.string,
  pattern: propTypes.exports.string,
  placeholder: propTypes.exports.string,
  required: propTypes.exports.bool,
  step: propTypes.exports.string,
  autofocus: propTypes.exports.string
};
var defaultProps$1 = {
  size: "huge"
};

var cardTypes$1 = {
    visa: {
        niceType: "Visa",
        type: "visa",
        patterns: [4],
        gaps: [4, 8, 12],
        lengths: [16, 18, 19],
        code: {
            name: "CVV",
            size: 3,
        },
    },
    mastercard: {
        niceType: "Mastercard",
        type: "mastercard",
        patterns: [[51, 55], [2221, 2229], [223, 229], [23, 26], [270, 271], 2720],
        gaps: [4, 8, 12],
        lengths: [16],
        code: {
            name: "CVC",
            size: 3,
        },
    },
    "american-express": {
        niceType: "American Express",
        type: "american-express",
        patterns: [34, 37],
        gaps: [4, 10],
        lengths: [15],
        code: {
            name: "CID",
            size: 4,
        },
    },
    "diners-club": {
        niceType: "Diners Club",
        type: "diners-club",
        patterns: [[300, 305], 36, 38, 39],
        gaps: [4, 10],
        lengths: [14, 16, 19],
        code: {
            name: "CVV",
            size: 3,
        },
    },
    discover: {
        niceType: "Discover",
        type: "discover",
        patterns: [6011, [644, 649], 65],
        gaps: [4, 8, 12],
        lengths: [16, 19],
        code: {
            name: "CID",
            size: 3,
        },
    },
    jcb: {
        niceType: "JCB",
        type: "jcb",
        patterns: [2131, 1800, [3528, 3589]],
        gaps: [4, 8, 12],
        lengths: [16, 17, 18, 19],
        code: {
            name: "CVV",
            size: 3,
        },
    },
    unionpay: {
        niceType: "UnionPay",
        type: "unionpay",
        patterns: [
            620,
            [624, 626],
            [62100, 62182],
            [62184, 62187],
            [62185, 62197],
            [62200, 62205],
            [622010, 622999],
            622018,
            [622019, 622999],
            [62207, 62209],
            [622126, 622925],
            [623, 626],
            6270,
            6272,
            6276,
            [627700, 627779],
            [627781, 627799],
            [6282, 6289],
            6291,
            6292,
            810,
            [8110, 8131],
            [8132, 8151],
            [8152, 8163],
            [8164, 8171],
        ],
        gaps: [4, 8, 12],
        lengths: [14, 15, 16, 17, 18, 19],
        code: {
            name: "CVN",
            size: 3,
        },
    },
    maestro: {
        niceType: "Maestro",
        type: "maestro",
        patterns: [
            493698,
            [500000, 504174],
            [504176, 506698],
            [506779, 508999],
            [56, 59],
            63,
            67,
            6,
        ],
        gaps: [4, 8, 12],
        lengths: [12, 13, 14, 15, 16, 17, 18, 19],
        code: {
            name: "CVC",
            size: 3,
        },
    },
    elo: {
        niceType: "Elo",
        type: "elo",
        patterns: [
            401178,
            401179,
            438935,
            457631,
            457632,
            431274,
            451416,
            457393,
            504175,
            [506699, 506778],
            [509000, 509999],
            627780,
            636297,
            636368,
            [650031, 650033],
            [650035, 650051],
            [650405, 650439],
            [650485, 650538],
            [650541, 650598],
            [650700, 650718],
            [650720, 650727],
            [650901, 650978],
            [651652, 651679],
            [655000, 655019],
            [655021, 655058],
        ],
        gaps: [4, 8, 12],
        lengths: [16],
        code: {
            name: "CVE",
            size: 3,
        },
    },
    mir: {
        niceType: "Mir",
        type: "mir",
        patterns: [[2200, 2204]],
        gaps: [4, 8, 12],
        lengths: [16, 17, 18, 19],
        code: {
            name: "CVP2",
            size: 3,
        },
    },
    hiper: {
        niceType: "Hiper",
        type: "hiper",
        patterns: [637095, 63737423, 63743358, 637568, 637599, 637609, 637612],
        gaps: [4, 8, 12],
        lengths: [16],
        code: {
            name: "CVC",
            size: 3,
        },
    },
    hipercard: {
        niceType: "Hipercard",
        type: "hipercard",
        patterns: [606282],
        gaps: [4, 8, 12],
        lengths: [16],
        code: {
            name: "CVC",
            size: 3,
        },
    },
};
var cardTypes_1 = cardTypes$1;

var addMatchingCardsToResults$1 = {};

var clone$1 = {};

Object.defineProperty(clone$1, "__esModule", { value: true });
clone$1.clone = void 0;
function clone(originalObject) {
    if (!originalObject) {
        return null;
    }
    return JSON.parse(JSON.stringify(originalObject));
}
clone$1.clone = clone;

var matches$1 = {};

/*
 * Adapted from https://github.com/polvo-labs/card-type/blob/aaab11f80fa1939bccc8f24905a06ae3cd864356/src/cardType.js#L37-L42
 * */
Object.defineProperty(matches$1, "__esModule", { value: true });
matches$1.matches = void 0;
function matchesRange(cardNumber, min, max) {
    var maxLengthToCheck = String(min).length;
    var substr = cardNumber.substr(0, maxLengthToCheck);
    var integerRepresentationOfCardNumber = parseInt(substr, 10);
    min = parseInt(String(min).substr(0, substr.length), 10);
    max = parseInt(String(max).substr(0, substr.length), 10);
    return (integerRepresentationOfCardNumber >= min &&
        integerRepresentationOfCardNumber <= max);
}
function matchesPattern(cardNumber, pattern) {
    pattern = String(pattern);
    return (pattern.substring(0, cardNumber.length) ===
        cardNumber.substring(0, pattern.length));
}
function matches(cardNumber, pattern) {
    if (Array.isArray(pattern)) {
        return matchesRange(cardNumber, pattern[0], pattern[1]);
    }
    return matchesPattern(cardNumber, pattern);
}
matches$1.matches = matches;

Object.defineProperty(addMatchingCardsToResults$1, "__esModule", { value: true });
addMatchingCardsToResults$1.addMatchingCardsToResults = void 0;
var clone_1$1 = clone$1;
var matches_1 = matches$1;
function addMatchingCardsToResults(cardNumber, cardConfiguration, results) {
    var i, patternLength;
    for (i = 0; i < cardConfiguration.patterns.length; i++) {
        var pattern = cardConfiguration.patterns[i];
        if (!matches_1.matches(cardNumber, pattern)) {
            continue;
        }
        var clonedCardConfiguration = clone_1$1.clone(cardConfiguration);
        if (Array.isArray(pattern)) {
            patternLength = String(pattern[0]).length;
        }
        else {
            patternLength = String(pattern).length;
        }
        if (cardNumber.length >= patternLength) {
            clonedCardConfiguration.matchStrength = patternLength;
        }
        results.push(clonedCardConfiguration);
        break;
    }
}
addMatchingCardsToResults$1.addMatchingCardsToResults = addMatchingCardsToResults;

var isValidInputType$1 = {};

Object.defineProperty(isValidInputType$1, "__esModule", { value: true });
isValidInputType$1.isValidInputType = void 0;
function isValidInputType(cardNumber) {
    return typeof cardNumber === "string" || cardNumber instanceof String;
}
isValidInputType$1.isValidInputType = isValidInputType;

var findBestMatch$1 = {};

Object.defineProperty(findBestMatch$1, "__esModule", { value: true });
findBestMatch$1.findBestMatch = void 0;
function hasEnoughResultsToDetermineBestMatch(results) {
    var numberOfResultsWithMaxStrengthProperty = results.filter(function (result) { return result.matchStrength; }).length;
    /*
     * if all possible results have a maxStrength property that means the card
     * number is sufficiently long enough to determine conclusively what the card
     * type is
     * */
    return (numberOfResultsWithMaxStrengthProperty > 0 &&
        numberOfResultsWithMaxStrengthProperty === results.length);
}
function findBestMatch(results) {
    if (!hasEnoughResultsToDetermineBestMatch(results)) {
        return null;
    }
    return results.reduce(function (bestMatch, result) {
        if (!bestMatch) {
            return result;
        }
        /*
         * If the current best match pattern is less specific than this result, set
         * the result as the new best match
         * */
        if (Number(bestMatch.matchStrength) < Number(result.matchStrength)) {
            return result;
        }
        return bestMatch;
    });
}
findBestMatch$1.findBestMatch = findBestMatch;

var __assign$1 = (commonjsGlobal && commonjsGlobal.__assign) || function () {
    __assign$1 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1.apply(this, arguments);
};
var cardTypes = cardTypes_1;
var add_matching_cards_to_results_1 = addMatchingCardsToResults$1;
var is_valid_input_type_1 = isValidInputType$1;
var find_best_match_1 = findBestMatch$1;
var clone_1 = clone$1;
var customCards = {};
var cardNames = {
    VISA: "visa",
    MASTERCARD: "mastercard",
    AMERICAN_EXPRESS: "american-express",
    DINERS_CLUB: "diners-club",
    DISCOVER: "discover",
    JCB: "jcb",
    UNIONPAY: "unionpay",
    MAESTRO: "maestro",
    ELO: "elo",
    MIR: "mir",
    HIPER: "hiper",
    HIPERCARD: "hipercard",
};
var ORIGINAL_TEST_ORDER = [
    cardNames.VISA,
    cardNames.MASTERCARD,
    cardNames.AMERICAN_EXPRESS,
    cardNames.DINERS_CLUB,
    cardNames.DISCOVER,
    cardNames.JCB,
    cardNames.UNIONPAY,
    cardNames.MAESTRO,
    cardNames.ELO,
    cardNames.MIR,
    cardNames.HIPER,
    cardNames.HIPERCARD,
];
var testOrder = clone_1.clone(ORIGINAL_TEST_ORDER);
function findType(cardType) {
    return customCards[cardType] || cardTypes[cardType];
}
function getAllCardTypes() {
    return testOrder.map(function (cardType) { return clone_1.clone(findType(cardType)); });
}
function getCardPosition(name, ignoreErrorForNotExisting) {
    if (ignoreErrorForNotExisting === void 0) { ignoreErrorForNotExisting = false; }
    var position = testOrder.indexOf(name);
    if (!ignoreErrorForNotExisting && position === -1) {
        throw new Error('"' + name + '" is not a supported card type.');
    }
    return position;
}
function creditCardType$1(cardNumber) {
    var results = [];
    if (!is_valid_input_type_1.isValidInputType(cardNumber)) {
        return results;
    }
    if (cardNumber.length === 0) {
        return getAllCardTypes();
    }
    testOrder.forEach(function (cardType) {
        var cardConfiguration = findType(cardType);
        add_matching_cards_to_results_1.addMatchingCardsToResults(cardNumber, cardConfiguration, results);
    });
    var bestMatch = find_best_match_1.findBestMatch(results);
    if (bestMatch) {
        return [bestMatch];
    }
    return results;
}
creditCardType$1.getTypeInfo = function (cardType) {
    return clone_1.clone(findType(cardType));
};
creditCardType$1.removeCard = function (name) {
    var position = getCardPosition(name);
    testOrder.splice(position, 1);
};
creditCardType$1.addCard = function (config) {
    var existingCardPosition = getCardPosition(config.type, true);
    customCards[config.type] = config;
    if (existingCardPosition === -1) {
        testOrder.push(config.type);
    }
};
creditCardType$1.updateCard = function (cardType, updates) {
    var originalObject = customCards[cardType] || cardTypes[cardType];
    if (!originalObject) {
        throw new Error("\"" + cardType + "\" is not a recognized type. Use `addCard` instead.'");
    }
    if (updates.type && originalObject.type !== updates.type) {
        throw new Error("Cannot overwrite type parameter.");
    }
    var clonedCard = clone_1.clone(originalObject);
    clonedCard = __assign$1(__assign$1({}, clonedCard), updates);
    customCards[clonedCard.type] = clonedCard;
};
creditCardType$1.changeOrder = function (name, position) {
    var currentPosition = getCardPosition(name);
    testOrder.splice(currentPosition, 1);
    testOrder.splice(position, 0, name);
};
creditCardType$1.resetModifications = function () {
    testOrder = clone_1.clone(ORIGINAL_TEST_ORDER);
    customCards = {};
};
creditCardType$1.types = cardNames;
var dist$1 = creditCardType$1;

var cardholderName$1 = {};

Object.defineProperty(cardholderName$1, "__esModule", { value: true });
cardholderName$1.cardholderName = void 0;
var CARD_NUMBER_REGEX = /^[\d\s-]*$/;
var MAX_LENGTH = 255;
function verification$6(isValid, isPotentiallyValid) {
    return { isValid: isValid, isPotentiallyValid: isPotentiallyValid };
}
function cardholderName(value) {
    if (typeof value !== "string") {
        return verification$6(false, false);
    }
    if (value.length === 0) {
        return verification$6(false, true);
    }
    if (value.length > MAX_LENGTH) {
        return verification$6(false, false);
    }
    if (CARD_NUMBER_REGEX.test(value)) {
        return verification$6(false, true);
    }
    return verification$6(true, true);
}
cardholderName$1.cardholderName = cardholderName;

var cardNumber$1 = {};

/* eslint-disable */
function luhn10$1(identifier) {
    var sum = 0;
    var alt = false;
    var i = identifier.length - 1;
    var num;
    while (i >= 0) {
        num = parseInt(identifier.charAt(i), 10);
        if (alt) {
            num *= 2;
            if (num > 9) {
                num = (num % 10) + 1; // eslint-disable-line no-extra-parens
            }
        }
        alt = !alt;
        sum += num;
        i--;
    }
    return sum % 10 === 0;
}
var luhn10_1 = luhn10$1;

Object.defineProperty(cardNumber$1, "__esModule", { value: true });
cardNumber$1.cardNumber = void 0;
var luhn10 = luhn10_1;
var getCardTypes = dist$1;
function verification$5(card, isPotentiallyValid, isValid) {
    return {
        card: card,
        isPotentiallyValid: isPotentiallyValid,
        isValid: isValid,
    };
}
function cardNumber(value, options) {
    if (options === void 0) { options = {}; }
    var isPotentiallyValid, isValid, maxLength;
    if (typeof value !== "string" && typeof value !== "number") {
        return verification$5(null, false, false);
    }
    var testCardValue = String(value).replace(/-|\s/g, "");
    if (!/^\d*$/.test(testCardValue)) {
        return verification$5(null, false, false);
    }
    var potentialTypes = getCardTypes(testCardValue);
    if (potentialTypes.length === 0) {
        return verification$5(null, false, false);
    }
    else if (potentialTypes.length !== 1) {
        return verification$5(null, true, false);
    }
    var cardType = potentialTypes[0];
    if (options.maxLength && testCardValue.length > options.maxLength) {
        return verification$5(cardType, false, false);
    }
    if (cardType.type === getCardTypes.types.UNIONPAY &&
        options.luhnValidateUnionPay !== true) {
        isValid = true;
    }
    else {
        isValid = luhn10(testCardValue);
    }
    maxLength = Math.max.apply(null, cardType.lengths);
    if (options.maxLength) {
        maxLength = Math.min(options.maxLength, maxLength);
    }
    for (var i = 0; i < cardType.lengths.length; i++) {
        if (cardType.lengths[i] === testCardValue.length) {
            isPotentiallyValid = testCardValue.length < maxLength || isValid;
            return verification$5(cardType, isPotentiallyValid, isValid);
        }
    }
    return verification$5(cardType, testCardValue.length < maxLength, false);
}
cardNumber$1.cardNumber = cardNumber;

var expirationDate$1 = {};

var parseDate$2 = {};

var expirationYear$1 = {};

Object.defineProperty(expirationYear$1, "__esModule", { value: true });
expirationYear$1.expirationYear = void 0;
var DEFAULT_VALID_NUMBER_OF_YEARS_IN_THE_FUTURE = 19;
function verification$4(isValid, isPotentiallyValid, isCurrentYear) {
    return {
        isValid: isValid,
        isPotentiallyValid: isPotentiallyValid,
        isCurrentYear: isCurrentYear || false,
    };
}
function expirationYear(value, maxElapsedYear) {
    if (maxElapsedYear === void 0) { maxElapsedYear = DEFAULT_VALID_NUMBER_OF_YEARS_IN_THE_FUTURE; }
    var isCurrentYear;
    if (typeof value !== "string") {
        return verification$4(false, false);
    }
    if (value.replace(/\s/g, "") === "") {
        return verification$4(false, true);
    }
    if (!/^\d*$/.test(value)) {
        return verification$4(false, false);
    }
    var len = value.length;
    if (len < 2) {
        return verification$4(false, true);
    }
    var currentYear = new Date().getFullYear();
    if (len === 3) {
        // 20x === 20x
        var firstTwo = value.slice(0, 2);
        var currentFirstTwo = String(currentYear).slice(0, 2);
        return verification$4(false, firstTwo === currentFirstTwo);
    }
    if (len > 4) {
        return verification$4(false, false);
    }
    var numericValue = parseInt(value, 10);
    var twoDigitYear = Number(String(currentYear).substr(2, 2));
    var valid = false;
    if (len === 2) {
        if (String(currentYear).substr(0, 2) === value) {
            return verification$4(false, true);
        }
        isCurrentYear = twoDigitYear === numericValue;
        valid =
            numericValue >= twoDigitYear &&
                numericValue <= twoDigitYear + maxElapsedYear;
    }
    else if (len === 4) {
        isCurrentYear = currentYear === numericValue;
        valid =
            numericValue >= currentYear &&
                numericValue <= currentYear + maxElapsedYear;
    }
    return verification$4(valid, valid, isCurrentYear);
}
expirationYear$1.expirationYear = expirationYear;

var isArray = {};

// Polyfill taken from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray#Polyfill>.
Object.defineProperty(isArray, "__esModule", { value: true });
isArray.isArray = void 0;
isArray.isArray = Array.isArray ||
    function (arg) {
        return Object.prototype.toString.call(arg) === "[object Array]";
    };

Object.defineProperty(parseDate$2, "__esModule", { value: true });
parseDate$2.parseDate = void 0;
var expiration_year_1$2 = expirationYear$1;
var is_array_1 = isArray;
function getNumberOfMonthDigitsInDateString(dateString) {
    var firstCharacter = Number(dateString[0]);
    var assumedYear;
    /*
      if the first character in the string starts with `0`,
      we know that the month will be 2 digits.
  
      '0122' => {month: '01', year: '22'}
    */
    if (firstCharacter === 0) {
        return 2;
    }
    /*
      if the first character in the string starts with
      number greater than 1, it must be a 1 digit month
  
      '322' => {month: '3', year: '22'}
    */
    if (firstCharacter > 1) {
        return 1;
    }
    /*
      if the first 2 characters make up a number between
      13-19, we know that the month portion must be 1
  
      '139' => {month: '1', year: '39'}
    */
    if (firstCharacter === 1 && Number(dateString[1]) > 2) {
        return 1;
    }
    /*
      if the first 2 characters make up a number between
      10-12, we check if the year portion would be considered
      valid if we assumed that the month was 1. If it is
      not potentially valid, we assume the month must have
      2 digits.
  
      '109' => {month: '10', year: '9'}
      '120' => {month: '1', year: '20'} // when checked in the year 2019
      '120' => {month: '12', year: '0'} // when checked in the year 2021
    */
    if (firstCharacter === 1) {
        assumedYear = dateString.substr(1);
        return expiration_year_1$2.expirationYear(assumedYear).isPotentiallyValid ? 1 : 2;
    }
    /*
      If the length of the value is exactly 5 characters,
      we assume a full year was passed in, meaning the remaining
      single leading digit must be the month value.
  
      '12202' => {month: '1', year: '2202'}
    */
    if (dateString.length === 5) {
        return 1;
    }
    /*
      If the length of the value is more than five characters,
      we assume a full year was passed in addition to the month
      and therefore the month portion must be 2 digits.
  
      '112020' => {month: '11', year: '2020'}
    */
    if (dateString.length > 5) {
        return 2;
    }
    /*
      By default, the month value is the first value
    */
    return 1;
}
function parseDate$1(datestring) {
    var date;
    if (/^\d{4}-\d{1,2}$/.test(datestring)) {
        date = datestring.split("-").reverse();
    }
    else if (/\//.test(datestring)) {
        date = datestring.split(/\s*\/\s*/g);
    }
    else if (/\s/.test(datestring)) {
        date = datestring.split(/ +/g);
    }
    if (is_array_1.isArray(date)) {
        return {
            month: date[0] || "",
            year: date.slice(1).join(),
        };
    }
    var numberOfDigitsInMonth = getNumberOfMonthDigitsInDateString(datestring);
    var month = datestring.substr(0, numberOfDigitsInMonth);
    return {
        month: month,
        year: datestring.substr(month.length),
    };
}
parseDate$2.parseDate = parseDate$1;

var expirationMonth$1 = {};

Object.defineProperty(expirationMonth$1, "__esModule", { value: true });
expirationMonth$1.expirationMonth = void 0;
function verification$3(isValid, isPotentiallyValid, isValidForThisYear) {
    return {
        isValid: isValid,
        isPotentiallyValid: isPotentiallyValid,
        isValidForThisYear: isValidForThisYear || false,
    };
}
function expirationMonth(value) {
    var currentMonth = new Date().getMonth() + 1;
    if (typeof value !== "string") {
        return verification$3(false, false);
    }
    if (value.replace(/\s/g, "") === "" || value === "0") {
        return verification$3(false, true);
    }
    if (!/^\d*$/.test(value)) {
        return verification$3(false, false);
    }
    var month = parseInt(value, 10);
    if (isNaN(Number(value))) {
        return verification$3(false, false);
    }
    var result = month > 0 && month < 13;
    return verification$3(result, result, result && month >= currentMonth);
}
expirationMonth$1.expirationMonth = expirationMonth;

var __assign = (commonjsGlobal && commonjsGlobal.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(expirationDate$1, "__esModule", { value: true });
expirationDate$1.expirationDate = void 0;
var parse_date_1 = parseDate$2;
var expiration_month_1$1 = expirationMonth$1;
var expiration_year_1$1 = expirationYear$1;
function verification$2(isValid, isPotentiallyValid, month, year) {
    return {
        isValid: isValid,
        isPotentiallyValid: isPotentiallyValid,
        month: month,
        year: year,
    };
}
function expirationDate(value, maxElapsedYear) {
    var date;
    if (typeof value === "string") {
        value = value.replace(/^(\d\d) (\d\d(\d\d)?)$/, "$1/$2");
        date = parse_date_1.parseDate(String(value));
    }
    else if (value !== null && typeof value === "object") {
        var fullDate = __assign({}, value);
        date = {
            month: String(fullDate.month),
            year: String(fullDate.year),
        };
    }
    else {
        return verification$2(false, false, null, null);
    }
    var monthValid = expiration_month_1$1.expirationMonth(date.month);
    var yearValid = expiration_year_1$1.expirationYear(date.year, maxElapsedYear);
    if (monthValid.isValid) {
        if (yearValid.isCurrentYear) {
            var isValidForThisYear = monthValid.isValidForThisYear;
            return verification$2(isValidForThisYear, isValidForThisYear, date.month, date.year);
        }
        if (yearValid.isValid) {
            return verification$2(true, true, date.month, date.year);
        }
    }
    if (monthValid.isPotentiallyValid && yearValid.isPotentiallyValid) {
        return verification$2(false, true, null, null);
    }
    return verification$2(false, false, null, null);
}
expirationDate$1.expirationDate = expirationDate;

var cvv$1 = {};

Object.defineProperty(cvv$1, "__esModule", { value: true });
cvv$1.cvv = void 0;
var DEFAULT_LENGTH = 3;
function includes(array, thing) {
    for (var i = 0; i < array.length; i++) {
        if (thing === array[i]) {
            return true;
        }
    }
    return false;
}
function max$5(array) {
    var maximum = DEFAULT_LENGTH;
    var i = 0;
    for (; i < array.length; i++) {
        maximum = array[i] > maximum ? array[i] : maximum;
    }
    return maximum;
}
function verification$1(isValid, isPotentiallyValid) {
    return { isValid: isValid, isPotentiallyValid: isPotentiallyValid };
}
function cvv(value, maxLength) {
    if (maxLength === void 0) { maxLength = DEFAULT_LENGTH; }
    maxLength = maxLength instanceof Array ? maxLength : [maxLength];
    if (typeof value !== "string") {
        return verification$1(false, false);
    }
    if (!/^\d*$/.test(value)) {
        return verification$1(false, false);
    }
    if (includes(maxLength, value.length)) {
        return verification$1(true, true);
    }
    if (value.length < Math.min.apply(null, maxLength)) {
        return verification$1(false, true);
    }
    if (value.length > max$5(maxLength)) {
        return verification$1(false, false);
    }
    return verification$1(true, true);
}
cvv$1.cvv = cvv;

var postalCode$1 = {};

Object.defineProperty(postalCode$1, "__esModule", { value: true });
postalCode$1.postalCode = void 0;
var DEFAULT_MIN_POSTAL_CODE_LENGTH = 3;
function verification(isValid, isPotentiallyValid) {
    return { isValid: isValid, isPotentiallyValid: isPotentiallyValid };
}
function postalCode(value, options) {
    if (options === void 0) { options = {}; }
    var minLength = options.minLength || DEFAULT_MIN_POSTAL_CODE_LENGTH;
    if (typeof value !== "string") {
        return verification(false, false);
    }
    else if (value.length < minLength) {
        return verification(false, true);
    }
    return verification(true, true);
}
postalCode$1.postalCode = postalCode;

var __createBinding = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (commonjsGlobal && commonjsGlobal.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (commonjsGlobal && commonjsGlobal.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var creditCardType = __importStar(dist$1);
var cardholder_name_1 = cardholderName$1;
var card_number_1 = cardNumber$1;
var expiration_date_1 = expirationDate$1;
var expiration_month_1 = expirationMonth$1;
var expiration_year_1 = expirationYear$1;
var cvv_1 = cvv$1;
var postal_code_1 = postalCode$1;
var cardValidator = {
    creditCardType: creditCardType,
    cardholderName: cardholder_name_1.cardholderName,
    number: card_number_1.cardNumber,
    expirationDate: expiration_date_1.expirationDate,
    expirationMonth: expiration_month_1.expirationMonth,
    expirationYear: expiration_year_1.expirationYear,
    cvv: cvv_1.cvv,
    postalCode: postal_code_1.postalCode,
};
var dist = cardValidator;

var _excluded$A = ["label", "leftIcon", "size", "dropDown", "rightIcon", "errorMessage", "inputClassName", "className", "initialCardExp", "initialCardNo", "initialCardCvv", "onChange", "onError", "allowExpiredCardDateInExp", "hideScanIcon"];
var CardInputField = function CardInputField(_ref) {
  var label = _ref.label;
    _ref.leftIcon;
    var size = _ref.size;
    _ref.dropDown;
    _ref.rightIcon;
    var errorMessage = _ref.errorMessage,
    inputClassName = _ref.inputClassName,
    className = _ref.className,
    initialCardExp = _ref.initialCardExp,
    initialCardNo = _ref.initialCardNo,
    initialCardCvv = _ref.initialCardCvv,
    onChange = _ref.onChange,
    onError = _ref.onError,
    allowExpiredCardDateInExp = _ref.allowExpiredCardDateInExp,
    hideScanIcon = _ref.hideScanIcon,
    props = _objectWithoutProperties(_ref, _excluded$A);
  var _useState = useState(-1),
    _useState2 = _slicedToArray$4(_useState, 2),
    selectedCard = _useState2[0],
    setSelectedCard = _useState2[1];
  var _useState3 = useState(""),
    _useState4 = _slicedToArray$4(_useState3, 2),
    cardNo = _useState4[0],
    setCardNo = _useState4[1];
  // const [cardNoIsFocused, setCardNoIsFocused] = useState(false);
  var _useState5 = useState(""),
    _useState6 = _slicedToArray$4(_useState5, 2),
    cardNoDisplay = _useState6[0],
    setCardNoDisplay = _useState6[1];
  var _useState7 = useState(""),
    _useState8 = _slicedToArray$4(_useState7, 2),
    cardExp = _useState8[0],
    setCardExp = _useState8[1];
  var _useState9 = useState(""),
    _useState10 = _slicedToArray$4(_useState9, 2),
    cardCVV = _useState10[0],
    setCardCVV = _useState10[1];
  var _useState11 = useState(null),
    _useState12 = _slicedToArray$4(_useState11, 2),
    targetPosition = _useState12[0],
    setTargetPosition = _useState12[1];
  var _useState13 = useState(null),
    _useState14 = _slicedToArray$4(_useState13, 2),
    cardNoError = _useState14[0],
    setCardNoError = _useState14[1];
  var _useState15 = useState(null),
    _useState16 = _slicedToArray$4(_useState15, 2),
    cardExpError = _useState16[0],
    setCardExpError = _useState16[1];
  var _useState17 = useState(null),
    _useState18 = _slicedToArray$4(_useState17, 2),
    cardCvvError = _useState18[0],
    setCardCvvError = _useState18[1];
  var _useState19 = useState(null),
    _useState20 = _slicedToArray$4(_useState19, 2),
    computedErrorMessage = _useState20[0],
    setComputedErrorMessage = _useState20[1];
  var _useState21 = useState(""),
    _useState22 = _slicedToArray$4(_useState21, 2),
    cardType = _useState22[0],
    setCardType = _useState22[1];
  var pseudoInput = useRef();
  var cardNoInput = useRef();
  var cardCVCInput = useRef();
  var cardExpInput = useRef();
  useEffect(function () {
    if (initialCardNo) {
      handleCardNoInput(initialCardNo);
    }
    if (initialCardExp) {
      handleCardExpInput(initialCardExp);
    }
    if (initialCardCvv) {
      handleCardCvvInput(initialCardCvv);
    }
  }, [initialCardNo, initialCardExp, initialCardCvv]);
  useEffect(function () {
    if (cardNoError) {
      if (onError && typeof onError === "function") {
        onError(cardNoError);
      }
      setComputedErrorMessage(cardNoError);
    } else if (cardExpError) {
      if (onError && typeof onError === "function") {
        onError(cardExpError);
      }
      setComputedErrorMessage(cardExpError);
    } else if (cardCvvError) {
      if (onError && typeof onError === "function") {
        onError(cardCvvError);
      }
      setComputedErrorMessage(cardCvvError);
    } else if (errorMessage) {
      setComputedErrorMessage(errorMessage);
    } else {
      if (onError && typeof onError === "function") {
        onError(null);
      }
      setComputedErrorMessage(null);
    }
  }, [cardNoError, cardExpError, cardCvvError, errorMessage]);
  useEffect(function () {
    onChange({
      cardNo: cardNo,
      cardExp: cardExp,
      cardCVV: cardCVV,
      cardType: cardType
    });
  }, [cardNo, cardExp, cardCVV, cardType]);
  useEffect(function () {
    if (cardExp.length === 5 && !cardExpError) {
      cardCVCInput.current.focus();
    }
  }, [cardExpError, cardExp]);
  var validateCardNo = function validateCardNo(cardNo) {
    setCardNoError(null);
    var validatedCardNo = dist.number(cardNo.replaceAll(" ", ""));
    if (validatedCardNo && validatedCardNo.card) {
      cardNoInput.current.setAttribute("maxlength", validatedCardNo.card.lengths[validatedCardNo.card.lengths.length - 1] + validatedCardNo.card.gaps.length);
      cardCVCInput.current.setAttribute("maxlength", validatedCardNo.card.code.size);
    }
    if (!validatedCardNo.isPotentiallyValid && validatedCardNo.card) {
      var _validatedCardNo$card;
      setCardNoError("Please enter a valid ".concat(validatedCardNo === null || validatedCardNo === void 0 ? void 0 : (_validatedCardNo$card = validatedCardNo.card) === null || _validatedCardNo$card === void 0 ? void 0 : _validatedCardNo$card.niceType, " card number"));
    } else {
      setCardNoError(null);
    }
  };
  var handleCardNoFocus = function handleCardNoFocus() {
    if (cardExpError) {
      cardExpInput.current.focus();
    } else if (cardCvvError) {
      cardCvvError.current.focus();
    } else {
      pseudoInput.current.classList.add("focus");
      // setCardNoIsFocused(true);
      setCardNoDisplay(cardNo);
    }
  };
  var allowOnlyNumbers = function allowOnlyNumbers(e) {
    var isNumber = isFinite(parseFloat(e.key));
    var value = e.key;
    if (!isNumber && value !== "Delete" && value !== "Backspace") {
      e.preventDefault();
      return;
    }
  };
  var handleCardNoBlur = function handleCardNoBlur(e) {
    e.preventDefault();
    // setCardNoIsFocused(false);
    pseudoInput.current.classList.remove("focus");
    var strippedCardNo = cardNo.replace(/\s/g, "");
    if (selectedCard === BRAND_ALIAS$1.AMEX) {
      if (strippedCardNo.length === 15) {
        setCardNoDisplay("**** ".concat(cardNo.substring(cardNo.length - 4)));
      }
    } else {
      if (strippedCardNo.length === 16) {
        setCardNoDisplay("**** ".concat(cardNo.substring(cardNo.length - 4)));
      }
    }
  };
  var handleExpFocus = function handleExpFocus() {
    if (cardNoError) {
      cardNoInput.current.focus();
    } else if (cardCvvError) {
      cardCVCInput.current.focus();
    } else {
      pseudoInput.current.classList.add("focus");
    }
  };
  var handleExpBlur = function handleExpBlur() {
    pseudoInput.current.classList.remove("focus");
  };
  var handleCVVFocus = function handleCVVFocus() {
    if (cardNoError) {
      cardNoInput.current.focus();
    } else if (cardExpError) {
      cardExpInput.current.focus();
    } else {
      pseudoInput.current.classList.add("focus");
    }
  };
  var handleCVVBlur = function handleCVVBlur() {
    if (cardNoError.value) {
      cardNoInput.current.focus();
    } else if (cardExpError.value) {
      cardExpInput.current.focus();
    } else {
      pseudoInput.current.classList.remove("focus");
    }
  };
  var handleCardNoChange = function handleCardNoChange(e) {
    setTimeout(function () {
      if (targetPosition !== null) {
        var position = targetPosition !== null ? targetPosition.key === "Backspace" ? targetPosition.pos - 1 : targetPosition.pos : cardNo.length;
        cardNoInput.current.selectionStart = targetPosition !== null ? position : cardNo.length;
        cardNoInput.current.selectionEnd = targetPosition !== null ? position : cardNo.length;
        setTargetPosition(null);
      }
    });
  };
  var handleCardNoKeyDown = function handleCardNoKeyDown(e) {
    if (e.key === "Backspace" || e.key === "Delete") {
      if (cardNoDisplay.length !== e.target.selectionStart) {
        setTargetPosition({
          pos: e.target.selectionStart,
          key: e.key
        });
      }
    }
  };
  var handleCardNoKeyPress = function handleCardNoKeyPress(e) {
    console.log(e);
    allowOnlyNumbers(e);
    var strippedCardNo = cardNo.replace(/\s/g, "");
    if (e.key !== "Backspace" && e.key !== "Delete" && e.key !== "ArrowUp" && e.key !== "ArrowLeft" && e.key !== "ArrowDown" && e.key !== "ArrowRight") {
      if (selectedCard === BRAND_ALIAS$1.AMEX) {
        if (strippedCardNo.length === 15) {
          e.preventDefault();
          cardNoInput.current.blur();
          cardExpInput.current.focus();
          return;
        }
      } else {
        if (strippedCardNo.length === 16) {
          e.preventDefault();
          cardNoInput.current.blur();
          cardExpInput.current.focus();
          return;
        }
      }
    }
  };
  var handleCardCvvInput = function handleCardCvvInput(e) {
    var value = _typeof$6(e) === "object" ? e.target.value : e;
    setCardCVV(value);
    var validatedCardNo = dist.number(props.cardNo.replaceAll(" ", ""));
    if (validatedCardNo.card.code.size === e.target.value.length) {
      setCardCvvError("");
    } else {
      setCardCvvError("Invalid CVC size. The CVC must be ".concat(validatedCardNo.card.code.size));
    }
  };
  var handleCardNoInput = function handleCardNoInput(e) {
    var value = _typeof$6(e) === "object" ? e.target.value.replace(/\s/g, "") : e;
    function parse(type) {
      switch (type) {
        case BRAND_ALIAS$1.AMEX:
          cardNoInput.current.setAttribute("maxlength", 17);
          cardCVCInput.current.setAttribute("maxlength", 4);
          break;
        default:
          cardNoInput.current.setAttribute("maxlength", 19);
          cardCVCInput.current.setAttribute("maxlength", 3);
          break;
      }
      var pseudoValue = "";
      for (var i = 0; i < value.length; i++) {
        pseudoValue += value.charAt(i);
        var strippedPseudoValue = pseudoValue.replace(/\s/g, "");
        if (type === BRAND_ALIAS$1.AMEX) {
          if (strippedPseudoValue.length === 4) {
            pseudoValue += " ";
          }
          if (strippedPseudoValue.length === 10) {
            pseudoValue += " ";
          }
        } else {
          if (strippedPseudoValue.length % 4 === 0) {
            pseudoValue += " ";
          }
        }
      }
      // alert(pseudoValue.trim())
      return pseudoValue.trim();
    }
    switch (value.charAt(0)) {
      case "5":
        setSelectedCard(BRAND_ALIAS$1.MASTERCARD);
        setCardType("mastercard");
        setCardNo(parse(BRAND_ALIAS$1.MASTERCARD));
        setCardNoDisplay(parse(BRAND_ALIAS$1.MASTERCARD));
        validateCardNo(value);
        break;
      case "3":
        if (value.length >= 2) {
          if (value.charAt(1) === "4" || value.charAt(1) === "7") {
            setSelectedCard(BRAND_ALIAS$1.AMEX);
            setCardType("american_express");
          } else {
            setCardType("unknown");
            setSelectedCard(BRAND_ALIAS$1.NOCARD);
          }
        } else {
          setSelectedCard(BRAND_ALIAS$1.AMEX);
          setCardType("american_express");
        }
        setCardNo(parse(BRAND_ALIAS$1.AMEX));
        setCardNoDisplay(parse(BRAND_ALIAS$1.AMEX));
        setCardType("american_express");
        validateCardNo(value);
        break;
      case "6":
        setSelectedCard(BRAND_ALIAS$1.DISCOVER);
        setCardNo(parse(BRAND_ALIAS$1.DISCOVER));
        setCardNoDisplay(parse(BRAND_ALIAS$1.DISCOVER));
        setCardType("discover");
        validateCardNo(value);
        break;
      case "4":
        setSelectedCard(BRAND_ALIAS$1.VISACARD);
        setCardNo(parse(BRAND_ALIAS$1.VISACARD));
        setCardNoDisplay(parse(BRAND_ALIAS$1.VISACARD));
        setCardType("visa");
        validateCardNo(value);
        break;
      default:
        setSelectedCard(BRAND_ALIAS$1.NOCARD);
        setCardNo(parse(null));
        setCardNoDisplay(parse(null));
        setCardType("unknown");
    }
  };
  var handleCardExpInput = function handleCardExpInput(e) {
    setCardExpError(null);
    var value = _typeof$6(e) === "object" ? e.target.value.replace(/\s/g, "") : e;
    if (cardNoError) {
      cardNoInput.current.focus();
    } else if (cardCvvError) {
      cardCVCInput.current.focus();
    } else {
      if (_typeof$6(e) === "object" && e.type.toLowerCase() === "paste") {
        e.preventDefault();
        value = (e.clipboardData || window.clipboardData).getData("text");
      }
      setCardExp(value);
      var validateCompleteExp = function validateCompleteExp(value) {
        var month = value.substring(0, 2);
        var year = value.substring(3);
        var currentYear = new Date().getFullYear().toString().substring(2);
        var currentMonth = new Date().getMonth() + 1;
        if (month > 12 || month < 1) {
          setCardExpError("Please enter a valid month in the card expiry field");
          setCardExp(isFinite(month) ? month : "");
        } else if (month.length === 2 && /^\d+$/.test(month)) {
          if (value.charAt(2) !== "/") {
            setCardExp(month + "/");
          } else if (!allowExpiredCardDateInExp && year < currentYear) {
            setCardExpError("You've entered an expired card");
          } else if (month < currentMonth && year === currentYear && !allowExpiredCardDateInExp) {
            setCardExpError("You've entered an expired card");
          }
        } else if (month.length === 2 && !/^\d+$/.test(month)) {
          setCardExp(month);
          setCardExpError("Please enter a valid month in the card expiry field");
        }
      };
      validateCompleteExp(value);
    }
  };
  var generateInputFieldClasses = classNames({
    "ui-card-input-field__card-no": true,
    "has-error": computedErrorMessage,
    "has-left-icon": true,
    "has-right-icon": true
  }, inputClassName);
  var wrapperClasses = classNames(["size__".concat(size), "ui-text-field__wrapper heroNew ui-card-input-field__wrapper"], className);
  return /*#__PURE__*/React__default.createElement(Box, {
    className: wrapperClasses
  }, /*#__PURE__*/React__default.createElement(Box, {
    is: "label"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-card-input-field__label",
    scale: "subhead"
  }, label)), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-card-input-field__input-wrapper"
  }, /*#__PURE__*/React__default.createElement(Box, {
    ref: pseudoInput,
    className: classNames({
      "ui-card-input-field__pseudo-input": true,
      hasError: computedErrorMessage
    })
  }, selectedCard === -1 ? /*#__PURE__*/React__default.createElement(Box, {
    lightClassName: "text-primary-light-500",
    darkClassName: "text-primary-dark-500"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: Card$1,
    className: "ui-card-input-field__left-icon",
    height: "24px",
    width: "24px"
  })) : /*#__PURE__*/React__default.createElement("img", {
    src: brands[selectedCard].src,
    alt: brands[selectedCard].brand,
    className: "ui-card-input-field__left-icon"
  }), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-card-input-field__inputs"
  }, /*#__PURE__*/React__default.createElement(Box, _extends$1({
    className: generateInputFieldClasses,
    is: "input",
    placeholder: "0000 0000 0000 0000",
    maxLength: "19"
  }, props, {
    onFocus: handleCardNoFocus,
    onBlur: handleCardNoBlur,
    onKeyPress: handleCardNoKeyPress,
    onKeyDown: handleCardNoKeyDown,
    onChange: handleCardNoChange,
    onInput: handleCardNoInput,
    value: cardNoDisplay,
    ref: cardNoInput
  })), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-card-input__pushed-right"
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-card-input-field__exp",
    is: "input",
    placeholder: "MM/YY",
    maxLength: "5",
    onFocus: handleExpFocus,
    onBlur: handleExpBlur,
    onInput: handleCardExpInput,
    onKeyPress: allowOnlyNumbers,
    value: cardExp,
    ref: cardExpInput
  }), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-card-input-field__cvv",
    is: "input",
    maxLength: "3",
    placeholder: "CVV",
    onFocus: handleCVVFocus,
    onBlur: handleCVVBlur,
    onKeyPress: allowOnlyNumbers,
    value: cardCVV,
    ref: cardCVCInput,
    onChange: handleCardCvvInput
  }), !hideScanIcon && /*#__PURE__*/React__default.createElement(Icon, {
    icon: ScanCard,
    smartColor: "#B8C4CE",
    className: "ui-card-input-field__right-icon"
  }))))), computedErrorMessage && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-text-field__error"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: Error$1,
    className: "ui-text-field__error-icon"
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-card-input-field__error-text",
    scale: "subhead",
    fontFace: "circularSTD",
    marginY: 0
  }, computedErrorMessage)));
};
CardInputField.propTypes = _objectSpread2$1(_objectSpread2$1({}, inputPropTypes), {}, {
  initialCardExp: propTypes.exports.string,
  initialCardNo: propTypes.exports.string,
  initialCardCvv: propTypes.exports.string,
  variant: propTypes.exports.oneOf(["variant-1", "variant-2"]),
  allowExpiredCardDateInExp: propTypes.exports.bool,
  hideScanIcon: propTypes.exports.bool,
  onError: propTypes.exports.func
});
CardInputField.defaultProps = _objectSpread2$1(_objectSpread2$1({}, defaultProps$1), {}, {
  variant: "variant-1",
  allowExpiredCardDateInExp: false
});

var _excluded$z = ["children"];
var Col = function Col(_ref) {
  var _classNames;
  var children = _ref.children,
    props = _objectWithoutProperties(_ref, _excluded$z);
  var computedXS = props.xs ? _typeof$6(props.xs) === "object" ? props.xs.span : props.xs : undefined;
  var computedSM = props.sm ? _typeof$6(props.sm) === "object" ? props.sm.span : props.sm : undefined;
  var computedMD = props.md ? _typeof$6(props.md) === "object" ? props.md.span : props.md : undefined;
  var computedLG = props.lg ? _typeof$6(props.lg) === "object" ? props.lg.span : props.lg : undefined;
  var computedXL = props.xl ? _typeof$6(props.xl) === "object" ? props.xl.span : props.xl : undefined;
  var computedXXL = props.xxl ? _typeof$6(props.xxl) === "object" ? props.xxl.span : props.xxl : undefined;
  var computedOffsetXS = props.offsetXs ? props.offsetXs : props.xs && props.xs.offset ? props.xs.offset : undefined;
  var computedOffsetSM = props.offsetSm ? props.offsetSm : props.sm && props.sm.offset ? props.sm.offset : undefined;
  var computedOffsetMD = props.offsetMd ? props.offsetMd : props.md && props.md.offset ? props.md.offset : undefined;
  var computedOffsetLG = props.offsetLg ? props.offsetLg : props.lg && props.lg.offset ? props.lg.offset : undefined;
  var computedOffsetXL = props.offsetXl ? props.offsetXl : props.xl && props.xl.offset ? props.xl.offset : undefined;
  var computedOffsetXXL = props.offsetXxl ? props.offsetXxl : props.xxl && props.xxl.offset ? props.xxl.offset : undefined;
  var computedOrderXS = props.orderXs ? props.orderXs : props.xs && props.xs.order ? props.xs.order : undefined;
  var computedOrderSM = props.orderSm ? props.orderSm : props.sm && props.sm.order ? props.sm.order : undefined;
  var computedOrderMD = props.orderMd ? props.orderMd : props.md && props.md.order ? props.md.order : undefined;
  var computedOrderLG = props.orderLg ? props.orderLg : props.lg && props.lg.order ? props.lg.order : undefined;
  var computedOrderXL = props.orderXl ? props.orderXl : props.xl && props.xl.order ? props.xl.order : undefined;
  var computedOrderXXL = props.orderXxl ? props.orderXxl : props.xxl && props.xxl.order ? props.xxl.order : undefined;
  return /*#__PURE__*/React__default.createElement(Box, {
    className: classNames((_classNames = {
      "ui-responsive__col": true
    }, _defineProperty$6(_classNames, "ui-responsive__col-xs-".concat(computedXS), computedXS), _defineProperty$6(_classNames, "ui-responsive__col-sm-".concat(computedSM), computedSM), _defineProperty$6(_classNames, "ui-responsive__col-md-".concat(computedMD), computedMD), _defineProperty$6(_classNames, "ui-responsive__col-lg-".concat(computedLG), computedLG), _defineProperty$6(_classNames, "ui-responsive__col-xl-".concat(computedXL), computedXL), _defineProperty$6(_classNames, "ui-responsive__col-xxl-".concat(computedXXL), computedXXL), _defineProperty$6(_classNames, "ui-responsive__offset-xs-".concat(computedOffsetXS), computedOffsetXS), _defineProperty$6(_classNames, "ui-responsive__offset-sm-".concat(computedOffsetSM), computedOffsetSM), _defineProperty$6(_classNames, "ui-responsive__offset-md-".concat(computedOffsetMD), computedOffsetMD), _defineProperty$6(_classNames, "ui-responsive__offset-lg-".concat(computedOffsetLG), computedOffsetLG), _defineProperty$6(_classNames, "ui-responsive__offset-xl-".concat(computedOffsetXL), computedOffsetXL), _defineProperty$6(_classNames, "ui-responsive__offset-xxl-".concat(computedOffsetXXL), computedOffsetXXL), _defineProperty$6(_classNames, "ui-responsive__order-xs-".concat(computedOrderXS), computedOrderXS), _defineProperty$6(_classNames, "ui-responsive__order-sm-".concat(computedOrderSM), computedOrderSM), _defineProperty$6(_classNames, "ui-responsive__order-md-".concat(computedOrderMD), computedOrderMD), _defineProperty$6(_classNames, "ui-responsive__order-lg-".concat(computedOrderLG), computedOrderLG), _defineProperty$6(_classNames, "ui-responsive__order-xl-".concat(computedOrderXL), computedOrderXL), _defineProperty$6(_classNames, "ui-responsive__order-xxl-".concat(computedOrderXXL), computedOrderXXL), _classNames))
  }, children);
};
Col.propTypes = {
  xs: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  sm: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  md: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  lg: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  xl: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  xxl: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  offsetXs: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  offsetSm: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  offsetMd: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  offsetLg: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  offsetXl: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  offsetXxl: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  orderXs: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  orderSm: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  orderMd: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  orderLg: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  orderXl: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object]),
  orderXxl: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.object])
};

function number_format(number, decimals, dec_point, thousands_sep) {
  // Strip all characters but numerical ones.
  number = (number + "").replace(/[^0-9+\-Ee.,]/g, "");
  var n = !isFinite(+number) ? 0 : +number,
    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
    sep = typeof thousands_sep === "undefined" ? "," : thousands_sep,
    dec = typeof dec_point === "undefined" ? "." : dec_point,
    s = "",
    toFixedFix = function toFixedFix(n, prec) {
      var k = Math.pow(10, prec);
      return "" + Math.round(n * k) / k;
    };
  // Fix for IE parseFloat(0.55).toFixed(0) = 0;
  s = (prec ? toFixedFix(n, prec) : "" + Math.round(n)).split(".");
  if (s[0].length > 3) {
    s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
  }
  if ((s[1] || "").length < prec) {
    s[1] = s[1] || "";
    s[1] += new Array(prec - s[1].length + 1).join("0");
  }
  return s.join(dec);
}

var _excluded$y = ["label", "size", "max", "min", "errorMessage", "coloredButtons", "labelClass", "labelFontFace", "inputClass", "disabled", "decimal", "alterMagnitude", "spacing", "value", "onChange", "className"];
var Counter = function Counter(_ref) {
  var label = _ref.label,
    size = _ref.size,
    max = _ref.max,
    min = _ref.min,
    errorMessage = _ref.errorMessage,
    coloredButtons = _ref.coloredButtons,
    labelClass = _ref.labelClass,
    labelFontFace = _ref.labelFontFace,
    inputClass = _ref.inputClass,
    disabled = _ref.disabled,
    decimal = _ref.decimal,
    alterMagnitude = _ref.alterMagnitude,
    spacing = _ref.spacing,
    value = _ref.value,
    onChange = _ref.onChange,
    className = _ref.className,
    props = _objectWithoutProperties(_ref, _excluded$y);
  var _useState = useState(null),
    _useState2 = _slicedToArray$4(_useState, 2),
    internalValue = _useState2[0],
    setInternalValue = _useState2[1];
  var _useState3 = useState(0),
    _useState4 = _slicedToArray$4(_useState3, 2),
    formattedValue = _useState4[0],
    setFormattedValue = _useState4[1];
  useEffect(function () {
    setInternalValue(value);
  }, []);
  useEffect(function () {
    if (onChange && typeof onChange === "function") {
      onChange(internalValue);
    }
    if (decimal) {
      setFormattedValue(number_format(internalValue, 2));
    } else {
      setFormattedValue(internalValue);
    }
  }, [internalValue]);
  var increase = function increase() {
    var temp = internalValue + alterMagnitude;
    setInternalValue((max === 0 || !!max) && temp >= max ? max : temp);
  };
  var decrease = function decrease() {
    var temp = internalValue - alterMagnitude;
    setInternalValue((min === 0 || !!min) && temp <= min ? min : temp);
  };
  return /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-counter ".concat(className !== null && className !== void 0 ? className : className),
    style: {
      "--counter-spacing": spacing
    }
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: classNames(["ui-text-field__wrapper", "size__".concat(size)])
  }, !!label && /*#__PURE__*/React__default.createElement(Box, {
    is: "label"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    marginTop: "0px",
    className: classNames(_defineProperty$6({
      "ui-text-field__label": true
    }, labelClass, labelClass)),
    scale: "subhead",
    fontFace: labelFontFace
  }, label)), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-text-field__input-wrapper"
  }, /*#__PURE__*/React__default.createElement(Box, {
    is: "button",
    className: classNames({
      "ui-text-field--counter_input_button left": true,
      coloredButtons: coloredButtons
    }),
    onClick: decrease
  }, "-"), /*#__PURE__*/React__default.createElement(Box, _extends$1({
    is: "input",
    className: classNames(_defineProperty$6({
      "ui-text-field__input": true,
      "has-error": errorMessage,
      disabled: disabled
    }, inputClass, true)),
    value: formattedValue,
    readonly: true
  }, props)), /*#__PURE__*/React__default.createElement(Box, {
    is: "button",
    className: classNames({
      "ui-text-field--counter_input_button right": true,
      coloredButtons: coloredButtons
    }),
    onClick: increase
  }, "+")), !!errorMessage && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-text-field__error"
  }, /*#__PURE__*/React__default.createElement(Error$1, {
    className: "ui-text-field__error-icon"
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-text-field__error-text",
    scale: "subhead",
    fontFace: "circularSTD"
  }, errorMessage))));
};
Counter.propTypes = {
  label: propTypes.exports.string,
  size: propTypes.exports.oneOf(["small", "medium", "large", "xlarge", "huge", "massive"]),
  errorMessage: propTypes.exports.string,
  coloredButtons: propTypes.exports.bool,
  labelClass: propTypes.exports.string,
  inputClass: propTypes.exports.string,
  disabled: propTypes.exports.bool,
  decimal: propTypes.exports.bool,
  alterMagnitude: propTypes.exports.number,
  spacing: propTypes.exports.string,
  value: propTypes.exports.number,
  onChange: propTypes.exports.func,
  max: propTypes.exports.number,
  min: propTypes.exports.number
};
Counter.defaultProps = {
  size: "huge",
  spacing: "16px",
  alterMagnitude: 1,
  value: 0
};

var wellKnownSymbol$7 = wellKnownSymbol$f;
var create$2 = objectCreate;
var defineProperty$4 = objectDefineProperty.f;

var UNSCOPABLES = wellKnownSymbol$7('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  defineProperty$4(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create$2(null)
  });
}

// add a key to Array.prototype[@@unscopables]
var addToUnscopables$2 = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};

var $$5 = _export;
var $includes = arrayIncludes.includes;
var fails$4 = fails$o;
var addToUnscopables$1 = addToUnscopables$2;

// FF99+ bug
var BROKEN_ON_SPARSE = fails$4(function () {
  // eslint-disable-next-line es/no-array-prototype-includes -- detection
  return !Array(1).includes();
});

// `Array.prototype.includes` method
// https://tc39.es/ecma262/#sec-array.prototype.includes
$$5({ target: 'Array', proto: true, forced: BROKEN_ON_SPARSE }, {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables$1('includes');

var isRegExp$1 = isRegexp;

var $TypeError$2 = TypeError;

var notARegexp = function (it) {
  if (isRegExp$1(it)) {
    throw $TypeError$2("The method doesn't accept regular expressions");
  } return it;
};

var wellKnownSymbol$6 = wellKnownSymbol$f;

var MATCH$1 = wellKnownSymbol$6('match');

var correctIsRegexpLogic = function (METHOD_NAME) {
  var regexp = /./;
  try {
    '/./'[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH$1] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (error2) { /* empty */ }
  } return false;
};

var $$4 = _export;
var uncurryThis$5 = functionUncurryThis;
var notARegExp$2 = notARegexp;
var requireObjectCoercible$3 = requireObjectCoercible$a;
var toString$5 = toString$f;
var correctIsRegExpLogic$2 = correctIsRegexpLogic;

var stringIndexOf$1 = uncurryThis$5(''.indexOf);

// `String.prototype.includes` method
// https://tc39.es/ecma262/#sec-string.prototype.includes
$$4({ target: 'String', proto: true, forced: !correctIsRegExpLogic$2('includes') }, {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~stringIndexOf$1(
      toString$5(requireObjectCoercible$3(this)),
      toString$5(notARegExp$2(searchString)),
      arguments.length > 1 ? arguments[1] : undefined
    );
  }
});

var uncurryThis$4 = functionUncurryThis;
var aCallable$1 = aCallable$4;

var functionUncurryThisAccessor = function (object, key, method) {
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    return uncurryThis$4(aCallable$1(Object.getOwnPropertyDescriptor(object, key)[method]));
  } catch (error) { /* empty */ }
};

var isCallable$4 = isCallable$l;

var $String = String;
var $TypeError$1 = TypeError;

var aPossiblePrototype$1 = function (argument) {
  if (typeof argument == 'object' || isCallable$4(argument)) return argument;
  throw $TypeError$1("Can't set " + $String(argument) + ' as a prototype');
};

/* eslint-disable no-proto -- safe */

var uncurryThisAccessor = functionUncurryThisAccessor;
var anObject$1 = anObject$b;
var aPossiblePrototype = aPossiblePrototype$1;

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
var objectSetPrototypeOf = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');
    setter(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject$1(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);

var isCallable$3 = isCallable$l;
var isObject$2 = isObject$9;
var setPrototypeOf$1 = objectSetPrototypeOf;

// makes subclassing work correct for wrapped built-ins
var inheritIfRequired$1 = function ($this, dummy, Wrapper) {
  var NewTarget, NewTargetPrototype;
  if (
    // it can work only with native `setPrototypeOf`
    setPrototypeOf$1 &&
    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
    isCallable$3(NewTarget = dummy.constructor) &&
    NewTarget !== Wrapper &&
    isObject$2(NewTargetPrototype = NewTarget.prototype) &&
    NewTargetPrototype !== Wrapper.prototype
  ) setPrototypeOf$1($this, NewTargetPrototype);
  return $this;
};

var defineProperty$3 = objectDefineProperty.f;

var proxyAccessor$1 = function (Target, Source, key) {
  key in Target || defineProperty$3(Target, key, {
    configurable: true,
    get: function () { return Source[key]; },
    set: function (it) { Source[key] = it; }
  });
};

var getBuiltIn = getBuiltIn$4;
var defineBuiltInAccessor = defineBuiltInAccessor$2;
var wellKnownSymbol$5 = wellKnownSymbol$f;
var DESCRIPTORS$2 = descriptors;

var SPECIES = wellKnownSymbol$5('species');

var setSpecies$1 = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);

  if (DESCRIPTORS$2 && Constructor && !Constructor[SPECIES]) {
    defineBuiltInAccessor(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};

var DESCRIPTORS$1 = descriptors;
var global$2 = global$j;
var uncurryThis$3 = functionUncurryThis;
var isForced = isForced_1;
var inheritIfRequired = inheritIfRequired$1;
var createNonEnumerableProperty$2 = createNonEnumerableProperty$6;
var getOwnPropertyNames$1 = objectGetOwnPropertyNames.f;
var isPrototypeOf = objectIsPrototypeOf;
var isRegExp = isRegexp;
var toString$4 = toString$f;
var getRegExpFlags = regexpGetFlags;
var stickyHelpers = regexpStickyHelpers;
var proxyAccessor = proxyAccessor$1;
var defineBuiltIn$2 = defineBuiltIn$6;
var fails$3 = fails$o;
var hasOwn$2 = hasOwnProperty_1;
var enforceInternalState = internalState.enforce;
var setSpecies = setSpecies$1;
var wellKnownSymbol$4 = wellKnownSymbol$f;
var UNSUPPORTED_DOT_ALL = regexpUnsupportedDotAll;
var UNSUPPORTED_NCG = regexpUnsupportedNcg;

var MATCH = wellKnownSymbol$4('match');
var NativeRegExp = global$2.RegExp;
var RegExpPrototype = NativeRegExp.prototype;
var SyntaxError = global$2.SyntaxError;
var exec = uncurryThis$3(RegExpPrototype.exec);
var charAt = uncurryThis$3(''.charAt);
var replace = uncurryThis$3(''.replace);
var stringIndexOf = uncurryThis$3(''.indexOf);
var stringSlice$1 = uncurryThis$3(''.slice);
// TODO: Use only proper RegExpIdentifierName
var IS_NCG = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/;
var re1 = /a/g;
var re2 = /a/g;

// "new" should create a new object, old webkit bug
var CORRECT_NEW = new NativeRegExp(re1) !== re1;

var MISSED_STICKY = stickyHelpers.MISSED_STICKY;
var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;

var BASE_FORCED = DESCRIPTORS$1 &&
  (!CORRECT_NEW || MISSED_STICKY || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG || fails$3(function () {
    re2[MATCH] = false;
    // RegExp constructor can alter flags and IsRegExp works correct with @@match
    return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';
  }));

var handleDotAll = function (string) {
  var length = string.length;
  var index = 0;
  var result = '';
  var brackets = false;
  var chr;
  for (; index <= length; index++) {
    chr = charAt(string, index);
    if (chr === '\\') {
      result += chr + charAt(string, ++index);
      continue;
    }
    if (!brackets && chr === '.') {
      result += '[\\s\\S]';
    } else {
      if (chr === '[') {
        brackets = true;
      } else if (chr === ']') {
        brackets = false;
      } result += chr;
    }
  } return result;
};

var handleNCG = function (string) {
  var length = string.length;
  var index = 0;
  var result = '';
  var named = [];
  var names = {};
  var brackets = false;
  var ncg = false;
  var groupid = 0;
  var groupname = '';
  var chr;
  for (; index <= length; index++) {
    chr = charAt(string, index);
    if (chr === '\\') {
      chr = chr + charAt(string, ++index);
    } else if (chr === ']') {
      brackets = false;
    } else if (!brackets) switch (true) {
      case chr === '[':
        brackets = true;
        break;
      case chr === '(':
        if (exec(IS_NCG, stringSlice$1(string, index + 1))) {
          index += 2;
          ncg = true;
        }
        result += chr;
        groupid++;
        continue;
      case chr === '>' && ncg:
        if (groupname === '' || hasOwn$2(names, groupname)) {
          throw new SyntaxError('Invalid capture group name');
        }
        names[groupname] = true;
        named[named.length] = [groupname, groupid];
        ncg = false;
        groupname = '';
        continue;
    }
    if (ncg) groupname += chr;
    else result += chr;
  } return [result, named];
};

// `RegExp` constructor
// https://tc39.es/ecma262/#sec-regexp-constructor
if (isForced('RegExp', BASE_FORCED)) {
  var RegExpWrapper = function RegExp(pattern, flags) {
    var thisIsRegExp = isPrototypeOf(RegExpPrototype, this);
    var patternIsRegExp = isRegExp(pattern);
    var flagsAreUndefined = flags === undefined;
    var groups = [];
    var rawPattern = pattern;
    var rawFlags, dotAll, sticky, handled, result, state;

    if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {
      return pattern;
    }

    if (patternIsRegExp || isPrototypeOf(RegExpPrototype, pattern)) {
      pattern = pattern.source;
      if (flagsAreUndefined) flags = getRegExpFlags(rawPattern);
    }

    pattern = pattern === undefined ? '' : toString$4(pattern);
    flags = flags === undefined ? '' : toString$4(flags);
    rawPattern = pattern;

    if (UNSUPPORTED_DOT_ALL && 'dotAll' in re1) {
      dotAll = !!flags && stringIndexOf(flags, 's') > -1;
      if (dotAll) flags = replace(flags, /s/g, '');
    }

    rawFlags = flags;

    if (MISSED_STICKY && 'sticky' in re1) {
      sticky = !!flags && stringIndexOf(flags, 'y') > -1;
      if (sticky && UNSUPPORTED_Y) flags = replace(flags, /y/g, '');
    }

    if (UNSUPPORTED_NCG) {
      handled = handleNCG(pattern);
      pattern = handled[0];
      groups = handled[1];
    }

    result = inheritIfRequired(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);

    if (dotAll || sticky || groups.length) {
      state = enforceInternalState(result);
      if (dotAll) {
        state.dotAll = true;
        state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);
      }
      if (sticky) state.sticky = true;
      if (groups.length) state.groups = groups;
    }

    if (pattern !== rawPattern) try {
      // fails in old engines, but we have no alternatives for unsupported regex syntax
      createNonEnumerableProperty$2(result, 'source', rawPattern === '' ? '(?:)' : rawPattern);
    } catch (error) { /* empty */ }

    return result;
  };

  for (var keys = getOwnPropertyNames$1(NativeRegExp), index = 0; keys.length > index;) {
    proxyAccessor(RegExpWrapper, NativeRegExp, keys[index++]);
  }

  RegExpPrototype.constructor = RegExpWrapper;
  RegExpWrapper.prototype = RegExpPrototype;
  defineBuiltIn$2(global$2, 'RegExp', RegExpWrapper, { constructor: true });
}

// https://tc39.es/ecma262/#sec-get-regexp-@@species
setSpecies('RegExp');

var allowOnlyNumbers = function allowOnlyNumbers(e) {
  var allowPeriod = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var isNumber = isFinite(parseFloat(e.key));
  var value = e.key;
  if (value !== ".") {
    if (!isNumber && value !== "Delete" && value !== "Backspace" && value !== "Tab" && value !== "ArrowRight" && value !== "ArrowLeft") {
      e.preventDefault();
      return;
    }
  } else {
    if (!allowPeriod) {
      e.preventDefault();
      return;
    }
  }
};

var EyeFilledIconFilledComponent = function EyeFilledIconFilledComponent(_ref) {
  var fill = _ref.fill,
    smartColor = _ref.smartColor;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M0.885742 8C1.59074 4.58667 4.95599 2 8.99999 2C13.044 2 16.4085 4.58667 17.1142 8C16.4092 11.4133 13.044 14 8.99999 14C4.95599 14 1.59149 11.4133 0.885742 8ZM8.99999 11.3333C9.99455 11.3333 10.9484 10.9821 11.6516 10.357C12.3549 9.7319 12.75 8.88406 12.75 8C12.75 7.11595 12.3549 6.2681 11.6516 5.64298C10.9484 5.01786 9.99455 4.66667 8.99999 4.66667C8.00543 4.66667 7.0516 5.01786 6.34834 5.64298C5.64508 6.2681 5.24999 7.11595 5.24999 8C5.24999 8.88406 5.64508 9.7319 6.34834 10.357C7.0516 10.9821 8.00543 11.3333 8.99999 11.3333ZM8.99999 10C8.40325 10 7.83096 9.78929 7.409 9.41421C6.98704 9.03914 6.74999 8.53043 6.74999 8C6.74999 7.46957 6.98704 6.96086 7.409 6.58579C7.83096 6.21071 8.40325 6 8.99999 6C9.59673 6 10.169 6.21071 10.591 6.58579C11.0129 6.96086 11.25 7.46957 11.25 8C11.25 8.53043 11.0129 9.03914 10.591 9.41421C10.169 9.78929 9.59673 10 8.99999 10Z",
    fill: smartColor || fill
  }));
};
var EyeFilledIcon = {
  component: EyeFilledIconFilledComponent,
  viewBox: "0 0 18 16",
  fill: "none"
};
EyeFilledIconFilledComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
EyeFilledIconFilledComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var NoEyeFilledIconFilledComponent = function NoEyeFilledIconFilledComponent(_ref) {
  var fill = _ref.fill,
    smartColor = _ref.smartColor;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M7.88312 9.05477C8.4252 9.05477 8.94507 8.84254 9.32837 8.46478C9.71168 8.08703 9.92702 7.57467 9.92702 7.04044C9.92702 6.98145 9.92428 6.923 9.91917 6.86527L7.70538 9.04703C7.76396 9.05207 7.82308 9.05477 7.88312 9.05477ZM14.6484 0.809709L13.8688 0.0421081C13.8414 0.0151457 13.8043 0 13.7656 0C13.7269 0 13.6898 0.0151457 13.6624 0.0421081L11.6674 2.00877C10.5669 1.45447 9.32979 1.17732 7.95612 1.17732C4.44865 1.17732 1.83174 2.97762 0.10538 6.57823C0.0359883 6.72304 0 6.8812 0 7.04134C0 7.20149 0.0359883 7.35965 0.10538 7.50446C0.795194 8.93642 1.62583 10.0842 2.59729 10.9477L0.66672 12.8496C0.639362 12.8766 0.623994 12.9132 0.623994 12.9513C0.623994 12.9895 0.639362 13.026 0.66672 13.053L1.44577 13.8208C1.47315 13.8478 1.51027 13.8629 1.54897 13.8629C1.58767 13.8629 1.62479 13.8478 1.65217 13.8208L14.6484 1.0133C14.662 0.999937 14.6728 0.984069 14.6801 0.966602C14.6874 0.949135 14.6912 0.930413 14.6912 0.911504C14.6912 0.892596 14.6874 0.873874 14.6801 0.856407C14.6728 0.83894 14.662 0.823072 14.6484 0.809709ZM4.67129 7.04044C4.67124 6.49371 4.81488 5.95628 5.08822 5.48052C5.36156 5.00476 5.75528 4.60688 6.23103 4.32565C6.70677 4.04443 7.24831 3.88943 7.8029 3.87578C8.35748 3.86212 8.90621 3.99027 9.39561 4.24773L8.50834 5.12216C8.15051 5.00924 7.76804 4.99564 7.40288 5.08285C7.03773 5.17007 6.70401 5.35472 6.43833 5.61655C6.17265 5.87838 5.98529 6.20728 5.8968 6.56715C5.80831 6.92702 5.8221 7.30396 5.93668 7.65661L5.04941 8.53104C4.80042 8.07257 4.67052 7.56046 4.67129 7.04044Z",
    fill: smartColor || fill
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M15.8067 6.5764C15.1644 5.24311 14.3998 4.15592 13.513 3.31482L10.8826 5.90736C11.1043 6.47859 11.1535 7.10088 11.0241 7.69904C10.8947 8.29721 10.5924 8.84565 10.1536 9.27812C9.71475 9.71059 9.15825 10.0086 8.55131 10.1361C7.94436 10.2636 7.31294 10.2151 6.73333 9.99662L4.5022 12.1955C5.53728 12.6675 6.68855 12.9035 7.95601 12.9035C11.4635 12.9035 14.0804 11.1032 15.8067 7.50263C15.8762 7.35783 15.9121 7.19967 15.9121 7.03952C15.9121 6.87937 15.8762 6.72121 15.8067 6.5764V6.5764Z",
    fill: smartColor || fill
  }));
};
var NoEyeFilledIcon = {
  component: NoEyeFilledIconFilledComponent,
  viewBox: "0 0 18 16",
  fill: "none"
};
NoEyeFilledIconFilledComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
NoEyeFilledIconFilledComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

function formatSSN(ssn) {
  // remove all non-dash and non-numerals
  var val = ssn.replace(/[^\d-]/g, "");

  // add the first dash if number from the second group appear
  val = val.replace(/^(\d{3})-?(\d{1,2})/, "$1-$2");

  // add the second dash if numbers from the third group appear
  val = val.replace(/^(\d{3})-?(\d{2})-?(\d{1,4})/, "$1-$2-$3");

  // remove misplaced dashes
  val = val.split("").filter(function (val, idx) {
    return val !== "-" || idx === 3 || idx === 6;
  }).join("");

  // enforce max length
  var sssn = val.substring(0, 11);
  var starredSsn = "";
  for (var i = 0; i < sssn.length; i++) {
    if (i >= sssn.length - 4) {
      starredSsn += sssn[i];
    } else {
      if (sssn[i] !== "-") {
        starredSsn += "*";
      } else {
        starredSsn += "-";
      }
    }
  }
  return [sssn, starredSsn];
}

function formatPercentage(percentage) {
  var noSymbol = percentage.replaceAll("%", "");
  if (noSymbol.length >= 2 && noSymbol.charAt(0) === "0") {
    noSymbol = noSymbol.substring(1);
  }
  if (new RegExp(/^\d+(\.\d*)?$/).test(noSymbol)) {
    return noSymbol;
  } else {
    throw Error("Invalid percentage value");
  }
}

var _excluded$x = ["label", "labelComponent", "leftIcon", "size", "dropDown", "rightIcon", "errorMessage", "inputClassName", "className", "isHookForm", "isFormik", "onLeftIconClick", "onRightIconClick", "invisible", "disabled", "inputClass", "oneCharWide", "leftIconComponent", "rightIconComponent", "labelClass", "onlyNumbers", "showError", "onKeyUp", "onKeyDown", "onKeyPress", "onChange", "onInput", "isPassword", "emitOnlyCurrencyValue", "currency", "type", "ssn", "percentage", "maxLength", "value", "onFocus"];
var TextField = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var label = _ref.label,
    labelComponent = _ref.labelComponent,
    leftIcon = _ref.leftIcon,
    size = _ref.size,
    dropDown = _ref.dropDown,
    rightIcon = _ref.rightIcon,
    errorMessage = _ref.errorMessage,
    inputClassName = _ref.inputClassName,
    className = _ref.className;
    _ref.isHookForm;
    _ref.isFormik;
    var onLeftIconClick = _ref.onLeftIconClick,
    onRightIconClick = _ref.onRightIconClick,
    invisible = _ref.invisible,
    disabled = _ref.disabled,
    inputClass = _ref.inputClass,
    oneCharWide = _ref.oneCharWide,
    leftIconComponent = _ref.leftIconComponent,
    rightIconComponent = _ref.rightIconComponent,
    labelClass = _ref.labelClass,
    onlyNumbers = _ref.onlyNumbers,
    showError = _ref.showError,
    onKeyUp = _ref.onKeyUp,
    onKeyDown = _ref.onKeyDown,
    onKeyPress = _ref.onKeyPress,
    onChange = _ref.onChange,
    onInput = _ref.onInput,
    isPassword = _ref.isPassword,
    emitOnlyCurrencyValue = _ref.emitOnlyCurrencyValue,
    currency = _ref.currency,
    type = _ref.type,
    ssn = _ref.ssn,
    percentage = _ref.percentage,
    maxLength = _ref.maxLength,
    value = _ref.value,
    onFocus = _ref.onFocus,
    props = _objectWithoutProperties(_ref, _excluded$x);
  var _useState = useState(""),
    _useState2 = _slicedToArray$4(_useState, 2),
    trueInternalValue = _useState2[0],
    setTrueInternalValue = _useState2[1];
  var _useState3 = useState(["", ""]),
    _useState4 = _slicedToArray$4(_useState3, 2),
    formattedSSN = _useState4[0],
    setFormattedSSN = _useState4[1];
  var _useState5 = useState("text"),
    _useState6 = _slicedToArray$4(_useState5, 2),
    localType = _useState6[0],
    setLocalType = _useState6[1];
  var _useState7 = useState(false),
    _useState8 = _slicedToArray$4(_useState7, 2),
    focused = _useState8[0],
    setFocused = _useState8[1];
  useLayoutEffect(function () {
    if (!focused && value) {
      if (ssn) {
        setTrueInternalValue(formatSSN(value)[0]);
      } else if (currency) {
        var regex = /[0-9$,\.]/;
        if (regex.test(value)) {
          var strippedValue = value.replaceAll("$", "").replaceAll(",", "");
          setTrueInternalValue("$".concat(number_format(strippedValue, 2)));
        }
      } else if (percentage) {
        var _regex = /[0-9%\.]/;
        if (_regex.test(value)) {
          var parsedValue = parseFloat(value.replaceAll("%", ""));
          var renderedValue = parsedValue < 0 ? 0 : parsedValue > 100 ? 100 : parsedValue;
          var newValue = "".concat(renderedValue, "%");
          setTrueInternalValue(newValue);
        }
      } else {
        setTrueInternalValue(value);
      }
      // setInitialized(true);
    } else {
      if (!ssn && !currency && !percentage) {
        setTrueInternalValue(value);
      }
    }
  }, [currency, percentage, ssn, value]);
  useLayoutEffect(function () {}, [trueInternalValue]);
  useLayoutEffect(function () {
    if (ssn && formattedSSN) {
      setTrueInternalValue(formattedSSN[0]);
    }
  }, [formattedSSN, ssn]);
  useLayoutEffect(function () {
    setLocalType(isPassword ? "password" : type);
  }, [isPassword, type]);
  var generateInputFieldClasses = classNames(_defineProperty$6({
    "ui-text-field__input": true,
    "has-error": errorMessage || showError,
    "has-left-icon": leftIcon || leftIconComponent,
    "has-right-icon": dropDown || rightIcon || rightIconComponent,
    invisible: invisible,
    disabled: disabled,
    oneCharWide: oneCharWide
  }, inputClass, inputClass), inputClassName);
  var wrapperClasses = classNames(["size__".concat(size), "ui-text-field__wrapper"], className);
  var handleKeyEvents = function handleKeyEvents(e) {
    if (onlyNumbers || ssn) {
      return allowOnlyNumbers(e);
    }
  };
  var handleKeyup = function handleKeyup(e) {
    if (onKeyUp && typeof onKeyUp === "function") {
      onKeyUp(e);
    }
    return handleKeyEvents(e);
  };
  var handleKeydown = function handleKeydown(e) {
    if (onKeyDown && typeof onKeyDown === "function") {
      onKeyDown(e);
    }
    return handleKeyEvents(e);
  };
  var handleKeypress = function handleKeypress(e) {
    if (onKeyPress && typeof onKeyPress === "function") {
      onKeyPress(e);
    }
    return handleKeyEvents(e);
  };
  var handleRightIconClick = function handleRightIconClick(e) {
    if (isPassword) {
      setLocalType(localType === "text" ? "password" : "text");
    }
    if (onRightIconClick && typeof onRightIconClick === "function") {
      onRightIconClick(e);
    }
  };
  var handleLeftIconClick = function handleLeftIconClick(e) {
    if (onLeftIconClick && typeof onLeftIconClick === "function") {
      onLeftIconClick(e);
    }
  };
  var emitValue = function emitValue(e) {
    var val = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
    if (onChange && typeof onChange === "function") {
      var clonedE = Object.assign({}, e);
      clonedE.target.value = val === undefined ? trueInternalValue : val;
      onChange(clonedE);
    }
    if (onInput && typeof onInput === "function") {
      var _clonedE = Object.assign({}, e);
      _clonedE.target.value = val === undefined ? trueInternalValue : val;
      onInput(_clonedE);
    }
  };
  var computedMaxLength = ssn ? 11 : maxLength;
  var handleInputEvents = function handleInputEvents(e) {
    if (currency) {
      var _value = e.target.value,
        temp,
        regex = new RegExp(/^\d*(\.\d{0,2})?$/);
      if (!regex.test(_value)) {
        temp = _value.split("");
        var tested = "";
        for (var i = 0; i < temp.length; i++) {
          tested += temp[i];
          if (!regex.test(tested)) {
            setTrueInternalValue(tested.substr(0, i));
            emitValue(e, emitOnlyCurrencyValue ? tested.substr(0, i).replaceAll("$", "").replaceAll(",", "") : tested.substr(0, i));
          }
        }
      } else {
        if (emitOnlyCurrencyValue) {
          var emittedValue = e.target.value.replaceAll("$", "").replaceAll(",", "");
          setTrueInternalValue(emittedValue);
          emitValue(e, emittedValue);
        } else {
          setTrueInternalValue(e.target.value);
          emitValue(e, e.target.value);
        }
      }
    } else if (ssn) {
      var formatted = formatSSN(e.target.value);
      setFormattedSSN(formatted);
      emitValue(e, formatted[0]);
    } else if (percentage) {
      try {
        var formattedPercent = formatPercentage(e.target.value);
        setTrueInternalValue(formattedPercent);
        emitValue(e, formattedPercent);
      } catch (err) {
        setTrueInternalValue("");
        emitValue(e, "");
      }
    } else {
      // alert("I actually got here " + e.target.value);
      setTrueInternalValue(e.target.value);
      emitValue(e, e.target.value);
    }
  };
  var handleBlurEvents = function handleBlurEvents(e) {
    setFocused(false);
    if (ssn) {
      setTrueInternalValue(formattedSSN[1]);
      emitValue(e, formattedSSN[0]);
    }
    if (currency) {
      if (e.target.value) {
        var newValue = "$".concat(number_format(parseFloat(trueInternalValue.split(",").join("").replaceAll("$", "")), 2));
        setTrueInternalValue(newValue);
        emitValue(e, emitOnlyCurrencyValue ? number_format(e.target.value.replaceAll("$", "").replaceAll(",", ""), 2) : newValue);
      } else {
        var _newValue = "$0.00";
        setTrueInternalValue(_newValue);
        emitValue(e, _newValue);
      }
    }
    if (percentage) {
      var _value2 = e.target.value;
      if (_value2) {
        var parsedValue = parseFloat(_value2.replaceAll("%", ""));
        var renderedValue = parsedValue < 0 ? 0 : parsedValue > 100 ? 100 : parsedValue;
        var _newValue2 = "".concat(renderedValue, "%");
        setTrueInternalValue(_newValue2);
        emitValue(e, _newValue2);
      } else {
        var _newValue3 = "0%";
        setTrueInternalValue(_newValue3);
        emitValue(e, _newValue3);
      }
    }
  };
  var handleFocusEvents = function handleFocusEvents(e) {
    setFocused(true);
    if (ssn) {
      setTrueInternalValue(formattedSSN[0]);
      setTimeout(function () {
        e.target.select();
      });
    }
    if (currency) {
      if (props.emitOnlyCurrencyValue) {
        setTrueInternalValue(trueInternalValue.replaceAll("$", "").replaceAll(",", ""));
        setTimeout(function () {
          e.target.select();
        });
      } else {
        setTrueInternalValue(trueInternalValue.replaceAll("$", "").replaceAll(",", ""));
        setTimeout(function () {
          e.target.select();
        });
      }
    }
    if (percentage) {
      setTrueInternalValue(e.target.value.replaceAll("%", ""));
      setTimeout(function () {
        e.target.select();
      });
    }
    if (onFocus && typeof onFocus === "function") {
      onFocus(e);
    }
  };
  return /*#__PURE__*/React__default.createElement(Box, {
    className: wrapperClasses
  }, labelComponent ? labelComponent : label && !invisible && (typeof label === "string" ? /*#__PURE__*/React__default.createElement(Box, {
    is: "label"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    className: classNames(_defineProperty$6({
      "ui-text-field__label": true
    }, labelClass, labelClass)),
    scale: "subhead"
  }, label)) : label), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-text-field__input-wrapper"
  }, leftIcon && !leftIconComponent && /*#__PURE__*/React__default.createElement(Icon, {
    icon: leftIcon,
    className: "ui-text-field__left-icon",
    onClick: handleLeftIconClick
  }), leftIconComponent && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-text-field__left-icon",
    onClick: handleLeftIconClick
  }, leftIconComponent), /*#__PURE__*/React__default.createElement(Box, _extends$1({}, props, {
    className: generateInputFieldClasses,
    onKeyUp: handleKeyup,
    onKeyDown: handleKeydown,
    onKeyPress: handleKeypress,
    onInput: handleInputEvents,
    onBlur: handleBlurEvents,
    onFocus: handleFocusEvents,
    type: localType,
    is: "input",
    value: trueInternalValue,
    maxLength: computedMaxLength,
    ref: ref,
    disabled: disabled
  })), isPassword && !rightIcon ? /*#__PURE__*/React__default.createElement(Icon, {
    icon: localType === "text" ? EyeFilledIcon : NoEyeFilledIcon,
    className: "ui-text-field__right-icon",
    onClick: handleRightIconClick
  }) : (dropDown || rightIcon) && !rightIconComponent && /*#__PURE__*/React__default.createElement(Icon, {
    icon: dropDown ? ChevronFilledDown : rightIcon,
    className: "ui-text-field__right-icon",
    onClick: handleRightIconClick
  }), rightIconComponent), errorMessage && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-text-field__error"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: Error$1,
    className: "ui-text-field__error-icon"
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-text-field__error-text",
    scale: "subhead",
    fontFace: "circularSTD"
  }, errorMessage)));
});
TextField.propTypes = _objectSpread2$1(_objectSpread2$1({}, inputPropTypes), {}, {
  dropDown: propTypes.exports.bool,
  rightIcon: propTypes.exports.element,
  leftIcon: propTypes.exports.oneOfType([propTypes.exports.element, propTypes.exports.object]),
  currency: propTypes.exports.bool,
  emitOnlyCurrencyValue: propTypes.exports.bool,
  oneCharWide: propTypes.exports.bool,
  isPassword: propTypes.exports.bool,
  ssn: propTypes.exports.bool,
  maxlength: propTypes.exports.oneOfType([propTypes.exports.string, propTypes.exports.number]),
  type: propTypes.exports.string,
  inputClass: propTypes.exports.string,
  onChange: propTypes.exports.func,
  onInput: propTypes.exports.func,
  onKeyPress: propTypes.exports.func,
  onKeyDown: propTypes.exports.func,
  onFocus: propTypes.exports.func,
  onBlur: propTypes.exports.func,
  onKeyUp: propTypes.exports.func,
  leftIconComponent: propTypes.exports.node,
  rightIconComponent: propTypes.exports.node,
  onlyNumbers: propTypes.exports.bool,
  percentage: propTypes.exports.bool
});
TextField.defaultProps = _objectSpread2$1(_objectSpread2$1({}, defaultProps$1), {}, {
  type: "text"
});

var _excluded$w = ["label", "onChange", "onBlur", "name", "options", "initialValue", "returnObjModel"];
var Dropdown = /*#__PURE__*/forwardRef(function (_ref, ref) {
  _ref.label;
    var onChange = _ref.onChange;
    _ref.onBlur;
    _ref.name;
    var options = _ref.options,
    initialValue = _ref.initialValue,
    returnObjModel = _ref.returnObjModel,
    props = _objectWithoutProperties(_ref, _excluded$w);
  var _useState = useState(""),
    _useState2 = _slicedToArray$4(_useState, 2),
    inputValue = _useState2[0],
    setInputValue = _useState2[1];
  var _useState3 = useState(false),
    _useState4 = _slicedToArray$4(_useState3, 2),
    showOptions = _useState4[0],
    setShowOptions = _useState4[1];
  var _useState5 = useState([]),
    _useState6 = _slicedToArray$4(_useState5, 2),
    computedOptions = _useState6[0],
    setComputedOptions = _useState6[1];
  var _useState7 = useState(-1),
    _useState8 = _slicedToArray$4(_useState7, 2),
    selectedIndex = _useState8[0],
    setSelectedIndex = _useState8[1];
  var _useState9 = useState(null),
    _useState10 = _slicedToArray$4(_useState9, 2),
    selectedOption = _useState10[0],
    setSelectedOption = _useState10[1];
  var _useState11 = useState(true),
    _useState12 = _slicedToArray$4(_useState11, 2),
    isBlur = _useState12[0],
    setIsBlur = _useState12[1];
  var returnOptionText = function returnOptionText(option) {
    return _typeof$6(option) === "object" ? option.text : option;
  };
  useLayoutEffect(function () {
    if (initialValue) {
      setInputValue(initialValue);
    }
  }, []);
  useEffect(function () {
    if (!isBlur) {
      setShowOptions(true);
    }
    if (selectedOption) {
      if (inputValue !== returnOptionText(selectedOption)) {
        setSelectedOption(null);
      }
    } else {
      if (inputValue) {
        setComputedOptions(_toConsumableArray(options).filter(function (option) {
          if (typeof option === "string") {
            return option.toLowerCase().includes(inputValue.toLowerCase());
          } else {
            return option.text.toLowerCase().includes(inputValue.toLowerCase());
          }
        }));
      } else {
        setComputedOptions(_toConsumableArray(options));
      }
    }
  }, [options, inputValue, selectedOption, isBlur]);
  useEffect(function () {
    if (onChange && typeof onChange === "function") {
      onChange(returnObjModel ? selectedOption : selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.value);
    }
  }, [selectedOption]);
  useEffect(function () {
    if (isBlur && !selectedOption) {
      var exactMatch = false;
      var _iterator = _createForOfIteratorHelper$1(computedOptions),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var option = _step.value;
          if (typeof option === "string") {
            if (option.toLowerCase() === inputValue.toLowerCase()) {
              exactMatch = true;
              setInputValue(option);
              setSelectedOption(option);
              break;
            }
          } else {
            if (option.text.toLowerCase() === inputValue.toLowerCase()) {
              exactMatch = true;
              setInputValue(option.text);
              setSelectedOption(option);
              break;
            }
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (!exactMatch) {
        setInputValue("");
        setSelectedOption(null);
      }
    }
  }, [isBlur]);
  var handleFocus = function handleFocus() {
    setIsBlur(false);
    setShowOptions(true);
  };
  var handleBlur = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            setIsBlur(true);
            setTimeout(function () {
              setShowOptions(false);
            }, 300);
          case 2:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function handleBlur() {
      return _ref2.apply(this, arguments);
    };
  }();
  var handleClickedOption = /*#__PURE__*/function () {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(option) {
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            if (option) {
              if (typeof option === "string") {
                setInputValue(option);
              } else {
                setInputValue(option.text);
              }
              setSelectedOption(option);
              setTimeout(function () {
                setShowOptions(false);
              }, 300);
            }
          case 1:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    return function handleClickedOption(_x) {
      return _ref3.apply(this, arguments);
    };
  }();
  var handleLeave = function handleLeave(e) {
    if (!e.target.closest(".ui-dropdown")) {
      handleBlur();
    }
  };
  var handleKeyDown = /*#__PURE__*/function () {
    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e) {
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            _context3.t0 = e.key;
            _context3.next = _context3.t0 === "ArrowDown" ? 3 : _context3.t0 === "ArrowUp" ? 6 : _context3.t0 === "Enter" ? 9 : _context3.t0 === "Escape" ? 11 : 14;
            break;
          case 3:
            if (!showOptions) {
              setShowOptions(true);
            }
            if (selectedIndex + 1 <= computedOptions.length - 1) setSelectedIndex(selectedIndex + 1);else setSelectedIndex(0);
            return _context3.abrupt("break", 15);
          case 6:
            if (!showOptions) {
              setShowOptions(true);
            }
            if (selectedIndex - 1 >= 0) setSelectedIndex(selectedIndex - 1);else setSelectedIndex(computedOptions.length - 1);
            return _context3.abrupt("break", 15);
          case 9:
            handleClickedOption(computedOptions[selectedIndex]);
            return _context3.abrupt("break", 15);
          case 11:
            handleBlur();
            e.target.blur();
            return _context3.abrupt("break", 15);
          case 14:
            return _context3.abrupt("break", 15);
          case 15:
          case "end":
            return _context3.stop();
        }
      }, _callee3);
    }));
    return function handleKeyDown(_x2) {
      return _ref4.apply(this, arguments);
    };
  }();
  useEffect(function () {
    window.addEventListener("click", handleLeave);
    return function () {
      window.removeEventListener("click", handleLeave);
    };
  }, []);
  var mappedComputedOptions = computedOptions.map(function (option, index) {
    return /*#__PURE__*/React__default.createElement(Box, {
      className: classNames({
        "ui-dropdown__option": true,
        active: selectedIndex === index
      }),
      onMouseEnter: function onMouseEnter() {
        return setSelectedIndex(index);
      },
      onClick: function onClick() {
        return handleClickedOption(option);
      },
      key: "option-".concat(index)
    }, _typeof$6(option) === "object" && option.icon && /*#__PURE__*/React__default.createElement(Box, {
      className: "ui-dropdown__icon"
    }, option.icon), /*#__PURE__*/React__default.createElement(Text$1, {
      marginY: 0,
      scale: "subhead",
      fontFace: "circularSTD"
    }, typeof option === "string" ? option : option.text));
  });
  return /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-dropdown"
  }, /*#__PURE__*/React__default.createElement(TextField, _extends$1({
    dropDown: true
  }, props, {
    value: inputValue,
    onKeyDown: handleKeyDown,
    onFocus: handleFocus,
    onBlur: handleBlur,
    onChange: function onChange(e) {
      return setInputValue(e.target.value);
    },
    onRightIconClick: function onRightIconClick() {
      return setShowOptions(!showOptions);
    },
    leftIconComponent: selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.icon,
    ref: ref
  })), showOptions && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-dropdown__options"
  }, mappedComputedOptions));
});
Dropdown.defaultProps = _objectSpread2$1({}, defaultProps$1);
Dropdown.propTypes = _objectSpread2$1(_objectSpread2$1({}, inputPropTypes), {}, {
  options: propTypes.exports.array,
  returnObjModel: propTypes.exports.bool,
  onChange: propTypes.exports.func,
  initialValue: propTypes.exports.string
});

var countries = [
	{
		name: "United States",
		iso3: "USA",
		iso2: "US",
		numeric_code: "840",
		phone_code: "1",
		emoji: "🇺🇸",
		emojiU: "U+1F1FA U+1F1F8",
		states: [
			{
				id: 1456,
				name: "Alabama",
				state_code: "AL"
			},
			{
				id: 1400,
				name: "Alaska",
				state_code: "AK"
			},
			{
				id: 1424,
				name: "American Samoa",
				state_code: "AS"
			},
			{
				id: 1434,
				name: "Arizona",
				state_code: "AZ"
			},
			{
				id: 1444,
				name: "Arkansas",
				state_code: "AR"
			},
			{
				id: 1402,
				name: "Baker Island",
				state_code: "UM-81"
			},
			{
				id: 1416,
				name: "California",
				state_code: "CA"
			},
			{
				id: 1450,
				name: "Colorado",
				state_code: "CO"
			},
			{
				id: 1435,
				name: "Connecticut",
				state_code: "CT"
			},
			{
				id: 1399,
				name: "Delaware",
				state_code: "DE"
			},
			{
				id: 1437,
				name: "District of Columbia",
				state_code: "DC"
			},
			{
				id: 1436,
				name: "Florida",
				state_code: "FL"
			},
			{
				id: 1455,
				name: "Georgia",
				state_code: "GA"
			},
			{
				id: 1412,
				name: "Guam",
				state_code: "GU"
			},
			{
				id: 1411,
				name: "Hawaii",
				state_code: "HI"
			},
			{
				id: 1398,
				name: "Howland Island",
				state_code: "UM-84"
			},
			{
				id: 1460,
				name: "Idaho",
				state_code: "ID"
			},
			{
				id: 1425,
				name: "Illinois",
				state_code: "IL"
			},
			{
				id: 1440,
				name: "Indiana",
				state_code: "IN"
			},
			{
				id: 1459,
				name: "Iowa",
				state_code: "IA"
			},
			{
				id: 1410,
				name: "Jarvis Island",
				state_code: "UM-86"
			},
			{
				id: 1428,
				name: "Johnston Atoll",
				state_code: "UM-67"
			},
			{
				id: 1406,
				name: "Kansas",
				state_code: "KS"
			},
			{
				id: 1419,
				name: "Kentucky",
				state_code: "KY"
			},
			{
				id: 1403,
				name: "Kingman Reef",
				state_code: "UM-89"
			},
			{
				id: 1457,
				name: "Louisiana",
				state_code: "LA"
			},
			{
				id: 1453,
				name: "Maine",
				state_code: "ME"
			},
			{
				id: 1401,
				name: "Maryland",
				state_code: "MD"
			},
			{
				id: 1433,
				name: "Massachusetts",
				state_code: "MA"
			},
			{
				id: 1426,
				name: "Michigan",
				state_code: "MI"
			},
			{
				id: 1438,
				name: "Midway Atoll",
				state_code: "UM-71"
			},
			{
				id: 1420,
				name: "Minnesota",
				state_code: "MN"
			},
			{
				id: 1430,
				name: "Mississippi",
				state_code: "MS"
			},
			{
				id: 1451,
				name: "Missouri",
				state_code: "MO"
			},
			{
				id: 1446,
				name: "Montana",
				state_code: "MT"
			},
			{
				id: 1439,
				name: "Navassa Island",
				state_code: "UM-76"
			},
			{
				id: 1408,
				name: "Nebraska",
				state_code: "NE"
			},
			{
				id: 1458,
				name: "Nevada",
				state_code: "NV"
			},
			{
				id: 1404,
				name: "New Hampshire",
				state_code: "NH"
			},
			{
				id: 1417,
				name: "New Jersey",
				state_code: "NJ"
			},
			{
				id: 1423,
				name: "New Mexico",
				state_code: "NM"
			},
			{
				id: 1452,
				name: "New York",
				state_code: "NY"
			},
			{
				id: 1447,
				name: "North Carolina",
				state_code: "NC"
			},
			{
				id: 1418,
				name: "North Dakota",
				state_code: "ND"
			},
			{
				id: 1431,
				name: "Northern Mariana Islands",
				state_code: "MP"
			},
			{
				id: 4851,
				name: "Ohio",
				state_code: "OH"
			},
			{
				id: 1421,
				name: "Oklahoma",
				state_code: "OK"
			},
			{
				id: 1415,
				name: "Oregon",
				state_code: "OR"
			},
			{
				id: 1448,
				name: "Palmyra Atoll",
				state_code: "UM-95"
			},
			{
				id: 1422,
				name: "Pennsylvania",
				state_code: "PA"
			},
			{
				id: 1449,
				name: "Puerto Rico",
				state_code: "PR"
			},
			{
				id: 1461,
				name: "Rhode Island",
				state_code: "RI"
			},
			{
				id: 1443,
				name: "South Carolina",
				state_code: "SC"
			},
			{
				id: 1445,
				name: "South Dakota",
				state_code: "SD"
			},
			{
				id: 1454,
				name: "Tennessee",
				state_code: "TN"
			},
			{
				id: 1407,
				name: "Texas",
				state_code: "TX"
			},
			{
				id: 1432,
				name: "United States Minor Outlying Islands",
				state_code: "UM"
			},
			{
				id: 1413,
				name: "United States Virgin Islands",
				state_code: "VI"
			},
			{
				id: 1414,
				name: "Utah",
				state_code: "UT"
			},
			{
				id: 1409,
				name: "Vermont",
				state_code: "VT"
			},
			{
				id: 1427,
				name: "Virginia",
				state_code: "VA"
			},
			{
				id: 1405,
				name: "Wake Island",
				state_code: "UM-79"
			},
			{
				id: 1462,
				name: "Washington",
				state_code: "WA"
			},
			{
				id: 1429,
				name: "West Virginia",
				state_code: "WV"
			},
			{
				id: 1441,
				name: "Wisconsin",
				state_code: "WI"
			},
			{
				id: 1442,
				name: "Wyoming",
				state_code: "WY"
			}
		]
	},
	{
		name: "Afghanistan",
		iso3: "AFG",
		iso2: "AF",
		numeric_code: "004",
		phone_code: "93",
		emoji: "🇦🇫",
		emojiU: "U+1F1E6 U+1F1EB",
		states: [
			{
				id: 3901,
				name: "Badakhshan",
				state_code: "BDS"
			},
			{
				id: 3871,
				name: "Badghis",
				state_code: "BDG"
			},
			{
				id: 3875,
				name: "Baghlan",
				state_code: "BGL"
			},
			{
				id: 3884,
				name: "Balkh",
				state_code: "BAL"
			},
			{
				id: 3872,
				name: "Bamyan",
				state_code: "BAM"
			},
			{
				id: 3892,
				name: "Daykundi",
				state_code: "DAY"
			},
			{
				id: 3899,
				name: "Farah",
				state_code: "FRA"
			},
			{
				id: 3889,
				name: "Faryab",
				state_code: "FYB"
			},
			{
				id: 3870,
				name: "Ghazni",
				state_code: "GHA"
			},
			{
				id: 3888,
				name: "Ghōr",
				state_code: "GHO"
			},
			{
				id: 3873,
				name: "Helmand",
				state_code: "HEL"
			},
			{
				id: 3887,
				name: "Herat",
				state_code: "HER"
			},
			{
				id: 3886,
				name: "Jowzjan",
				state_code: "JOW"
			},
			{
				id: 3902,
				name: "Kabul",
				state_code: "KAB"
			},
			{
				id: 3890,
				name: "Kandahar",
				state_code: "KAN"
			},
			{
				id: 3879,
				name: "Kapisa",
				state_code: "KAP"
			},
			{
				id: 3878,
				name: "Khost",
				state_code: "KHO"
			},
			{
				id: 3876,
				name: "Kunar",
				state_code: "KNR"
			},
			{
				id: 3900,
				name: "Kunduz Province",
				state_code: "KDZ"
			},
			{
				id: 3891,
				name: "Laghman",
				state_code: "LAG"
			},
			{
				id: 3897,
				name: "Logar",
				state_code: "LOG"
			},
			{
				id: 3882,
				name: "Nangarhar",
				state_code: "NAN"
			},
			{
				id: 3896,
				name: "Nimruz",
				state_code: "NIM"
			},
			{
				id: 3880,
				name: "Nuristan",
				state_code: "NUR"
			},
			{
				id: 3894,
				name: "Paktia",
				state_code: "PIA"
			},
			{
				id: 3877,
				name: "Paktika",
				state_code: "PKA"
			},
			{
				id: 3881,
				name: "Panjshir",
				state_code: "PAN"
			},
			{
				id: 3895,
				name: "Parwan",
				state_code: "PAR"
			},
			{
				id: 3883,
				name: "Samangan",
				state_code: "SAM"
			},
			{
				id: 3885,
				name: "Sar-e Pol",
				state_code: "SAR"
			},
			{
				id: 3893,
				name: "Takhar",
				state_code: "TAK"
			},
			{
				id: 3898,
				name: "Urozgan",
				state_code: "URU"
			},
			{
				id: 3874,
				name: "Zabul",
				state_code: "ZAB"
			}
		]
	},
	{
		name: "Aland Islands",
		iso3: "ALA",
		iso2: "AX",
		numeric_code: "248",
		phone_code: "+358-18",
		emoji: "🇦🇽",
		emojiU: "U+1F1E6 U+1F1FD",
		states: [
		]
	},
	{
		name: "Albania",
		iso3: "ALB",
		iso2: "AL",
		numeric_code: "008",
		phone_code: "355",
		emoji: "🇦🇱",
		emojiU: "U+1F1E6 U+1F1F1",
		states: [
			{
				id: 603,
				name: "Berat County",
				state_code: "01"
			},
			{
				id: 629,
				name: "Berat District",
				state_code: "BR"
			},
			{
				id: 607,
				name: "Bulqizë District",
				state_code: "BU"
			},
			{
				id: 618,
				name: "Delvinë District",
				state_code: "DL"
			},
			{
				id: 608,
				name: "Devoll District",
				state_code: "DV"
			},
			{
				id: 610,
				name: "Dibër County",
				state_code: "09"
			},
			{
				id: 605,
				name: "Dibër District",
				state_code: "DI"
			},
			{
				id: 632,
				name: "Durrës County",
				state_code: "02"
			},
			{
				id: 639,
				name: "Durrës District",
				state_code: "DR"
			},
			{
				id: 598,
				name: "Elbasan County",
				state_code: "03"
			},
			{
				id: 631,
				name: "Fier County",
				state_code: "04"
			},
			{
				id: 627,
				name: "Fier District",
				state_code: "FR"
			},
			{
				id: 604,
				name: "Gjirokastër County",
				state_code: "05"
			},
			{
				id: 621,
				name: "Gjirokastër District",
				state_code: "GJ"
			},
			{
				id: 617,
				name: "Gramsh District",
				state_code: "GR"
			},
			{
				id: 600,
				name: "Has District",
				state_code: "HA"
			},
			{
				id: 594,
				name: "Kavajë District",
				state_code: "KA"
			},
			{
				id: 628,
				name: "Kolonjë District",
				state_code: "ER"
			},
			{
				id: 630,
				name: "Korçë County",
				state_code: "06"
			},
			{
				id: 597,
				name: "Korçë District",
				state_code: "KO"
			},
			{
				id: 614,
				name: "Krujë District",
				state_code: "KR"
			},
			{
				id: 612,
				name: "Kuçovë District",
				state_code: "KC"
			},
			{
				id: 601,
				name: "Kukës County",
				state_code: "07"
			},
			{
				id: 623,
				name: "Kukës District",
				state_code: "KU"
			},
			{
				id: 622,
				name: "Kurbin District",
				state_code: "KB"
			},
			{
				id: 609,
				name: "Lezhë County",
				state_code: "08"
			},
			{
				id: 595,
				name: "Lezhë District",
				state_code: "LE"
			},
			{
				id: 596,
				name: "Librazhd District",
				state_code: "LB"
			},
			{
				id: 599,
				name: "Lushnjë District",
				state_code: "LU"
			},
			{
				id: 602,
				name: "Malësi e Madhe District",
				state_code: "MM"
			},
			{
				id: 637,
				name: "Mallakastër District",
				state_code: "MK"
			},
			{
				id: 635,
				name: "Mat District",
				state_code: "MT"
			},
			{
				id: 638,
				name: "Mirditë District",
				state_code: "MR"
			},
			{
				id: 619,
				name: "Peqin District",
				state_code: "PQ"
			},
			{
				id: 625,
				name: "Përmet District",
				state_code: "PR"
			},
			{
				id: 606,
				name: "Pogradec District",
				state_code: "PG"
			},
			{
				id: 620,
				name: "Pukë District",
				state_code: "PU"
			},
			{
				id: 624,
				name: "Sarandë District",
				state_code: "SR"
			},
			{
				id: 611,
				name: "Shkodër County",
				state_code: "10"
			},
			{
				id: 626,
				name: "Shkodër District",
				state_code: "SH"
			},
			{
				id: 593,
				name: "Skrapar District",
				state_code: "SK"
			},
			{
				id: 616,
				name: "Tepelenë District",
				state_code: "TE"
			},
			{
				id: 615,
				name: "Tirana County",
				state_code: "11"
			},
			{
				id: 633,
				name: "Tirana District",
				state_code: "TR"
			},
			{
				id: 636,
				name: "Tropojë District",
				state_code: "TP"
			},
			{
				id: 634,
				name: "Vlorë County",
				state_code: "12"
			},
			{
				id: 613,
				name: "Vlorë District",
				state_code: "VL"
			}
		]
	},
	{
		name: "Algeria",
		iso3: "DZA",
		iso2: "DZ",
		numeric_code: "012",
		phone_code: "213",
		emoji: "🇩🇿",
		emojiU: "U+1F1E9 U+1F1FF",
		states: [
			{
				id: 1118,
				name: "Adrar",
				state_code: "01"
			},
			{
				id: 1119,
				name: "Aïn Defla",
				state_code: "44"
			},
			{
				id: 1122,
				name: "Aïn Témouchent",
				state_code: "46"
			},
			{
				id: 1144,
				name: "Algiers",
				state_code: "16"
			},
			{
				id: 1103,
				name: "Annaba",
				state_code: "23"
			},
			{
				id: 1142,
				name: "Batna",
				state_code: "05"
			},
			{
				id: 1108,
				name: "Béchar",
				state_code: "08"
			},
			{
				id: 1128,
				name: "Béjaïa",
				state_code: "06"
			},
			{
				id: 4909,
				name: "Béni Abbès",
				state_code: "53"
			},
			{
				id: 1114,
				name: "Biskra",
				state_code: "07"
			},
			{
				id: 1111,
				name: "Blida",
				state_code: "09"
			},
			{
				id: 4908,
				name: "Bordj Baji Mokhtar",
				state_code: "52"
			},
			{
				id: 1116,
				name: "Bordj Bou Arréridj",
				state_code: "34"
			},
			{
				id: 1104,
				name: "Bouïra",
				state_code: "10"
			},
			{
				id: 1125,
				name: "Boumerdès",
				state_code: "35"
			},
			{
				id: 1105,
				name: "Chlef",
				state_code: "02"
			},
			{
				id: 1121,
				name: "Constantine",
				state_code: "25"
			},
			{
				id: 4912,
				name: "Djanet",
				state_code: "56"
			},
			{
				id: 1098,
				name: "Djelfa",
				state_code: "17"
			},
			{
				id: 1129,
				name: "El Bayadh",
				state_code: "32"
			},
			{
				id: 4905,
				name: "El M'ghair",
				state_code: "49"
			},
			{
				id: 4906,
				name: "El Menia",
				state_code: "50"
			},
			{
				id: 1099,
				name: "El Oued",
				state_code: "39"
			},
			{
				id: 1100,
				name: "El Tarf",
				state_code: "36"
			},
			{
				id: 1127,
				name: "Ghardaïa",
				state_code: "47"
			},
			{
				id: 1137,
				name: "Guelma",
				state_code: "24"
			},
			{
				id: 1112,
				name: "Illizi",
				state_code: "33"
			},
			{
				id: 4914,
				name: "In Guezzam",
				state_code: "58"
			},
			{
				id: 4913,
				name: "In Salah",
				state_code: "57"
			},
			{
				id: 1113,
				name: "Jijel",
				state_code: "18"
			},
			{
				id: 1126,
				name: "Khenchela",
				state_code: "40"
			},
			{
				id: 1138,
				name: "Laghouat",
				state_code: "03"
			},
			{
				id: 1134,
				name: "M'Sila",
				state_code: "28"
			},
			{
				id: 1124,
				name: "Mascara",
				state_code: "29"
			},
			{
				id: 1109,
				name: "Médéa",
				state_code: "26"
			},
			{
				id: 1132,
				name: "Mila",
				state_code: "43"
			},
			{
				id: 1140,
				name: "Mostaganem",
				state_code: "27"
			},
			{
				id: 1102,
				name: "Naama",
				state_code: "45"
			},
			{
				id: 1101,
				name: "Oran",
				state_code: "31"
			},
			{
				id: 1139,
				name: "Ouargla",
				state_code: "30"
			},
			{
				id: 4907,
				name: "Ouled Djellal",
				state_code: "51"
			},
			{
				id: 1136,
				name: "Oum El Bouaghi",
				state_code: "04"
			},
			{
				id: 1130,
				name: "Relizane",
				state_code: "48"
			},
			{
				id: 1123,
				name: "Saïda",
				state_code: "20"
			},
			{
				id: 1141,
				name: "Sétif",
				state_code: "19"
			},
			{
				id: 4902,
				name: "Sidi Bel Abbès",
				state_code: "22"
			},
			{
				id: 1110,
				name: "Skikda",
				state_code: "21"
			},
			{
				id: 1143,
				name: "Souk Ahras",
				state_code: "41"
			},
			{
				id: 1135,
				name: "Tamanghasset",
				state_code: "11"
			},
			{
				id: 1117,
				name: "Tébessa",
				state_code: "12"
			},
			{
				id: 1106,
				name: "Tiaret",
				state_code: "14"
			},
			{
				id: 4910,
				name: "Timimoun",
				state_code: "54"
			},
			{
				id: 1120,
				name: "Tindouf",
				state_code: "37"
			},
			{
				id: 1115,
				name: "Tipasa",
				state_code: "42"
			},
			{
				id: 1133,
				name: "Tissemsilt",
				state_code: "38"
			},
			{
				id: 1131,
				name: "Tizi Ouzou",
				state_code: "15"
			},
			{
				id: 1107,
				name: "Tlemcen",
				state_code: "13"
			},
			{
				id: 4911,
				name: "Touggourt",
				state_code: "55"
			}
		]
	},
	{
		name: "American Samoa",
		iso3: "ASM",
		iso2: "AS",
		numeric_code: "016",
		phone_code: "+1-684",
		emoji: "🇦🇸",
		emojiU: "U+1F1E6 U+1F1F8",
		states: [
		]
	},
	{
		name: "Andorra",
		iso3: "AND",
		iso2: "AD",
		numeric_code: "020",
		phone_code: "376",
		emoji: "🇦🇩",
		emojiU: "U+1F1E6 U+1F1E9",
		states: [
			{
				id: 488,
				name: "Andorra la Vella",
				state_code: "07"
			},
			{
				id: 489,
				name: "Canillo",
				state_code: "02"
			},
			{
				id: 487,
				name: "Encamp",
				state_code: "03"
			},
			{
				id: 492,
				name: "Escaldes-Engordany",
				state_code: "08"
			},
			{
				id: 493,
				name: "La Massana",
				state_code: "04"
			},
			{
				id: 491,
				name: "Ordino",
				state_code: "05"
			},
			{
				id: 490,
				name: "Sant Julià de Lòria",
				state_code: "06"
			}
		]
	},
	{
		name: "Angola",
		iso3: "AGO",
		iso2: "AO",
		numeric_code: "024",
		phone_code: "244",
		emoji: "🇦🇴",
		emojiU: "U+1F1E6 U+1F1F4",
		states: [
			{
				id: 221,
				name: "Bengo Province",
				state_code: "BGO"
			},
			{
				id: 218,
				name: "Benguela Province",
				state_code: "BGU"
			},
			{
				id: 212,
				name: "Bié Province",
				state_code: "BIE"
			},
			{
				id: 228,
				name: "Cabinda Province",
				state_code: "CAB"
			},
			{
				id: 226,
				name: "Cuando Cubango Province",
				state_code: "CCU"
			},
			{
				id: 217,
				name: "Cuanza Norte Province",
				state_code: "CNO"
			},
			{
				id: 216,
				name: "Cuanza Sul",
				state_code: "CUS"
			},
			{
				id: 215,
				name: "Cunene Province",
				state_code: "CNN"
			},
			{
				id: 213,
				name: "Huambo Province",
				state_code: "HUA"
			},
			{
				id: 225,
				name: "Huíla Province",
				state_code: "HUI"
			},
			{
				id: 222,
				name: "Luanda Province",
				state_code: "LUA"
			},
			{
				id: 223,
				name: "Lunda Norte Province",
				state_code: "LNO"
			},
			{
				id: 220,
				name: "Lunda Sul Province",
				state_code: "LSU"
			},
			{
				id: 227,
				name: "Malanje Province",
				state_code: "MAL"
			},
			{
				id: 219,
				name: "Moxico Province",
				state_code: "MOX"
			},
			{
				id: 224,
				name: "Uíge Province",
				state_code: "UIG"
			},
			{
				id: 214,
				name: "Zaire Province",
				state_code: "ZAI"
			}
		]
	},
	{
		name: "Anguilla",
		iso3: "AIA",
		iso2: "AI",
		numeric_code: "660",
		phone_code: "+1-264",
		emoji: "🇦🇮",
		emojiU: "U+1F1E6 U+1F1EE",
		states: [
		]
	},
	{
		name: "Antarctica",
		iso3: "ATA",
		iso2: "AQ",
		numeric_code: "010",
		phone_code: "672",
		emoji: "🇦🇶",
		emojiU: "U+1F1E6 U+1F1F6",
		states: [
		]
	},
	{
		name: "Antigua And Barbuda",
		iso3: "ATG",
		iso2: "AG",
		numeric_code: "028",
		phone_code: "+1-268",
		emoji: "🇦🇬",
		emojiU: "U+1F1E6 U+1F1EC",
		states: [
			{
				id: 3708,
				name: "Barbuda",
				state_code: "10"
			},
			{
				id: 3703,
				name: "Redonda",
				state_code: "11"
			},
			{
				id: 3709,
				name: "Saint George Parish",
				state_code: "03"
			},
			{
				id: 3706,
				name: "Saint John Parish",
				state_code: "04"
			},
			{
				id: 3707,
				name: "Saint Mary Parish",
				state_code: "05"
			},
			{
				id: 3705,
				name: "Saint Paul Parish",
				state_code: "06"
			},
			{
				id: 3704,
				name: "Saint Peter Parish",
				state_code: "07"
			},
			{
				id: 3710,
				name: "Saint Philip Parish",
				state_code: "08"
			}
		]
	},
	{
		name: "Argentina",
		iso3: "ARG",
		iso2: "AR",
		numeric_code: "032",
		phone_code: "54",
		emoji: "🇦🇷",
		emojiU: "U+1F1E6 U+1F1F7",
		states: [
			{
				id: 3656,
				name: "Buenos Aires",
				state_code: "B"
			},
			{
				id: 3647,
				name: "Catamarca",
				state_code: "K"
			},
			{
				id: 3640,
				name: "Chaco",
				state_code: "H"
			},
			{
				id: 3651,
				name: "Chubut",
				state_code: "U"
			},
			{
				id: 4880,
				name: "Ciudad Autónoma de Buenos Aires",
				state_code: "C"
			},
			{
				id: 3642,
				name: "Córdoba",
				state_code: "X"
			},
			{
				id: 3638,
				name: "Corrientes",
				state_code: "W"
			},
			{
				id: 3654,
				name: "Entre Ríos",
				state_code: "E"
			},
			{
				id: 3652,
				name: "Formosa",
				state_code: "P"
			},
			{
				id: 3645,
				name: "Jujuy",
				state_code: "Y"
			},
			{
				id: 3655,
				name: "La Pampa",
				state_code: "L"
			},
			{
				id: 3653,
				name: "La Rioja",
				state_code: "F"
			},
			{
				id: 3646,
				name: "Mendoza",
				state_code: "M"
			},
			{
				id: 3644,
				name: "Misiones",
				state_code: "N"
			},
			{
				id: 3648,
				name: "Neuquén",
				state_code: "Q"
			},
			{
				id: 3639,
				name: "Río Negro",
				state_code: "R"
			},
			{
				id: 3643,
				name: "Salta",
				state_code: "A"
			},
			{
				id: 3634,
				name: "San Juan",
				state_code: "J"
			},
			{
				id: 3636,
				name: "San Luis\t",
				state_code: "D"
			},
			{
				id: 3649,
				name: "Santa Cruz",
				state_code: "Z"
			},
			{
				id: 3641,
				name: "Santa Fe",
				state_code: "S"
			},
			{
				id: 3635,
				name: "Santiago del Estero",
				state_code: "G"
			},
			{
				id: 3650,
				name: "Tierra del Fuego",
				state_code: "V"
			},
			{
				id: 3637,
				name: "Tucumán",
				state_code: "T"
			}
		]
	},
	{
		name: "Armenia",
		iso3: "ARM",
		iso2: "AM",
		numeric_code: "051",
		phone_code: "374",
		emoji: "🇦🇲",
		emojiU: "U+1F1E6 U+1F1F2",
		states: [
			{
				id: 2023,
				name: "Aragatsotn Region",
				state_code: "AG"
			},
			{
				id: 2024,
				name: "Ararat Province",
				state_code: "AR"
			},
			{
				id: 2026,
				name: "Armavir Region",
				state_code: "AV"
			},
			{
				id: 2028,
				name: "Gegharkunik Province",
				state_code: "GR"
			},
			{
				id: 2033,
				name: "Kotayk Region",
				state_code: "KT"
			},
			{
				id: 2029,
				name: "Lori Region",
				state_code: "LO"
			},
			{
				id: 2031,
				name: "Shirak Region",
				state_code: "SH"
			},
			{
				id: 2027,
				name: "Syunik Province",
				state_code: "SU"
			},
			{
				id: 2032,
				name: "Tavush Region",
				state_code: "TV"
			},
			{
				id: 2025,
				name: "Vayots Dzor Region",
				state_code: "VD"
			},
			{
				id: 2030,
				name: "Yerevan",
				state_code: "ER"
			}
		]
	},
	{
		name: "Aruba",
		iso3: "ABW",
		iso2: "AW",
		numeric_code: "533",
		phone_code: "297",
		emoji: "🇦🇼",
		emojiU: "U+1F1E6 U+1F1FC",
		states: [
		]
	},
	{
		name: "Australia",
		iso3: "AUS",
		iso2: "AU",
		numeric_code: "036",
		phone_code: "61",
		emoji: "🇦🇺",
		emojiU: "U+1F1E6 U+1F1FA",
		states: [
			{
				id: 3907,
				name: "Australian Capital Territory",
				state_code: "ACT"
			},
			{
				id: 3909,
				name: "New South Wales",
				state_code: "NSW"
			},
			{
				id: 3910,
				name: "Northern Territory",
				state_code: "NT"
			},
			{
				id: 3905,
				name: "Queensland",
				state_code: "QLD"
			},
			{
				id: 3904,
				name: "South Australia",
				state_code: "SA"
			},
			{
				id: 3908,
				name: "Tasmania",
				state_code: "TAS"
			},
			{
				id: 3903,
				name: "Victoria",
				state_code: "VIC"
			},
			{
				id: 3906,
				name: "Western Australia",
				state_code: "WA"
			}
		]
	},
	{
		name: "Austria",
		iso3: "AUT",
		iso2: "AT",
		numeric_code: "040",
		phone_code: "43",
		emoji: "🇦🇹",
		emojiU: "U+1F1E6 U+1F1F9",
		states: [
			{
				id: 2062,
				name: "Burgenland",
				state_code: "1"
			},
			{
				id: 2057,
				name: "Carinthia",
				state_code: "2"
			},
			{
				id: 2065,
				name: "Lower Austria",
				state_code: "3"
			},
			{
				id: 2061,
				name: "Salzburg",
				state_code: "5"
			},
			{
				id: 2059,
				name: "Styria",
				state_code: "6"
			},
			{
				id: 2064,
				name: "Tyrol",
				state_code: "7"
			},
			{
				id: 2058,
				name: "Upper Austria",
				state_code: "4"
			},
			{
				id: 2060,
				name: "Vienna",
				state_code: "9"
			},
			{
				id: 2063,
				name: "Vorarlberg",
				state_code: "8"
			}
		]
	},
	{
		name: "Azerbaijan",
		iso3: "AZE",
		iso2: "AZ",
		numeric_code: "031",
		phone_code: "994",
		emoji: "🇦🇿",
		emojiU: "U+1F1E6 U+1F1FF",
		states: [
			{
				id: 540,
				name: "Absheron District",
				state_code: "ABS"
			},
			{
				id: 559,
				name: "Agdam District",
				state_code: "AGM"
			},
			{
				id: 553,
				name: "Agdash District",
				state_code: "AGS"
			},
			{
				id: 577,
				name: "Aghjabadi District",
				state_code: "AGC"
			},
			{
				id: 543,
				name: "Agstafa District",
				state_code: "AGA"
			},
			{
				id: 547,
				name: "Agsu District",
				state_code: "AGU"
			},
			{
				id: 528,
				name: "Astara District",
				state_code: "AST"
			},
			{
				id: 575,
				name: "Babek District",
				state_code: "BAB"
			},
			{
				id: 552,
				name: "Baku",
				state_code: "BA"
			},
			{
				id: 560,
				name: "Balakan District",
				state_code: "BAL"
			},
			{
				id: 569,
				name: "Barda District",
				state_code: "BAR"
			},
			{
				id: 554,
				name: "Beylagan District",
				state_code: "BEY"
			},
			{
				id: 532,
				name: "Bilasuvar District",
				state_code: "BIL"
			},
			{
				id: 561,
				name: "Dashkasan District",
				state_code: "DAS"
			},
			{
				id: 527,
				name: "Fizuli District",
				state_code: "FUZ"
			},
			{
				id: 585,
				name: "Ganja",
				state_code: "GA"
			},
			{
				id: 589,
				name: "Gədəbəy",
				state_code: "GAD"
			},
			{
				id: 573,
				name: "Gobustan District",
				state_code: "QOB"
			},
			{
				id: 551,
				name: "Goranboy District",
				state_code: "GOR"
			},
			{
				id: 531,
				name: "Goychay",
				state_code: "GOY"
			},
			{
				id: 574,
				name: "Goygol District",
				state_code: "GYG"
			},
			{
				id: 571,
				name: "Hajigabul District",
				state_code: "HAC"
			},
			{
				id: 544,
				name: "Imishli District",
				state_code: "IMI"
			},
			{
				id: 564,
				name: "Ismailli District",
				state_code: "ISM"
			},
			{
				id: 570,
				name: "Jabrayil District",
				state_code: "CAB"
			},
			{
				id: 578,
				name: "Jalilabad District",
				state_code: "CAL"
			},
			{
				id: 572,
				name: "Julfa District",
				state_code: "CUL"
			},
			{
				id: 525,
				name: "Kalbajar District",
				state_code: "KAL"
			},
			{
				id: 567,
				name: "Kangarli District",
				state_code: "KAN"
			},
			{
				id: 590,
				name: "Khachmaz District",
				state_code: "XAC"
			},
			{
				id: 537,
				name: "Khizi District",
				state_code: "XIZ"
			},
			{
				id: 524,
				name: "Khojali District",
				state_code: "XCI"
			},
			{
				id: 549,
				name: "Kurdamir District",
				state_code: "KUR"
			},
			{
				id: 541,
				name: "Lachin District",
				state_code: "LAC"
			},
			{
				id: 587,
				name: "Lankaran",
				state_code: "LAN"
			},
			{
				id: 558,
				name: "Lankaran District",
				state_code: "LA"
			},
			{
				id: 546,
				name: "Lerik District",
				state_code: "LER"
			},
			{
				id: 568,
				name: "Martuni",
				state_code: "XVD"
			},
			{
				id: 555,
				name: "Masally District",
				state_code: "MAS"
			},
			{
				id: 580,
				name: "Mingachevir",
				state_code: "MI"
			},
			{
				id: 562,
				name: "Nakhchivan Autonomous Republic",
				state_code: "NX"
			},
			{
				id: 530,
				name: "Neftchala District",
				state_code: "NEF"
			},
			{
				id: 556,
				name: "Oghuz District",
				state_code: "OGU"
			},
			{
				id: 534,
				name: "Ordubad District",
				state_code: "ORD"
			},
			{
				id: 542,
				name: "Qabala District",
				state_code: "QAB"
			},
			{
				id: 526,
				name: "Qakh District",
				state_code: "QAX"
			},
			{
				id: 521,
				name: "Qazakh District",
				state_code: "QAZ"
			},
			{
				id: 563,
				name: "Quba District",
				state_code: "QBA"
			},
			{
				id: 548,
				name: "Qubadli District",
				state_code: "QBI"
			},
			{
				id: 588,
				name: "Qusar District",
				state_code: "QUS"
			},
			{
				id: 557,
				name: "Saatly District",
				state_code: "SAT"
			},
			{
				id: 565,
				name: "Sabirabad District",
				state_code: "SAB"
			},
			{
				id: 522,
				name: "Sadarak District",
				state_code: "SAD"
			},
			{
				id: 545,
				name: "Salyan District",
				state_code: "SAL"
			},
			{
				id: 536,
				name: "Samukh District",
				state_code: "SMX"
			},
			{
				id: 591,
				name: "Shabran District",
				state_code: "SBN"
			},
			{
				id: 579,
				name: "Shahbuz District",
				state_code: "SAH"
			},
			{
				id: 518,
				name: "Shaki",
				state_code: "SA"
			},
			{
				id: 586,
				name: "Shaki District",
				state_code: "SAK"
			},
			{
				id: 529,
				name: "Shamakhi District",
				state_code: "SMI"
			},
			{
				id: 583,
				name: "Shamkir District",
				state_code: "SKR"
			},
			{
				id: 535,
				name: "Sharur District",
				state_code: "SAR"
			},
			{
				id: 520,
				name: "Shirvan",
				state_code: "SR"
			},
			{
				id: 592,
				name: "Shusha District",
				state_code: "SUS"
			},
			{
				id: 584,
				name: "Siazan District",
				state_code: "SIY"
			},
			{
				id: 582,
				name: "Sumqayit",
				state_code: "SM"
			},
			{
				id: 519,
				name: "Tartar District",
				state_code: "TAR"
			},
			{
				id: 533,
				name: "Tovuz District",
				state_code: "TOV"
			},
			{
				id: 539,
				name: "Ujar District",
				state_code: "UCA"
			},
			{
				id: 550,
				name: "Yardymli District",
				state_code: "YAR"
			},
			{
				id: 538,
				name: "Yevlakh",
				state_code: "YE"
			},
			{
				id: 523,
				name: "Yevlakh District",
				state_code: "YEV"
			},
			{
				id: 581,
				name: "Zangilan District",
				state_code: "ZAN"
			},
			{
				id: 566,
				name: "Zaqatala District",
				state_code: "ZAQ"
			},
			{
				id: 576,
				name: "Zardab District",
				state_code: "ZAR"
			}
		]
	},
	{
		name: "Bahamas The",
		iso3: "BHS",
		iso2: "BS",
		numeric_code: "044",
		phone_code: "+1-242",
		emoji: "🇧🇸",
		emojiU: "U+1F1E7 U+1F1F8",
		states: [
			{
				id: 3601,
				name: "Acklins",
				state_code: "AK"
			},
			{
				id: 3628,
				name: "Acklins and Crooked Islands",
				state_code: "AC"
			},
			{
				id: 3593,
				name: "Berry Islands",
				state_code: "BY"
			},
			{
				id: 3629,
				name: "Bimini",
				state_code: "BI"
			},
			{
				id: 3605,
				name: "Black Point",
				state_code: "BP"
			},
			{
				id: 3611,
				name: "Cat Island",
				state_code: "CI"
			},
			{
				id: 3603,
				name: "Central Abaco",
				state_code: "CO"
			},
			{
				id: 3631,
				name: "Central Andros",
				state_code: "CS"
			},
			{
				id: 3596,
				name: "Central Eleuthera",
				state_code: "CE"
			},
			{
				id: 3621,
				name: "Crooked Island",
				state_code: "CK"
			},
			{
				id: 3614,
				name: "East Grand Bahama",
				state_code: "EG"
			},
			{
				id: 3612,
				name: "Exuma",
				state_code: "EX"
			},
			{
				id: 3626,
				name: "Freeport",
				state_code: "FP"
			},
			{
				id: 3619,
				name: "Fresh Creek",
				state_code: "FC"
			},
			{
				id: 3597,
				name: "Governor's Harbour",
				state_code: "GH"
			},
			{
				id: 3632,
				name: "Grand Cay",
				state_code: "GC"
			},
			{
				id: 3595,
				name: "Green Turtle Cay",
				state_code: "GT"
			},
			{
				id: 3613,
				name: "Harbour Island",
				state_code: "HI"
			},
			{
				id: 3598,
				name: "High Rock",
				state_code: "HR"
			},
			{
				id: 3624,
				name: "Hope Town",
				state_code: "HT"
			},
			{
				id: 3609,
				name: "Inagua",
				state_code: "IN"
			},
			{
				id: 3618,
				name: "Kemps Bay",
				state_code: "KB"
			},
			{
				id: 3610,
				name: "Long Island",
				state_code: "LI"
			},
			{
				id: 3625,
				name: "Mangrove Cay",
				state_code: "MC"
			},
			{
				id: 3604,
				name: "Marsh Harbour",
				state_code: "MH"
			},
			{
				id: 3633,
				name: "Mayaguana District",
				state_code: "MG"
			},
			{
				id: 4881,
				name: "New Providence",
				state_code: "NP"
			},
			{
				id: 3594,
				name: "Nichollstown and Berry Islands",
				state_code: "NB"
			},
			{
				id: 3616,
				name: "North Abaco",
				state_code: "NO"
			},
			{
				id: 3617,
				name: "North Andros",
				state_code: "NS"
			},
			{
				id: 3602,
				name: "North Eleuthera",
				state_code: "NE"
			},
			{
				id: 3615,
				name: "Ragged Island",
				state_code: "RI"
			},
			{
				id: 3623,
				name: "Rock Sound",
				state_code: "RS"
			},
			{
				id: 3600,
				name: "Rum Cay District",
				state_code: "RC"
			},
			{
				id: 3620,
				name: "San Salvador and Rum Cay",
				state_code: "SR"
			},
			{
				id: 3627,
				name: "San Salvador Island",
				state_code: "SS"
			},
			{
				id: 3606,
				name: "Sandy Point",
				state_code: "SP"
			},
			{
				id: 3608,
				name: "South Abaco",
				state_code: "SO"
			},
			{
				id: 3622,
				name: "South Andros",
				state_code: "SA"
			},
			{
				id: 3607,
				name: "South Eleuthera",
				state_code: "SE"
			},
			{
				id: 3630,
				name: "Spanish Wells",
				state_code: "SW"
			},
			{
				id: 3599,
				name: "West Grand Bahama",
				state_code: "WG"
			}
		]
	},
	{
		name: "Bahrain",
		iso3: "BHR",
		iso2: "BH",
		numeric_code: "048",
		phone_code: "973",
		emoji: "🇧🇭",
		emojiU: "U+1F1E7 U+1F1ED",
		states: [
			{
				id: 1992,
				name: "Capital Governorate",
				state_code: "13"
			},
			{
				id: 1996,
				name: "Central Governorate",
				state_code: "16"
			},
			{
				id: 1995,
				name: "Muharraq Governorate",
				state_code: "15"
			},
			{
				id: 1994,
				name: "Northern Governorate",
				state_code: "17"
			},
			{
				id: 1993,
				name: "Southern Governorate",
				state_code: "14"
			}
		]
	},
	{
		name: "Bangladesh",
		iso3: "BGD",
		iso2: "BD",
		numeric_code: "050",
		phone_code: "880",
		emoji: "🇧🇩",
		emojiU: "U+1F1E7 U+1F1E9",
		states: [
			{
				id: 796,
				name: "Bagerhat District",
				state_code: "05"
			},
			{
				id: 802,
				name: "Bahadia",
				state_code: "33"
			},
			{
				id: 752,
				name: "Bandarban District",
				state_code: "01"
			},
			{
				id: 784,
				name: "Barguna District",
				state_code: "02"
			},
			{
				id: 818,
				name: "Barisal District",
				state_code: "06"
			},
			{
				id: 807,
				name: "Barisal Division",
				state_code: "A"
			},
			{
				id: 756,
				name: "Bhola District",
				state_code: "07"
			},
			{
				id: 797,
				name: "Bogra District",
				state_code: "03"
			},
			{
				id: 810,
				name: "Brahmanbaria District",
				state_code: "04"
			},
			{
				id: 768,
				name: "Chandpur District",
				state_code: "09"
			},
			{
				id: 761,
				name: "Chapai Nawabganj District",
				state_code: "45"
			},
			{
				id: 785,
				name: "Chittagong District",
				state_code: "10"
			},
			{
				id: 803,
				name: "Chittagong Division",
				state_code: "B"
			},
			{
				id: 788,
				name: "Chuadanga District",
				state_code: "12"
			},
			{
				id: 763,
				name: "Comilla District",
				state_code: "08"
			},
			{
				id: 751,
				name: "Cox's Bazar District",
				state_code: "11"
			},
			{
				id: 771,
				name: "Dhaka District",
				state_code: "13"
			},
			{
				id: 760,
				name: "Dhaka Division",
				state_code: "C"
			},
			{
				id: 783,
				name: "Dinajpur District",
				state_code: "14"
			},
			{
				id: 762,
				name: "Faridpur District",
				state_code: "15"
			},
			{
				id: 816,
				name: "Feni District",
				state_code: "16"
			},
			{
				id: 795,
				name: "Gaibandha District",
				state_code: "19"
			},
			{
				id: 798,
				name: "Gazipur District",
				state_code: "18"
			},
			{
				id: 792,
				name: "Gopalganj District",
				state_code: "17"
			},
			{
				id: 805,
				name: "Habiganj District",
				state_code: "20"
			},
			{
				id: 808,
				name: "Jamalpur District",
				state_code: "21"
			},
			{
				id: 757,
				name: "Jessore District",
				state_code: "22"
			},
			{
				id: 778,
				name: "Jhalokati District",
				state_code: "25"
			},
			{
				id: 789,
				name: "Jhenaidah District",
				state_code: "23"
			},
			{
				id: 806,
				name: "Joypurhat District",
				state_code: "24"
			},
			{
				id: 786,
				name: "Khagrachari District",
				state_code: "29"
			},
			{
				id: 811,
				name: "Khulna District",
				state_code: "27"
			},
			{
				id: 775,
				name: "Khulna Division",
				state_code: "D"
			},
			{
				id: 779,
				name: "Kishoreganj District",
				state_code: "26"
			},
			{
				id: 793,
				name: "Kurigram District",
				state_code: "28"
			},
			{
				id: 774,
				name: "Kushtia District",
				state_code: "30"
			},
			{
				id: 819,
				name: "Lakshmipur District",
				state_code: "31"
			},
			{
				id: 780,
				name: "Lalmonirhat District",
				state_code: "32"
			},
			{
				id: 817,
				name: "Madaripur District",
				state_code: "36"
			},
			{
				id: 776,
				name: "Meherpur District",
				state_code: "39"
			},
			{
				id: 794,
				name: "Moulvibazar District",
				state_code: "38"
			},
			{
				id: 790,
				name: "Munshiganj District",
				state_code: "35"
			},
			{
				id: 766,
				name: "Mymensingh District",
				state_code: "34"
			},
			{
				id: 758,
				name: "Mymensingh Division",
				state_code: "H"
			},
			{
				id: 814,
				name: "Naogaon District",
				state_code: "48"
			},
			{
				id: 769,
				name: "Narail District",
				state_code: "43"
			},
			{
				id: 770,
				name: "Narayanganj District",
				state_code: "40"
			},
			{
				id: 787,
				name: "Natore District",
				state_code: "44"
			},
			{
				id: 764,
				name: "Netrokona District",
				state_code: "41"
			},
			{
				id: 772,
				name: "Nilphamari District",
				state_code: "46"
			},
			{
				id: 815,
				name: "Noakhali District",
				state_code: "47"
			},
			{
				id: 754,
				name: "Pabna District",
				state_code: "49"
			},
			{
				id: 800,
				name: "Panchagarh District",
				state_code: "52"
			},
			{
				id: 777,
				name: "Patuakhali District",
				state_code: "51"
			},
			{
				id: 791,
				name: "Pirojpur District",
				state_code: "50"
			},
			{
				id: 773,
				name: "Rajbari District",
				state_code: "53"
			},
			{
				id: 813,
				name: "Rajshahi District",
				state_code: "54"
			},
			{
				id: 753,
				name: "Rajshahi Division",
				state_code: "E"
			},
			{
				id: 809,
				name: "Rangamati Hill District",
				state_code: "56"
			},
			{
				id: 759,
				name: "Rangpur District",
				state_code: "55"
			},
			{
				id: 750,
				name: "Rangpur Division",
				state_code: "F"
			},
			{
				id: 799,
				name: "Satkhira District",
				state_code: "58"
			},
			{
				id: 801,
				name: "Shariatpur District",
				state_code: "62"
			},
			{
				id: 755,
				name: "Sherpur District",
				state_code: "57"
			},
			{
				id: 781,
				name: "Sirajganj District",
				state_code: "59"
			},
			{
				id: 812,
				name: "Sunamganj District",
				state_code: "61"
			},
			{
				id: 767,
				name: "Sylhet District",
				state_code: "60"
			},
			{
				id: 765,
				name: "Sylhet Division",
				state_code: "G"
			},
			{
				id: 782,
				name: "Tangail District",
				state_code: "63"
			},
			{
				id: 804,
				name: "Thakurgaon District",
				state_code: "64"
			}
		]
	},
	{
		name: "Barbados",
		iso3: "BRB",
		iso2: "BB",
		numeric_code: "052",
		phone_code: "+1-246",
		emoji: "🇧🇧",
		emojiU: "U+1F1E7 U+1F1E7",
		states: [
			{
				id: 1228,
				name: "Christ Church",
				state_code: "01"
			},
			{
				id: 1229,
				name: "Saint Andrew",
				state_code: "02"
			},
			{
				id: 1226,
				name: "Saint George",
				state_code: "03"
			},
			{
				id: 1224,
				name: "Saint James",
				state_code: "04"
			},
			{
				id: 1227,
				name: "Saint John",
				state_code: "05"
			},
			{
				id: 1223,
				name: "Saint Joseph",
				state_code: "06"
			},
			{
				id: 1221,
				name: "Saint Lucy",
				state_code: "07"
			},
			{
				id: 1230,
				name: "Saint Michael",
				state_code: "08"
			},
			{
				id: 1222,
				name: "Saint Peter",
				state_code: "09"
			},
			{
				id: 1220,
				name: "Saint Philip",
				state_code: "10"
			},
			{
				id: 1225,
				name: "Saint Thomas",
				state_code: "11"
			}
		]
	},
	{
		name: "Belarus",
		iso3: "BLR",
		iso2: "BY",
		numeric_code: "112",
		phone_code: "375",
		emoji: "🇧🇾",
		emojiU: "U+1F1E7 U+1F1FE",
		states: [
			{
				id: 2959,
				name: "Brest Region",
				state_code: "BR"
			},
			{
				id: 2955,
				name: "Gomel Region",
				state_code: "HO"
			},
			{
				id: 2956,
				name: "Grodno Region",
				state_code: "HR"
			},
			{
				id: 2958,
				name: "Minsk",
				state_code: "HM"
			},
			{
				id: 2957,
				name: "Minsk Region",
				state_code: "MI"
			},
			{
				id: 2954,
				name: "Mogilev Region",
				state_code: "MA"
			},
			{
				id: 2960,
				name: "Vitebsk Region",
				state_code: "VI"
			}
		]
	},
	{
		name: "Belgium",
		iso3: "BEL",
		iso2: "BE",
		numeric_code: "056",
		phone_code: "32",
		emoji: "🇧🇪",
		emojiU: "U+1F1E7 U+1F1EA",
		states: [
			{
				id: 1381,
				name: "Antwerp",
				state_code: "VAN"
			},
			{
				id: 1376,
				name: "Brussels-Capital Region",
				state_code: "BRU"
			},
			{
				id: 1377,
				name: "East Flanders",
				state_code: "VOV"
			},
			{
				id: 1373,
				name: "Flanders",
				state_code: "VLG"
			},
			{
				id: 1374,
				name: "Flemish Brabant",
				state_code: "VBR"
			},
			{
				id: 1375,
				name: "Hainaut",
				state_code: "WHT"
			},
			{
				id: 1384,
				name: "Liège",
				state_code: "WLG"
			},
			{
				id: 1372,
				name: "Limburg",
				state_code: "VLI"
			},
			{
				id: 1379,
				name: "Luxembourg",
				state_code: "WLX"
			},
			{
				id: 1378,
				name: "Namur",
				state_code: "WNA"
			},
			{
				id: 1380,
				name: "Wallonia",
				state_code: "WAL"
			},
			{
				id: 1382,
				name: "Walloon Brabant",
				state_code: "WBR"
			},
			{
				id: 1383,
				name: "West Flanders",
				state_code: "VWV"
			}
		]
	},
	{
		name: "Belize",
		iso3: "BLZ",
		iso2: "BZ",
		numeric_code: "084",
		phone_code: "501",
		emoji: "🇧🇿",
		emojiU: "U+1F1E7 U+1F1FF",
		states: [
			{
				id: 264,
				name: "Belize District",
				state_code: "BZ"
			},
			{
				id: 269,
				name: "Cayo District",
				state_code: "CY"
			},
			{
				id: 266,
				name: "Corozal District",
				state_code: "CZL"
			},
			{
				id: 268,
				name: "Orange Walk District",
				state_code: "OW"
			},
			{
				id: 265,
				name: "Stann Creek District",
				state_code: "SC"
			},
			{
				id: 267,
				name: "Toledo District",
				state_code: "TOL"
			}
		]
	},
	{
		name: "Benin",
		iso3: "BEN",
		iso2: "BJ",
		numeric_code: "204",
		phone_code: "229",
		emoji: "🇧🇯",
		emojiU: "U+1F1E7 U+1F1EF",
		states: [
			{
				id: 3077,
				name: "Alibori Department",
				state_code: "AL"
			},
			{
				id: 3076,
				name: "Atakora Department",
				state_code: "AK"
			},
			{
				id: 3079,
				name: "Atlantique Department",
				state_code: "AQ"
			},
			{
				id: 3078,
				name: "Borgou Department",
				state_code: "BO"
			},
			{
				id: 3070,
				name: "Collines Department",
				state_code: "CO"
			},
			{
				id: 3072,
				name: "Donga Department",
				state_code: "DO"
			},
			{
				id: 3071,
				name: "Kouffo Department",
				state_code: "KO"
			},
			{
				id: 3081,
				name: "Littoral Department",
				state_code: "LI"
			},
			{
				id: 3075,
				name: "Mono Department",
				state_code: "MO"
			},
			{
				id: 3080,
				name: "Ouémé Department",
				state_code: "OU"
			},
			{
				id: 3074,
				name: "Plateau Department",
				state_code: "PL"
			},
			{
				id: 3073,
				name: "Zou Department",
				state_code: "ZO"
			}
		]
	},
	{
		name: "Bermuda",
		iso3: "BMU",
		iso2: "BM",
		numeric_code: "060",
		phone_code: "+1-441",
		emoji: "🇧🇲",
		emojiU: "U+1F1E7 U+1F1F2",
		states: [
			{
				id: 4860,
				name: "Devonshire Parish",
				state_code: "DEV"
			},
			{
				id: 4862,
				name: "Hamilton Municipality",
				state_code: "HAM"
			},
			{
				id: 4861,
				name: "Hamilton Parish",
				state_code: "HA"
			},
			{
				id: 4863,
				name: "Paget Parish",
				state_code: "PAG"
			},
			{
				id: 4864,
				name: "Pembroke Parish",
				state_code: "PEM"
			},
			{
				id: 4865,
				name: "Saint George's Municipality",
				state_code: "SG"
			},
			{
				id: 4866,
				name: "Saint George's Parish",
				state_code: "SGE"
			},
			{
				id: 4867,
				name: "Sandys Parish",
				state_code: "SAN"
			},
			{
				id: 4868,
				name: "Smith's Parish,",
				state_code: "SMI"
			},
			{
				id: 4869,
				name: "Southampton Parish",
				state_code: "SOU"
			},
			{
				id: 4870,
				name: "Warwick Parish",
				state_code: "WAR"
			}
		]
	},
	{
		name: "Bhutan",
		iso3: "BTN",
		iso2: "BT",
		numeric_code: "064",
		phone_code: "975",
		emoji: "🇧🇹",
		emojiU: "U+1F1E7 U+1F1F9",
		states: [
			{
				id: 240,
				name: "Bumthang District",
				state_code: "33"
			},
			{
				id: 239,
				name: "Chukha District",
				state_code: "12"
			},
			{
				id: 238,
				name: "Dagana District",
				state_code: "22"
			},
			{
				id: 229,
				name: "Gasa District",
				state_code: "GA"
			},
			{
				id: 232,
				name: "Haa District",
				state_code: "13"
			},
			{
				id: 234,
				name: "Lhuntse District",
				state_code: "44"
			},
			{
				id: 242,
				name: "Mongar District",
				state_code: "42"
			},
			{
				id: 237,
				name: "Paro District",
				state_code: "11"
			},
			{
				id: 244,
				name: "Pemagatshel District",
				state_code: "43"
			},
			{
				id: 235,
				name: "Punakha District",
				state_code: "23"
			},
			{
				id: 243,
				name: "Samdrup Jongkhar District",
				state_code: "45"
			},
			{
				id: 246,
				name: "Samtse District",
				state_code: "14"
			},
			{
				id: 247,
				name: "Sarpang District",
				state_code: "31"
			},
			{
				id: 241,
				name: "Thimphu District",
				state_code: "15"
			},
			{
				id: 236,
				name: "Trashigang District",
				state_code: "41"
			},
			{
				id: 245,
				name: "Trongsa District",
				state_code: "32"
			},
			{
				id: 230,
				name: "Tsirang District",
				state_code: "21"
			},
			{
				id: 231,
				name: "Wangdue Phodrang District",
				state_code: "24"
			},
			{
				id: 233,
				name: "Zhemgang District",
				state_code: "34"
			}
		]
	},
	{
		name: "Bolivia",
		iso3: "BOL",
		iso2: "BO",
		numeric_code: "068",
		phone_code: "591",
		emoji: "🇧🇴",
		emojiU: "U+1F1E7 U+1F1F4",
		states: [
			{
				id: 3375,
				name: "Beni Department",
				state_code: "B"
			},
			{
				id: 3382,
				name: "Chuquisaca Department",
				state_code: "H"
			},
			{
				id: 3381,
				name: "Cochabamba Department",
				state_code: "C"
			},
			{
				id: 3380,
				name: "La Paz Department",
				state_code: "L"
			},
			{
				id: 3376,
				name: "Oruro Department",
				state_code: "O"
			},
			{
				id: 3379,
				name: "Pando Department",
				state_code: "N"
			},
			{
				id: 3383,
				name: "Potosí Department",
				state_code: "P"
			},
			{
				id: 3377,
				name: "Santa Cruz Department",
				state_code: "S"
			},
			{
				id: 3378,
				name: "Tarija Department",
				state_code: "T"
			}
		]
	},
	{
		name: "Bonaire, Sint Eustatius and Saba",
		iso3: "BES",
		iso2: "BQ",
		numeric_code: "535",
		phone_code: "599",
		emoji: "🇧🇶",
		emojiU: "U+1F1E7 U+1F1F6",
		states: [
		]
	},
	{
		name: "Bosnia and Herzegovina",
		iso3: "BIH",
		iso2: "BA",
		numeric_code: "070",
		phone_code: "387",
		emoji: "🇧🇦",
		emojiU: "U+1F1E7 U+1F1E6",
		states: [
			{
				id: 472,
				name: "Bosnian Podrinje Canton",
				state_code: "05"
			},
			{
				id: 460,
				name: "Brčko District",
				state_code: "BRC"
			},
			{
				id: 471,
				name: "Canton 10",
				state_code: "10"
			},
			{
				id: 462,
				name: "Central Bosnia Canton",
				state_code: "06"
			},
			{
				id: 467,
				name: "Federation of Bosnia and Herzegovina",
				state_code: "BIH"
			},
			{
				id: 463,
				name: "Herzegovina-Neretva Canton",
				state_code: "07"
			},
			{
				id: 464,
				name: "Posavina Canton",
				state_code: "02"
			},
			{
				id: 470,
				name: "Republika Srpska",
				state_code: "SRP"
			},
			{
				id: 466,
				name: "Sarajevo Canton",
				state_code: "09"
			},
			{
				id: 461,
				name: "Tuzla Canton",
				state_code: "03"
			},
			{
				id: 465,
				name: "Una-Sana Canton",
				state_code: "01"
			},
			{
				id: 469,
				name: "West Herzegovina Canton",
				state_code: "08"
			},
			{
				id: 468,
				name: "Zenica-Doboj Canton",
				state_code: "04"
			}
		]
	},
	{
		name: "Botswana",
		iso3: "BWA",
		iso2: "BW",
		numeric_code: "072",
		phone_code: "267",
		emoji: "🇧🇼",
		emojiU: "U+1F1E7 U+1F1FC",
		states: [
			{
				id: 3067,
				name: "Central District",
				state_code: "CE"
			},
			{
				id: 3061,
				name: "Ghanzi District",
				state_code: "GH"
			},
			{
				id: 3066,
				name: "Kgalagadi District",
				state_code: "KG"
			},
			{
				id: 3062,
				name: "Kgatleng District",
				state_code: "KL"
			},
			{
				id: 3069,
				name: "Kweneng District",
				state_code: "KW"
			},
			{
				id: 3060,
				name: "Ngamiland",
				state_code: "NG"
			},
			{
				id: 3068,
				name: "North-East District",
				state_code: "NE"
			},
			{
				id: 3065,
				name: "North-West District",
				state_code: "NW"
			},
			{
				id: 3064,
				name: "South-East District",
				state_code: "SE"
			},
			{
				id: 3063,
				name: "Southern District",
				state_code: "SO"
			}
		]
	},
	{
		name: "Bouvet Island",
		iso3: "BVT",
		iso2: "BV",
		numeric_code: "074",
		phone_code: "0055",
		emoji: "🇧🇻",
		emojiU: "U+1F1E7 U+1F1FB",
		states: [
		]
	},
	{
		name: "Brazil",
		iso3: "BRA",
		iso2: "BR",
		numeric_code: "076",
		phone_code: "55",
		emoji: "🇧🇷",
		emojiU: "U+1F1E7 U+1F1F7",
		states: [
			{
				id: 2012,
				name: "Acre",
				state_code: "AC"
			},
			{
				id: 2007,
				name: "Alagoas",
				state_code: "AL"
			},
			{
				id: 1999,
				name: "Amapá",
				state_code: "AP"
			},
			{
				id: 2004,
				name: "Amazonas",
				state_code: "AM"
			},
			{
				id: 2002,
				name: "Bahia",
				state_code: "BA"
			},
			{
				id: 2016,
				name: "Ceará",
				state_code: "CE"
			},
			{
				id: 2017,
				name: "Distrito Federal",
				state_code: "DF"
			},
			{
				id: 2018,
				name: "Espírito Santo",
				state_code: "ES"
			},
			{
				id: 2000,
				name: "Goiás",
				state_code: "GO"
			},
			{
				id: 2015,
				name: "Maranhão",
				state_code: "MA"
			},
			{
				id: 2011,
				name: "Mato Grosso",
				state_code: "MT"
			},
			{
				id: 2010,
				name: "Mato Grosso do Sul",
				state_code: "MS"
			},
			{
				id: 1998,
				name: "Minas Gerais",
				state_code: "MG"
			},
			{
				id: 2009,
				name: "Pará",
				state_code: "PA"
			},
			{
				id: 2005,
				name: "Paraíba",
				state_code: "PB"
			},
			{
				id: 2022,
				name: "Paraná",
				state_code: "PR"
			},
			{
				id: 2006,
				name: "Pernambuco",
				state_code: "PE"
			},
			{
				id: 2008,
				name: "Piauí",
				state_code: "PI"
			},
			{
				id: 1997,
				name: "Rio de Janeiro",
				state_code: "RJ"
			},
			{
				id: 2019,
				name: "Rio Grande do Norte",
				state_code: "RN"
			},
			{
				id: 2001,
				name: "Rio Grande do Sul",
				state_code: "RS"
			},
			{
				id: 2013,
				name: "Rondônia",
				state_code: "RO"
			},
			{
				id: 4858,
				name: "Roraima",
				state_code: "RR"
			},
			{
				id: 2014,
				name: "Santa Catarina",
				state_code: "SC"
			},
			{
				id: 2021,
				name: "São Paulo",
				state_code: "SP"
			},
			{
				id: 2003,
				name: "Sergipe",
				state_code: "SE"
			},
			{
				id: 2020,
				name: "Tocantins",
				state_code: "TO"
			}
		]
	},
	{
		name: "British Indian Ocean Territory",
		iso3: "IOT",
		iso2: "IO",
		numeric_code: "086",
		phone_code: "246",
		emoji: "🇮🇴",
		emojiU: "U+1F1EE U+1F1F4",
		states: [
		]
	},
	{
		name: "Brunei",
		iso3: "BRN",
		iso2: "BN",
		numeric_code: "096",
		phone_code: "673",
		emoji: "🇧🇳",
		emojiU: "U+1F1E7 U+1F1F3",
		states: [
			{
				id: 1217,
				name: "Belait District",
				state_code: "BE"
			},
			{
				id: 1216,
				name: "Brunei-Muara District",
				state_code: "BM"
			},
			{
				id: 1218,
				name: "Temburong District",
				state_code: "TE"
			},
			{
				id: 1219,
				name: "Tutong District",
				state_code: "TU"
			}
		]
	},
	{
		name: "Bulgaria",
		iso3: "BGR",
		iso2: "BG",
		numeric_code: "100",
		phone_code: "359",
		emoji: "🇧🇬",
		emojiU: "U+1F1E7 U+1F1EC",
		states: [
			{
				id: 4699,
				name: "Blagoevgrad Province",
				state_code: "01"
			},
			{
				id: 4715,
				name: "Burgas Province",
				state_code: "02"
			},
			{
				id: 4718,
				name: "Dobrich Province",
				state_code: "08"
			},
			{
				id: 4693,
				name: "Gabrovo Province",
				state_code: "07"
			},
			{
				id: 4704,
				name: "Haskovo Province",
				state_code: "26"
			},
			{
				id: 4702,
				name: "Kardzhali Province",
				state_code: "09"
			},
			{
				id: 4703,
				name: "Kyustendil Province",
				state_code: "10"
			},
			{
				id: 4710,
				name: "Lovech Province",
				state_code: "11"
			},
			{
				id: 4696,
				name: "Montana Province",
				state_code: "12"
			},
			{
				id: 4712,
				name: "Pazardzhik Province",
				state_code: "13"
			},
			{
				id: 4695,
				name: "Pernik Province",
				state_code: "14"
			},
			{
				id: 4706,
				name: "Pleven Province",
				state_code: "15"
			},
			{
				id: 4701,
				name: "Plovdiv Province",
				state_code: "16"
			},
			{
				id: 4698,
				name: "Razgrad Province",
				state_code: "17"
			},
			{
				id: 4713,
				name: "Ruse Province",
				state_code: "18"
			},
			{
				id: 4882,
				name: "Shumen",
				state_code: "27"
			},
			{
				id: 4708,
				name: "Silistra Province",
				state_code: "19"
			},
			{
				id: 4700,
				name: "Sliven Province",
				state_code: "20"
			},
			{
				id: 4694,
				name: "Smolyan Province",
				state_code: "21"
			},
			{
				id: 4705,
				name: "Sofia City Province",
				state_code: "22"
			},
			{
				id: 4719,
				name: "Sofia Province",
				state_code: "23"
			},
			{
				id: 4707,
				name: "Stara Zagora Province",
				state_code: "24"
			},
			{
				id: 4714,
				name: "Targovishte Province",
				state_code: "25"
			},
			{
				id: 4717,
				name: "Varna Province",
				state_code: "03"
			},
			{
				id: 4709,
				name: "Veliko Tarnovo Province",
				state_code: "04"
			},
			{
				id: 4697,
				name: "Vidin Province",
				state_code: "05"
			},
			{
				id: 4711,
				name: "Vratsa Province",
				state_code: "06"
			},
			{
				id: 4716,
				name: "Yambol Province",
				state_code: "28"
			}
		]
	},
	{
		name: "Burkina Faso",
		iso3: "BFA",
		iso2: "BF",
		numeric_code: "854",
		phone_code: "226",
		emoji: "🇧🇫",
		emojiU: "U+1F1E7 U+1F1EB",
		states: [
			{
				id: 3160,
				name: "Balé Province",
				state_code: "BAL"
			},
			{
				id: 3155,
				name: "Bam Province",
				state_code: "BAM"
			},
			{
				id: 3120,
				name: "Banwa Province",
				state_code: "BAN"
			},
			{
				id: 3152,
				name: "Bazèga Province",
				state_code: "BAZ"
			},
			{
				id: 3138,
				name: "Boucle du Mouhoun Region",
				state_code: "01"
			},
			{
				id: 3121,
				name: "Bougouriba Province",
				state_code: "BGR"
			},
			{
				id: 3131,
				name: "Boulgou",
				state_code: "BLG"
			},
			{
				id: 3153,
				name: "Cascades Region",
				state_code: "02"
			},
			{
				id: 3136,
				name: "Centre",
				state_code: "03"
			},
			{
				id: 3162,
				name: "Centre-Est Region",
				state_code: "04"
			},
			{
				id: 3127,
				name: "Centre-Nord Region",
				state_code: "05"
			},
			{
				id: 3115,
				name: "Centre-Ouest Region",
				state_code: "06"
			},
			{
				id: 3149,
				name: "Centre-Sud Region",
				state_code: "07"
			},
			{
				id: 3167,
				name: "Comoé Province",
				state_code: "COM"
			},
			{
				id: 3158,
				name: "Est Region",
				state_code: "08"
			},
			{
				id: 3148,
				name: "Ganzourgou Province",
				state_code: "GAN"
			},
			{
				id: 3122,
				name: "Gnagna Province",
				state_code: "GNA"
			},
			{
				id: 3143,
				name: "Gourma Province",
				state_code: "GOU"
			},
			{
				id: 3165,
				name: "Hauts-Bassins Region",
				state_code: "09"
			},
			{
				id: 3129,
				name: "Houet Province",
				state_code: "HOU"
			},
			{
				id: 3135,
				name: "Ioba Province",
				state_code: "IOB"
			},
			{
				id: 3168,
				name: "Kadiogo Province",
				state_code: "KAD"
			},
			{
				id: 3112,
				name: "Kénédougou Province",
				state_code: "KEN"
			},
			{
				id: 3132,
				name: "Komondjari Province",
				state_code: "KMD"
			},
			{
				id: 3157,
				name: "Kompienga Province",
				state_code: "KMP"
			},
			{
				id: 3146,
				name: "Kossi Province",
				state_code: "KOS"
			},
			{
				id: 3133,
				name: "Koulpélogo Province",
				state_code: "KOP"
			},
			{
				id: 3161,
				name: "Kouritenga Province",
				state_code: "KOT"
			},
			{
				id: 3147,
				name: "Kourwéogo Province",
				state_code: "KOW"
			},
			{
				id: 3159,
				name: "Léraba Province",
				state_code: "LER"
			},
			{
				id: 3151,
				name: "Loroum Province",
				state_code: "LOR"
			},
			{
				id: 3123,
				name: "Mouhoun",
				state_code: "MOU"
			},
			{
				id: 3116,
				name: "Nahouri Province",
				state_code: "NAO"
			},
			{
				id: 3113,
				name: "Namentenga Province",
				state_code: "NAM"
			},
			{
				id: 3142,
				name: "Nayala Province",
				state_code: "NAY"
			},
			{
				id: 3164,
				name: "Nord Region, Burkina Faso",
				state_code: "10"
			},
			{
				id: 3156,
				name: "Noumbiel Province",
				state_code: "NOU"
			},
			{
				id: 3141,
				name: "Oubritenga Province",
				state_code: "OUB"
			},
			{
				id: 3144,
				name: "Oudalan Province",
				state_code: "OUD"
			},
			{
				id: 3117,
				name: "Passoré Province",
				state_code: "PAS"
			},
			{
				id: 3125,
				name: "Plateau-Central Region",
				state_code: "11"
			},
			{
				id: 3163,
				name: "Poni Province",
				state_code: "PON"
			},
			{
				id: 3114,
				name: "Sahel Region",
				state_code: "12"
			},
			{
				id: 3154,
				name: "Sanguié Province",
				state_code: "SNG"
			},
			{
				id: 3126,
				name: "Sanmatenga Province",
				state_code: "SMT"
			},
			{
				id: 3139,
				name: "Séno Province",
				state_code: "SEN"
			},
			{
				id: 3119,
				name: "Sissili Province",
				state_code: "SIS"
			},
			{
				id: 3166,
				name: "Soum Province",
				state_code: "SOM"
			},
			{
				id: 3137,
				name: "Sourou Province",
				state_code: "SOR"
			},
			{
				id: 3140,
				name: "Sud-Ouest Region",
				state_code: "13"
			},
			{
				id: 3128,
				name: "Tapoa Province",
				state_code: "TAP"
			},
			{
				id: 3134,
				name: "Tuy Province",
				state_code: "TUI"
			},
			{
				id: 3124,
				name: "Yagha Province",
				state_code: "YAG"
			},
			{
				id: 3150,
				name: "Yatenga Province",
				state_code: "YAT"
			},
			{
				id: 3145,
				name: "Ziro Province",
				state_code: "ZIR"
			},
			{
				id: 3130,
				name: "Zondoma Province",
				state_code: "ZON"
			},
			{
				id: 3118,
				name: "Zoundwéogo Province",
				state_code: "ZOU"
			}
		]
	},
	{
		name: "Burundi",
		iso3: "BDI",
		iso2: "BI",
		numeric_code: "108",
		phone_code: "257",
		emoji: "🇧🇮",
		emojiU: "U+1F1E7 U+1F1EE",
		states: [
			{
				id: 3196,
				name: "Bubanza Province",
				state_code: "BB"
			},
			{
				id: 3198,
				name: "Bujumbura Mairie Province",
				state_code: "BM"
			},
			{
				id: 3200,
				name: "Bujumbura Rural Province",
				state_code: "BL"
			},
			{
				id: 3202,
				name: "Bururi Province",
				state_code: "BR"
			},
			{
				id: 3201,
				name: "Cankuzo Province",
				state_code: "CA"
			},
			{
				id: 3190,
				name: "Cibitoke Province",
				state_code: "CI"
			},
			{
				id: 3197,
				name: "Gitega Province",
				state_code: "GI"
			},
			{
				id: 3194,
				name: "Karuzi Province",
				state_code: "KR"
			},
			{
				id: 3192,
				name: "Kayanza Province",
				state_code: "KY"
			},
			{
				id: 3195,
				name: "Kirundo Province",
				state_code: "KI"
			},
			{
				id: 3188,
				name: "Makamba Province",
				state_code: "MA"
			},
			{
				id: 3193,
				name: "Muramvya Province",
				state_code: "MU"
			},
			{
				id: 3186,
				name: "Muyinga Province",
				state_code: "MY"
			},
			{
				id: 3187,
				name: "Mwaro Province",
				state_code: "MW"
			},
			{
				id: 3199,
				name: "Ngozi Province",
				state_code: "NG"
			},
			{
				id: 3185,
				name: "Rumonge Province",
				state_code: "RM"
			},
			{
				id: 3189,
				name: "Rutana Province",
				state_code: "RT"
			},
			{
				id: 3191,
				name: "Ruyigi Province",
				state_code: "RY"
			}
		]
	},
	{
		name: "Cambodia",
		iso3: "KHM",
		iso2: "KH",
		numeric_code: "116",
		phone_code: "855",
		emoji: "🇰🇭",
		emojiU: "U+1F1F0 U+1F1ED",
		states: [
			{
				id: 3984,
				name: "Banteay Meanchey Province",
				state_code: "1"
			},
			{
				id: 3976,
				name: "Battambang Province",
				state_code: "2"
			},
			{
				id: 3991,
				name: "Kampong Cham Province",
				state_code: "3"
			},
			{
				id: 3979,
				name: "Kampong Chhnang Province",
				state_code: "4"
			},
			{
				id: 3988,
				name: "Kampong Speu Province",
				state_code: "5"
			},
			{
				id: 3981,
				name: "Kampot Province",
				state_code: "7"
			},
			{
				id: 3983,
				name: "Kandal Province",
				state_code: "8"
			},
			{
				id: 3978,
				name: "Kep Province",
				state_code: "23"
			},
			{
				id: 3982,
				name: "Koh Kong Province",
				state_code: "9"
			},
			{
				id: 3986,
				name: "Kratié Province",
				state_code: "10"
			},
			{
				id: 3985,
				name: "Mondulkiri Province",
				state_code: "11"
			},
			{
				id: 3987,
				name: "Oddar Meanchey Province",
				state_code: "22"
			},
			{
				id: 3980,
				name: "Pailin Province",
				state_code: "24"
			},
			{
				id: 3994,
				name: "Phnom Penh",
				state_code: "12"
			},
			{
				id: 3973,
				name: "Preah Vihear Province",
				state_code: "13"
			},
			{
				id: 3974,
				name: "Prey Veng Province",
				state_code: "14"
			},
			{
				id: 3977,
				name: "Pursat Province",
				state_code: "15"
			},
			{
				id: 3990,
				name: "Ratanakiri Province",
				state_code: "16"
			},
			{
				id: 3992,
				name: "Siem Reap Province",
				state_code: "17"
			},
			{
				id: 3989,
				name: "Sihanoukville Province",
				state_code: "18"
			},
			{
				id: 3993,
				name: "Stung Treng Province",
				state_code: "19"
			},
			{
				id: 3972,
				name: "Svay Rieng Province",
				state_code: "20"
			},
			{
				id: 3975,
				name: "Takéo Province",
				state_code: "21"
			}
		]
	},
	{
		name: "Cameroon",
		iso3: "CMR",
		iso2: "CM",
		numeric_code: "120",
		phone_code: "237",
		emoji: "🇨🇲",
		emojiU: "U+1F1E8 U+1F1F2",
		states: [
			{
				id: 2663,
				name: "Adamawa",
				state_code: "AD"
			},
			{
				id: 2660,
				name: "Centre",
				state_code: "CE"
			},
			{
				id: 2661,
				name: "East",
				state_code: "ES"
			},
			{
				id: 2656,
				name: "Far North",
				state_code: "EN"
			},
			{
				id: 2662,
				name: "Littoral",
				state_code: "LT"
			},
			{
				id: 2665,
				name: "North",
				state_code: "NO"
			},
			{
				id: 2657,
				name: "Northwest",
				state_code: "NW"
			},
			{
				id: 2659,
				name: "South",
				state_code: "SU"
			},
			{
				id: 2658,
				name: "Southwest",
				state_code: "SW"
			},
			{
				id: 2664,
				name: "West",
				state_code: "OU"
			}
		]
	},
	{
		name: "Canada",
		iso3: "CAN",
		iso2: "CA",
		numeric_code: "124",
		phone_code: "1",
		emoji: "🇨🇦",
		emojiU: "U+1F1E8 U+1F1E6",
		states: [
			{
				id: 872,
				name: "Alberta",
				state_code: "AB"
			},
			{
				id: 875,
				name: "British Columbia",
				state_code: "BC"
			},
			{
				id: 867,
				name: "Manitoba",
				state_code: "MB"
			},
			{
				id: 868,
				name: "New Brunswick",
				state_code: "NB"
			},
			{
				id: 877,
				name: "Newfoundland and Labrador",
				state_code: "NL"
			},
			{
				id: 878,
				name: "Northwest Territories",
				state_code: "NT"
			},
			{
				id: 874,
				name: "Nova Scotia",
				state_code: "NS"
			},
			{
				id: 876,
				name: "Nunavut",
				state_code: "NU"
			},
			{
				id: 866,
				name: "Ontario",
				state_code: "ON"
			},
			{
				id: 871,
				name: "Prince Edward Island",
				state_code: "PE"
			},
			{
				id: 873,
				name: "Quebec",
				state_code: "QC"
			},
			{
				id: 870,
				name: "Saskatchewan",
				state_code: "SK"
			},
			{
				id: 869,
				name: "Yukon",
				state_code: "YT"
			}
		]
	},
	{
		name: "Cape Verde",
		iso3: "CPV",
		iso2: "CV",
		numeric_code: "132",
		phone_code: "238",
		emoji: "🇨🇻",
		emojiU: "U+1F1E8 U+1F1FB",
		states: [
			{
				id: 2994,
				name: "Barlavento Islands",
				state_code: "B"
			},
			{
				id: 2999,
				name: "Boa Vista",
				state_code: "BV"
			},
			{
				id: 2996,
				name: "Brava",
				state_code: "BR"
			},
			{
				id: 2991,
				name: "Maio Municipality",
				state_code: "MA"
			},
			{
				id: 2987,
				name: "Mosteiros",
				state_code: "MO"
			},
			{
				id: 2997,
				name: "Paul",
				state_code: "PA"
			},
			{
				id: 2989,
				name: "Porto Novo",
				state_code: "PN"
			},
			{
				id: 2988,
				name: "Praia",
				state_code: "PR"
			},
			{
				id: 2982,
				name: "Ribeira Brava Municipality",
				state_code: "RB"
			},
			{
				id: 3002,
				name: "Ribeira Grande",
				state_code: "RG"
			},
			{
				id: 2984,
				name: "Ribeira Grande de Santiago",
				state_code: "RS"
			},
			{
				id: 2998,
				name: "Sal",
				state_code: "SL"
			},
			{
				id: 2985,
				name: "Santa Catarina",
				state_code: "CA"
			},
			{
				id: 2995,
				name: "Santa Catarina do Fogo",
				state_code: "CF"
			},
			{
				id: 3004,
				name: "Santa Cruz",
				state_code: "CR"
			},
			{
				id: 2986,
				name: "São Domingos",
				state_code: "SD"
			},
			{
				id: 3000,
				name: "São Filipe",
				state_code: "SF"
			},
			{
				id: 2993,
				name: "São Lourenço dos Órgãos",
				state_code: "SO"
			},
			{
				id: 2990,
				name: "São Miguel",
				state_code: "SM"
			},
			{
				id: 3001,
				name: "São Vicente",
				state_code: "SV"
			},
			{
				id: 2992,
				name: "Sotavento Islands",
				state_code: "S"
			},
			{
				id: 2983,
				name: "Tarrafal",
				state_code: "TA"
			},
			{
				id: 3003,
				name: "Tarrafal de São Nicolau",
				state_code: "TS"
			}
		]
	},
	{
		name: "Cayman Islands",
		iso3: "CYM",
		iso2: "KY",
		numeric_code: "136",
		phone_code: "+1-345",
		emoji: "🇰🇾",
		emojiU: "U+1F1F0 U+1F1FE",
		states: [
		]
	},
	{
		name: "Central African Republic",
		iso3: "CAF",
		iso2: "CF",
		numeric_code: "140",
		phone_code: "236",
		emoji: "🇨🇫",
		emojiU: "U+1F1E8 U+1F1EB",
		states: [
			{
				id: 1259,
				name: "Bamingui-Bangoran Prefecture",
				state_code: "BB"
			},
			{
				id: 1262,
				name: "Bangui",
				state_code: "BGF"
			},
			{
				id: 1264,
				name: "Basse-Kotto Prefecture",
				state_code: "BK"
			},
			{
				id: 1258,
				name: "Haut-Mbomou Prefecture",
				state_code: "HM"
			},
			{
				id: 1268,
				name: "Haute-Kotto Prefecture",
				state_code: "HK"
			},
			{
				id: 1263,
				name: "Kémo Prefecture",
				state_code: "KG"
			},
			{
				id: 1256,
				name: "Lobaye Prefecture",
				state_code: "LB"
			},
			{
				id: 1257,
				name: "Mambéré-Kadéï",
				state_code: "HS"
			},
			{
				id: 1266,
				name: "Mbomou Prefecture",
				state_code: "MB"
			},
			{
				id: 1253,
				name: "Nana-Grébizi Economic Prefecture",
				state_code: "KB"
			},
			{
				id: 1260,
				name: "Nana-Mambéré Prefecture",
				state_code: "NM"
			},
			{
				id: 1255,
				name: "Ombella-M'Poko Prefecture",
				state_code: "MP"
			},
			{
				id: 1265,
				name: "Ouaka Prefecture",
				state_code: "UK"
			},
			{
				id: 1254,
				name: "Ouham Prefecture",
				state_code: "AC"
			},
			{
				id: 1267,
				name: "Ouham-Pendé Prefecture",
				state_code: "OP"
			},
			{
				id: 1252,
				name: "Sangha-Mbaéré",
				state_code: "SE"
			},
			{
				id: 1261,
				name: "Vakaga Prefecture",
				state_code: "VK"
			}
		]
	},
	{
		name: "Chad",
		iso3: "TCD",
		iso2: "TD",
		numeric_code: "148",
		phone_code: "235",
		emoji: "🇹🇩",
		emojiU: "U+1F1F9 U+1F1E9",
		states: [
			{
				id: 3583,
				name: "Bahr el Gazel",
				state_code: "BG"
			},
			{
				id: 3590,
				name: "Batha Region",
				state_code: "BA"
			},
			{
				id: 3574,
				name: "Borkou",
				state_code: "BO"
			},
			{
				id: 3578,
				name: "Ennedi Region",
				state_code: "EN"
			},
			{
				id: 3575,
				name: "Ennedi-Est",
				state_code: "EE"
			},
			{
				id: 3584,
				name: "Ennedi-Ouest",
				state_code: "EO"
			},
			{
				id: 3576,
				name: "Guéra Region",
				state_code: "GR"
			},
			{
				id: 3573,
				name: "Hadjer-Lamis",
				state_code: "HL"
			},
			{
				id: 3588,
				name: "Kanem Region",
				state_code: "KA"
			},
			{
				id: 3577,
				name: "Lac Region",
				state_code: "LC"
			},
			{
				id: 3585,
				name: "Logone Occidental Region",
				state_code: "LO"
			},
			{
				id: 3591,
				name: "Logone Oriental Region",
				state_code: "LR"
			},
			{
				id: 3589,
				name: "Mandoul Region",
				state_code: "MA"
			},
			{
				id: 3580,
				name: "Mayo-Kebbi Est Region",
				state_code: "ME"
			},
			{
				id: 3571,
				name: "Mayo-Kebbi Ouest Region",
				state_code: "MO"
			},
			{
				id: 3570,
				name: "Moyen-Chari Region",
				state_code: "MC"
			},
			{
				id: 3586,
				name: "N'Djamena",
				state_code: "ND"
			},
			{
				id: 3582,
				name: "Ouaddaï Region",
				state_code: "OD"
			},
			{
				id: 3592,
				name: "Salamat Region",
				state_code: "SA"
			},
			{
				id: 3572,
				name: "Sila Region",
				state_code: "SI"
			},
			{
				id: 3579,
				name: "Tandjilé Region",
				state_code: "TA"
			},
			{
				id: 3587,
				name: "Tibesti Region",
				state_code: "TI"
			},
			{
				id: 3581,
				name: "Wadi Fira Region",
				state_code: "WF"
			}
		]
	},
	{
		name: "Chile",
		iso3: "CHL",
		iso2: "CL",
		numeric_code: "152",
		phone_code: "56",
		emoji: "🇨🇱",
		emojiU: "U+1F1E8 U+1F1F1",
		states: [
			{
				id: 2828,
				name: "Aisén del General Carlos Ibañez del Campo",
				state_code: "AI"
			},
			{
				id: 2832,
				name: "Antofagasta",
				state_code: "AN"
			},
			{
				id: 2829,
				name: "Arica y Parinacota",
				state_code: "AP"
			},
			{
				id: 2823,
				name: "Atacama",
				state_code: "AT"
			},
			{
				id: 2827,
				name: "Biobío",
				state_code: "BI"
			},
			{
				id: 2825,
				name: "Coquimbo",
				state_code: "CO"
			},
			{
				id: 2826,
				name: "La Araucanía",
				state_code: "AR"
			},
			{
				id: 2838,
				name: "Libertador General Bernardo O'Higgins",
				state_code: "LI"
			},
			{
				id: 2835,
				name: "Los Lagos",
				state_code: "LL"
			},
			{
				id: 2834,
				name: "Los Ríos",
				state_code: "LR"
			},
			{
				id: 2836,
				name: "Magallanes y de la Antártica Chilena",
				state_code: "MA"
			},
			{
				id: 2833,
				name: "Maule",
				state_code: "ML"
			},
			{
				id: 2831,
				name: "Ñuble",
				state_code: "NB"
			},
			{
				id: 2824,
				name: "Región Metropolitana de Santiago",
				state_code: "RM"
			},
			{
				id: 2837,
				name: "Tarapacá",
				state_code: "TA"
			},
			{
				id: 2830,
				name: "Valparaíso",
				state_code: "VS"
			}
		]
	},
	{
		name: "China",
		iso3: "CHN",
		iso2: "CN",
		numeric_code: "156",
		phone_code: "86",
		emoji: "🇨🇳",
		emojiU: "U+1F1E8 U+1F1F3",
		states: [
			{
				id: 2251,
				name: "Anhui",
				state_code: "AH"
			},
			{
				id: 2257,
				name: "Beijing",
				state_code: "BJ"
			},
			{
				id: 2271,
				name: "Chongqing",
				state_code: "CQ"
			},
			{
				id: 2248,
				name: "Fujian",
				state_code: "FJ"
			},
			{
				id: 2275,
				name: "Gansu",
				state_code: "GS"
			},
			{
				id: 2279,
				name: "Guangdong",
				state_code: "GD"
			},
			{
				id: 2278,
				name: "Guangxi Zhuang",
				state_code: "GX"
			},
			{
				id: 2261,
				name: "Guizhou",
				state_code: "GZ"
			},
			{
				id: 2273,
				name: "Hainan",
				state_code: "HI"
			},
			{
				id: 2280,
				name: "Hebei",
				state_code: "HE"
			},
			{
				id: 2265,
				name: "Heilongjiang",
				state_code: "HL"
			},
			{
				id: 2259,
				name: "Henan",
				state_code: "HA"
			},
			{
				id: 2267,
				name: "Hong Kong SAR",
				state_code: "HK"
			},
			{
				id: 2274,
				name: "Hubei",
				state_code: "HB"
			},
			{
				id: 2258,
				name: "Hunan",
				state_code: "HN"
			},
			{
				id: 2269,
				name: "Inner Mongolia",
				state_code: "NM"
			},
			{
				id: 2250,
				name: "Jiangsu",
				state_code: "JS"
			},
			{
				id: 2256,
				name: "Jiangxi",
				state_code: "JX"
			},
			{
				id: 2253,
				name: "Jilin",
				state_code: "JL"
			},
			{
				id: 2268,
				name: "Liaoning",
				state_code: "LN"
			},
			{
				id: 2266,
				name: "Macau SAR",
				state_code: "MO"
			},
			{
				id: 2262,
				name: "Ningxia Huizu",
				state_code: "NX"
			},
			{
				id: 2270,
				name: "Qinghai",
				state_code: "QH"
			},
			{
				id: 2272,
				name: "Shaanxi",
				state_code: "SN"
			},
			{
				id: 2252,
				name: "Shandong",
				state_code: "SD"
			},
			{
				id: 2249,
				name: "Shanghai",
				state_code: "SH"
			},
			{
				id: 2254,
				name: "Shanxi",
				state_code: "SX"
			},
			{
				id: 2277,
				name: "Sichuan",
				state_code: "SC"
			},
			{
				id: 2255,
				name: "Taiwan",
				state_code: "TW"
			},
			{
				id: 2276,
				name: "Tianjin",
				state_code: "TJ"
			},
			{
				id: 2263,
				name: "Xinjiang",
				state_code: "XJ"
			},
			{
				id: 2264,
				name: "Xizang",
				state_code: "XZ"
			},
			{
				id: 2260,
				name: "Yunnan",
				state_code: "YN"
			},
			{
				id: 2247,
				name: "Zhejiang",
				state_code: "ZJ"
			}
		]
	},
	{
		name: "Christmas Island",
		iso3: "CXR",
		iso2: "CX",
		numeric_code: "162",
		phone_code: "61",
		emoji: "🇨🇽",
		emojiU: "U+1F1E8 U+1F1FD",
		states: [
		]
	},
	{
		name: "Cocos (Keeling) Islands",
		iso3: "CCK",
		iso2: "CC",
		numeric_code: "166",
		phone_code: "61",
		emoji: "🇨🇨",
		emojiU: "U+1F1E8 U+1F1E8",
		states: [
		]
	},
	{
		name: "Colombia",
		iso3: "COL",
		iso2: "CO",
		numeric_code: "170",
		phone_code: "57",
		emoji: "🇨🇴",
		emojiU: "U+1F1E8 U+1F1F4",
		states: [
			{
				id: 2895,
				name: "Amazonas",
				state_code: "AMA"
			},
			{
				id: 2890,
				name: "Antioquia",
				state_code: "ANT"
			},
			{
				id: 2881,
				name: "Arauca",
				state_code: "ARA"
			},
			{
				id: 2880,
				name: "Atlántico",
				state_code: "ATL"
			},
			{
				id: 4921,
				name: "Bogotá D.C.",
				state_code: "DC"
			},
			{
				id: 2893,
				name: "Bolívar",
				state_code: "BOL"
			},
			{
				id: 2903,
				name: "Boyacá",
				state_code: "BOY"
			},
			{
				id: 2887,
				name: "Caldas",
				state_code: "CAL"
			},
			{
				id: 2891,
				name: "Caquetá",
				state_code: "CAQ"
			},
			{
				id: 2892,
				name: "Casanare",
				state_code: "CAS"
			},
			{
				id: 2884,
				name: "Cauca",
				state_code: "CAU"
			},
			{
				id: 2899,
				name: "Cesar",
				state_code: "CES"
			},
			{
				id: 2876,
				name: "Chocó",
				state_code: "CHO"
			},
			{
				id: 2898,
				name: "Córdoba",
				state_code: "COR"
			},
			{
				id: 2875,
				name: "Cundinamarca",
				state_code: "CUN"
			},
			{
				id: 2882,
				name: "Guainía",
				state_code: "GUA"
			},
			{
				id: 2888,
				name: "Guaviare",
				state_code: "GUV"
			},
			{
				id: 4871,
				name: "Huila",
				state_code: "HUI"
			},
			{
				id: 2889,
				name: "La Guajira",
				state_code: "LAG"
			},
			{
				id: 2886,
				name: "Magdalena",
				state_code: "MAG"
			},
			{
				id: 2878,
				name: "Meta",
				state_code: "MET"
			},
			{
				id: 2897,
				name: "Nariño",
				state_code: "NAR"
			},
			{
				id: 2877,
				name: "Norte de Santander",
				state_code: "NSA"
			},
			{
				id: 2896,
				name: "Putumayo",
				state_code: "PUT"
			},
			{
				id: 2874,
				name: "Quindío",
				state_code: "QUI"
			},
			{
				id: 2879,
				name: "Risaralda",
				state_code: "RIS"
			},
			{
				id: 2900,
				name: "San Andrés, Providencia y Santa Catalina",
				state_code: "SAP"
			},
			{
				id: 2901,
				name: "Santander",
				state_code: "SAN"
			},
			{
				id: 2902,
				name: "Sucre",
				state_code: "SUC"
			},
			{
				id: 2883,
				name: "Tolima",
				state_code: "TOL"
			},
			{
				id: 2904,
				name: "Valle del Cauca",
				state_code: "VAC"
			},
			{
				id: 2885,
				name: "Vaupés",
				state_code: "VAU"
			},
			{
				id: 2894,
				name: "Vichada",
				state_code: "VID"
			}
		]
	},
	{
		name: "Comoros",
		iso3: "COM",
		iso2: "KM",
		numeric_code: "174",
		phone_code: "269",
		emoji: "🇰🇲",
		emojiU: "U+1F1F0 U+1F1F2",
		states: [
			{
				id: 2821,
				name: "Anjouan",
				state_code: "A"
			},
			{
				id: 2822,
				name: "Grande Comore",
				state_code: "G"
			},
			{
				id: 2820,
				name: "Mohéli",
				state_code: "M"
			}
		]
	},
	{
		name: "Congo",
		iso3: "COG",
		iso2: "CG",
		numeric_code: "178",
		phone_code: "242",
		emoji: "🇨🇬",
		emojiU: "U+1F1E8 U+1F1EC",
		states: [
			{
				id: 2866,
				name: "Bouenza Department",
				state_code: "11"
			},
			{
				id: 2870,
				name: "Brazzaville",
				state_code: "BZV"
			},
			{
				id: 2864,
				name: "Cuvette Department",
				state_code: "8"
			},
			{
				id: 2869,
				name: "Cuvette-Ouest Department",
				state_code: "15"
			},
			{
				id: 2867,
				name: "Kouilou Department",
				state_code: "5"
			},
			{
				id: 2868,
				name: "Lékoumou Department",
				state_code: "2"
			},
			{
				id: 2865,
				name: "Likouala Department",
				state_code: "7"
			},
			{
				id: 2872,
				name: "Niari Department",
				state_code: "9"
			},
			{
				id: 2862,
				name: "Plateaux Department",
				state_code: "14"
			},
			{
				id: 2863,
				name: "Pointe-Noire",
				state_code: "16"
			},
			{
				id: 2873,
				name: "Pool Department",
				state_code: "12"
			},
			{
				id: 2871,
				name: "Sangha Department",
				state_code: "13"
			}
		]
	},
	{
		name: "Cook Islands",
		iso3: "COK",
		iso2: "CK",
		numeric_code: "184",
		phone_code: "682",
		emoji: "🇨🇰",
		emojiU: "U+1F1E8 U+1F1F0",
		states: [
		]
	},
	{
		name: "Costa Rica",
		iso3: "CRI",
		iso2: "CR",
		numeric_code: "188",
		phone_code: "506",
		emoji: "🇨🇷",
		emojiU: "U+1F1E8 U+1F1F7",
		states: [
			{
				id: 1215,
				name: "Alajuela Province",
				state_code: "A"
			},
			{
				id: 1209,
				name: "Guanacaste Province",
				state_code: "G"
			},
			{
				id: 1212,
				name: "Heredia Province",
				state_code: "H"
			},
			{
				id: 1213,
				name: "Limón Province",
				state_code: "L"
			},
			{
				id: 1211,
				name: "Provincia de Cartago",
				state_code: "C"
			},
			{
				id: 1210,
				name: "Puntarenas Province",
				state_code: "P"
			},
			{
				id: 1214,
				name: "San José Province",
				state_code: "SJ"
			}
		]
	},
	{
		name: "Cote D'Ivoire (Ivory Coast)",
		iso3: "CIV",
		iso2: "CI",
		numeric_code: "384",
		phone_code: "225",
		emoji: "🇨🇮",
		emojiU: "U+1F1E8 U+1F1EE",
		states: [
			{
				id: 2634,
				name: "Abidjan",
				state_code: "AB"
			},
			{
				id: 2626,
				name: "Agnéby",
				state_code: "16"
			},
			{
				id: 2636,
				name: "Bafing Region",
				state_code: "17"
			},
			{
				id: 2643,
				name: "Bas-Sassandra District",
				state_code: "BS"
			},
			{
				id: 2635,
				name: "Bas-Sassandra Region",
				state_code: "09"
			},
			{
				id: 2654,
				name: "Comoé District",
				state_code: "CM"
			},
			{
				id: 2644,
				name: "Denguélé District",
				state_code: "DN"
			},
			{
				id: 2642,
				name: "Denguélé Region",
				state_code: "10"
			},
			{
				id: 2645,
				name: "Dix-Huit Montagnes",
				state_code: "06"
			},
			{
				id: 2633,
				name: "Fromager",
				state_code: "18"
			},
			{
				id: 2651,
				name: "Gôh-Djiboua District",
				state_code: "GD"
			},
			{
				id: 2638,
				name: "Haut-Sassandra",
				state_code: "02"
			},
			{
				id: 2632,
				name: "Lacs District",
				state_code: "LC"
			},
			{
				id: 2640,
				name: "Lacs Region",
				state_code: "07"
			},
			{
				id: 2627,
				name: "Lagunes District",
				state_code: "LG"
			},
			{
				id: 2639,
				name: "Lagunes region",
				state_code: "01"
			},
			{
				id: 2631,
				name: "Marahoué Region",
				state_code: "12"
			},
			{
				id: 2629,
				name: "Montagnes District",
				state_code: "MG"
			},
			{
				id: 2646,
				name: "Moyen-Cavally",
				state_code: "19"
			},
			{
				id: 2630,
				name: "Moyen-Comoé",
				state_code: "05"
			},
			{
				id: 2655,
				name: "N'zi-Comoé",
				state_code: "11"
			},
			{
				id: 2648,
				name: "Sassandra-Marahoué District",
				state_code: "SM"
			},
			{
				id: 2625,
				name: "Savanes Region",
				state_code: "03"
			},
			{
				id: 2628,
				name: "Sud-Bandama",
				state_code: "15"
			},
			{
				id: 2652,
				name: "Sud-Comoé",
				state_code: "13"
			},
			{
				id: 2637,
				name: "Vallée du Bandama District",
				state_code: "VB"
			},
			{
				id: 2647,
				name: "Vallée du Bandama Region",
				state_code: "04"
			},
			{
				id: 2650,
				name: "Woroba District",
				state_code: "WR"
			},
			{
				id: 2649,
				name: "Worodougou",
				state_code: "14"
			},
			{
				id: 2653,
				name: "Yamoussoukro",
				state_code: "YM"
			},
			{
				id: 2641,
				name: "Zanzan Region",
				state_code: "ZZ"
			}
		]
	},
	{
		name: "Croatia",
		iso3: "HRV",
		iso2: "HR",
		numeric_code: "191",
		phone_code: "385",
		emoji: "🇭🇷",
		emojiU: "U+1F1ED U+1F1F7",
		states: [
			{
				id: 734,
				name: "Bjelovar-Bilogora County",
				state_code: "07"
			},
			{
				id: 737,
				name: "Brod-Posavina County",
				state_code: "12"
			},
			{
				id: 728,
				name: "Dubrovnik-Neretva County",
				state_code: "19"
			},
			{
				id: 743,
				name: "Istria County",
				state_code: "18"
			},
			{
				id: 742,
				name: "Koprivnica-Križevci County",
				state_code: "06"
			},
			{
				id: 729,
				name: "Krapina-Zagorje County",
				state_code: "02"
			},
			{
				id: 731,
				name: "Lika-Senj County",
				state_code: "09"
			},
			{
				id: 726,
				name: "Međimurje County",
				state_code: "20"
			},
			{
				id: 740,
				name: "Osijek-Baranja County",
				state_code: "14"
			},
			{
				id: 724,
				name: "Požega-Slavonia County",
				state_code: "11"
			},
			{
				id: 735,
				name: "Primorje-Gorski Kotar County",
				state_code: "08"
			},
			{
				id: 730,
				name: "Šibenik-Knin County",
				state_code: "15"
			},
			{
				id: 733,
				name: "Sisak-Moslavina County",
				state_code: "03"
			},
			{
				id: 725,
				name: "Split-Dalmatia County",
				state_code: "17"
			},
			{
				id: 739,
				name: "Varaždin County",
				state_code: "05"
			},
			{
				id: 732,
				name: "Virovitica-Podravina County",
				state_code: "10"
			},
			{
				id: 741,
				name: "Vukovar-Syrmia County",
				state_code: "16"
			},
			{
				id: 727,
				name: "Zadar County",
				state_code: "13"
			},
			{
				id: 738,
				name: "Zagreb",
				state_code: "21"
			},
			{
				id: 736,
				name: "Zagreb County",
				state_code: "01"
			}
		]
	},
	{
		name: "Cuba",
		iso3: "CUB",
		iso2: "CU",
		numeric_code: "192",
		phone_code: "53",
		emoji: "🇨🇺",
		emojiU: "U+1F1E8 U+1F1FA",
		states: [
			{
				id: 283,
				name: "Artemisa Province",
				state_code: "15"
			},
			{
				id: 286,
				name: "Camagüey Province",
				state_code: "09"
			},
			{
				id: 282,
				name: "Ciego de Ávila Province",
				state_code: "08"
			},
			{
				id: 287,
				name: "Cienfuegos Province",
				state_code: "06"
			},
			{
				id: 275,
				name: "Granma Province",
				state_code: "12"
			},
			{
				id: 285,
				name: "Guantánamo Province",
				state_code: "14"
			},
			{
				id: 272,
				name: "Havana Province",
				state_code: "03"
			},
			{
				id: 279,
				name: "Holguín Province",
				state_code: "11"
			},
			{
				id: 278,
				name: "Isla de la Juventud",
				state_code: "99"
			},
			{
				id: 281,
				name: "Las Tunas Province",
				state_code: "10"
			},
			{
				id: 284,
				name: "Matanzas Province",
				state_code: "04"
			},
			{
				id: 276,
				name: "Mayabeque Province",
				state_code: "16"
			},
			{
				id: 277,
				name: "Pinar del Río Province",
				state_code: "01"
			},
			{
				id: 274,
				name: "Sancti Spíritus Province",
				state_code: "07"
			},
			{
				id: 273,
				name: "Santiago de Cuba Province",
				state_code: "13"
			},
			{
				id: 280,
				name: "Villa Clara Province",
				state_code: "05"
			}
		]
	},
	{
		name: "Curaçao",
		iso3: "CUW",
		iso2: "CW",
		numeric_code: "531",
		phone_code: "599",
		emoji: "🇨🇼",
		emojiU: "U+1F1E8 U+1F1FC",
		states: [
		]
	},
	{
		name: "Cyprus",
		iso3: "CYP",
		iso2: "CY",
		numeric_code: "196",
		phone_code: "357",
		emoji: "🇨🇾",
		emojiU: "U+1F1E8 U+1F1FE",
		states: [
			{
				id: 749,
				name: "Famagusta District (Mağusa)",
				state_code: "04"
			},
			{
				id: 744,
				name: "Kyrenia District (Keryneia)",
				state_code: "06"
			},
			{
				id: 747,
				name: "Larnaca District (Larnaka)",
				state_code: "03"
			},
			{
				id: 748,
				name: "Limassol District (Leymasun)",
				state_code: "02"
			},
			{
				id: 745,
				name: "Nicosia District (Lefkoşa)",
				state_code: "01"
			},
			{
				id: 746,
				name: "Paphos District (Pafos)",
				state_code: "05"
			}
		]
	},
	{
		name: "Czech Republic",
		iso3: "CZE",
		iso2: "CZ",
		numeric_code: "203",
		phone_code: "420",
		emoji: "🇨🇿",
		emojiU: "U+1F1E8 U+1F1FF",
		states: [
			{
				id: 4627,
				name: "Benešov",
				state_code: "201"
			},
			{
				id: 4620,
				name: "Beroun",
				state_code: "202"
			},
			{
				id: 4615,
				name: "Blansko",
				state_code: "641"
			},
			{
				id: 4542,
				name: "Břeclav",
				state_code: "644"
			},
			{
				id: 4568,
				name: "Brno-město",
				state_code: "642"
			},
			{
				id: 4545,
				name: "Brno-venkov",
				state_code: "643"
			},
			{
				id: 4644,
				name: "Bruntál",
				state_code: "801"
			},
			{
				id: 4633,
				name: "Česká Lípa",
				state_code: "511"
			},
			{
				id: 4556,
				name: "České Budějovice",
				state_code: "311"
			},
			{
				id: 4543,
				name: "Český Krumlov",
				state_code: "312"
			},
			{
				id: 4573,
				name: "Cheb",
				state_code: "411"
			},
			{
				id: 4553,
				name: "Chomutov",
				state_code: "422"
			},
			{
				id: 4634,
				name: "Chrudim",
				state_code: "531"
			},
			{
				id: 4609,
				name: "Děčín",
				state_code: "421"
			},
			{
				id: 4641,
				name: "Domažlice",
				state_code: "321"
			},
			{
				id: 4559,
				name: "Frýdek-Místek",
				state_code: "802"
			},
			{
				id: 4611,
				name: "Havlíčkův Brod",
				state_code: "631"
			},
			{
				id: 4561,
				name: "Hodonín",
				state_code: "645"
			},
			{
				id: 4580,
				name: "Hradec Králové",
				state_code: "521"
			},
			{
				id: 4612,
				name: "Jablonec nad Nisou",
				state_code: "512"
			},
			{
				id: 4625,
				name: "Jeseník",
				state_code: "711"
			},
			{
				id: 4640,
				name: "Jičín",
				state_code: "522"
			},
			{
				id: 4613,
				name: "Jihlava",
				state_code: "632"
			},
			{
				id: 4639,
				name: "Jihočeský kraj",
				state_code: "31"
			},
			{
				id: 4602,
				name: "Jihomoravský kraj",
				state_code: "64"
			},
			{
				id: 4624,
				name: "Jindřichův Hradec",
				state_code: "313"
			},
			{
				id: 4581,
				name: "Karlovarský kraj",
				state_code: "41"
			},
			{
				id: 4604,
				name: "Karlovy Vary",
				state_code: "412"
			},
			{
				id: 4586,
				name: "Karviná",
				state_code: "803"
			},
			{
				id: 4631,
				name: "Kladno",
				state_code: "203"
			},
			{
				id: 4591,
				name: "Klatovy",
				state_code: "322"
			},
			{
				id: 4618,
				name: "Kolín",
				state_code: "204"
			},
			{
				id: 4575,
				name: "Kraj Vysočina",
				state_code: "63"
			},
			{
				id: 4614,
				name: "Královéhradecký kraj",
				state_code: "52"
			},
			{
				id: 4593,
				name: "Kroměříž",
				state_code: "721"
			},
			{
				id: 4923,
				name: "Kutná Hora",
				state_code: "205"
			},
			{
				id: 4590,
				name: "Liberec",
				state_code: "513"
			},
			{
				id: 4601,
				name: "Liberecký kraj",
				state_code: "51"
			},
			{
				id: 4605,
				name: "Litoměřice",
				state_code: "423"
			},
			{
				id: 4617,
				name: "Louny",
				state_code: "424"
			},
			{
				id: 4638,
				name: "Mělník",
				state_code: "206"
			},
			{
				id: 4643,
				name: "Mladá Boleslav",
				state_code: "207"
			},
			{
				id: 4600,
				name: "Moravskoslezský kraj",
				state_code: "80"
			},
			{
				id: 4629,
				name: "Most",
				state_code: "425"
			},
			{
				id: 4550,
				name: "Náchod",
				state_code: "523"
			},
			{
				id: 4548,
				name: "Nový Jičín",
				state_code: "804"
			},
			{
				id: 4582,
				name: "Nymburk",
				state_code: "208"
			},
			{
				id: 4574,
				name: "Olomouc",
				state_code: "712"
			},
			{
				id: 4589,
				name: "Olomoucký kraj",
				state_code: "71"
			},
			{
				id: 4623,
				name: "Opava",
				state_code: "805"
			},
			{
				id: 4584,
				name: "Ostrava-město",
				state_code: "806"
			},
			{
				id: 4547,
				name: "Pardubice",
				state_code: "532"
			},
			{
				id: 4588,
				name: "Pardubický kraj",
				state_code: "53"
			},
			{
				id: 4645,
				name: "Pelhřimov",
				state_code: "633"
			},
			{
				id: 4560,
				name: "Písek",
				state_code: "314"
			},
			{
				id: 4608,
				name: "Plzeň-jih",
				state_code: "324"
			},
			{
				id: 4544,
				name: "Plzeň-město",
				state_code: "323"
			},
			{
				id: 4564,
				name: "Plzeň-sever",
				state_code: "325"
			},
			{
				id: 4607,
				name: "Plzeňský kraj",
				state_code: "32"
			},
			{
				id: 4578,
				name: "Prachatice",
				state_code: "315"
			},
			{
				id: 4606,
				name: "Praha-východ",
				state_code: "209"
			},
			{
				id: 4619,
				name: "Praha-západ",
				state_code: "20A"
			},
			{
				id: 4598,
				name: "Praha, Hlavní město",
				state_code: "10"
			},
			{
				id: 4626,
				name: "Přerov",
				state_code: "714"
			},
			{
				id: 4546,
				name: "Příbram",
				state_code: "20B"
			},
			{
				id: 4551,
				name: "Prostějov",
				state_code: "713"
			},
			{
				id: 4558,
				name: "Rakovník",
				state_code: "20C"
			},
			{
				id: 4583,
				name: "Rokycany",
				state_code: "326"
			},
			{
				id: 4636,
				name: "Rychnov nad Kněžnou",
				state_code: "524"
			},
			{
				id: 4596,
				name: "Semily",
				state_code: "514"
			},
			{
				id: 4595,
				name: "Sokolov",
				state_code: "413"
			},
			{
				id: 4628,
				name: "Strakonice",
				state_code: "316"
			},
			{
				id: 4554,
				name: "Středočeský kraj",
				state_code: "20"
			},
			{
				id: 4642,
				name: "Šumperk",
				state_code: "715"
			},
			{
				id: 4571,
				name: "Svitavy",
				state_code: "533"
			},
			{
				id: 4565,
				name: "Tábor",
				state_code: "317"
			},
			{
				id: 4646,
				name: "Tachov",
				state_code: "327"
			},
			{
				id: 4621,
				name: "Teplice",
				state_code: "426"
			},
			{
				id: 4597,
				name: "Třebíč",
				state_code: "634"
			},
			{
				id: 4579,
				name: "Trutnov",
				state_code: "525"
			},
			{
				id: 4592,
				name: "Uherské Hradiště",
				state_code: "722"
			},
			{
				id: 4576,
				name: "Ústecký kraj",
				state_code: "42"
			},
			{
				id: 4599,
				name: "Ústí nad Labem",
				state_code: "427"
			},
			{
				id: 4647,
				name: "Ústí nad Orlicí",
				state_code: "534"
			},
			{
				id: 4572,
				name: "Vsetín",
				state_code: "723"
			},
			{
				id: 4622,
				name: "Vyškov",
				state_code: "646"
			},
			{
				id: 4648,
				name: "Žďár nad Sázavou",
				state_code: "635"
			},
			{
				id: 4563,
				name: "Zlín",
				state_code: "724"
			},
			{
				id: 4552,
				name: "Zlínský kraj",
				state_code: "72"
			},
			{
				id: 4630,
				name: "Znojmo",
				state_code: "647"
			}
		]
	},
	{
		name: "Democratic Republic of the Congo",
		iso3: "COD",
		iso2: "CD",
		numeric_code: "180",
		phone_code: "243",
		emoji: "🇨🇩",
		emojiU: "U+1F1E8 U+1F1E9",
		states: [
			{
				id: 2753,
				name: "Bas-Uélé",
				state_code: "BU"
			},
			{
				id: 2744,
				name: "Équateur",
				state_code: "EQ"
			},
			{
				id: 2750,
				name: "Haut-Katanga",
				state_code: "HK"
			},
			{
				id: 2758,
				name: "Haut-Lomami",
				state_code: "HL"
			},
			{
				id: 2734,
				name: "Haut-Uélé",
				state_code: "HU"
			},
			{
				id: 2751,
				name: "Ituri",
				state_code: "IT"
			},
			{
				id: 2757,
				name: "Kasaï",
				state_code: "KS"
			},
			{
				id: 2742,
				name: "Kasaï Central",
				state_code: "KC"
			},
			{
				id: 2735,
				name: "Kasaï Oriental",
				state_code: "KE"
			},
			{
				id: 2741,
				name: "Kinshasa",
				state_code: "KN"
			},
			{
				id: 2746,
				name: "Kongo Central",
				state_code: "BC"
			},
			{
				id: 2740,
				name: "Kwango",
				state_code: "KG"
			},
			{
				id: 2759,
				name: "Kwilu",
				state_code: "KL"
			},
			{
				id: 2747,
				name: "Lomami",
				state_code: "LO"
			},
			{
				id: 4953,
				name: "Lualaba",
				state_code: "LU"
			},
			{
				id: 2755,
				name: "Mai-Ndombe",
				state_code: "MN"
			},
			{
				id: 2745,
				name: "Maniema",
				state_code: "MA"
			},
			{
				id: 2752,
				name: "Mongala",
				state_code: "MO"
			},
			{
				id: 2749,
				name: "Nord-Kivu",
				state_code: "NK"
			},
			{
				id: 2739,
				name: "Nord-Ubangi",
				state_code: "NU"
			},
			{
				id: 2743,
				name: "Sankuru",
				state_code: "SA"
			},
			{
				id: 2738,
				name: "Sud-Kivu",
				state_code: "SK"
			},
			{
				id: 2748,
				name: "Sud-Ubangi",
				state_code: "SU"
			},
			{
				id: 2733,
				name: "Tanganyika",
				state_code: "TA"
			},
			{
				id: 2756,
				name: "Tshopo",
				state_code: "TO"
			},
			{
				id: 2732,
				name: "Tshuapa",
				state_code: "TU"
			}
		]
	},
	{
		name: "Denmark",
		iso3: "DNK",
		iso2: "DK",
		numeric_code: "208",
		phone_code: "45",
		emoji: "🇩🇰",
		emojiU: "U+1F1E9 U+1F1F0",
		states: [
			{
				id: 1530,
				name: "Capital Region of Denmark",
				state_code: "84"
			},
			{
				id: 1531,
				name: "Central Denmark Region",
				state_code: "82"
			},
			{
				id: 1532,
				name: "North Denmark Region",
				state_code: "81"
			},
			{
				id: 1529,
				name: "Region of Southern Denmark",
				state_code: "83"
			},
			{
				id: 1528,
				name: "Region Zealand",
				state_code: "85"
			}
		]
	},
	{
		name: "Djibouti",
		iso3: "DJI",
		iso2: "DJ",
		numeric_code: "262",
		phone_code: "253",
		emoji: "🇩🇯",
		emojiU: "U+1F1E9 U+1F1EF",
		states: [
			{
				id: 2933,
				name: "Ali Sabieh Region",
				state_code: "AS"
			},
			{
				id: 2932,
				name: "Arta Region",
				state_code: "AR"
			},
			{
				id: 2930,
				name: "Dikhil Region",
				state_code: "DI"
			},
			{
				id: 2929,
				name: "Djibouti",
				state_code: "DJ"
			},
			{
				id: 2928,
				name: "Obock Region",
				state_code: "OB"
			},
			{
				id: 2931,
				name: "Tadjourah Region",
				state_code: "TA"
			}
		]
	},
	{
		name: "Dominica",
		iso3: "DMA",
		iso2: "DM",
		numeric_code: "212",
		phone_code: "+1-767",
		emoji: "🇩🇲",
		emojiU: "U+1F1E9 U+1F1F2",
		states: [
			{
				id: 4082,
				name: "Saint Andrew Parish",
				state_code: "02"
			},
			{
				id: 4078,
				name: "Saint David Parish",
				state_code: "03"
			},
			{
				id: 4079,
				name: "Saint George Parish",
				state_code: "04"
			},
			{
				id: 4076,
				name: "Saint John Parish",
				state_code: "05"
			},
			{
				id: 4085,
				name: "Saint Joseph Parish",
				state_code: "06"
			},
			{
				id: 4083,
				name: "Saint Luke Parish",
				state_code: "07"
			},
			{
				id: 4077,
				name: "Saint Mark Parish",
				state_code: "08"
			},
			{
				id: 4080,
				name: "Saint Patrick Parish",
				state_code: "09"
			},
			{
				id: 4084,
				name: "Saint Paul Parish",
				state_code: "10"
			},
			{
				id: 4081,
				name: "Saint Peter Parish",
				state_code: "11"
			}
		]
	},
	{
		name: "Dominican Republic",
		iso3: "DOM",
		iso2: "DO",
		numeric_code: "214",
		phone_code: "+1-809 and 1-829",
		emoji: "🇩🇴",
		emojiU: "U+1F1E9 U+1F1F4",
		states: [
			{
				id: 4114,
				name: "Azua Province",
				state_code: "02"
			},
			{
				id: 4105,
				name: "Baoruco Province",
				state_code: "03"
			},
			{
				id: 4090,
				name: "Barahona Province",
				state_code: "04"
			},
			{
				id: 4107,
				name: "Dajabón Province",
				state_code: "05"
			},
			{
				id: 4095,
				name: "Distrito Nacional",
				state_code: "01"
			},
			{
				id: 4113,
				name: "Duarte Province",
				state_code: "06"
			},
			{
				id: 4086,
				name: "El Seibo Province",
				state_code: "08"
			},
			{
				id: 4102,
				name: "Espaillat Province",
				state_code: "09"
			},
			{
				id: 4106,
				name: "Hato Mayor Province",
				state_code: "30"
			},
			{
				id: 4089,
				name: "Hermanas Mirabal Province",
				state_code: "19"
			},
			{
				id: 4097,
				name: "Independencia",
				state_code: "10"
			},
			{
				id: 4109,
				name: "La Altagracia Province",
				state_code: "11"
			},
			{
				id: 4087,
				name: "La Romana Province",
				state_code: "12"
			},
			{
				id: 4116,
				name: "La Vega Province",
				state_code: "13"
			},
			{
				id: 4094,
				name: "María Trinidad Sánchez Province",
				state_code: "14"
			},
			{
				id: 4099,
				name: "Monseñor Nouel Province",
				state_code: "28"
			},
			{
				id: 4115,
				name: "Monte Cristi Province",
				state_code: "15"
			},
			{
				id: 4111,
				name: "Monte Plata Province",
				state_code: "29"
			},
			{
				id: 4101,
				name: "Pedernales Province",
				state_code: "16"
			},
			{
				id: 4096,
				name: "Peravia Province",
				state_code: "17"
			},
			{
				id: 4092,
				name: "Puerto Plata Province",
				state_code: "18"
			},
			{
				id: 4103,
				name: "Samaná Province",
				state_code: "20"
			},
			{
				id: 4091,
				name: "San Cristóbal Province",
				state_code: "21"
			},
			{
				id: 4112,
				name: "San José de Ocoa Province",
				state_code: "31"
			},
			{
				id: 4098,
				name: "San Juan Province",
				state_code: "22"
			},
			{
				id: 4110,
				name: "San Pedro de Macorís",
				state_code: "23"
			},
			{
				id: 4088,
				name: "Sánchez Ramírez Province",
				state_code: "24"
			},
			{
				id: 4108,
				name: "Santiago Province",
				state_code: "25"
			},
			{
				id: 4100,
				name: "Santiago Rodríguez Province",
				state_code: "26"
			},
			{
				id: 4093,
				name: "Santo Domingo Province",
				state_code: "32"
			},
			{
				id: 4104,
				name: "Valverde Province",
				state_code: "27"
			}
		]
	},
	{
		name: "East Timor",
		iso3: "TLS",
		iso2: "TL",
		numeric_code: "626",
		phone_code: "670",
		emoji: "🇹🇱",
		emojiU: "U+1F1F9 U+1F1F1",
		states: [
			{
				id: 4520,
				name: "Aileu municipality",
				state_code: "AL"
			},
			{
				id: 4518,
				name: "Ainaro Municipality",
				state_code: "AN"
			},
			{
				id: 4521,
				name: "Baucau Municipality",
				state_code: "BA"
			},
			{
				id: 4525,
				name: "Bobonaro Municipality",
				state_code: "BO"
			},
			{
				id: 4522,
				name: "Cova Lima Municipality",
				state_code: "CO"
			},
			{
				id: 4524,
				name: "Dili municipality",
				state_code: "DI"
			},
			{
				id: 4516,
				name: "Ermera District",
				state_code: "ER"
			},
			{
				id: 4523,
				name: "Lautém Municipality",
				state_code: "LA"
			},
			{
				id: 4515,
				name: "Liquiçá Municipality",
				state_code: "LI"
			},
			{
				id: 4517,
				name: "Manatuto District",
				state_code: "MT"
			},
			{
				id: 4519,
				name: "Manufahi Municipality",
				state_code: "MF"
			},
			{
				id: 4514,
				name: "Viqueque Municipality",
				state_code: "VI"
			}
		]
	},
	{
		name: "Ecuador",
		iso3: "ECU",
		iso2: "EC",
		numeric_code: "218",
		phone_code: "593",
		emoji: "🇪🇨",
		emojiU: "U+1F1EA U+1F1E8",
		states: [
			{
				id: 2923,
				name: "Azuay",
				state_code: "A"
			},
			{
				id: 2920,
				name: "Bolívar",
				state_code: "B"
			},
			{
				id: 2917,
				name: "Cañar",
				state_code: "F"
			},
			{
				id: 2915,
				name: "Carchi",
				state_code: "C"
			},
			{
				id: 2925,
				name: "Chimborazo",
				state_code: "H"
			},
			{
				id: 2921,
				name: "Cotopaxi",
				state_code: "X"
			},
			{
				id: 2924,
				name: "El Oro",
				state_code: "O"
			},
			{
				id: 2922,
				name: "Esmeraldas",
				state_code: "E"
			},
			{
				id: 2905,
				name: "Galápagos",
				state_code: "W"
			},
			{
				id: 2914,
				name: "Guayas",
				state_code: "G"
			},
			{
				id: 2911,
				name: "Imbabura",
				state_code: "I"
			},
			{
				id: 5068,
				name: "Loja",
				state_code: "L"
			},
			{
				id: 2910,
				name: "Los Ríos",
				state_code: "R"
			},
			{
				id: 2913,
				name: "Manabí",
				state_code: "M"
			},
			{
				id: 2918,
				name: "Morona-Santiago",
				state_code: "S"
			},
			{
				id: 2916,
				name: "Napo",
				state_code: "N"
			},
			{
				id: 2926,
				name: "Orellana",
				state_code: "D"
			},
			{
				id: 2907,
				name: "Pastaza",
				state_code: "Y"
			},
			{
				id: 2927,
				name: "Pichincha",
				state_code: "P"
			},
			{
				id: 2912,
				name: "Santa Elena",
				state_code: "SE"
			},
			{
				id: 2919,
				name: "Santo Domingo de los Tsáchilas",
				state_code: "SD"
			},
			{
				id: 2906,
				name: "Sucumbíos",
				state_code: "U"
			},
			{
				id: 2908,
				name: "Tungurahua",
				state_code: "T"
			},
			{
				id: 2909,
				name: "Zamora Chinchipe",
				state_code: "Z"
			}
		]
	},
	{
		name: "Egypt",
		iso3: "EGY",
		iso2: "EG",
		numeric_code: "818",
		phone_code: "20",
		emoji: "🇪🇬",
		emojiU: "U+1F1EA U+1F1EC",
		states: [
			{
				id: 3235,
				name: "Alexandria",
				state_code: "ALX"
			},
			{
				id: 3225,
				name: "Aswan",
				state_code: "ASN"
			},
			{
				id: 3236,
				name: "Asyut",
				state_code: "AST"
			},
			{
				id: 3241,
				name: "Beheira",
				state_code: "BH"
			},
			{
				id: 3230,
				name: "Beni Suef",
				state_code: "BNS"
			},
			{
				id: 3223,
				name: "Cairo",
				state_code: "C"
			},
			{
				id: 3245,
				name: "Dakahlia",
				state_code: "DK"
			},
			{
				id: 3224,
				name: "Damietta",
				state_code: "DT"
			},
			{
				id: 3238,
				name: "Faiyum",
				state_code: "FYM"
			},
			{
				id: 3234,
				name: "Gharbia",
				state_code: "GH"
			},
			{
				id: 3239,
				name: "Giza",
				state_code: "GZ"
			},
			{
				id: 3244,
				name: "Ismailia",
				state_code: "IS"
			},
			{
				id: 3222,
				name: "Kafr el-Sheikh",
				state_code: "KFS"
			},
			{
				id: 3242,
				name: "Luxor",
				state_code: "LX"
			},
			{
				id: 3231,
				name: "Matrouh",
				state_code: "MT"
			},
			{
				id: 3243,
				name: "Minya",
				state_code: "MN"
			},
			{
				id: 3228,
				name: "Monufia",
				state_code: "MNF"
			},
			{
				id: 3246,
				name: "New Valley",
				state_code: "WAD"
			},
			{
				id: 3227,
				name: "North Sinai",
				state_code: "SIN"
			},
			{
				id: 3229,
				name: "Port Said",
				state_code: "PTS"
			},
			{
				id: 3232,
				name: "Qalyubia",
				state_code: "KB"
			},
			{
				id: 3247,
				name: "Qena",
				state_code: "KN"
			},
			{
				id: 3240,
				name: "Red Sea",
				state_code: "BA"
			},
			{
				id: 5067,
				name: "Sharqia",
				state_code: "SHR"
			},
			{
				id: 3226,
				name: "Sohag",
				state_code: "SHG"
			},
			{
				id: 3237,
				name: "South Sinai",
				state_code: "JS"
			},
			{
				id: 3233,
				name: "Suez",
				state_code: "SUZ"
			}
		]
	},
	{
		name: "El Salvador",
		iso3: "SLV",
		iso2: "SV",
		numeric_code: "222",
		phone_code: "503",
		emoji: "🇸🇻",
		emojiU: "U+1F1F8 U+1F1FB",
		states: [
			{
				id: 4139,
				name: "Ahuachapán Department",
				state_code: "AH"
			},
			{
				id: 4132,
				name: "Cabañas Department",
				state_code: "CA"
			},
			{
				id: 4131,
				name: "Chalatenango Department",
				state_code: "CH"
			},
			{
				id: 4137,
				name: "Cuscatlán Department",
				state_code: "CU"
			},
			{
				id: 4134,
				name: "La Libertad Department",
				state_code: "LI"
			},
			{
				id: 4136,
				name: "La Paz Department",
				state_code: "PA"
			},
			{
				id: 4138,
				name: "La Unión Department",
				state_code: "UN"
			},
			{
				id: 4130,
				name: "Morazán Department",
				state_code: "MO"
			},
			{
				id: 4135,
				name: "San Miguel Department",
				state_code: "SM"
			},
			{
				id: 4133,
				name: "San Salvador Department",
				state_code: "SS"
			},
			{
				id: 4127,
				name: "San Vicente Department",
				state_code: "SV"
			},
			{
				id: 4128,
				name: "Santa Ana Department",
				state_code: "SA"
			},
			{
				id: 4140,
				name: "Sonsonate Department",
				state_code: "SO"
			},
			{
				id: 4129,
				name: "Usulután Department",
				state_code: "US"
			}
		]
	},
	{
		name: "Equatorial Guinea",
		iso3: "GNQ",
		iso2: "GQ",
		numeric_code: "226",
		phone_code: "240",
		emoji: "🇬🇶",
		emojiU: "U+1F1EC U+1F1F6",
		states: [
			{
				id: 3444,
				name: "Annobón Province",
				state_code: "AN"
			},
			{
				id: 3446,
				name: "Bioko Norte Province",
				state_code: "BN"
			},
			{
				id: 3443,
				name: "Bioko Sur Province",
				state_code: "BS"
			},
			{
				id: 3445,
				name: "Centro Sur Province",
				state_code: "CS"
			},
			{
				id: 3442,
				name: "Insular Region",
				state_code: "I"
			},
			{
				id: 3439,
				name: "Kié-Ntem Province",
				state_code: "KN"
			},
			{
				id: 3441,
				name: "Litoral Province",
				state_code: "LI"
			},
			{
				id: 3438,
				name: "Río Muni",
				state_code: "C"
			},
			{
				id: 3440,
				name: "Wele-Nzas Province",
				state_code: "WN"
			}
		]
	},
	{
		name: "Eritrea",
		iso3: "ERI",
		iso2: "ER",
		numeric_code: "232",
		phone_code: "291",
		emoji: "🇪🇷",
		emojiU: "U+1F1EA U+1F1F7",
		states: [
			{
				id: 3425,
				name: "Anseba Region",
				state_code: "AN"
			},
			{
				id: 3427,
				name: "Debub Region",
				state_code: "DU"
			},
			{
				id: 3428,
				name: "Gash-Barka Region",
				state_code: "GB"
			},
			{
				id: 3426,
				name: "Maekel Region",
				state_code: "MA"
			},
			{
				id: 3424,
				name: "Northern Red Sea Region",
				state_code: "SK"
			},
			{
				id: 3429,
				name: "Southern Red Sea Region",
				state_code: "DK"
			}
		]
	},
	{
		name: "Estonia",
		iso3: "EST",
		iso2: "EE",
		numeric_code: "233",
		phone_code: "372",
		emoji: "🇪🇪",
		emojiU: "U+1F1EA U+1F1EA",
		states: [
			{
				id: 3567,
				name: "Harju County",
				state_code: "37"
			},
			{
				id: 3555,
				name: "Hiiu County",
				state_code: "39"
			},
			{
				id: 3569,
				name: "Ida-Viru County",
				state_code: "44"
			},
			{
				id: 3566,
				name: "Järva County",
				state_code: "51"
			},
			{
				id: 3565,
				name: "Jõgeva County",
				state_code: "49"
			},
			{
				id: 3568,
				name: "Lääne County",
				state_code: "57"
			},
			{
				id: 3564,
				name: "Lääne-Viru County",
				state_code: "59"
			},
			{
				id: 3562,
				name: "Pärnu County",
				state_code: "67"
			},
			{
				id: 3563,
				name: "Põlva County",
				state_code: "65"
			},
			{
				id: 3559,
				name: "Rapla County",
				state_code: "70"
			},
			{
				id: 3561,
				name: "Saare County",
				state_code: "74"
			},
			{
				id: 3557,
				name: "Tartu County",
				state_code: "78"
			},
			{
				id: 3558,
				name: "Valga County",
				state_code: "82"
			},
			{
				id: 3556,
				name: "Viljandi County",
				state_code: "84"
			},
			{
				id: 3560,
				name: "Võru County",
				state_code: "86"
			}
		]
	},
	{
		name: "Ethiopia",
		iso3: "ETH",
		iso2: "ET",
		numeric_code: "231",
		phone_code: "251",
		emoji: "🇪🇹",
		emojiU: "U+1F1EA U+1F1F9",
		states: [
			{
				id: 11,
				name: "Addis Ababa",
				state_code: "AA"
			},
			{
				id: 6,
				name: "Afar Region",
				state_code: "AF"
			},
			{
				id: 3,
				name: "Amhara Region",
				state_code: "AM"
			},
			{
				id: 9,
				name: "Benishangul-Gumuz Region",
				state_code: "BE"
			},
			{
				id: 8,
				name: "Dire Dawa",
				state_code: "DD"
			},
			{
				id: 10,
				name: "Gambela Region",
				state_code: "GA"
			},
			{
				id: 7,
				name: "Harari Region",
				state_code: "HA"
			},
			{
				id: 5,
				name: "Oromia Region",
				state_code: "OR"
			},
			{
				id: 2,
				name: "Somali Region",
				state_code: "SO"
			},
			{
				id: 1,
				name: "Southern Nations, Nationalities, and Peoples' Region",
				state_code: "SN"
			},
			{
				id: 4,
				name: "Tigray Region",
				state_code: "TI"
			}
		]
	},
	{
		name: "Falkland Islands",
		iso3: "FLK",
		iso2: "FK",
		numeric_code: "238",
		phone_code: "500",
		emoji: "🇫🇰",
		emojiU: "U+1F1EB U+1F1F0",
		states: [
		]
	},
	{
		name: "Faroe Islands",
		iso3: "FRO",
		iso2: "FO",
		numeric_code: "234",
		phone_code: "298",
		emoji: "🇫🇴",
		emojiU: "U+1F1EB U+1F1F4",
		states: [
		]
	},
	{
		name: "Fiji Islands",
		iso3: "FJI",
		iso2: "FJ",
		numeric_code: "242",
		phone_code: "679",
		emoji: "🇫🇯",
		emojiU: "U+1F1EB U+1F1EF",
		states: [
			{
				id: 1917,
				name: "Ba",
				state_code: "01"
			},
			{
				id: 1930,
				name: "Bua",
				state_code: "02"
			},
			{
				id: 1924,
				name: "Cakaudrove",
				state_code: "03"
			},
			{
				id: 1929,
				name: "Central Division",
				state_code: "C"
			},
			{
				id: 1932,
				name: "Eastern Division",
				state_code: "E"
			},
			{
				id: 1934,
				name: "Kadavu",
				state_code: "04"
			},
			{
				id: 1933,
				name: "Lau",
				state_code: "05"
			},
			{
				id: 1916,
				name: "Lomaiviti",
				state_code: "06"
			},
			{
				id: 1922,
				name: "Macuata",
				state_code: "07"
			},
			{
				id: 1919,
				name: "Nadroga-Navosa",
				state_code: "08"
			},
			{
				id: 1927,
				name: "Naitasiri",
				state_code: "09"
			},
			{
				id: 1928,
				name: "Namosi",
				state_code: "10"
			},
			{
				id: 1921,
				name: "Northern Division",
				state_code: "N"
			},
			{
				id: 1926,
				name: "Ra",
				state_code: "11"
			},
			{
				id: 1920,
				name: "Rewa",
				state_code: "12"
			},
			{
				id: 1931,
				name: "Rotuma",
				state_code: "R"
			},
			{
				id: 1925,
				name: "Serua",
				state_code: "13"
			},
			{
				id: 1918,
				name: "Tailevu",
				state_code: "14"
			},
			{
				id: 1923,
				name: "Western Division",
				state_code: "W"
			}
		]
	},
	{
		name: "Finland",
		iso3: "FIN",
		iso2: "FI",
		numeric_code: "246",
		phone_code: "358",
		emoji: "🇫🇮",
		emojiU: "U+1F1EB U+1F1EE",
		states: [
			{
				id: 1509,
				name: "Åland Islands",
				state_code: "01"
			},
			{
				id: 1511,
				name: "Central Finland",
				state_code: "08"
			},
			{
				id: 1494,
				name: "Central Ostrobothnia",
				state_code: "07"
			},
			{
				id: 1492,
				name: "Eastern Finland Province",
				state_code: "IS"
			},
			{
				id: 1507,
				name: "Finland Proper",
				state_code: "19"
			},
			{
				id: 1496,
				name: "Kainuu",
				state_code: "05"
			},
			{
				id: 1512,
				name: "Kymenlaakso",
				state_code: "09"
			},
			{
				id: 1500,
				name: "Lapland",
				state_code: "LL"
			},
			{
				id: 1504,
				name: "North Karelia",
				state_code: "13"
			},
			{
				id: 1505,
				name: "Northern Ostrobothnia",
				state_code: "14"
			},
			{
				id: 1503,
				name: "Northern Savonia",
				state_code: "15"
			},
			{
				id: 1508,
				name: "Ostrobothnia",
				state_code: "12"
			},
			{
				id: 1499,
				name: "Oulu Province",
				state_code: "OL"
			},
			{
				id: 1502,
				name: "Päijänne Tavastia",
				state_code: "16"
			},
			{
				id: 1506,
				name: "Pirkanmaa",
				state_code: "11"
			},
			{
				id: 1501,
				name: "Satakunta",
				state_code: "17"
			},
			{
				id: 1497,
				name: "South Karelia",
				state_code: "02"
			},
			{
				id: 1498,
				name: "Southern Ostrobothnia",
				state_code: "03"
			},
			{
				id: 1495,
				name: "Southern Savonia",
				state_code: "04"
			},
			{
				id: 1493,
				name: "Tavastia Proper",
				state_code: "06"
			},
			{
				id: 1510,
				name: "Uusimaa",
				state_code: "18"
			}
		]
	},
	{
		name: "France",
		iso3: "FRA",
		iso2: "FR",
		numeric_code: "250",
		phone_code: "33",
		emoji: "🇫🇷",
		emojiU: "U+1F1EB U+1F1F7",
		states: [
			{
				id: 4967,
				name: "Ain",
				state_code: "01"
			},
			{
				id: 4968,
				name: "Aisne",
				state_code: "02"
			},
			{
				id: 4969,
				name: "Allier",
				state_code: "03"
			},
			{
				id: 4970,
				name: "Alpes-de-Haute-Provence",
				state_code: "04"
			},
			{
				id: 4972,
				name: "Alpes-Maritimes",
				state_code: "06"
			},
			{
				id: 4811,
				name: "Alsace",
				state_code: "6AE"
			},
			{
				id: 4973,
				name: "Ardèche",
				state_code: "07"
			},
			{
				id: 4974,
				name: "Ardennes",
				state_code: "08"
			},
			{
				id: 4975,
				name: "Ariège",
				state_code: "09"
			},
			{
				id: 4976,
				name: "Aube",
				state_code: "10"
			},
			{
				id: 4977,
				name: "Aude",
				state_code: "11"
			},
			{
				id: 4798,
				name: "Auvergne-Rhône-Alpes",
				state_code: "ARA"
			},
			{
				id: 4978,
				name: "Aveyron",
				state_code: "12"
			},
			{
				id: 5035,
				name: "Bas-Rhin\t",
				state_code: "67"
			},
			{
				id: 4979,
				name: "Bouches-du-Rhône",
				state_code: "13"
			},
			{
				id: 4825,
				name: "Bourgogne-Franche-Comté",
				state_code: "BFC"
			},
			{
				id: 4807,
				name: "Bretagne",
				state_code: "BRE"
			},
			{
				id: 4981,
				name: "Calvados",
				state_code: "14"
			},
			{
				id: 4982,
				name: "Cantal",
				state_code: "15"
			},
			{
				id: 4818,
				name: "Centre-Val de Loire",
				state_code: "CVL"
			},
			{
				id: 4983,
				name: "Charente",
				state_code: "16"
			},
			{
				id: 4984,
				name: "Charente-Maritime",
				state_code: "17"
			},
			{
				id: 4985,
				name: "Cher",
				state_code: "18"
			},
			{
				id: 5064,
				name: "Clipperton",
				state_code: "CP"
			},
			{
				id: 4986,
				name: "Corrèze",
				state_code: "19"
			},
			{
				id: 4806,
				name: "Corse",
				state_code: "20R"
			},
			{
				id: 4996,
				name: "Corse-du-Sud",
				state_code: "2A"
			},
			{
				id: 4987,
				name: "Côte-d'Or",
				state_code: "21"
			},
			{
				id: 4988,
				name: "Côtes-d'Armor",
				state_code: "22"
			},
			{
				id: 4989,
				name: "Creuse",
				state_code: "23"
			},
			{
				id: 5047,
				name: "Deux-Sèvres",
				state_code: "79"
			},
			{
				id: 4990,
				name: "Dordogne",
				state_code: "24"
			},
			{
				id: 4991,
				name: "Doubs",
				state_code: "25"
			},
			{
				id: 4992,
				name: "Drôme",
				state_code: "26"
			},
			{
				id: 5059,
				name: "Essonne",
				state_code: "91"
			},
			{
				id: 4993,
				name: "Eure",
				state_code: "27"
			},
			{
				id: 4994,
				name: "Eure-et-Loir",
				state_code: "28"
			},
			{
				id: 4995,
				name: "Finistère",
				state_code: "29"
			},
			{
				id: 4822,
				name: "French Guiana",
				state_code: "973"
			},
			{
				id: 4824,
				name: "French Polynesia",
				state_code: "PF"
			},
			{
				id: 5065,
				name: "French Southern and Antarctic Lands",
				state_code: "TF"
			},
			{
				id: 4998,
				name: "Gard",
				state_code: "30"
			},
			{
				id: 5000,
				name: "Gers",
				state_code: "32"
			},
			{
				id: 5001,
				name: "Gironde",
				state_code: "33"
			},
			{
				id: 4820,
				name: "Grand-Est",
				state_code: "GES"
			},
			{
				id: 4829,
				name: "Guadeloupe",
				state_code: "971"
			},
			{
				id: 5036,
				name: "Haut-Rhin",
				state_code: "68"
			},
			{
				id: 4997,
				name: "Haute-Corse",
				state_code: "2B"
			},
			{
				id: 4999,
				name: "Haute-Garonne",
				state_code: "31"
			},
			{
				id: 5011,
				name: "Haute-Loire",
				state_code: "43"
			},
			{
				id: 5020,
				name: "Haute-Marne",
				state_code: "52"
			},
			{
				id: 5039,
				name: "Haute-Saône",
				state_code: "70"
			},
			{
				id: 5043,
				name: "Haute-Savoie",
				state_code: "74"
			},
			{
				id: 5055,
				name: "Haute-Vienne\t",
				state_code: "87"
			},
			{
				id: 4971,
				name: "Hautes-Alpes\t",
				state_code: "05"
			},
			{
				id: 5033,
				name: "Hautes-Pyrénées",
				state_code: "65"
			},
			{
				id: 4828,
				name: "Hauts-de-France",
				state_code: "HDF"
			},
			{
				id: 5060,
				name: "Hauts-de-Seine",
				state_code: "92"
			},
			{
				id: 5002,
				name: "Hérault",
				state_code: "34"
			},
			{
				id: 4796,
				name: "Île-de-France",
				state_code: "IDF"
			},
			{
				id: 5003,
				name: "Ille-et-Vilaine",
				state_code: "35"
			},
			{
				id: 5004,
				name: "Indre",
				state_code: "36"
			},
			{
				id: 5005,
				name: "Indre-et-Loire",
				state_code: "37"
			},
			{
				id: 5006,
				name: "Isère",
				state_code: "38"
			},
			{
				id: 5007,
				name: "Jura",
				state_code: "39"
			},
			{
				id: 4823,
				name: "La Réunion",
				state_code: "974"
			},
			{
				id: 5008,
				name: "Landes",
				state_code: "40"
			},
			{
				id: 5009,
				name: "Loir-et-Cher",
				state_code: "41"
			},
			{
				id: 5010,
				name: "Loire",
				state_code: "42"
			},
			{
				id: 5012,
				name: "Loire-Atlantique",
				state_code: "44"
			},
			{
				id: 5013,
				name: "Loiret",
				state_code: "45"
			},
			{
				id: 5014,
				name: "Lot",
				state_code: "46"
			},
			{
				id: 5015,
				name: "Lot-et-Garonne",
				state_code: "47"
			},
			{
				id: 5016,
				name: "Lozère",
				state_code: "48"
			},
			{
				id: 5017,
				name: "Maine-et-Loire",
				state_code: "49"
			},
			{
				id: 5018,
				name: "Manche",
				state_code: "50"
			},
			{
				id: 5019,
				name: "Marne",
				state_code: "51"
			},
			{
				id: 4827,
				name: "Martinique",
				state_code: "972"
			},
			{
				id: 5021,
				name: "Mayenne",
				state_code: "53"
			},
			{
				id: 4797,
				name: "Mayotte",
				state_code: "976"
			},
			{
				id: 5038,
				name: "Métropole de Lyon",
				state_code: "69M"
			},
			{
				id: 5022,
				name: "Meurthe-et-Moselle",
				state_code: "54"
			},
			{
				id: 5023,
				name: "Meuse",
				state_code: "55"
			},
			{
				id: 5024,
				name: "Morbihan",
				state_code: "56"
			},
			{
				id: 5025,
				name: "Moselle",
				state_code: "57"
			},
			{
				id: 5026,
				name: "Nièvre",
				state_code: "58"
			},
			{
				id: 5027,
				name: "Nord",
				state_code: "59"
			},
			{
				id: 4804,
				name: "Normandie",
				state_code: "NOR"
			},
			{
				id: 4795,
				name: "Nouvelle-Aquitaine",
				state_code: "NAQ"
			},
			{
				id: 4799,
				name: "Occitanie",
				state_code: "OCC"
			},
			{
				id: 5028,
				name: "Oise",
				state_code: "60"
			},
			{
				id: 5029,
				name: "Orne",
				state_code: "61"
			},
			{
				id: 4816,
				name: "Paris",
				state_code: "75C"
			},
			{
				id: 5030,
				name: "Pas-de-Calais",
				state_code: "62"
			},
			{
				id: 4802,
				name: "Pays-de-la-Loire",
				state_code: "PDL"
			},
			{
				id: 4812,
				name: "Provence-Alpes-Côte-d’Azur",
				state_code: "PAC"
			},
			{
				id: 5031,
				name: "Puy-de-Dôme",
				state_code: "63"
			},
			{
				id: 5032,
				name: "Pyrénées-Atlantiques",
				state_code: "64"
			},
			{
				id: 5034,
				name: "Pyrénées-Orientales",
				state_code: "66"
			},
			{
				id: 5037,
				name: "Rhône",
				state_code: "69"
			},
			{
				id: 4821,
				name: "Saint Pierre and Miquelon",
				state_code: "PM"
			},
			{
				id: 4794,
				name: "Saint-Barthélemy",
				state_code: "BL"
			},
			{
				id: 4809,
				name: "Saint-Martin",
				state_code: "MF"
			},
			{
				id: 5040,
				name: "Saône-et-Loire",
				state_code: "71"
			},
			{
				id: 5041,
				name: "Sarthe",
				state_code: "72"
			},
			{
				id: 5042,
				name: "Savoie",
				state_code: "73"
			},
			{
				id: 5045,
				name: "Seine-et-Marne",
				state_code: "77"
			},
			{
				id: 5044,
				name: "Seine-Maritime",
				state_code: "76"
			},
			{
				id: 5061,
				name: "Seine-Saint-Denis",
				state_code: "93"
			},
			{
				id: 5048,
				name: "Somme",
				state_code: "80"
			},
			{
				id: 5049,
				name: "Tarn",
				state_code: "81"
			},
			{
				id: 5050,
				name: "Tarn-et-Garonne",
				state_code: "82"
			},
			{
				id: 5058,
				name: "Territoire de Belfort",
				state_code: "90"
			},
			{
				id: 5063,
				name: "Val-d'Oise",
				state_code: "95"
			},
			{
				id: 5062,
				name: "Val-de-Marne\t",
				state_code: "94"
			},
			{
				id: 5051,
				name: "Var",
				state_code: "83"
			},
			{
				id: 5052,
				name: "Vaucluse",
				state_code: "84"
			},
			{
				id: 5053,
				name: "Vendée",
				state_code: "85"
			},
			{
				id: 5054,
				name: "Vienne",
				state_code: "86"
			},
			{
				id: 5056,
				name: "Vosges",
				state_code: "88"
			},
			{
				id: 4810,
				name: "Wallis and Futuna",
				state_code: "WF"
			},
			{
				id: 5057,
				name: "Yonne",
				state_code: "89"
			},
			{
				id: 5046,
				name: "Yvelines",
				state_code: "78"
			}
		]
	},
	{
		name: "French Guiana",
		iso3: "GUF",
		iso2: "GF",
		numeric_code: "254",
		phone_code: "594",
		emoji: "🇬🇫",
		emojiU: "U+1F1EC U+1F1EB",
		states: [
		]
	},
	{
		name: "French Polynesia",
		iso3: "PYF",
		iso2: "PF",
		numeric_code: "258",
		phone_code: "689",
		emoji: "🇵🇫",
		emojiU: "U+1F1F5 U+1F1EB",
		states: [
		]
	},
	{
		name: "French Southern Territories",
		iso3: "ATF",
		iso2: "TF",
		numeric_code: "260",
		phone_code: "262",
		emoji: "🇹🇫",
		emojiU: "U+1F1F9 U+1F1EB",
		states: [
		]
	},
	{
		name: "Gabon",
		iso3: "GAB",
		iso2: "GA",
		numeric_code: "266",
		phone_code: "241",
		emoji: "🇬🇦",
		emojiU: "U+1F1EC U+1F1E6",
		states: [
			{
				id: 2727,
				name: "Estuaire Province",
				state_code: "1"
			},
			{
				id: 2726,
				name: "Haut-Ogooué Province",
				state_code: "2"
			},
			{
				id: 2730,
				name: "Moyen-Ogooué Province",
				state_code: "3"
			},
			{
				id: 2731,
				name: "Ngounié Province",
				state_code: "4"
			},
			{
				id: 2725,
				name: "Nyanga Province",
				state_code: "5"
			},
			{
				id: 2724,
				name: "Ogooué-Ivindo Province",
				state_code: "6"
			},
			{
				id: 2729,
				name: "Ogooué-Lolo Province",
				state_code: "7"
			},
			{
				id: 2728,
				name: "Ogooué-Maritime Province",
				state_code: "8"
			},
			{
				id: 2723,
				name: "Woleu-Ntem Province",
				state_code: "9"
			}
		]
	},
	{
		name: "Gambia The",
		iso3: "GMB",
		iso2: "GM",
		numeric_code: "270",
		phone_code: "220",
		emoji: "🇬🇲",
		emojiU: "U+1F1EC U+1F1F2",
		states: [
			{
				id: 2666,
				name: "Banjul",
				state_code: "B"
			},
			{
				id: 2669,
				name: "Central River Division",
				state_code: "M"
			},
			{
				id: 2670,
				name: "Lower River Division",
				state_code: "L"
			},
			{
				id: 2671,
				name: "North Bank Division",
				state_code: "N"
			},
			{
				id: 2668,
				name: "Upper River Division",
				state_code: "U"
			},
			{
				id: 2667,
				name: "West Coast Division",
				state_code: "W"
			}
		]
	},
	{
		name: "Georgia",
		iso3: "GEO",
		iso2: "GE",
		numeric_code: "268",
		phone_code: "995",
		emoji: "🇬🇪",
		emojiU: "U+1F1EC U+1F1EA",
		states: [
			{
				id: 900,
				name: "Adjara",
				state_code: "AJ"
			},
			{
				id: 901,
				name: "Autonomous Republic of Abkhazia",
				state_code: "AB"
			},
			{
				id: 907,
				name: "Guria",
				state_code: "GU"
			},
			{
				id: 905,
				name: "Imereti",
				state_code: "IM"
			},
			{
				id: 910,
				name: "Kakheti",
				state_code: "KA"
			},
			{
				id: 897,
				name: "Khelvachauri Municipality",
				state_code: "29"
			},
			{
				id: 904,
				name: "Kvemo Kartli",
				state_code: "KK"
			},
			{
				id: 902,
				name: "Mtskheta-Mtianeti",
				state_code: "MM"
			},
			{
				id: 909,
				name: "Racha-Lechkhumi and Kvemo Svaneti",
				state_code: "RL"
			},
			{
				id: 908,
				name: "Samegrelo-Zemo Svaneti",
				state_code: "SZ"
			},
			{
				id: 906,
				name: "Samtskhe-Javakheti",
				state_code: "SJ"
			},
			{
				id: 898,
				name: "Senaki Municipality",
				state_code: "50"
			},
			{
				id: 903,
				name: "Shida Kartli",
				state_code: "SK"
			},
			{
				id: 899,
				name: "Tbilisi",
				state_code: "TB"
			}
		]
	},
	{
		name: "Germany",
		iso3: "DEU",
		iso2: "DE",
		numeric_code: "276",
		phone_code: "49",
		emoji: "🇩🇪",
		emojiU: "U+1F1E9 U+1F1EA",
		states: [
			{
				id: 3006,
				name: "Baden-Württemberg",
				state_code: "BW"
			},
			{
				id: 3009,
				name: "Bavaria",
				state_code: "BY"
			},
			{
				id: 3010,
				name: "Berlin",
				state_code: "BE"
			},
			{
				id: 3013,
				name: "Brandenburg",
				state_code: "BB"
			},
			{
				id: 3014,
				name: "Bremen",
				state_code: "HB"
			},
			{
				id: 3016,
				name: "Hamburg",
				state_code: "HH"
			},
			{
				id: 3018,
				name: "Hesse",
				state_code: "HE"
			},
			{
				id: 3008,
				name: "Lower Saxony",
				state_code: "NI"
			},
			{
				id: 3007,
				name: "Mecklenburg-Vorpommern",
				state_code: "MV"
			},
			{
				id: 3017,
				name: "North Rhine-Westphalia",
				state_code: "NW"
			},
			{
				id: 3019,
				name: "Rhineland-Palatinate",
				state_code: "RP"
			},
			{
				id: 3020,
				name: "Saarland",
				state_code: "SL"
			},
			{
				id: 3021,
				name: "Saxony",
				state_code: "SN"
			},
			{
				id: 3011,
				name: "Saxony-Anhalt",
				state_code: "ST"
			},
			{
				id: 3005,
				name: "Schleswig-Holstein",
				state_code: "SH"
			},
			{
				id: 3015,
				name: "Thuringia",
				state_code: "TH"
			}
		]
	},
	{
		name: "Ghana",
		iso3: "GHA",
		iso2: "GH",
		numeric_code: "288",
		phone_code: "233",
		emoji: "🇬🇭",
		emojiU: "U+1F1EC U+1F1ED",
		states: [
			{
				id: 53,
				name: "Ahafo",
				state_code: "AF"
			},
			{
				id: 48,
				name: "Ashanti",
				state_code: "AH"
			},
			{
				id: 4959,
				name: "Bono",
				state_code: "BO"
			},
			{
				id: 4958,
				name: "Bono East",
				state_code: "BE"
			},
			{
				id: 52,
				name: "Central",
				state_code: "CP"
			},
			{
				id: 50,
				name: "Eastern",
				state_code: "EP"
			},
			{
				id: 54,
				name: "Greater Accra",
				state_code: "AA"
			},
			{
				id: 4960,
				name: "North East",
				state_code: "NE"
			},
			{
				id: 51,
				name: "Northern",
				state_code: "NP"
			},
			{
				id: 4961,
				name: "Oti",
				state_code: "OT"
			},
			{
				id: 4962,
				name: "Savannah",
				state_code: "SV"
			},
			{
				id: 55,
				name: "Upper East",
				state_code: "UE"
			},
			{
				id: 57,
				name: "Upper West",
				state_code: "UW"
			},
			{
				id: 56,
				name: "Volta",
				state_code: "TV"
			},
			{
				id: 49,
				name: "Western",
				state_code: "WP"
			},
			{
				id: 4963,
				name: "Western North",
				state_code: "WN"
			}
		]
	},
	{
		name: "Gibraltar",
		iso3: "GIB",
		iso2: "GI",
		numeric_code: "292",
		phone_code: "350",
		emoji: "🇬🇮",
		emojiU: "U+1F1EC U+1F1EE",
		states: [
		]
	},
	{
		name: "Greece",
		iso3: "GRC",
		iso2: "GR",
		numeric_code: "300",
		phone_code: "30",
		emoji: "🇬🇷",
		emojiU: "U+1F1EC U+1F1F7",
		states: [
			{
				id: 2116,
				name: "Achaea Regional Unit",
				state_code: "13"
			},
			{
				id: 2123,
				name: "Aetolia-Acarnania Regional Unit",
				state_code: "01"
			},
			{
				id: 2098,
				name: "Arcadia Prefecture",
				state_code: "12"
			},
			{
				id: 2105,
				name: "Argolis Regional Unit",
				state_code: "11"
			},
			{
				id: 2122,
				name: "Attica Region",
				state_code: "I"
			},
			{
				id: 2126,
				name: "Boeotia Regional Unit",
				state_code: "03"
			},
			{
				id: 2128,
				name: "Central Greece Region",
				state_code: "H"
			},
			{
				id: 2125,
				name: "Central Macedonia",
				state_code: "B"
			},
			{
				id: 2115,
				name: "Chania Regional Unit",
				state_code: "94"
			},
			{
				id: 2124,
				name: "Corfu Prefecture",
				state_code: "22"
			},
			{
				id: 2129,
				name: "Corinthia Regional Unit",
				state_code: "15"
			},
			{
				id: 2109,
				name: "Crete Region",
				state_code: "M"
			},
			{
				id: 2130,
				name: "Drama Regional Unit",
				state_code: "52"
			},
			{
				id: 2120,
				name: "East Attica Regional Unit",
				state_code: "A2"
			},
			{
				id: 2117,
				name: "East Macedonia and Thrace",
				state_code: "A"
			},
			{
				id: 2110,
				name: "Epirus Region",
				state_code: "D"
			},
			{
				id: 2101,
				name: "Euboea",
				state_code: "04"
			},
			{
				id: 2102,
				name: "Grevena Prefecture",
				state_code: "51"
			},
			{
				id: 2099,
				name: "Imathia Regional Unit",
				state_code: "53"
			},
			{
				id: 2113,
				name: "Ioannina Regional Unit",
				state_code: "33"
			},
			{
				id: 2131,
				name: "Ionian Islands Region",
				state_code: "F"
			},
			{
				id: 2095,
				name: "Karditsa Regional Unit",
				state_code: "41"
			},
			{
				id: 2100,
				name: "Kastoria Regional Unit",
				state_code: "56"
			},
			{
				id: 2127,
				name: "Kefalonia Prefecture",
				state_code: "23"
			},
			{
				id: 2111,
				name: "Kilkis Regional Unit",
				state_code: "57"
			},
			{
				id: 2112,
				name: "Kozani Prefecture",
				state_code: "58"
			},
			{
				id: 2106,
				name: "Laconia",
				state_code: "16"
			},
			{
				id: 2132,
				name: "Larissa Prefecture",
				state_code: "42"
			},
			{
				id: 2104,
				name: "Lefkada Regional Unit",
				state_code: "24"
			},
			{
				id: 2107,
				name: "Pella Regional Unit",
				state_code: "59"
			},
			{
				id: 2119,
				name: "Peloponnese Region",
				state_code: "J"
			},
			{
				id: 2114,
				name: "Phthiotis Prefecture",
				state_code: "06"
			},
			{
				id: 2103,
				name: "Preveza Prefecture",
				state_code: "34"
			},
			{
				id: 2121,
				name: "Serres Prefecture",
				state_code: "62"
			},
			{
				id: 2118,
				name: "South Aegean",
				state_code: "L"
			},
			{
				id: 2097,
				name: "Thessaloniki Regional Unit",
				state_code: "54"
			},
			{
				id: 2096,
				name: "West Greece Region",
				state_code: "G"
			},
			{
				id: 2108,
				name: "West Macedonia Region",
				state_code: "C"
			}
		]
	},
	{
		name: "Greenland",
		iso3: "GRL",
		iso2: "GL",
		numeric_code: "304",
		phone_code: "299",
		emoji: "🇬🇱",
		emojiU: "U+1F1EC U+1F1F1",
		states: [
		]
	},
	{
		name: "Grenada",
		iso3: "GRD",
		iso2: "GD",
		numeric_code: "308",
		phone_code: "+1-473",
		emoji: "🇬🇩",
		emojiU: "U+1F1EC U+1F1E9",
		states: [
			{
				id: 3867,
				name: "Carriacou and Petite Martinique",
				state_code: "10"
			},
			{
				id: 3865,
				name: "Saint Andrew Parish",
				state_code: "01"
			},
			{
				id: 3869,
				name: "Saint David Parish",
				state_code: "02"
			},
			{
				id: 3864,
				name: "Saint George Parish",
				state_code: "03"
			},
			{
				id: 3868,
				name: "Saint John Parish",
				state_code: "04"
			},
			{
				id: 3866,
				name: "Saint Mark Parish",
				state_code: "05"
			},
			{
				id: 3863,
				name: "Saint Patrick Parish",
				state_code: "06"
			}
		]
	},
	{
		name: "Guadeloupe",
		iso3: "GLP",
		iso2: "GP",
		numeric_code: "312",
		phone_code: "590",
		emoji: "🇬🇵",
		emojiU: "U+1F1EC U+1F1F5",
		states: [
		]
	},
	{
		name: "Guam",
		iso3: "GUM",
		iso2: "GU",
		numeric_code: "316",
		phone_code: "+1-671",
		emoji: "🇬🇺",
		emojiU: "U+1F1EC U+1F1FA",
		states: [
		]
	},
	{
		name: "Guatemala",
		iso3: "GTM",
		iso2: "GT",
		numeric_code: "320",
		phone_code: "502",
		emoji: "🇬🇹",
		emojiU: "U+1F1EC U+1F1F9",
		states: [
			{
				id: 3671,
				name: "Alta Verapaz Department",
				state_code: "AV"
			},
			{
				id: 3674,
				name: "Baja Verapaz Department",
				state_code: "BV"
			},
			{
				id: 3675,
				name: "Chimaltenango Department",
				state_code: "CM"
			},
			{
				id: 3666,
				name: "Chiquimula Department",
				state_code: "CQ"
			},
			{
				id: 3662,
				name: "El Progreso Department",
				state_code: "PR"
			},
			{
				id: 3677,
				name: "Escuintla Department",
				state_code: "ES"
			},
			{
				id: 3672,
				name: "Guatemala Department",
				state_code: "GU"
			},
			{
				id: 3670,
				name: "Huehuetenango Department",
				state_code: "HU"
			},
			{
				id: 3659,
				name: "Izabal Department",
				state_code: "IZ"
			},
			{
				id: 3658,
				name: "Jalapa Department",
				state_code: "JA"
			},
			{
				id: 3673,
				name: "Jutiapa Department",
				state_code: "JU"
			},
			{
				id: 3669,
				name: "Petén Department",
				state_code: "PE"
			},
			{
				id: 3668,
				name: "Quetzaltenango Department",
				state_code: "QZ"
			},
			{
				id: 3657,
				name: "Quiché Department",
				state_code: "QC"
			},
			{
				id: 3664,
				name: "Retalhuleu Department",
				state_code: "RE"
			},
			{
				id: 3676,
				name: "Sacatepéquez Department",
				state_code: "SA"
			},
			{
				id: 3667,
				name: "San Marcos Department",
				state_code: "SM"
			},
			{
				id: 3665,
				name: "Santa Rosa Department",
				state_code: "SR"
			},
			{
				id: 3661,
				name: "Sololá Department",
				state_code: "SO"
			},
			{
				id: 3660,
				name: "Suchitepéquez Department",
				state_code: "SU"
			},
			{
				id: 3663,
				name: "Totonicapán Department",
				state_code: "TO"
			}
		]
	},
	{
		name: "Guernsey and Alderney",
		iso3: "GGY",
		iso2: "GG",
		numeric_code: "831",
		phone_code: "+44-1481",
		emoji: "🇬🇬",
		emojiU: "U+1F1EC U+1F1EC",
		states: [
		]
	},
	{
		name: "Guinea",
		iso3: "GIN",
		iso2: "GN",
		numeric_code: "324",
		phone_code: "224",
		emoji: "🇬🇳",
		emojiU: "U+1F1EC U+1F1F3",
		states: [
			{
				id: 2672,
				name: "Beyla Prefecture",
				state_code: "BE"
			},
			{
				id: 2699,
				name: "Boffa Prefecture",
				state_code: "BF"
			},
			{
				id: 2709,
				name: "Boké Prefecture",
				state_code: "BK"
			},
			{
				id: 2676,
				name: "Boké Region",
				state_code: "B"
			},
			{
				id: 2686,
				name: "Conakry",
				state_code: "C"
			},
			{
				id: 2705,
				name: "Coyah Prefecture",
				state_code: "CO"
			},
			{
				id: 2679,
				name: "Dabola Prefecture",
				state_code: "DB"
			},
			{
				id: 2706,
				name: "Dalaba Prefecture",
				state_code: "DL"
			},
			{
				id: 2688,
				name: "Dinguiraye Prefecture",
				state_code: "DI"
			},
			{
				id: 2681,
				name: "Dubréka Prefecture",
				state_code: "DU"
			},
			{
				id: 2682,
				name: "Faranah Prefecture",
				state_code: "FA"
			},
			{
				id: 2683,
				name: "Forécariah Prefecture",
				state_code: "FO"
			},
			{
				id: 2675,
				name: "Fria Prefecture",
				state_code: "FR"
			},
			{
				id: 2685,
				name: "Gaoual Prefecture",
				state_code: "GA"
			},
			{
				id: 2711,
				name: "Guéckédou Prefecture",
				state_code: "GU"
			},
			{
				id: 2704,
				name: "Kankan Prefecture",
				state_code: "KA"
			},
			{
				id: 2697,
				name: "Kankan Region",
				state_code: "K"
			},
			{
				id: 2710,
				name: "Kérouané Prefecture",
				state_code: "KE"
			},
			{
				id: 2693,
				name: "Kindia Prefecture",
				state_code: "KD"
			},
			{
				id: 2701,
				name: "Kindia Region",
				state_code: "D"
			},
			{
				id: 2691,
				name: "Kissidougou Prefecture",
				state_code: "KS"
			},
			{
				id: 2692,
				name: "Koubia Prefecture",
				state_code: "KB"
			},
			{
				id: 2703,
				name: "Koundara Prefecture",
				state_code: "KN"
			},
			{
				id: 2695,
				name: "Kouroussa Prefecture",
				state_code: "KO"
			},
			{
				id: 2680,
				name: "Labé Prefecture",
				state_code: "LA"
			},
			{
				id: 2677,
				name: "Labé Region",
				state_code: "L"
			},
			{
				id: 2690,
				name: "Lélouma Prefecture",
				state_code: "LE"
			},
			{
				id: 2708,
				name: "Lola Prefecture",
				state_code: "LO"
			},
			{
				id: 2702,
				name: "Macenta Prefecture",
				state_code: "MC"
			},
			{
				id: 2700,
				name: "Mali Prefecture",
				state_code: "ML"
			},
			{
				id: 2689,
				name: "Mamou Prefecture",
				state_code: "MM"
			},
			{
				id: 2698,
				name: "Mamou Region",
				state_code: "M"
			},
			{
				id: 2673,
				name: "Mandiana Prefecture",
				state_code: "MD"
			},
			{
				id: 2678,
				name: "Nzérékoré Prefecture",
				state_code: "NZ"
			},
			{
				id: 2684,
				name: "Nzérékoré Region",
				state_code: "N"
			},
			{
				id: 2694,
				name: "Pita Prefecture",
				state_code: "PI"
			},
			{
				id: 2707,
				name: "Siguiri Prefecture",
				state_code: "SI"
			},
			{
				id: 2687,
				name: "Télimélé Prefecture",
				state_code: "TE"
			},
			{
				id: 2696,
				name: "Tougué Prefecture",
				state_code: "TO"
			},
			{
				id: 2674,
				name: "Yomou Prefecture",
				state_code: "YO"
			}
		]
	},
	{
		name: "Guinea-Bissau",
		iso3: "GNB",
		iso2: "GW",
		numeric_code: "624",
		phone_code: "245",
		emoji: "🇬🇼",
		emojiU: "U+1F1EC U+1F1FC",
		states: [
			{
				id: 2720,
				name: "Bafatá",
				state_code: "BA"
			},
			{
				id: 2714,
				name: "Biombo Region",
				state_code: "BM"
			},
			{
				id: 2722,
				name: "Bolama Region",
				state_code: "BL"
			},
			{
				id: 2713,
				name: "Cacheu Region",
				state_code: "CA"
			},
			{
				id: 2719,
				name: "Gabú Region",
				state_code: "GA"
			},
			{
				id: 2721,
				name: "Leste Province",
				state_code: "L"
			},
			{
				id: 2717,
				name: "Norte Province",
				state_code: "N"
			},
			{
				id: 2718,
				name: "Oio Region",
				state_code: "OI"
			},
			{
				id: 2715,
				name: "Quinara Region",
				state_code: "QU"
			},
			{
				id: 2716,
				name: "Sul Province",
				state_code: "S"
			},
			{
				id: 2712,
				name: "Tombali Region",
				state_code: "TO"
			}
		]
	},
	{
		name: "Guyana",
		iso3: "GUY",
		iso2: "GY",
		numeric_code: "328",
		phone_code: "592",
		emoji: "🇬🇾",
		emojiU: "U+1F1EC U+1F1FE",
		states: [
			{
				id: 2764,
				name: "Barima-Waini",
				state_code: "BA"
			},
			{
				id: 2760,
				name: "Cuyuni-Mazaruni",
				state_code: "CU"
			},
			{
				id: 2767,
				name: "Demerara-Mahaica",
				state_code: "DE"
			},
			{
				id: 2766,
				name: "East Berbice-Corentyne",
				state_code: "EB"
			},
			{
				id: 2768,
				name: "Essequibo Islands-West Demerara",
				state_code: "ES"
			},
			{
				id: 2762,
				name: "Mahaica-Berbice",
				state_code: "MA"
			},
			{
				id: 2765,
				name: "Pomeroon-Supenaam",
				state_code: "PM"
			},
			{
				id: 2761,
				name: "Potaro-Siparuni",
				state_code: "PT"
			},
			{
				id: 2763,
				name: "Upper Demerara-Berbice",
				state_code: "UD"
			},
			{
				id: 2769,
				name: "Upper Takutu-Upper Essequibo",
				state_code: "UT"
			}
		]
	},
	{
		name: "Haiti",
		iso3: "HTI",
		iso2: "HT",
		numeric_code: "332",
		phone_code: "509",
		emoji: "🇭🇹",
		emojiU: "U+1F1ED U+1F1F9",
		states: [
			{
				id: 4123,
				name: "Artibonite",
				state_code: "AR"
			},
			{
				id: 4125,
				name: "Centre",
				state_code: "CE"
			},
			{
				id: 4119,
				name: "Grand'Anse",
				state_code: "GA"
			},
			{
				id: 4118,
				name: "Nippes",
				state_code: "NI"
			},
			{
				id: 4117,
				name: "Nord",
				state_code: "ND"
			},
			{
				id: 4121,
				name: "Nord-Est",
				state_code: "NE"
			},
			{
				id: 4126,
				name: "Nord-Ouest",
				state_code: "NO"
			},
			{
				id: 4120,
				name: "Ouest",
				state_code: "OU"
			},
			{
				id: 4122,
				name: "Sud",
				state_code: "SD"
			},
			{
				id: 4124,
				name: "Sud-Est",
				state_code: "SE"
			}
		]
	},
	{
		name: "Heard Island and McDonald Islands",
		iso3: "HMD",
		iso2: "HM",
		numeric_code: "334",
		phone_code: "672",
		emoji: "🇭🇲",
		emojiU: "U+1F1ED U+1F1F2",
		states: [
		]
	},
	{
		name: "Honduras",
		iso3: "HND",
		iso2: "HN",
		numeric_code: "340",
		phone_code: "504",
		emoji: "🇭🇳",
		emojiU: "U+1F1ED U+1F1F3",
		states: [
			{
				id: 4047,
				name: "Atlántida Department",
				state_code: "AT"
			},
			{
				id: 4045,
				name: "Bay Islands Department",
				state_code: "IB"
			},
			{
				id: 4041,
				name: "Choluteca Department",
				state_code: "CH"
			},
			{
				id: 4051,
				name: "Colón Department",
				state_code: "CL"
			},
			{
				id: 4042,
				name: "Comayagua Department",
				state_code: "CM"
			},
			{
				id: 4049,
				name: "Copán Department",
				state_code: "CP"
			},
			{
				id: 4046,
				name: "Cortés Department",
				state_code: "CR"
			},
			{
				id: 4043,
				name: "El Paraíso Department",
				state_code: "EP"
			},
			{
				id: 4052,
				name: "Francisco Morazán Department",
				state_code: "FM"
			},
			{
				id: 4048,
				name: "Gracias a Dios Department",
				state_code: "GD"
			},
			{
				id: 4044,
				name: "Intibucá Department",
				state_code: "IN"
			},
			{
				id: 4058,
				name: "La Paz Department",
				state_code: "LP"
			},
			{
				id: 4054,
				name: "Lempira Department",
				state_code: "LE"
			},
			{
				id: 4056,
				name: "Ocotepeque Department",
				state_code: "OC"
			},
			{
				id: 4050,
				name: "Olancho Department",
				state_code: "OL"
			},
			{
				id: 4053,
				name: "Santa Bárbara Department",
				state_code: "SB"
			},
			{
				id: 4055,
				name: "Valle Department",
				state_code: "VA"
			},
			{
				id: 4057,
				name: "Yoro Department",
				state_code: "YO"
			}
		]
	},
	{
		name: "Hong Kong S.A.R.",
		iso3: "HKG",
		iso2: "HK",
		numeric_code: "344",
		phone_code: "852",
		emoji: "🇭🇰",
		emojiU: "U+1F1ED U+1F1F0",
		states: [
			{
				id: 4889,
				name: "Central and Western District",
				state_code: "HCW"
			},
			{
				id: 4891,
				name: "Eastern",
				state_code: "HEA"
			},
			{
				id: 4888,
				name: "Islands District",
				state_code: "NIS"
			},
			{
				id: 4895,
				name: "Kowloon City",
				state_code: "KKC"
			},
			{
				id: 4898,
				name: "Kwai Tsing",
				state_code: "NKT"
			},
			{
				id: 4897,
				name: "Kwun Tong",
				state_code: "KKT"
			},
			{
				id: 4900,
				name: "North",
				state_code: "NNO"
			},
			{
				id: 4887,
				name: "Sai Kung District",
				state_code: "NSK"
			},
			{
				id: 4901,
				name: "Sha Tin",
				state_code: "NST"
			},
			{
				id: 4894,
				name: "Sham Shui Po",
				state_code: "KSS"
			},
			{
				id: 4892,
				name: "Southern",
				state_code: "HSO"
			},
			{
				id: 4885,
				name: "Tai Po District",
				state_code: "NTP"
			},
			{
				id: 4884,
				name: "Tsuen Wan District",
				state_code: "NTW"
			},
			{
				id: 4899,
				name: "Tuen Mun",
				state_code: "NTM"
			},
			{
				id: 4890,
				name: "Wan Chai",
				state_code: "HWC"
			},
			{
				id: 4896,
				name: "Wong Tai Sin",
				state_code: "KWT"
			},
			{
				id: 4893,
				name: "Yau Tsim Mong",
				state_code: "KYT"
			},
			{
				id: 4883,
				name: "Yuen Long District",
				state_code: "NYL"
			}
		]
	},
	{
		name: "Hungary",
		iso3: "HUN",
		iso2: "HU",
		numeric_code: "348",
		phone_code: "36",
		emoji: "🇭🇺",
		emojiU: "U+1F1ED U+1F1FA",
		states: [
			{
				id: 1048,
				name: "Bács-Kiskun County",
				state_code: "BK"
			},
			{
				id: 1055,
				name: "Baranya County",
				state_code: "BA"
			},
			{
				id: 1060,
				name: "Békés County",
				state_code: "BE"
			},
			{
				id: 1036,
				name: "Békéscsaba",
				state_code: "BC"
			},
			{
				id: 1058,
				name: "Borsod-Abaúj-Zemplén County",
				state_code: "BZ"
			},
			{
				id: 1064,
				name: "Budapest",
				state_code: "BU"
			},
			{
				id: 1031,
				name: "Csongrád County",
				state_code: "CS"
			},
			{
				id: 1032,
				name: "Debrecen",
				state_code: "DE"
			},
			{
				id: 1049,
				name: "Dunaújváros",
				state_code: "DU"
			},
			{
				id: 1037,
				name: "Eger",
				state_code: "EG"
			},
			{
				id: 1028,
				name: "Érd",
				state_code: "ER"
			},
			{
				id: 1044,
				name: "Fejér County",
				state_code: "FE"
			},
			{
				id: 1041,
				name: "Győr",
				state_code: "GY"
			},
			{
				id: 1042,
				name: "Győr-Moson-Sopron County",
				state_code: "GS"
			},
			{
				id: 1063,
				name: "Hajdú-Bihar County",
				state_code: "HB"
			},
			{
				id: 1040,
				name: "Heves County",
				state_code: "HE"
			},
			{
				id: 1027,
				name: "Hódmezővásárhely",
				state_code: "HV"
			},
			{
				id: 1043,
				name: "Jász-Nagykun-Szolnok County",
				state_code: "JN"
			},
			{
				id: 1067,
				name: "Kaposvár",
				state_code: "KV"
			},
			{
				id: 1056,
				name: "Kecskemét",
				state_code: "KM"
			},
			{
				id: 1065,
				name: "Miskolc",
				state_code: "MI"
			},
			{
				id: 1030,
				name: "Nagykanizsa",
				state_code: "NK"
			},
			{
				id: 1051,
				name: "Nógrád County",
				state_code: "NO"
			},
			{
				id: 1034,
				name: "Nyíregyháza",
				state_code: "NY"
			},
			{
				id: 1053,
				name: "Pécs",
				state_code: "PS"
			},
			{
				id: 1059,
				name: "Pest County",
				state_code: "PE"
			},
			{
				id: 1068,
				name: "Salgótarján",
				state_code: "ST"
			},
			{
				id: 1035,
				name: "Somogy County",
				state_code: "SO"
			},
			{
				id: 1057,
				name: "Sopron",
				state_code: "SN"
			},
			{
				id: 1045,
				name: "Szabolcs-Szatmár-Bereg County",
				state_code: "SZ"
			},
			{
				id: 1029,
				name: "Szeged",
				state_code: "SD"
			},
			{
				id: 1033,
				name: "Székesfehérvár",
				state_code: "SF"
			},
			{
				id: 1061,
				name: "Szekszárd",
				state_code: "SS"
			},
			{
				id: 1047,
				name: "Szolnok",
				state_code: "SK"
			},
			{
				id: 1052,
				name: "Szombathely",
				state_code: "SH"
			},
			{
				id: 1066,
				name: "Tatabánya",
				state_code: "TB"
			},
			{
				id: 1038,
				name: "Tolna County",
				state_code: "TO"
			},
			{
				id: 1039,
				name: "Vas County",
				state_code: "VA"
			},
			{
				id: 1062,
				name: "Veszprém",
				state_code: "VM"
			},
			{
				id: 1054,
				name: "Veszprém County",
				state_code: "VE"
			},
			{
				id: 1046,
				name: "Zala County",
				state_code: "ZA"
			},
			{
				id: 1050,
				name: "Zalaegerszeg",
				state_code: "ZE"
			}
		]
	},
	{
		name: "Iceland",
		iso3: "ISL",
		iso2: "IS",
		numeric_code: "352",
		phone_code: "354",
		emoji: "🇮🇸",
		emojiU: "U+1F1EE U+1F1F8",
		states: [
			{
				id: 3431,
				name: "Capital Region",
				state_code: "1"
			},
			{
				id: 3433,
				name: "Eastern Region",
				state_code: "7"
			},
			{
				id: 3437,
				name: "Northeastern Region",
				state_code: "6"
			},
			{
				id: 3435,
				name: "Northwestern Region",
				state_code: "5"
			},
			{
				id: 3430,
				name: "Southern Peninsula Region",
				state_code: "2"
			},
			{
				id: 3434,
				name: "Southern Region",
				state_code: "8"
			},
			{
				id: 3436,
				name: "Western Region",
				state_code: "3"
			},
			{
				id: 3432,
				name: "Westfjords",
				state_code: "4"
			}
		]
	},
	{
		name: "India",
		iso3: "IND",
		iso2: "IN",
		numeric_code: "356",
		phone_code: "91",
		emoji: "🇮🇳",
		emojiU: "U+1F1EE U+1F1F3",
		states: [
			{
				id: 4023,
				name: "Andaman and Nicobar Islands",
				state_code: "AN"
			},
			{
				id: 4017,
				name: "Andhra Pradesh",
				state_code: "AP"
			},
			{
				id: 4024,
				name: "Arunachal Pradesh",
				state_code: "AR"
			},
			{
				id: 4027,
				name: "Assam",
				state_code: "AS"
			},
			{
				id: 4037,
				name: "Bihar",
				state_code: "BR"
			},
			{
				id: 4031,
				name: "Chandigarh",
				state_code: "CH"
			},
			{
				id: 4040,
				name: "Chhattisgarh",
				state_code: "CT"
			},
			{
				id: 4033,
				name: "Dadra and Nagar Haveli and Daman and Diu",
				state_code: "DH"
			},
			{
				id: 4021,
				name: "Delhi",
				state_code: "DL"
			},
			{
				id: 4009,
				name: "Goa",
				state_code: "GA"
			},
			{
				id: 4030,
				name: "Gujarat",
				state_code: "GJ"
			},
			{
				id: 4007,
				name: "Haryana",
				state_code: "HR"
			},
			{
				id: 4020,
				name: "Himachal Pradesh",
				state_code: "HP"
			},
			{
				id: 4029,
				name: "Jammu and Kashmir",
				state_code: "JK"
			},
			{
				id: 4025,
				name: "Jharkhand",
				state_code: "JH"
			},
			{
				id: 4026,
				name: "Karnataka",
				state_code: "KA"
			},
			{
				id: 4028,
				name: "Kerala",
				state_code: "KL"
			},
			{
				id: 4852,
				name: "Ladakh",
				state_code: "LA"
			},
			{
				id: 4019,
				name: "Lakshadweep",
				state_code: "LD"
			},
			{
				id: 4039,
				name: "Madhya Pradesh",
				state_code: "MP"
			},
			{
				id: 4008,
				name: "Maharashtra",
				state_code: "MH"
			},
			{
				id: 4010,
				name: "Manipur",
				state_code: "MN"
			},
			{
				id: 4006,
				name: "Meghalaya",
				state_code: "ML"
			},
			{
				id: 4036,
				name: "Mizoram",
				state_code: "MZ"
			},
			{
				id: 4018,
				name: "Nagaland",
				state_code: "NL"
			},
			{
				id: 4013,
				name: "Odisha",
				state_code: "OR"
			},
			{
				id: 4011,
				name: "Puducherry",
				state_code: "PY"
			},
			{
				id: 4015,
				name: "Punjab",
				state_code: "PB"
			},
			{
				id: 4014,
				name: "Rajasthan",
				state_code: "RJ"
			},
			{
				id: 4034,
				name: "Sikkim",
				state_code: "SK"
			},
			{
				id: 4035,
				name: "Tamil Nadu",
				state_code: "TN"
			},
			{
				id: 4012,
				name: "Telangana",
				state_code: "TG"
			},
			{
				id: 4038,
				name: "Tripura",
				state_code: "TR"
			},
			{
				id: 4022,
				name: "Uttar Pradesh",
				state_code: "UP"
			},
			{
				id: 4016,
				name: "Uttarakhand",
				state_code: "UT"
			},
			{
				id: 4853,
				name: "West Bengal",
				state_code: "WB"
			}
		]
	},
	{
		name: "Indonesia",
		iso3: "IDN",
		iso2: "ID",
		numeric_code: "360",
		phone_code: "62",
		emoji: "🇮🇩",
		emojiU: "U+1F1EE U+1F1E9",
		states: [
			{
				id: 1822,
				name: "Aceh",
				state_code: "AC"
			},
			{
				id: 1826,
				name: "Bali",
				state_code: "BA"
			},
			{
				id: 1810,
				name: "Banten",
				state_code: "BT"
			},
			{
				id: 1793,
				name: "Bengkulu",
				state_code: "BE"
			},
			{
				id: 1829,
				name: "DI Yogyakarta",
				state_code: "YO"
			},
			{
				id: 1805,
				name: "DKI Jakarta",
				state_code: "JK"
			},
			{
				id: 1812,
				name: "Gorontalo",
				state_code: "GO"
			},
			{
				id: 1815,
				name: "Jambi",
				state_code: "JA"
			},
			{
				id: 1825,
				name: "Jawa Barat",
				state_code: "JB"
			},
			{
				id: 1802,
				name: "Jawa Tengah",
				state_code: "JT"
			},
			{
				id: 1827,
				name: "Jawa Timur",
				state_code: "JI"
			},
			{
				id: 1806,
				name: "Kalimantan Barat",
				state_code: "KA"
			},
			{
				id: 1819,
				name: "Kalimantan Selatan",
				state_code: "KS"
			},
			{
				id: 1794,
				name: "Kalimantan Tengah",
				state_code: "KT"
			},
			{
				id: 1804,
				name: "Kalimantan Timur",
				state_code: "KI"
			},
			{
				id: 1824,
				name: "Kalimantan Utara",
				state_code: "KU"
			},
			{
				id: 1820,
				name: "Kepulauan Bangka Belitung",
				state_code: "BB"
			},
			{
				id: 1807,
				name: "Kepulauan Riau",
				state_code: "KR"
			},
			{
				id: 1811,
				name: "Lampung",
				state_code: "LA"
			},
			{
				id: 1800,
				name: "Maluku",
				state_code: "MA"
			},
			{
				id: 1801,
				name: "Maluku Utara",
				state_code: "MU"
			},
			{
				id: 1814,
				name: "Nusa Tenggara Barat",
				state_code: "NB"
			},
			{
				id: 1818,
				name: "Nusa Tenggara Timur",
				state_code: "NT"
			},
			{
				id: 1798,
				name: "Papua",
				state_code: "PA"
			},
			{
				id: 1799,
				name: "Papua Barat",
				state_code: "PB"
			},
			{
				id: 1809,
				name: "Riau",
				state_code: "RI"
			},
			{
				id: 1817,
				name: "Sulawesi Barat",
				state_code: "SR"
			},
			{
				id: 1795,
				name: "Sulawesi Selatan",
				state_code: "SN"
			},
			{
				id: 1813,
				name: "Sulawesi Tengah",
				state_code: "ST"
			},
			{
				id: 1796,
				name: "Sulawesi Tenggara",
				state_code: "SG"
			},
			{
				id: 1808,
				name: "Sulawesi Utara",
				state_code: "SA"
			},
			{
				id: 1828,
				name: "Sumatera Barat",
				state_code: "SB"
			},
			{
				id: 1816,
				name: "Sumatera Selatan",
				state_code: "SS"
			},
			{
				id: 1792,
				name: "Sumatera Utara",
				state_code: "SU"
			}
		]
	},
	{
		name: "Iran",
		iso3: "IRN",
		iso2: "IR",
		numeric_code: "364",
		phone_code: "98",
		emoji: "🇮🇷",
		emojiU: "U+1F1EE U+1F1F7",
		states: [
			{
				id: 3929,
				name: "Alborz Province",
				state_code: "30"
			},
			{
				id: 3934,
				name: "Ardabil Province",
				state_code: "24"
			},
			{
				id: 3932,
				name: "Bushehr Province",
				state_code: "18"
			},
			{
				id: 3921,
				name: "Chaharmahal and Bakhtiari Province",
				state_code: "14"
			},
			{
				id: 3944,
				name: "East Azerbaijan Province",
				state_code: "03"
			},
			{
				id: 3939,
				name: "Fars Province",
				state_code: "07"
			},
			{
				id: 3920,
				name: "Gilan Province",
				state_code: "01"
			},
			{
				id: 3933,
				name: "Golestan Province",
				state_code: "27"
			},
			{
				id: 4920,
				name: "Hamadan Province",
				state_code: "13"
			},
			{
				id: 3937,
				name: "Hormozgan Province",
				state_code: "22"
			},
			{
				id: 3918,
				name: "Ilam Province",
				state_code: "16"
			},
			{
				id: 3923,
				name: "Isfahan Province",
				state_code: "10"
			},
			{
				id: 3943,
				name: "Kerman Province",
				state_code: "08"
			},
			{
				id: 3919,
				name: "Kermanshah Province",
				state_code: "05"
			},
			{
				id: 3917,
				name: "Khuzestan Province",
				state_code: "06"
			},
			{
				id: 3926,
				name: "Kohgiluyeh and Boyer-Ahmad Province",
				state_code: "17"
			},
			{
				id: 3935,
				name: "Kurdistan Province",
				state_code: "12"
			},
			{
				id: 3928,
				name: "Lorestan Province",
				state_code: "15"
			},
			{
				id: 3916,
				name: "Markazi Province",
				state_code: "00"
			},
			{
				id: 3938,
				name: "Mazandaran Province",
				state_code: "02"
			},
			{
				id: 3942,
				name: "North Khorasan Province",
				state_code: "28"
			},
			{
				id: 3941,
				name: "Qazvin Province",
				state_code: "26"
			},
			{
				id: 3922,
				name: "Qom Province",
				state_code: "25"
			},
			{
				id: 3927,
				name: "Razavi Khorasan Province",
				state_code: "09"
			},
			{
				id: 3940,
				name: "Semnan Province",
				state_code: "20"
			},
			{
				id: 3931,
				name: "Sistan and Baluchestan",
				state_code: "11"
			},
			{
				id: 3930,
				name: "South Khorasan Province",
				state_code: "29"
			},
			{
				id: 3945,
				name: "Tehran Province",
				state_code: "23"
			},
			{
				id: 3924,
				name: "West Azarbaijan Province",
				state_code: "04"
			},
			{
				id: 3936,
				name: "Yazd Province",
				state_code: "21"
			},
			{
				id: 3925,
				name: "Zanjan Province",
				state_code: "19"
			}
		]
	},
	{
		name: "Iraq",
		iso3: "IRQ",
		iso2: "IQ",
		numeric_code: "368",
		phone_code: "964",
		emoji: "🇮🇶",
		emojiU: "U+1F1EE U+1F1F6",
		states: [
			{
				id: 3964,
				name: "Al Anbar Governorate",
				state_code: "AN"
			},
			{
				id: 3958,
				name: "Al Muthanna Governorate",
				state_code: "MU"
			},
			{
				id: 3956,
				name: "Al-Qādisiyyah Governorate",
				state_code: "QA"
			},
			{
				id: 3955,
				name: "Babylon Governorate",
				state_code: "BB"
			},
			{
				id: 3959,
				name: "Baghdad Governorate",
				state_code: "BG"
			},
			{
				id: 3960,
				name: "Basra Governorate",
				state_code: "BA"
			},
			{
				id: 3954,
				name: "Dhi Qar Governorate",
				state_code: "DQ"
			},
			{
				id: 3965,
				name: "Diyala Governorate",
				state_code: "DI"
			},
			{
				id: 3967,
				name: "Dohuk Governorate",
				state_code: "DA"
			},
			{
				id: 3968,
				name: "Erbil Governorate",
				state_code: "AR"
			},
			{
				id: 3957,
				name: "Karbala Governorate",
				state_code: "KA"
			},
			{
				id: 3971,
				name: "Kirkuk Governorate",
				state_code: "KI"
			},
			{
				id: 3966,
				name: "Maysan Governorate",
				state_code: "MA"
			},
			{
				id: 3962,
				name: "Najaf Governorate",
				state_code: "NA"
			},
			{
				id: 3963,
				name: "Nineveh Governorate",
				state_code: "NI"
			},
			{
				id: 3961,
				name: "Saladin Governorate",
				state_code: "SD"
			},
			{
				id: 3969,
				name: "Sulaymaniyah Governorate",
				state_code: "SU"
			},
			{
				id: 3970,
				name: "Wasit Governorate",
				state_code: "WA"
			}
		]
	},
	{
		name: "Ireland",
		iso3: "IRL",
		iso2: "IE",
		numeric_code: "372",
		phone_code: "353",
		emoji: "🇮🇪",
		emojiU: "U+1F1EE U+1F1EA",
		states: [
			{
				id: 1087,
				name: "Connacht",
				state_code: "C"
			},
			{
				id: 1095,
				name: "County Carlow",
				state_code: "CW"
			},
			{
				id: 1088,
				name: "County Cavan",
				state_code: "CN"
			},
			{
				id: 1091,
				name: "County Clare",
				state_code: "CE"
			},
			{
				id: 1074,
				name: "County Cork",
				state_code: "CO"
			},
			{
				id: 1071,
				name: "County Donegal",
				state_code: "DL"
			},
			{
				id: 1072,
				name: "County Dublin",
				state_code: "D"
			},
			{
				id: 1079,
				name: "County Galway",
				state_code: "G"
			},
			{
				id: 1077,
				name: "County Kerry",
				state_code: "KY"
			},
			{
				id: 1082,
				name: "County Kildare",
				state_code: "KE"
			},
			{
				id: 1090,
				name: "County Kilkenny",
				state_code: "KK"
			},
			{
				id: 1096,
				name: "County Laois",
				state_code: "LS"
			},
			{
				id: 1094,
				name: "County Limerick",
				state_code: "LK"
			},
			{
				id: 1076,
				name: "County Longford",
				state_code: "LD"
			},
			{
				id: 1083,
				name: "County Louth",
				state_code: "LH"
			},
			{
				id: 1084,
				name: "County Mayo",
				state_code: "MO"
			},
			{
				id: 1092,
				name: "County Meath",
				state_code: "MH"
			},
			{
				id: 1075,
				name: "County Monaghan",
				state_code: "MN"
			},
			{
				id: 1078,
				name: "County Offaly",
				state_code: "OY"
			},
			{
				id: 1081,
				name: "County Roscommon",
				state_code: "RN"
			},
			{
				id: 1070,
				name: "County Sligo",
				state_code: "SO"
			},
			{
				id: 1069,
				name: "County Tipperary",
				state_code: "TA"
			},
			{
				id: 1089,
				name: "County Waterford",
				state_code: "WD"
			},
			{
				id: 1097,
				name: "County Westmeath",
				state_code: "WH"
			},
			{
				id: 1093,
				name: "County Wexford",
				state_code: "WX"
			},
			{
				id: 1085,
				name: "County Wicklow",
				state_code: "WW"
			},
			{
				id: 1073,
				name: "Leinster",
				state_code: "L"
			},
			{
				id: 1080,
				name: "Munster",
				state_code: "M"
			},
			{
				id: 1086,
				name: "Ulster",
				state_code: "U"
			}
		]
	},
	{
		name: "Israel",
		iso3: "ISR",
		iso2: "IL",
		numeric_code: "376",
		phone_code: "972",
		emoji: "🇮🇱",
		emojiU: "U+1F1EE U+1F1F1",
		states: [
			{
				id: 1367,
				name: "Central District",
				state_code: "M"
			},
			{
				id: 1369,
				name: "Haifa District",
				state_code: "HA"
			},
			{
				id: 1370,
				name: "Jerusalem District",
				state_code: "JM"
			},
			{
				id: 1366,
				name: "Northern District",
				state_code: "Z"
			},
			{
				id: 1368,
				name: "Southern District",
				state_code: "D"
			},
			{
				id: 1371,
				name: "Tel Aviv District",
				state_code: "TA"
			}
		]
	},
	{
		name: "Italy",
		iso3: "ITA",
		iso2: "IT",
		numeric_code: "380",
		phone_code: "39",
		emoji: "🇮🇹",
		emojiU: "U+1F1EE U+1F1F9",
		states: [
			{
				id: 1679,
				name: "Abruzzo",
				state_code: "65"
			},
			{
				id: 1716,
				name: "Aosta Valley",
				state_code: "23"
			},
			{
				id: 1688,
				name: "Apulia",
				state_code: "75"
			},
			{
				id: 1706,
				name: "Basilicata",
				state_code: "77"
			},
			{
				id: 1701,
				name: "Benevento Province",
				state_code: "BN"
			},
			{
				id: 1703,
				name: "Calabria",
				state_code: "78"
			},
			{
				id: 1669,
				name: "Campania",
				state_code: "72"
			},
			{
				id: 1773,
				name: "Emilia-Romagna",
				state_code: "45"
			},
			{
				id: 1756,
				name: "Friuli–Venezia Giulia",
				state_code: "36"
			},
			{
				id: 1678,
				name: "Lazio",
				state_code: "62"
			},
			{
				id: 1727,
				name: "Libero consorzio comunale di Agrigento",
				state_code: "AG"
			},
			{
				id: 1718,
				name: "Libero consorzio comunale di Caltanissetta",
				state_code: "CL"
			},
			{
				id: 1723,
				name: "Libero consorzio comunale di Enna",
				state_code: "EN"
			},
			{
				id: 1729,
				name: "Libero consorzio comunale di Ragusa",
				state_code: "RG"
			},
			{
				id: 1667,
				name: "Libero consorzio comunale di Siracusa",
				state_code: "SR"
			},
			{
				id: 1733,
				name: "Libero consorzio comunale di Trapani",
				state_code: "TP"
			},
			{
				id: 1768,
				name: "Liguria",
				state_code: "42"
			},
			{
				id: 1705,
				name: "Lombardy",
				state_code: "25"
			},
			{
				id: 1670,
				name: "Marche",
				state_code: "57"
			},
			{
				id: 1772,
				name: "Metropolitan City of Bari",
				state_code: "BA"
			},
			{
				id: 1684,
				name: "Metropolitan City of Bologna",
				state_code: "BO"
			},
			{
				id: 1682,
				name: "Metropolitan City of Cagliari",
				state_code: "CA"
			},
			{
				id: 1766,
				name: "Metropolitan City of Catania",
				state_code: "CT"
			},
			{
				id: 1680,
				name: "Metropolitan City of Florence",
				state_code: "FI"
			},
			{
				id: 1699,
				name: "Metropolitan City of Genoa",
				state_code: "GE"
			},
			{
				id: 1770,
				name: "Metropolitan City of Messina",
				state_code: "ME"
			},
			{
				id: 1698,
				name: "Metropolitan City of Milan",
				state_code: "MI"
			},
			{
				id: 1724,
				name: "Metropolitan City of Naples",
				state_code: "NA"
			},
			{
				id: 1668,
				name: "Metropolitan City of Palermo",
				state_code: "PA"
			},
			{
				id: 1671,
				name: "Metropolitan City of Reggio Calabria",
				state_code: "RC"
			},
			{
				id: 1711,
				name: "Metropolitan City of Rome",
				state_code: "RM"
			},
			{
				id: 1710,
				name: "Metropolitan City of Turin",
				state_code: "TO"
			},
			{
				id: 1673,
				name: "Metropolitan City of Venice",
				state_code: "VE"
			},
			{
				id: 1695,
				name: "Molise",
				state_code: "67"
			},
			{
				id: 1693,
				name: "Pesaro and Urbino Province",
				state_code: "PU"
			},
			{
				id: 1702,
				name: "Piedmont",
				state_code: "21"
			},
			{
				id: 1783,
				name: "Province of Alessandria",
				state_code: "AL"
			},
			{
				id: 1672,
				name: "Province of Ancona",
				state_code: "AN"
			},
			{
				id: 1681,
				name: "Province of Ascoli Piceno",
				state_code: "AP"
			},
			{
				id: 1780,
				name: "Province of Asti",
				state_code: "AT"
			},
			{
				id: 1692,
				name: "Province of Avellino",
				state_code: "AV"
			},
			{
				id: 1686,
				name: "Province of Barletta-Andria-Trani",
				state_code: "BT"
			},
			{
				id: 1689,
				name: "Province of Belluno",
				state_code: "BL"
			},
			{
				id: 1704,
				name: "Province of Bergamo",
				state_code: "BG"
			},
			{
				id: 1778,
				name: "Province of Biella",
				state_code: "BI"
			},
			{
				id: 1717,
				name: "Province of Brescia",
				state_code: "BS"
			},
			{
				id: 1714,
				name: "Province of Brindisi",
				state_code: "BR"
			},
			{
				id: 1721,
				name: "Province of Campobasso",
				state_code: "CB"
			},
			{
				id: 1730,
				name: "Province of Carbonia-Iglesias",
				state_code: "CI"
			},
			{
				id: 1731,
				name: "Province of Caserta",
				state_code: "CE"
			},
			{
				id: 1728,
				name: "Province of Catanzaro",
				state_code: "CZ"
			},
			{
				id: 1739,
				name: "Province of Chieti",
				state_code: "CH"
			},
			{
				id: 1740,
				name: "Province of Como",
				state_code: "CO"
			},
			{
				id: 1742,
				name: "Province of Cosenza",
				state_code: "CS"
			},
			{
				id: 1751,
				name: "Province of Cremona",
				state_code: "CR"
			},
			{
				id: 1754,
				name: "Province of Crotone",
				state_code: "KR"
			},
			{
				id: 1775,
				name: "Province of Cuneo",
				state_code: "CN"
			},
			{
				id: 1744,
				name: "Province of Fermo",
				state_code: "FM"
			},
			{
				id: 1746,
				name: "Province of Ferrara",
				state_code: "FE"
			},
			{
				id: 1771,
				name: "Province of Foggia",
				state_code: "FG"
			},
			{
				id: 1779,
				name: "Province of Forlì-Cesena",
				state_code: "FC"
			},
			{
				id: 1776,
				name: "Province of Frosinone",
				state_code: "FR"
			},
			{
				id: 1777,
				name: "Province of Gorizia",
				state_code: "GO"
			},
			{
				id: 1787,
				name: "Province of Grosseto",
				state_code: "GR"
			},
			{
				id: 1788,
				name: "Province of Imperia",
				state_code: "IM"
			},
			{
				id: 1789,
				name: "Province of Isernia",
				state_code: "IS"
			},
			{
				id: 1781,
				name: "Province of L'Aquila",
				state_code: "AQ"
			},
			{
				id: 1791,
				name: "Province of La Spezia",
				state_code: "SP"
			},
			{
				id: 1674,
				name: "Province of Latina",
				state_code: "LT"
			},
			{
				id: 1675,
				name: "Province of Lecce",
				state_code: "LE"
			},
			{
				id: 1677,
				name: "Province of Lecco",
				state_code: "LC"
			},
			{
				id: 1745,
				name: "Province of Livorno",
				state_code: "LI"
			},
			{
				id: 1747,
				name: "Province of Lodi",
				state_code: "LO"
			},
			{
				id: 1749,
				name: "Province of Lucca",
				state_code: "LU"
			},
			{
				id: 1750,
				name: "Province of Macerata",
				state_code: "MC"
			},
			{
				id: 1758,
				name: "Province of Mantua",
				state_code: "MN"
			},
			{
				id: 1759,
				name: "Province of Massa and Carrara",
				state_code: "MS"
			},
			{
				id: 1760,
				name: "Province of Matera",
				state_code: "MT"
			},
			{
				id: 1761,
				name: "Province of Medio Campidano",
				state_code: "VS"
			},
			{
				id: 1757,
				name: "Province of Modena",
				state_code: "MO"
			},
			{
				id: 1769,
				name: "Province of Monza and Brianza",
				state_code: "MB"
			},
			{
				id: 1774,
				name: "Province of Novara",
				state_code: "NO"
			},
			{
				id: 1790,
				name: "Province of Nuoro",
				state_code: "NU"
			},
			{
				id: 1782,
				name: "Province of Ogliastra",
				state_code: "OG"
			},
			{
				id: 1784,
				name: "Province of Olbia-Tempio",
				state_code: "OT"
			},
			{
				id: 1786,
				name: "Province of Oristano",
				state_code: "OR"
			},
			{
				id: 1665,
				name: "Province of Padua",
				state_code: "PD"
			},
			{
				id: 1666,
				name: "Province of Parma",
				state_code: "PR"
			},
			{
				id: 1676,
				name: "Province of Pavia",
				state_code: "PV"
			},
			{
				id: 1691,
				name: "Province of Perugia",
				state_code: "PG"
			},
			{
				id: 1694,
				name: "Province of Pescara",
				state_code: "PE"
			},
			{
				id: 1696,
				name: "Province of Piacenza",
				state_code: "PC"
			},
			{
				id: 1685,
				name: "Province of Pisa",
				state_code: "PI"
			},
			{
				id: 1687,
				name: "Province of Pistoia",
				state_code: "PT"
			},
			{
				id: 1690,
				name: "Province of Pordenone",
				state_code: "PN"
			},
			{
				id: 1697,
				name: "Province of Potenza",
				state_code: "PZ"
			},
			{
				id: 1700,
				name: "Province of Prato",
				state_code: "PO"
			},
			{
				id: 1707,
				name: "Province of Ravenna",
				state_code: "RA"
			},
			{
				id: 1708,
				name: "Province of Reggio Emilia",
				state_code: "RE"
			},
			{
				id: 1712,
				name: "Province of Rieti",
				state_code: "RI"
			},
			{
				id: 1713,
				name: "Province of Rimini",
				state_code: "RN"
			},
			{
				id: 1719,
				name: "Province of Rovigo",
				state_code: "RO"
			},
			{
				id: 1720,
				name: "Province of Salerno",
				state_code: "SA"
			},
			{
				id: 1722,
				name: "Province of Sassari",
				state_code: "SS"
			},
			{
				id: 1732,
				name: "Province of Savona",
				state_code: "SV"
			},
			{
				id: 1734,
				name: "Province of Siena",
				state_code: "SI"
			},
			{
				id: 1741,
				name: "Province of Sondrio",
				state_code: "SO"
			},
			{
				id: 1743,
				name: "Province of Taranto",
				state_code: "TA"
			},
			{
				id: 1752,
				name: "Province of Teramo",
				state_code: "TE"
			},
			{
				id: 1755,
				name: "Province of Terni",
				state_code: "TR"
			},
			{
				id: 1762,
				name: "Province of Treviso",
				state_code: "TV"
			},
			{
				id: 1763,
				name: "Province of Trieste",
				state_code: "TS"
			},
			{
				id: 1764,
				name: "Province of Udine",
				state_code: "UD"
			},
			{
				id: 1765,
				name: "Province of Varese",
				state_code: "VA"
			},
			{
				id: 1726,
				name: "Province of Verbano-Cusio-Ossola",
				state_code: "VB"
			},
			{
				id: 1785,
				name: "Province of Vercelli",
				state_code: "VC"
			},
			{
				id: 1736,
				name: "Province of Verona",
				state_code: "VR"
			},
			{
				id: 1737,
				name: "Province of Vibo Valentia",
				state_code: "VV"
			},
			{
				id: 1738,
				name: "Province of Vicenza",
				state_code: "VI"
			},
			{
				id: 1735,
				name: "Province of Viterbo",
				state_code: "VT"
			},
			{
				id: 1715,
				name: "Sardinia",
				state_code: "88"
			},
			{
				id: 1709,
				name: "Sicily",
				state_code: "82"
			},
			{
				id: 1767,
				name: "South Tyrol",
				state_code: "BZ"
			},
			{
				id: 1748,
				name: "Trentino",
				state_code: "TN"
			},
			{
				id: 1725,
				name: "Trentino-South Tyrol",
				state_code: "32"
			},
			{
				id: 1664,
				name: "Tuscany",
				state_code: "52"
			},
			{
				id: 1683,
				name: "Umbria",
				state_code: "55"
			},
			{
				id: 1753,
				name: "Veneto",
				state_code: "34"
			}
		]
	},
	{
		name: "Jamaica",
		iso3: "JAM",
		iso2: "JM",
		numeric_code: "388",
		phone_code: "+1-876",
		emoji: "🇯🇲",
		emojiU: "U+1F1EF U+1F1F2",
		states: [
			{
				id: 3753,
				name: "Clarendon Parish",
				state_code: "13"
			},
			{
				id: 3749,
				name: "Hanover Parish",
				state_code: "09"
			},
			{
				id: 3748,
				name: "Kingston Parish",
				state_code: "01"
			},
			{
				id: 3754,
				name: "Manchester Parish",
				state_code: "12"
			},
			{
				id: 3752,
				name: "Portland Parish",
				state_code: "04"
			},
			{
				id: 3751,
				name: "Saint Andrew",
				state_code: "02"
			},
			{
				id: 3744,
				name: "Saint Ann Parish",
				state_code: "06"
			},
			{
				id: 3746,
				name: "Saint Catherine Parish",
				state_code: "14"
			},
			{
				id: 3743,
				name: "Saint Elizabeth Parish",
				state_code: "11"
			},
			{
				id: 3745,
				name: "Saint James Parish",
				state_code: "08"
			},
			{
				id: 3747,
				name: "Saint Mary Parish",
				state_code: "05"
			},
			{
				id: 3750,
				name: "Saint Thomas Parish",
				state_code: "03"
			},
			{
				id: 3755,
				name: "Trelawny Parish",
				state_code: "07"
			},
			{
				id: 3742,
				name: "Westmoreland Parish",
				state_code: "10"
			}
		]
	},
	{
		name: "Japan",
		iso3: "JPN",
		iso2: "JP",
		numeric_code: "392",
		phone_code: "81",
		emoji: "🇯🇵",
		emojiU: "U+1F1EF U+1F1F5",
		states: [
			{
				id: 827,
				name: "Aichi Prefecture",
				state_code: "23"
			},
			{
				id: 829,
				name: "Akita Prefecture",
				state_code: "05"
			},
			{
				id: 839,
				name: "Aomori Prefecture",
				state_code: "02"
			},
			{
				id: 821,
				name: "Chiba Prefecture",
				state_code: "12"
			},
			{
				id: 865,
				name: "Ehime Prefecture",
				state_code: "38"
			},
			{
				id: 848,
				name: "Fukui Prefecture",
				state_code: "18"
			},
			{
				id: 861,
				name: "Fukuoka Prefecture",
				state_code: "40"
			},
			{
				id: 847,
				name: "Fukushima Prefecture",
				state_code: "07"
			},
			{
				id: 858,
				name: "Gifu Prefecture",
				state_code: "21"
			},
			{
				id: 862,
				name: "Gunma Prefecture",
				state_code: "10"
			},
			{
				id: 828,
				name: "Hiroshima Prefecture",
				state_code: "34"
			},
			{
				id: 832,
				name: "Hokkaidō Prefecture",
				state_code: "01"
			},
			{
				id: 831,
				name: "Hyōgo Prefecture",
				state_code: "28"
			},
			{
				id: 851,
				name: "Ibaraki Prefecture",
				state_code: "08"
			},
			{
				id: 830,
				name: "Ishikawa Prefecture",
				state_code: "17"
			},
			{
				id: 856,
				name: "Iwate Prefecture",
				state_code: "03"
			},
			{
				id: 864,
				name: "Kagawa Prefecture",
				state_code: "37"
			},
			{
				id: 840,
				name: "Kagoshima Prefecture",
				state_code: "46"
			},
			{
				id: 842,
				name: "Kanagawa Prefecture",
				state_code: "14"
			},
			{
				id: 4924,
				name: "Kōchi Prefecture",
				state_code: "39"
			},
			{
				id: 846,
				name: "Kumamoto Prefecture",
				state_code: "43"
			},
			{
				id: 834,
				name: "Kyōto Prefecture",
				state_code: "26"
			},
			{
				id: 833,
				name: "Mie Prefecture",
				state_code: "24"
			},
			{
				id: 857,
				name: "Miyagi Prefecture",
				state_code: "04"
			},
			{
				id: 855,
				name: "Miyazaki Prefecture",
				state_code: "45"
			},
			{
				id: 843,
				name: "Nagano Prefecture",
				state_code: "20"
			},
			{
				id: 849,
				name: "Nagasaki Prefecture",
				state_code: "42"
			},
			{
				id: 824,
				name: "Nara Prefecture",
				state_code: "29"
			},
			{
				id: 841,
				name: "Niigata Prefecture",
				state_code: "15"
			},
			{
				id: 822,
				name: "Ōita Prefecture",
				state_code: "44"
			},
			{
				id: 820,
				name: "Okayama Prefecture",
				state_code: "33"
			},
			{
				id: 853,
				name: "Okinawa Prefecture",
				state_code: "47"
			},
			{
				id: 859,
				name: "Ōsaka Prefecture",
				state_code: "27"
			},
			{
				id: 863,
				name: "Saga Prefecture",
				state_code: "41"
			},
			{
				id: 860,
				name: "Saitama Prefecture",
				state_code: "11"
			},
			{
				id: 845,
				name: "Shiga Prefecture",
				state_code: "25"
			},
			{
				id: 826,
				name: "Shimane Prefecture",
				state_code: "32"
			},
			{
				id: 825,
				name: "Shizuoka Prefecture",
				state_code: "22"
			},
			{
				id: 854,
				name: "Tochigi Prefecture",
				state_code: "09"
			},
			{
				id: 836,
				name: "Tokushima Prefecture",
				state_code: "36"
			},
			{
				id: 823,
				name: "Tokyo",
				state_code: "13"
			},
			{
				id: 850,
				name: "Tottori Prefecture",
				state_code: "31"
			},
			{
				id: 838,
				name: "Toyama Prefecture",
				state_code: "16"
			},
			{
				id: 844,
				name: "Wakayama Prefecture",
				state_code: "30"
			},
			{
				id: 837,
				name: "Yamagata Prefecture",
				state_code: "06"
			},
			{
				id: 835,
				name: "Yamaguchi Prefecture",
				state_code: "35"
			},
			{
				id: 852,
				name: "Yamanashi Prefecture",
				state_code: "19"
			}
		]
	},
	{
		name: "Jersey",
		iso3: "JEY",
		iso2: "JE",
		numeric_code: "832",
		phone_code: "+44-1534",
		emoji: "🇯🇪",
		emojiU: "U+1F1EF U+1F1EA",
		states: [
		]
	},
	{
		name: "Jordan",
		iso3: "JOR",
		iso2: "JO",
		numeric_code: "400",
		phone_code: "962",
		emoji: "🇯🇴",
		emojiU: "U+1F1EF U+1F1F4",
		states: [
			{
				id: 963,
				name: "Ajloun Governorate",
				state_code: "AJ"
			},
			{
				id: 965,
				name: "Amman Governorate",
				state_code: "AM"
			},
			{
				id: 959,
				name: "Aqaba Governorate",
				state_code: "AQ"
			},
			{
				id: 961,
				name: "Balqa Governorate",
				state_code: "BA"
			},
			{
				id: 960,
				name: "Irbid Governorate",
				state_code: "IR"
			},
			{
				id: 966,
				name: "Jerash Governorate",
				state_code: "JA"
			},
			{
				id: 956,
				name: "Karak Governorate",
				state_code: "KA"
			},
			{
				id: 964,
				name: "Ma'an Governorate",
				state_code: "MN"
			},
			{
				id: 958,
				name: "Madaba Governorate",
				state_code: "MD"
			},
			{
				id: 962,
				name: "Mafraq Governorate",
				state_code: "MA"
			},
			{
				id: 957,
				name: "Tafilah Governorate",
				state_code: "AT"
			},
			{
				id: 967,
				name: "Zarqa Governorate",
				state_code: "AZ"
			}
		]
	},
	{
		name: "Kazakhstan",
		iso3: "KAZ",
		iso2: "KZ",
		numeric_code: "398",
		phone_code: "7",
		emoji: "🇰🇿",
		emojiU: "U+1F1F0 U+1F1FF",
		states: [
			{
				id: 145,
				name: "Akmola Region",
				state_code: "AKM"
			},
			{
				id: 151,
				name: "Aktobe Region",
				state_code: "AKT"
			},
			{
				id: 152,
				name: "Almaty",
				state_code: "ALA"
			},
			{
				id: 143,
				name: "Almaty Region",
				state_code: "ALM"
			},
			{
				id: 153,
				name: "Atyrau Region",
				state_code: "ATY"
			},
			{
				id: 155,
				name: "Baikonur",
				state_code: "BAY"
			},
			{
				id: 154,
				name: "East Kazakhstan Region",
				state_code: "VOS"
			},
			{
				id: 147,
				name: "Jambyl Region",
				state_code: "ZHA"
			},
			{
				id: 150,
				name: "Karaganda Region",
				state_code: "KAR"
			},
			{
				id: 157,
				name: "Kostanay Region",
				state_code: "KUS"
			},
			{
				id: 142,
				name: "Kyzylorda Region",
				state_code: "KZY"
			},
			{
				id: 141,
				name: "Mangystau Region",
				state_code: "MAN"
			},
			{
				id: 144,
				name: "North Kazakhstan Region",
				state_code: "SEV"
			},
			{
				id: 156,
				name: "Nur-Sultan",
				state_code: "AST"
			},
			{
				id: 146,
				name: "Pavlodar Region",
				state_code: "PAV"
			},
			{
				id: 149,
				name: "Turkestan Region",
				state_code: "YUZ"
			},
			{
				id: 148,
				name: "West Kazakhstan Province",
				state_code: "ZAP"
			}
		]
	},
	{
		name: "Kenya",
		iso3: "KEN",
		iso2: "KE",
		numeric_code: "404",
		phone_code: "254",
		emoji: "🇰🇪",
		emojiU: "U+1F1F0 U+1F1EA",
		states: [
			{
				id: 181,
				name: "Baringo",
				state_code: "01"
			},
			{
				id: 210,
				name: "Bomet",
				state_code: "02"
			},
			{
				id: 168,
				name: "Bungoma",
				state_code: "03"
			},
			{
				id: 161,
				name: "Busia",
				state_code: "04"
			},
			{
				id: 201,
				name: "Elgeyo-Marakwet",
				state_code: "05"
			},
			{
				id: 163,
				name: "Embu",
				state_code: "06"
			},
			{
				id: 196,
				name: "Garissa",
				state_code: "07"
			},
			{
				id: 195,
				name: "Homa Bay",
				state_code: "08"
			},
			{
				id: 170,
				name: "Isiolo",
				state_code: "09"
			},
			{
				id: 197,
				name: "Kajiado",
				state_code: "10"
			},
			{
				id: 158,
				name: "Kakamega",
				state_code: "11"
			},
			{
				id: 193,
				name: "Kericho",
				state_code: "12"
			},
			{
				id: 199,
				name: "Kiambu",
				state_code: "13"
			},
			{
				id: 174,
				name: "Kilifi",
				state_code: "14"
			},
			{
				id: 167,
				name: "Kirinyaga",
				state_code: "15"
			},
			{
				id: 159,
				name: "Kisii",
				state_code: "16"
			},
			{
				id: 171,
				name: "Kisumu",
				state_code: "17"
			},
			{
				id: 211,
				name: "Kitui",
				state_code: "18"
			},
			{
				id: 173,
				name: "Kwale",
				state_code: "19"
			},
			{
				id: 164,
				name: "Laikipia",
				state_code: "20"
			},
			{
				id: 166,
				name: "Lamu",
				state_code: "21"
			},
			{
				id: 184,
				name: "Machakos",
				state_code: "22"
			},
			{
				id: 188,
				name: "Makueni",
				state_code: "23"
			},
			{
				id: 187,
				name: "Mandera",
				state_code: "24"
			},
			{
				id: 194,
				name: "Marsabit",
				state_code: "25"
			},
			{
				id: 198,
				name: "Meru",
				state_code: "26"
			},
			{
				id: 190,
				name: "Migori",
				state_code: "27"
			},
			{
				id: 200,
				name: "Mombasa",
				state_code: "28"
			},
			{
				id: 178,
				name: "Murang'a",
				state_code: "29"
			},
			{
				id: 191,
				name: "Nairobi City",
				state_code: "30"
			},
			{
				id: 203,
				name: "Nakuru",
				state_code: "31"
			},
			{
				id: 165,
				name: "Nandi",
				state_code: "32"
			},
			{
				id: 175,
				name: "Narok",
				state_code: "33"
			},
			{
				id: 209,
				name: "Nyamira",
				state_code: "34"
			},
			{
				id: 192,
				name: "Nyandarua",
				state_code: "35"
			},
			{
				id: 180,
				name: "Nyeri",
				state_code: "36"
			},
			{
				id: 207,
				name: "Samburu",
				state_code: "37"
			},
			{
				id: 186,
				name: "Siaya",
				state_code: "38"
			},
			{
				id: 176,
				name: "Taita–Taveta",
				state_code: "39"
			},
			{
				id: 205,
				name: "Tana River",
				state_code: "40"
			},
			{
				id: 185,
				name: "Tharaka-Nithi",
				state_code: "41"
			},
			{
				id: 183,
				name: "Trans Nzoia",
				state_code: "42"
			},
			{
				id: 206,
				name: "Turkana",
				state_code: "43"
			},
			{
				id: 169,
				name: "Uasin Gishu",
				state_code: "44"
			},
			{
				id: 202,
				name: "Vihiga",
				state_code: "45"
			},
			{
				id: 182,
				name: "Wajir",
				state_code: "46"
			},
			{
				id: 208,
				name: "West Pokot",
				state_code: "47"
			}
		]
	},
	{
		name: "Kiribati",
		iso3: "KIR",
		iso2: "KI",
		numeric_code: "296",
		phone_code: "686",
		emoji: "🇰🇮",
		emojiU: "U+1F1F0 U+1F1EE",
		states: [
			{
				id: 1831,
				name: "Gilbert Islands",
				state_code: "G"
			},
			{
				id: 1832,
				name: "Line Islands",
				state_code: "L"
			},
			{
				id: 1830,
				name: "Phoenix Islands",
				state_code: "P"
			}
		]
	},
	{
		name: "Kuwait",
		iso3: "KWT",
		iso2: "KW",
		numeric_code: "414",
		phone_code: "965",
		emoji: "🇰🇼",
		emojiU: "U+1F1F0 U+1F1FC",
		states: [
			{
				id: 977,
				name: "Al Ahmadi Governorate",
				state_code: "AH"
			},
			{
				id: 975,
				name: "Al Farwaniyah Governorate",
				state_code: "FA"
			},
			{
				id: 972,
				name: "Al Jahra Governorate",
				state_code: "JA"
			},
			{
				id: 976,
				name: "Capital Governorate",
				state_code: "KU"
			},
			{
				id: 973,
				name: "Hawalli Governorate",
				state_code: "HA"
			},
			{
				id: 974,
				name: "Mubarak Al-Kabeer Governorate",
				state_code: "MU"
			}
		]
	},
	{
		name: "Kyrgyzstan",
		iso3: "KGZ",
		iso2: "KG",
		numeric_code: "417",
		phone_code: "996",
		emoji: "🇰🇬",
		emojiU: "U+1F1F0 U+1F1EC",
		states: [
			{
				id: 998,
				name: "Batken Region",
				state_code: "B"
			},
			{
				id: 1001,
				name: "Bishkek",
				state_code: "GB"
			},
			{
				id: 1004,
				name: "Chuy Region",
				state_code: "C"
			},
			{
				id: 1002,
				name: "Issyk-Kul Region",
				state_code: "Y"
			},
			{
				id: 1000,
				name: "Jalal-Abad Region",
				state_code: "J"
			},
			{
				id: 999,
				name: "Naryn Region",
				state_code: "N"
			},
			{
				id: 1003,
				name: "Osh",
				state_code: "GO"
			},
			{
				id: 1005,
				name: "Osh Region",
				state_code: "O"
			},
			{
				id: 997,
				name: "Talas Region",
				state_code: "T"
			}
		]
	},
	{
		name: "Laos",
		iso3: "LAO",
		iso2: "LA",
		numeric_code: "418",
		phone_code: "856",
		emoji: "🇱🇦",
		emojiU: "U+1F1F1 U+1F1E6",
		states: [
			{
				id: 982,
				name: "Attapeu Province",
				state_code: "AT"
			},
			{
				id: 991,
				name: "Bokeo Province",
				state_code: "BK"
			},
			{
				id: 985,
				name: "Bolikhamsai Province",
				state_code: "BL"
			},
			{
				id: 996,
				name: "Champasak Province",
				state_code: "CH"
			},
			{
				id: 989,
				name: "Houaphanh Province",
				state_code: "HO"
			},
			{
				id: 986,
				name: "Khammouane Province",
				state_code: "KH"
			},
			{
				id: 992,
				name: "Luang Namtha Province",
				state_code: "LM"
			},
			{
				id: 978,
				name: "Luang Prabang Province",
				state_code: "LP"
			},
			{
				id: 988,
				name: "Oudomxay Province",
				state_code: "OU"
			},
			{
				id: 987,
				name: "Phongsaly Province",
				state_code: "PH"
			},
			{
				id: 993,
				name: "Sainyabuli Province",
				state_code: "XA"
			},
			{
				id: 981,
				name: "Salavan Province",
				state_code: "SL"
			},
			{
				id: 990,
				name: "Savannakhet Province",
				state_code: "SV"
			},
			{
				id: 984,
				name: "Sekong Province",
				state_code: "XE"
			},
			{
				id: 979,
				name: "Vientiane Prefecture",
				state_code: "VT"
			},
			{
				id: 980,
				name: "Vientiane Province",
				state_code: "VI"
			},
			{
				id: 994,
				name: "Xaisomboun",
				state_code: "XN"
			},
			{
				id: 983,
				name: "Xaisomboun Province",
				state_code: "XS"
			},
			{
				id: 995,
				name: "Xiangkhouang Province",
				state_code: "XI"
			}
		]
	},
	{
		name: "Latvia",
		iso3: "LVA",
		iso2: "LV",
		numeric_code: "428",
		phone_code: "371",
		emoji: "🇱🇻",
		emojiU: "U+1F1F1 U+1F1FB",
		states: [
			{
				id: 4445,
				name: "Aglona Municipality",
				state_code: "001"
			},
			{
				id: 4472,
				name: "Aizkraukle Municipality",
				state_code: "002"
			},
			{
				id: 4496,
				name: "Aizpute Municipality",
				state_code: "003"
			},
			{
				id: 4499,
				name: "Aknīste Municipality",
				state_code: "004"
			},
			{
				id: 4484,
				name: "Aloja Municipality",
				state_code: "005"
			},
			{
				id: 4485,
				name: "Alsunga Municipality",
				state_code: "006"
			},
			{
				id: 4487,
				name: "Alūksne Municipality",
				state_code: "007"
			},
			{
				id: 4497,
				name: "Amata Municipality",
				state_code: "008"
			},
			{
				id: 4457,
				name: "Ape Municipality",
				state_code: "009"
			},
			{
				id: 4481,
				name: "Auce Municipality",
				state_code: "010"
			},
			{
				id: 4427,
				name: "Babīte Municipality",
				state_code: "012"
			},
			{
				id: 4482,
				name: "Baldone Municipality",
				state_code: "013"
			},
			{
				id: 4498,
				name: "Baltinava Municipality",
				state_code: "014"
			},
			{
				id: 4505,
				name: "Balvi Municipality",
				state_code: "015"
			},
			{
				id: 4465,
				name: "Bauska Municipality",
				state_code: "016"
			},
			{
				id: 4471,
				name: "Beverīna Municipality",
				state_code: "017"
			},
			{
				id: 4468,
				name: "Brocēni Municipality",
				state_code: "018"
			},
			{
				id: 4411,
				name: "Burtnieki Municipality",
				state_code: "019"
			},
			{
				id: 4454,
				name: "Carnikava Municipality",
				state_code: "020"
			},
			{
				id: 4469,
				name: "Cēsis Municipality",
				state_code: "022"
			},
			{
				id: 4414,
				name: "Cesvaine Municipality",
				state_code: "021"
			},
			{
				id: 4410,
				name: "Cibla Municipality",
				state_code: "023"
			},
			{
				id: 4504,
				name: "Dagda Municipality",
				state_code: "024"
			},
			{
				id: 4463,
				name: "Daugavpils",
				state_code: "DGV"
			},
			{
				id: 4492,
				name: "Daugavpils Municipality",
				state_code: "025"
			},
			{
				id: 4437,
				name: "Dobele Municipality",
				state_code: "026"
			},
			{
				id: 4428,
				name: "Dundaga Municipality",
				state_code: "027"
			},
			{
				id: 4458,
				name: "Durbe Municipality",
				state_code: "028"
			},
			{
				id: 4448,
				name: "Engure Municipality",
				state_code: "029"
			},
			{
				id: 4444,
				name: "Ērgļi Municipality",
				state_code: "030"
			},
			{
				id: 4510,
				name: "Garkalne Municipality",
				state_code: "031"
			},
			{
				id: 4470,
				name: "Grobiņa Municipality",
				state_code: "032"
			},
			{
				id: 4400,
				name: "Gulbene Municipality",
				state_code: "033"
			},
			{
				id: 4441,
				name: "Iecava Municipality",
				state_code: "034"
			},
			{
				id: 4511,
				name: "Ikšķile Municipality",
				state_code: "035"
			},
			{
				id: 4399,
				name: "Ilūkste Municipality",
				state_code: "036"
			},
			{
				id: 4449,
				name: "Inčukalns Municipality",
				state_code: "037"
			},
			{
				id: 4475,
				name: "Jaunjelgava Municipality",
				state_code: "038"
			},
			{
				id: 4407,
				name: "Jaunpiebalga Municipality",
				state_code: "039"
			},
			{
				id: 4489,
				name: "Jaunpils Municipality",
				state_code: "040"
			},
			{
				id: 4464,
				name: "Jēkabpils",
				state_code: "JKB"
			},
			{
				id: 4438,
				name: "Jēkabpils Municipality",
				state_code: "042"
			},
			{
				id: 4500,
				name: "Jelgava",
				state_code: "JEL"
			},
			{
				id: 4424,
				name: "Jelgava Municipality",
				state_code: "041"
			},
			{
				id: 4446,
				name: "Jūrmala",
				state_code: "JUR"
			},
			{
				id: 4420,
				name: "Kandava Municipality",
				state_code: "043"
			},
			{
				id: 4453,
				name: "Kārsava Municipality",
				state_code: "044"
			},
			{
				id: 4412,
				name: "Ķegums Municipality",
				state_code: "051"
			},
			{
				id: 4435,
				name: "Ķekava Municipality",
				state_code: "052"
			},
			{
				id: 4495,
				name: "Kocēni Municipality",
				state_code: "045"
			},
			{
				id: 4452,
				name: "Koknese Municipality",
				state_code: "046"
			},
			{
				id: 4474,
				name: "Krāslava Municipality",
				state_code: "047"
			},
			{
				id: 4422,
				name: "Krimulda Municipality",
				state_code: "048"
			},
			{
				id: 4413,
				name: "Krustpils Municipality",
				state_code: "049"
			},
			{
				id: 4490,
				name: "Kuldīga Municipality",
				state_code: "050"
			},
			{
				id: 4512,
				name: "Lielvārde Municipality",
				state_code: "053"
			},
			{
				id: 4460,
				name: "Liepāja",
				state_code: "LPX"
			},
			{
				id: 4488,
				name: "Līgatne Municipality",
				state_code: "055"
			},
			{
				id: 4418,
				name: "Limbaži Municipality",
				state_code: "054"
			},
			{
				id: 4401,
				name: "Līvāni Municipality",
				state_code: "056"
			},
			{
				id: 4419,
				name: "Lubāna Municipality",
				state_code: "057"
			},
			{
				id: 4501,
				name: "Ludza Municipality",
				state_code: "058"
			},
			{
				id: 4433,
				name: "Madona Municipality",
				state_code: "059"
			},
			{
				id: 4461,
				name: "Mālpils Municipality",
				state_code: "061"
			},
			{
				id: 4450,
				name: "Mārupe Municipality",
				state_code: "062"
			},
			{
				id: 4513,
				name: "Mazsalaca Municipality",
				state_code: "060"
			},
			{
				id: 4451,
				name: "Mērsrags Municipality",
				state_code: "063"
			},
			{
				id: 4398,
				name: "Naukšēni Municipality",
				state_code: "064"
			},
			{
				id: 4432,
				name: "Nereta Municipality",
				state_code: "065"
			},
			{
				id: 4436,
				name: "Nīca Municipality",
				state_code: "066"
			},
			{
				id: 4416,
				name: "Ogre Municipality",
				state_code: "067"
			},
			{
				id: 4417,
				name: "Olaine Municipality",
				state_code: "068"
			},
			{
				id: 4442,
				name: "Ozolnieki Municipality",
				state_code: "069"
			},
			{
				id: 4507,
				name: "Pārgauja Municipality",
				state_code: "070"
			},
			{
				id: 4467,
				name: "Pāvilosta Municipality",
				state_code: "071"
			},
			{
				id: 4405,
				name: "Pļaviņas Municipality",
				state_code: "072"
			},
			{
				id: 4483,
				name: "Preiļi Municipality",
				state_code: "073"
			},
			{
				id: 4429,
				name: "Priekule Municipality",
				state_code: "074"
			},
			{
				id: 4506,
				name: "Priekuļi Municipality",
				state_code: "075"
			},
			{
				id: 4479,
				name: "Rauna Municipality",
				state_code: "076"
			},
			{
				id: 4509,
				name: "Rēzekne",
				state_code: "REZ"
			},
			{
				id: 4455,
				name: "Rēzekne Municipality",
				state_code: "077"
			},
			{
				id: 4502,
				name: "Riebiņi Municipality",
				state_code: "078"
			},
			{
				id: 4491,
				name: "Riga",
				state_code: "RIX"
			},
			{
				id: 4440,
				name: "Roja Municipality",
				state_code: "079"
			},
			{
				id: 4493,
				name: "Ropaži Municipality",
				state_code: "080"
			},
			{
				id: 4503,
				name: "Rucava Municipality",
				state_code: "081"
			},
			{
				id: 4423,
				name: "Rugāji Municipality",
				state_code: "082"
			},
			{
				id: 4426,
				name: "Rūjiena Municipality",
				state_code: "084"
			},
			{
				id: 4404,
				name: "Rundāle Municipality",
				state_code: "083"
			},
			{
				id: 4434,
				name: "Sala Municipality",
				state_code: "085"
			},
			{
				id: 4396,
				name: "Salacgrīva Municipality",
				state_code: "086"
			},
			{
				id: 4402,
				name: "Salaspils Municipality",
				state_code: "087"
			},
			{
				id: 4439,
				name: "Saldus Municipality",
				state_code: "088"
			},
			{
				id: 4443,
				name: "Saulkrasti Municipality",
				state_code: "089"
			},
			{
				id: 4408,
				name: "Sēja Municipality",
				state_code: "090"
			},
			{
				id: 4476,
				name: "Sigulda Municipality",
				state_code: "091"
			},
			{
				id: 4415,
				name: "Skrīveri Municipality",
				state_code: "092"
			},
			{
				id: 4447,
				name: "Skrunda Municipality",
				state_code: "093"
			},
			{
				id: 4462,
				name: "Smiltene Municipality",
				state_code: "094"
			},
			{
				id: 4478,
				name: "Stopiņi Municipality",
				state_code: "095"
			},
			{
				id: 4494,
				name: "Strenči Municipality",
				state_code: "096"
			},
			{
				id: 4459,
				name: "Talsi Municipality",
				state_code: "097"
			},
			{
				id: 4480,
				name: "Tērvete Municipality",
				state_code: "098"
			},
			{
				id: 4409,
				name: "Tukums Municipality",
				state_code: "099"
			},
			{
				id: 4508,
				name: "Vaiņode Municipality",
				state_code: "100"
			},
			{
				id: 4425,
				name: "Valka Municipality",
				state_code: "101"
			},
			{
				id: 4473,
				name: "Valmiera",
				state_code: "VMR"
			},
			{
				id: 4431,
				name: "Varakļāni Municipality",
				state_code: "102"
			},
			{
				id: 4406,
				name: "Vārkava Municipality",
				state_code: "103"
			},
			{
				id: 4466,
				name: "Vecpiebalga Municipality",
				state_code: "104"
			},
			{
				id: 4397,
				name: "Vecumnieki Municipality",
				state_code: "105"
			},
			{
				id: 4421,
				name: "Ventspils",
				state_code: "VEN"
			},
			{
				id: 4403,
				name: "Ventspils Municipality",
				state_code: "106"
			},
			{
				id: 4456,
				name: "Viesīte Municipality",
				state_code: "107"
			},
			{
				id: 4477,
				name: "Viļaka Municipality",
				state_code: "108"
			},
			{
				id: 4486,
				name: "Viļāni Municipality",
				state_code: "109"
			},
			{
				id: 4430,
				name: "Zilupe Municipality",
				state_code: "110"
			}
		]
	},
	{
		name: "Lebanon",
		iso3: "LBN",
		iso2: "LB",
		numeric_code: "422",
		phone_code: "961",
		emoji: "🇱🇧",
		emojiU: "U+1F1F1 U+1F1E7",
		states: [
			{
				id: 2285,
				name: "Akkar Governorate",
				state_code: "AK"
			},
			{
				id: 2283,
				name: "Baalbek-Hermel Governorate",
				state_code: "BH"
			},
			{
				id: 2286,
				name: "Beirut Governorate",
				state_code: "BA"
			},
			{
				id: 2287,
				name: "Beqaa Governorate",
				state_code: "BI"
			},
			{
				id: 2282,
				name: "Mount Lebanon Governorate",
				state_code: "JL"
			},
			{
				id: 2288,
				name: "Nabatieh Governorate",
				state_code: "NA"
			},
			{
				id: 2284,
				name: "North Governorate",
				state_code: "AS"
			},
			{
				id: 2281,
				name: "South Governorate",
				state_code: "JA"
			}
		]
	},
	{
		name: "Lesotho",
		iso3: "LSO",
		iso2: "LS",
		numeric_code: "426",
		phone_code: "266",
		emoji: "🇱🇸",
		emojiU: "U+1F1F1 U+1F1F8",
		states: [
			{
				id: 3030,
				name: "Berea District",
				state_code: "D"
			},
			{
				id: 3029,
				name: "Butha-Buthe District",
				state_code: "B"
			},
			{
				id: 3026,
				name: "Leribe District",
				state_code: "C"
			},
			{
				id: 3022,
				name: "Mafeteng District",
				state_code: "E"
			},
			{
				id: 3028,
				name: "Maseru District",
				state_code: "A"
			},
			{
				id: 3023,
				name: "Mohale's Hoek District",
				state_code: "F"
			},
			{
				id: 3024,
				name: "Mokhotlong District",
				state_code: "J"
			},
			{
				id: 3025,
				name: "Qacha's Nek District",
				state_code: "H"
			},
			{
				id: 3027,
				name: "Quthing District",
				state_code: "G"
			},
			{
				id: 3031,
				name: "Thaba-Tseka District",
				state_code: "K"
			}
		]
	},
	{
		name: "Liberia",
		iso3: "LBR",
		iso2: "LR",
		numeric_code: "430",
		phone_code: "231",
		emoji: "🇱🇷",
		emojiU: "U+1F1F1 U+1F1F7",
		states: [
			{
				id: 3041,
				name: "Bomi County",
				state_code: "BM"
			},
			{
				id: 3034,
				name: "Bong County",
				state_code: "BG"
			},
			{
				id: 3044,
				name: "Gbarpolu County",
				state_code: "GP"
			},
			{
				id: 3040,
				name: "Grand Bassa County",
				state_code: "GB"
			},
			{
				id: 3036,
				name: "Grand Cape Mount County",
				state_code: "CM"
			},
			{
				id: 3039,
				name: "Grand Gedeh County",
				state_code: "GG"
			},
			{
				id: 3045,
				name: "Grand Kru County",
				state_code: "GK"
			},
			{
				id: 3037,
				name: "Lofa County",
				state_code: "LO"
			},
			{
				id: 3043,
				name: "Margibi County",
				state_code: "MG"
			},
			{
				id: 3042,
				name: "Maryland County",
				state_code: "MY"
			},
			{
				id: 3032,
				name: "Montserrado County",
				state_code: "MO"
			},
			{
				id: 3046,
				name: "Nimba",
				state_code: "NI"
			},
			{
				id: 3033,
				name: "River Cess County",
				state_code: "RI"
			},
			{
				id: 3038,
				name: "River Gee County",
				state_code: "RG"
			},
			{
				id: 3035,
				name: "Sinoe County",
				state_code: "SI"
			}
		]
	},
	{
		name: "Libya",
		iso3: "LBY",
		iso2: "LY",
		numeric_code: "434",
		phone_code: "218",
		emoji: "🇱🇾",
		emojiU: "U+1F1F1 U+1F1FE",
		states: [
			{
				id: 2964,
				name: "Al Wahat District",
				state_code: "WA"
			},
			{
				id: 2981,
				name: "Benghazi",
				state_code: "BA"
			},
			{
				id: 2966,
				name: "Derna District",
				state_code: "DR"
			},
			{
				id: 2969,
				name: "Ghat District",
				state_code: "GT"
			},
			{
				id: 2980,
				name: "Jabal al Akhdar",
				state_code: "JA"
			},
			{
				id: 2974,
				name: "Jabal al Gharbi District",
				state_code: "JG"
			},
			{
				id: 2979,
				name: "Jafara",
				state_code: "JI"
			},
			{
				id: 2970,
				name: "Jufra",
				state_code: "JU"
			},
			{
				id: 2972,
				name: "Kufra District",
				state_code: "KF"
			},
			{
				id: 2968,
				name: "Marj District",
				state_code: "MJ"
			},
			{
				id: 2978,
				name: "Misrata District",
				state_code: "MI"
			},
			{
				id: 2961,
				name: "Murqub",
				state_code: "MB"
			},
			{
				id: 2967,
				name: "Murzuq District",
				state_code: "MQ"
			},
			{
				id: 2976,
				name: "Nalut District",
				state_code: "NL"
			},
			{
				id: 2962,
				name: "Nuqat al Khams",
				state_code: "NQ"
			},
			{
				id: 2965,
				name: "Sabha District",
				state_code: "SB"
			},
			{
				id: 2977,
				name: "Sirte District",
				state_code: "SR"
			},
			{
				id: 2971,
				name: "Tripoli District",
				state_code: "TB"
			},
			{
				id: 2973,
				name: "Wadi al Hayaa District",
				state_code: "WD"
			},
			{
				id: 2975,
				name: "Wadi al Shatii District",
				state_code: "WS"
			},
			{
				id: 2963,
				name: "Zawiya District",
				state_code: "ZA"
			}
		]
	},
	{
		name: "Liechtenstein",
		iso3: "LIE",
		iso2: "LI",
		numeric_code: "438",
		phone_code: "423",
		emoji: "🇱🇮",
		emojiU: "U+1F1F1 U+1F1EE",
		states: [
			{
				id: 458,
				name: "Balzers",
				state_code: "01"
			},
			{
				id: 451,
				name: "Eschen",
				state_code: "02"
			},
			{
				id: 457,
				name: "Gamprin",
				state_code: "03"
			},
			{
				id: 455,
				name: "Mauren",
				state_code: "04"
			},
			{
				id: 454,
				name: "Planken",
				state_code: "05"
			},
			{
				id: 453,
				name: "Ruggell",
				state_code: "06"
			},
			{
				id: 450,
				name: "Schaan",
				state_code: "07"
			},
			{
				id: 449,
				name: "Schellenberg",
				state_code: "08"
			},
			{
				id: 459,
				name: "Triesen",
				state_code: "09"
			},
			{
				id: 456,
				name: "Triesenberg",
				state_code: "10"
			},
			{
				id: 452,
				name: "Vaduz",
				state_code: "11"
			}
		]
	},
	{
		name: "Lithuania",
		iso3: "LTU",
		iso2: "LT",
		numeric_code: "440",
		phone_code: "370",
		emoji: "🇱🇹",
		emojiU: "U+1F1F1 U+1F1F9",
		states: [
			{
				id: 1561,
				name: "Akmenė District Municipality",
				state_code: "01"
			},
			{
				id: 1605,
				name: "Alytus City Municipality",
				state_code: "02"
			},
			{
				id: 1574,
				name: "Alytus County",
				state_code: "AL"
			},
			{
				id: 1599,
				name: "Alytus District Municipality",
				state_code: "03"
			},
			{
				id: 1603,
				name: "Birštonas Municipality",
				state_code: "05"
			},
			{
				id: 1566,
				name: "Biržai District Municipality",
				state_code: "06"
			},
			{
				id: 1579,
				name: "Druskininkai municipality",
				state_code: "07"
			},
			{
				id: 1559,
				name: "Elektrėnai municipality",
				state_code: "08"
			},
			{
				id: 1562,
				name: "Ignalina District Municipality",
				state_code: "09"
			},
			{
				id: 1567,
				name: "Jonava District Municipality",
				state_code: "10"
			},
			{
				id: 1581,
				name: "Joniškis District Municipality",
				state_code: "11"
			},
			{
				id: 1555,
				name: "Jurbarkas District Municipality",
				state_code: "12"
			},
			{
				id: 1583,
				name: "Kaišiadorys District Municipality",
				state_code: "13"
			},
			{
				id: 1591,
				name: "Kalvarija municipality",
				state_code: "14"
			},
			{
				id: 1580,
				name: "Kaunas City Municipality",
				state_code: "15"
			},
			{
				id: 1556,
				name: "Kaunas County",
				state_code: "KU"
			},
			{
				id: 1565,
				name: "Kaunas District Municipality",
				state_code: "16"
			},
			{
				id: 1575,
				name: "Kazlų Rūda municipality",
				state_code: "17"
			},
			{
				id: 1584,
				name: "Kėdainiai District Municipality",
				state_code: "18"
			},
			{
				id: 1618,
				name: "Kelmė District Municipality",
				state_code: "19"
			},
			{
				id: 1597,
				name: "Klaipeda City Municipality",
				state_code: "20"
			},
			{
				id: 1600,
				name: "Klaipėda County",
				state_code: "KL"
			},
			{
				id: 1604,
				name: "Klaipėda District Municipality",
				state_code: "21"
			},
			{
				id: 1571,
				name: "Kretinga District Municipality",
				state_code: "22"
			},
			{
				id: 1585,
				name: "Kupiškis District Municipality",
				state_code: "23"
			},
			{
				id: 1611,
				name: "Lazdijai District Municipality",
				state_code: "24"
			},
			{
				id: 1570,
				name: "Marijampolė County",
				state_code: "MR"
			},
			{
				id: 1610,
				name: "Marijampolė Municipality",
				state_code: "25"
			},
			{
				id: 1557,
				name: "Mažeikiai District Municipality",
				state_code: "26"
			},
			{
				id: 1582,
				name: "Molėtai District Municipality",
				state_code: "27"
			},
			{
				id: 1563,
				name: "Neringa Municipality",
				state_code: "28"
			},
			{
				id: 1612,
				name: "Pagėgiai municipality",
				state_code: "29"
			},
			{
				id: 1595,
				name: "Pakruojis District Municipality",
				state_code: "30"
			},
			{
				id: 1588,
				name: "Palanga City Municipality",
				state_code: "31"
			},
			{
				id: 1589,
				name: "Panevėžys City Municipality",
				state_code: "32"
			},
			{
				id: 1558,
				name: "Panevėžys County",
				state_code: "PN"
			},
			{
				id: 1614,
				name: "Panevėžys District Municipality",
				state_code: "33"
			},
			{
				id: 1616,
				name: "Pasvalys District Municipality",
				state_code: "34"
			},
			{
				id: 1553,
				name: "Plungė District Municipality",
				state_code: "35"
			},
			{
				id: 1578,
				name: "Prienai District Municipality",
				state_code: "36"
			},
			{
				id: 1568,
				name: "Radviliškis District Municipality",
				state_code: "37"
			},
			{
				id: 1587,
				name: "Raseiniai District Municipality",
				state_code: "38"
			},
			{
				id: 1590,
				name: "Rietavas municipality",
				state_code: "39"
			},
			{
				id: 1615,
				name: "Rokiškis District Municipality",
				state_code: "40"
			},
			{
				id: 1576,
				name: "Šakiai District Municipality",
				state_code: "41"
			},
			{
				id: 1577,
				name: "Šalčininkai District Municipality",
				state_code: "42"
			},
			{
				id: 1609,
				name: "Šiauliai City Municipality",
				state_code: "43"
			},
			{
				id: 1586,
				name: "Šiauliai County",
				state_code: "SA"
			},
			{
				id: 1554,
				name: "Šiauliai District Municipality",
				state_code: "44"
			},
			{
				id: 1613,
				name: "Šilalė District Municipality",
				state_code: "45"
			},
			{
				id: 1607,
				name: "Šilutė District Municipality",
				state_code: "46"
			},
			{
				id: 1594,
				name: "Širvintos District Municipality",
				state_code: "47"
			},
			{
				id: 1617,
				name: "Skuodas District Municipality",
				state_code: "48"
			},
			{
				id: 1560,
				name: "Švenčionys District Municipality",
				state_code: "49"
			},
			{
				id: 1573,
				name: "Tauragė County",
				state_code: "TA"
			},
			{
				id: 1572,
				name: "Tauragė District Municipality",
				state_code: "50"
			},
			{
				id: 1569,
				name: "Telšiai County",
				state_code: "TE"
			},
			{
				id: 1608,
				name: "Telšiai District Municipality",
				state_code: "51"
			},
			{
				id: 1593,
				name: "Trakai District Municipality",
				state_code: "52"
			},
			{
				id: 1596,
				name: "Ukmergė District Municipality",
				state_code: "53"
			},
			{
				id: 1621,
				name: "Utena County",
				state_code: "UT"
			},
			{
				id: 1598,
				name: "Utena District Municipality",
				state_code: "54"
			},
			{
				id: 1602,
				name: "Varėna District Municipality",
				state_code: "55"
			},
			{
				id: 1620,
				name: "Vilkaviškis District Municipality",
				state_code: "56"
			},
			{
				id: 1606,
				name: "Vilnius City Municipality",
				state_code: "57"
			},
			{
				id: 1601,
				name: "Vilnius County",
				state_code: "VL"
			},
			{
				id: 1592,
				name: "Vilnius District Municipality",
				state_code: "58"
			},
			{
				id: 1564,
				name: "Visaginas Municipality",
				state_code: "59"
			},
			{
				id: 1619,
				name: "Zarasai District Municipality",
				state_code: "60"
			}
		]
	},
	{
		name: "Luxembourg",
		iso3: "LUX",
		iso2: "LU",
		numeric_code: "442",
		phone_code: "352",
		emoji: "🇱🇺",
		emojiU: "U+1F1F1 U+1F1FA",
		states: [
			{
				id: 1518,
				name: "Canton of Capellen",
				state_code: "CA"
			},
			{
				id: 1521,
				name: "Canton of Clervaux",
				state_code: "CL"
			},
			{
				id: 1513,
				name: "Canton of Diekirch",
				state_code: "DI"
			},
			{
				id: 1515,
				name: "Canton of Echternach",
				state_code: "EC"
			},
			{
				id: 1517,
				name: "Canton of Esch-sur-Alzette",
				state_code: "ES"
			},
			{
				id: 1525,
				name: "Canton of Grevenmacher",
				state_code: "GR"
			},
			{
				id: 1527,
				name: "Canton of Luxembourg",
				state_code: "LU"
			},
			{
				id: 1522,
				name: "Canton of Mersch",
				state_code: "ME"
			},
			{
				id: 1516,
				name: "Canton of Redange",
				state_code: "RD"
			},
			{
				id: 1519,
				name: "Canton of Remich",
				state_code: "RM"
			},
			{
				id: 1523,
				name: "Canton of Vianden",
				state_code: "VD"
			},
			{
				id: 1526,
				name: "Canton of Wiltz",
				state_code: "WI"
			},
			{
				id: 1524,
				name: "Diekirch District",
				state_code: "D"
			},
			{
				id: 1520,
				name: "Grevenmacher District",
				state_code: "G"
			},
			{
				id: 1514,
				name: "Luxembourg District",
				state_code: "L"
			}
		]
	},
	{
		name: "Macau S.A.R.",
		iso3: "MAC",
		iso2: "MO",
		numeric_code: "446",
		phone_code: "853",
		emoji: "🇲🇴",
		emojiU: "U+1F1F2 U+1F1F4",
		states: [
		]
	},
	{
		name: "Macedonia",
		iso3: "MKD",
		iso2: "MK",
		numeric_code: "807",
		phone_code: "389",
		emoji: "🇲🇰",
		emojiU: "U+1F1F2 U+1F1F0",
		states: [
			{
				id: 703,
				name: "Aerodrom Municipality",
				state_code: "01"
			},
			{
				id: 656,
				name: "Aračinovo Municipality",
				state_code: "02"
			},
			{
				id: 716,
				name: "Berovo Municipality",
				state_code: "03"
			},
			{
				id: 679,
				name: "Bitola Municipality",
				state_code: "04"
			},
			{
				id: 649,
				name: "Bogdanci Municipality",
				state_code: "05"
			},
			{
				id: 721,
				name: "Bogovinje Municipality",
				state_code: "06"
			},
			{
				id: 652,
				name: "Bosilovo Municipality",
				state_code: "07"
			},
			{
				id: 660,
				name: "Brvenica Municipality",
				state_code: "08"
			},
			{
				id: 694,
				name: "Butel Municipality",
				state_code: "09"
			},
			{
				id: 704,
				name: "Čair Municipality",
				state_code: "79"
			},
			{
				id: 676,
				name: "Čaška Municipality",
				state_code: "80"
			},
			{
				id: 702,
				name: "Centar Municipality",
				state_code: "77"
			},
			{
				id: 720,
				name: "Centar Župa Municipality",
				state_code: "78"
			},
			{
				id: 644,
				name: "Češinovo-Obleševo Municipality",
				state_code: "81"
			},
			{
				id: 715,
				name: "Čučer-Sandevo Municipality",
				state_code: "82"
			},
			{
				id: 645,
				name: "Debarca Municipality",
				state_code: "22"
			},
			{
				id: 695,
				name: "Delčevo Municipality",
				state_code: "23"
			},
			{
				id: 687,
				name: "Demir Hisar Municipality",
				state_code: "25"
			},
			{
				id: 655,
				name: "Demir Kapija Municipality",
				state_code: "24"
			},
			{
				id: 697,
				name: "Dojran Municipality",
				state_code: "26"
			},
			{
				id: 675,
				name: "Dolneni Municipality",
				state_code: "27"
			},
			{
				id: 657,
				name: "Drugovo Municipality",
				state_code: "28"
			},
			{
				id: 707,
				name: "Gazi Baba Municipality",
				state_code: "17"
			},
			{
				id: 648,
				name: "Gevgelija Municipality",
				state_code: "18"
			},
			{
				id: 722,
				name: "Gjorče Petrov Municipality",
				state_code: "29"
			},
			{
				id: 693,
				name: "Gostivar Municipality",
				state_code: "19"
			},
			{
				id: 708,
				name: "Gradsko Municipality",
				state_code: "20"
			},
			{
				id: 684,
				name: "Greater Skopje",
				state_code: "85"
			},
			{
				id: 690,
				name: "Ilinden Municipality",
				state_code: "34"
			},
			{
				id: 678,
				name: "Jegunovce Municipality",
				state_code: "35"
			},
			{
				id: 674,
				name: "Karbinci",
				state_code: "37"
			},
			{
				id: 681,
				name: "Karpoš Municipality",
				state_code: "38"
			},
			{
				id: 713,
				name: "Kavadarci Municipality",
				state_code: "36"
			},
			{
				id: 688,
				name: "Kičevo Municipality",
				state_code: "40"
			},
			{
				id: 686,
				name: "Kisela Voda Municipality",
				state_code: "39"
			},
			{
				id: 723,
				name: "Kočani Municipality",
				state_code: "42"
			},
			{
				id: 665,
				name: "Konče Municipality",
				state_code: "41"
			},
			{
				id: 641,
				name: "Kratovo Municipality",
				state_code: "43"
			},
			{
				id: 677,
				name: "Kriva Palanka Municipality",
				state_code: "44"
			},
			{
				id: 647,
				name: "Krivogaštani Municipality",
				state_code: "45"
			},
			{
				id: 714,
				name: "Kruševo Municipality",
				state_code: "46"
			},
			{
				id: 683,
				name: "Kumanovo Municipality",
				state_code: "47"
			},
			{
				id: 659,
				name: "Lipkovo Municipality",
				state_code: "48"
			},
			{
				id: 705,
				name: "Lozovo Municipality",
				state_code: "49"
			},
			{
				id: 701,
				name: "Makedonska Kamenica Municipality",
				state_code: "51"
			},
			{
				id: 692,
				name: "Makedonski Brod Municipality",
				state_code: "52"
			},
			{
				id: 669,
				name: "Mavrovo and Rostuša Municipality",
				state_code: "50"
			},
			{
				id: 653,
				name: "Mogila Municipality",
				state_code: "53"
			},
			{
				id: 664,
				name: "Negotino Municipality",
				state_code: "54"
			},
			{
				id: 696,
				name: "Novaci Municipality",
				state_code: "55"
			},
			{
				id: 718,
				name: "Novo Selo Municipality",
				state_code: "56"
			},
			{
				id: 699,
				name: "Ohrid Municipality",
				state_code: "58"
			},
			{
				id: 682,
				name: "Oslomej Municipality",
				state_code: "57"
			},
			{
				id: 685,
				name: "Pehčevo Municipality",
				state_code: "60"
			},
			{
				id: 698,
				name: "Petrovec Municipality",
				state_code: "59"
			},
			{
				id: 670,
				name: "Plasnica Municipality",
				state_code: "61"
			},
			{
				id: 666,
				name: "Prilep Municipality",
				state_code: "62"
			},
			{
				id: 646,
				name: "Probištip Municipality",
				state_code: "63"
			},
			{
				id: 709,
				name: "Radoviš Municipality",
				state_code: "64"
			},
			{
				id: 717,
				name: "Rankovce Municipality",
				state_code: "65"
			},
			{
				id: 712,
				name: "Resen Municipality",
				state_code: "66"
			},
			{
				id: 691,
				name: "Rosoman Municipality",
				state_code: "67"
			},
			{
				id: 667,
				name: "Saraj Municipality",
				state_code: "68"
			},
			{
				id: 719,
				name: "Sopište Municipality",
				state_code: "70"
			},
			{
				id: 643,
				name: "Staro Nagoričane Municipality",
				state_code: "71"
			},
			{
				id: 661,
				name: "Štip Municipality",
				state_code: "83"
			},
			{
				id: 700,
				name: "Struga Municipality",
				state_code: "72"
			},
			{
				id: 710,
				name: "Strumica Municipality",
				state_code: "73"
			},
			{
				id: 711,
				name: "Studeničani Municipality",
				state_code: "74"
			},
			{
				id: 680,
				name: "Šuto Orizari Municipality",
				state_code: "84"
			},
			{
				id: 640,
				name: "Sveti Nikole Municipality",
				state_code: "69"
			},
			{
				id: 654,
				name: "Tearce Municipality",
				state_code: "75"
			},
			{
				id: 663,
				name: "Tetovo Municipality",
				state_code: "76"
			},
			{
				id: 671,
				name: "Valandovo Municipality",
				state_code: "10"
			},
			{
				id: 658,
				name: "Vasilevo Municipality",
				state_code: "11"
			},
			{
				id: 651,
				name: "Veles Municipality",
				state_code: "13"
			},
			{
				id: 662,
				name: "Vevčani Municipality",
				state_code: "12"
			},
			{
				id: 672,
				name: "Vinica Municipality",
				state_code: "14"
			},
			{
				id: 650,
				name: "Vraneštica Municipality",
				state_code: "15"
			},
			{
				id: 689,
				name: "Vrapčište Municipality",
				state_code: "16"
			},
			{
				id: 642,
				name: "Zajas Municipality",
				state_code: "31"
			},
			{
				id: 706,
				name: "Zelenikovo Municipality",
				state_code: "32"
			},
			{
				id: 668,
				name: "Želino Municipality",
				state_code: "30"
			},
			{
				id: 673,
				name: "Zrnovci Municipality",
				state_code: "33"
			}
		]
	},
	{
		name: "Madagascar",
		iso3: "MDG",
		iso2: "MG",
		numeric_code: "450",
		phone_code: "261",
		emoji: "🇲🇬",
		emojiU: "U+1F1F2 U+1F1EC",
		states: [
			{
				id: 2951,
				name: "Antananarivo Province",
				state_code: "T"
			},
			{
				id: 2950,
				name: "Antsiranana Province",
				state_code: "D"
			},
			{
				id: 2948,
				name: "Fianarantsoa Province",
				state_code: "F"
			},
			{
				id: 2953,
				name: "Mahajanga Province",
				state_code: "M"
			},
			{
				id: 2952,
				name: "Toamasina Province",
				state_code: "A"
			},
			{
				id: 2949,
				name: "Toliara Province",
				state_code: "U"
			}
		]
	},
	{
		name: "Malawi",
		iso3: "MWI",
		iso2: "MW",
		numeric_code: "454",
		phone_code: "265",
		emoji: "🇲🇼",
		emojiU: "U+1F1F2 U+1F1FC",
		states: [
			{
				id: 3096,
				name: "Balaka District",
				state_code: "BA"
			},
			{
				id: 3102,
				name: "Blantyre District",
				state_code: "BL"
			},
			{
				id: 3092,
				name: "Central Region",
				state_code: "C"
			},
			{
				id: 3107,
				name: "Chikwawa District",
				state_code: "CK"
			},
			{
				id: 3109,
				name: "Chiradzulu District",
				state_code: "CR"
			},
			{
				id: 3087,
				name: "Chitipa district",
				state_code: "CT"
			},
			{
				id: 3097,
				name: "Dedza District",
				state_code: "DE"
			},
			{
				id: 3090,
				name: "Dowa District",
				state_code: "DO"
			},
			{
				id: 3091,
				name: "Karonga District",
				state_code: "KR"
			},
			{
				id: 3094,
				name: "Kasungu District",
				state_code: "KS"
			},
			{
				id: 3093,
				name: "Likoma District",
				state_code: "LK"
			},
			{
				id: 3101,
				name: "Lilongwe District",
				state_code: "LI"
			},
			{
				id: 3082,
				name: "Machinga District",
				state_code: "MH"
			},
			{
				id: 3110,
				name: "Mangochi District",
				state_code: "MG"
			},
			{
				id: 3099,
				name: "Mchinji District",
				state_code: "MC"
			},
			{
				id: 3103,
				name: "Mulanje District",
				state_code: "MU"
			},
			{
				id: 3084,
				name: "Mwanza District",
				state_code: "MW"
			},
			{
				id: 3104,
				name: "Mzimba District",
				state_code: "MZ"
			},
			{
				id: 3095,
				name: "Nkhata Bay District",
				state_code: "NB"
			},
			{
				id: 3100,
				name: "Nkhotakota District",
				state_code: "NK"
			},
			{
				id: 3105,
				name: "Northern Region",
				state_code: "N"
			},
			{
				id: 3085,
				name: "Nsanje District",
				state_code: "NS"
			},
			{
				id: 3088,
				name: "Ntcheu District",
				state_code: "NU"
			},
			{
				id: 3111,
				name: "Ntchisi District",
				state_code: "NI"
			},
			{
				id: 3108,
				name: "Phalombe District",
				state_code: "PH"
			},
			{
				id: 3089,
				name: "Rumphi District",
				state_code: "RU"
			},
			{
				id: 3086,
				name: "Salima District",
				state_code: "SA"
			},
			{
				id: 3106,
				name: "Southern Region",
				state_code: "S"
			},
			{
				id: 3098,
				name: "Thyolo District",
				state_code: "TH"
			},
			{
				id: 3083,
				name: "Zomba District",
				state_code: "ZO"
			}
		]
	},
	{
		name: "Malaysia",
		iso3: "MYS",
		iso2: "MY",
		numeric_code: "458",
		phone_code: "60",
		emoji: "🇲🇾",
		emojiU: "U+1F1F2 U+1F1FE",
		states: [
			{
				id: 1950,
				name: "Johor",
				state_code: "01"
			},
			{
				id: 1947,
				name: "Kedah",
				state_code: "02"
			},
			{
				id: 1946,
				name: "Kelantan",
				state_code: "03"
			},
			{
				id: 1949,
				name: "Kuala Lumpur",
				state_code: "14"
			},
			{
				id: 1935,
				name: "Labuan",
				state_code: "15"
			},
			{
				id: 1941,
				name: "Malacca",
				state_code: "04"
			},
			{
				id: 1948,
				name: "Negeri Sembilan",
				state_code: "05"
			},
			{
				id: 1940,
				name: "Pahang",
				state_code: "06"
			},
			{
				id: 1939,
				name: "Penang",
				state_code: "07"
			},
			{
				id: 1943,
				name: "Perak",
				state_code: "08"
			},
			{
				id: 1938,
				name: "Perlis",
				state_code: "09"
			},
			{
				id: 1945,
				name: "Putrajaya",
				state_code: "16"
			},
			{
				id: 1936,
				name: "Sabah",
				state_code: "12"
			},
			{
				id: 1937,
				name: "Sarawak",
				state_code: "13"
			},
			{
				id: 1944,
				name: "Selangor",
				state_code: "10"
			},
			{
				id: 1942,
				name: "Terengganu",
				state_code: "11"
			}
		]
	},
	{
		name: "Maldives",
		iso3: "MDV",
		iso2: "MV",
		numeric_code: "462",
		phone_code: "960",
		emoji: "🇲🇻",
		emojiU: "U+1F1F2 U+1F1FB",
		states: [
			{
				id: 2594,
				name: "Addu Atoll",
				state_code: "01"
			},
			{
				id: 2587,
				name: "Alif Alif Atoll",
				state_code: "02"
			},
			{
				id: 2600,
				name: "Alif Dhaal Atoll",
				state_code: "00"
			},
			{
				id: 2604,
				name: "Central Province",
				state_code: "CE"
			},
			{
				id: 2590,
				name: "Dhaalu Atoll",
				state_code: "17"
			},
			{
				id: 2599,
				name: "Faafu Atoll",
				state_code: "14"
			},
			{
				id: 2598,
				name: "Gaafu Alif Atoll",
				state_code: "27"
			},
			{
				id: 2603,
				name: "Gaafu Dhaalu Atoll",
				state_code: "28"
			},
			{
				id: 2595,
				name: "Gnaviyani Atoll",
				state_code: "29"
			},
			{
				id: 2586,
				name: "Haa Alif Atoll",
				state_code: "07"
			},
			{
				id: 2597,
				name: "Haa Dhaalu Atoll",
				state_code: "23"
			},
			{
				id: 2596,
				name: "Kaafu Atoll",
				state_code: "26"
			},
			{
				id: 2601,
				name: "Laamu Atoll",
				state_code: "05"
			},
			{
				id: 2607,
				name: "Lhaviyani Atoll",
				state_code: "03"
			},
			{
				id: 2609,
				name: "Malé",
				state_code: "MLE"
			},
			{
				id: 2608,
				name: "Meemu Atoll",
				state_code: "12"
			},
			{
				id: 2592,
				name: "Noonu Atoll",
				state_code: "25"
			},
			{
				id: 2589,
				name: "North Central Province",
				state_code: "NC"
			},
			{
				id: 2588,
				name: "North Province",
				state_code: "NO"
			},
			{
				id: 2602,
				name: "Raa Atoll",
				state_code: "13"
			},
			{
				id: 2585,
				name: "Shaviyani Atoll",
				state_code: "24"
			},
			{
				id: 2606,
				name: "South Central Province",
				state_code: "SC"
			},
			{
				id: 2605,
				name: "South Province",
				state_code: "SU"
			},
			{
				id: 2591,
				name: "Thaa Atoll",
				state_code: "08"
			},
			{
				id: 2593,
				name: "Upper South Province",
				state_code: "US"
			},
			{
				id: 2584,
				name: "Vaavu Atoll",
				state_code: "04"
			}
		]
	},
	{
		name: "Mali",
		iso3: "MLI",
		iso2: "ML",
		numeric_code: "466",
		phone_code: "223",
		emoji: "🇲🇱",
		emojiU: "U+1F1F2 U+1F1F1",
		states: [
			{
				id: 253,
				name: "Bamako",
				state_code: "BKO"
			},
			{
				id: 258,
				name: "Gao Region",
				state_code: "7"
			},
			{
				id: 252,
				name: "Kayes Region",
				state_code: "1"
			},
			{
				id: 257,
				name: "Kidal Region",
				state_code: "8"
			},
			{
				id: 250,
				name: "Koulikoro Region",
				state_code: "2"
			},
			{
				id: 251,
				name: "Ménaka Region",
				state_code: "9"
			},
			{
				id: 255,
				name: "Mopti Region",
				state_code: "5"
			},
			{
				id: 249,
				name: "Ségou Region",
				state_code: "4"
			},
			{
				id: 254,
				name: "Sikasso Region",
				state_code: "3"
			},
			{
				id: 256,
				name: "Taoudénit Region",
				state_code: "10"
			},
			{
				id: 248,
				name: "Tombouctou Region",
				state_code: "6"
			}
		]
	},
	{
		name: "Malta",
		iso3: "MLT",
		iso2: "MT",
		numeric_code: "470",
		phone_code: "356",
		emoji: "🇲🇹",
		emojiU: "U+1F1F2 U+1F1F9",
		states: [
			{
				id: 110,
				name: "Attard",
				state_code: "01"
			},
			{
				id: 108,
				name: "Balzan",
				state_code: "02"
			},
			{
				id: 107,
				name: "Birgu",
				state_code: "03"
			},
			{
				id: 97,
				name: "Birkirkara",
				state_code: "04"
			},
			{
				id: 88,
				name: "Birżebbuġa",
				state_code: "05"
			},
			{
				id: 138,
				name: "Cospicua",
				state_code: "06"
			},
			{
				id: 117,
				name: "Dingli",
				state_code: "07"
			},
			{
				id: 129,
				name: "Fgura",
				state_code: "08"
			},
			{
				id: 84,
				name: "Floriana",
				state_code: "09"
			},
			{
				id: 134,
				name: "Fontana",
				state_code: "10"
			},
			{
				id: 130,
				name: "Għajnsielem",
				state_code: "13"
			},
			{
				id: 92,
				name: "Għarb",
				state_code: "14"
			},
			{
				id: 120,
				name: "Għargħur",
				state_code: "15"
			},
			{
				id: 106,
				name: "Għasri",
				state_code: "16"
			},
			{
				id: 124,
				name: "Għaxaq",
				state_code: "17"
			},
			{
				id: 118,
				name: "Gudja",
				state_code: "11"
			},
			{
				id: 113,
				name: "Gżira",
				state_code: "12"
			},
			{
				id: 105,
				name: "Ħamrun",
				state_code: "18"
			},
			{
				id: 93,
				name: "Iklin",
				state_code: "19"
			},
			{
				id: 99,
				name: "Kalkara",
				state_code: "21"
			},
			{
				id: 91,
				name: "Kerċem",
				state_code: "22"
			},
			{
				id: 82,
				name: "Kirkop",
				state_code: "23"
			},
			{
				id: 126,
				name: "Lija",
				state_code: "24"
			},
			{
				id: 77,
				name: "Luqa",
				state_code: "25"
			},
			{
				id: 128,
				name: "Marsa",
				state_code: "26"
			},
			{
				id: 137,
				name: "Marsaskala",
				state_code: "27"
			},
			{
				id: 78,
				name: "Marsaxlokk",
				state_code: "28"
			},
			{
				id: 89,
				name: "Mdina",
				state_code: "29"
			},
			{
				id: 102,
				name: "Mellieħa",
				state_code: "30"
			},
			{
				id: 109,
				name: "Mġarr",
				state_code: "31"
			},
			{
				id: 140,
				name: "Mosta",
				state_code: "32"
			},
			{
				id: 74,
				name: "Mqabba",
				state_code: "33"
			},
			{
				id: 96,
				name: "Msida",
				state_code: "34"
			},
			{
				id: 131,
				name: "Mtarfa",
				state_code: "35"
			},
			{
				id: 132,
				name: "Munxar",
				state_code: "36"
			},
			{
				id: 133,
				name: "Nadur",
				state_code: "37"
			},
			{
				id: 112,
				name: "Naxxar",
				state_code: "38"
			},
			{
				id: 115,
				name: "Paola",
				state_code: "39"
			},
			{
				id: 125,
				name: "Pembroke",
				state_code: "40"
			},
			{
				id: 127,
				name: "Pietà",
				state_code: "41"
			},
			{
				id: 79,
				name: "Qala",
				state_code: "42"
			},
			{
				id: 119,
				name: "Qormi",
				state_code: "43"
			},
			{
				id: 111,
				name: "Qrendi",
				state_code: "44"
			},
			{
				id: 83,
				name: "Rabat",
				state_code: "46"
			},
			{
				id: 87,
				name: "Saint Lawrence",
				state_code: "50"
			},
			{
				id: 75,
				name: "San Ġwann",
				state_code: "49"
			},
			{
				id: 116,
				name: "Sannat",
				state_code: "52"
			},
			{
				id: 94,
				name: "Santa Luċija",
				state_code: "53"
			},
			{
				id: 90,
				name: "Santa Venera",
				state_code: "54"
			},
			{
				id: 136,
				name: "Senglea",
				state_code: "20"
			},
			{
				id: 98,
				name: "Siġġiewi",
				state_code: "55"
			},
			{
				id: 104,
				name: "Sliema",
				state_code: "56"
			},
			{
				id: 100,
				name: "St. Julian's",
				state_code: "48"
			},
			{
				id: 139,
				name: "St. Paul's Bay",
				state_code: "51"
			},
			{
				id: 86,
				name: "Swieqi",
				state_code: "57"
			},
			{
				id: 122,
				name: "Ta' Xbiex",
				state_code: "58"
			},
			{
				id: 103,
				name: "Tarxien",
				state_code: "59"
			},
			{
				id: 95,
				name: "Valletta",
				state_code: "60"
			},
			{
				id: 101,
				name: "Victoria",
				state_code: "45"
			},
			{
				id: 114,
				name: "Xagħra",
				state_code: "61"
			},
			{
				id: 121,
				name: "Xewkija",
				state_code: "62"
			},
			{
				id: 81,
				name: "Xgħajra",
				state_code: "63"
			},
			{
				id: 123,
				name: "Żabbar",
				state_code: "64"
			},
			{
				id: 85,
				name: "Żebbuġ Gozo",
				state_code: "65"
			},
			{
				id: 80,
				name: "Żebbuġ Malta",
				state_code: "66"
			},
			{
				id: 135,
				name: "Żejtun",
				state_code: "67"
			},
			{
				id: 76,
				name: "Żurrieq",
				state_code: "68"
			}
		]
	},
	{
		name: "Man (Isle of)",
		iso3: "IMN",
		iso2: "IM",
		numeric_code: "833",
		phone_code: "+44-1624",
		emoji: "🇮🇲",
		emojiU: "U+1F1EE U+1F1F2",
		states: [
		]
	},
	{
		name: "Marshall Islands",
		iso3: "MHL",
		iso2: "MH",
		numeric_code: "584",
		phone_code: "692",
		emoji: "🇲🇭",
		emojiU: "U+1F1F2 U+1F1ED",
		states: [
			{
				id: 2574,
				name: "Ralik Chain",
				state_code: "L"
			},
			{
				id: 2573,
				name: "Ratak Chain",
				state_code: "T"
			}
		]
	},
	{
		name: "Martinique",
		iso3: "MTQ",
		iso2: "MQ",
		numeric_code: "474",
		phone_code: "596",
		emoji: "🇲🇶",
		emojiU: "U+1F1F2 U+1F1F6",
		states: [
		]
	},
	{
		name: "Mauritania",
		iso3: "MRT",
		iso2: "MR",
		numeric_code: "478",
		phone_code: "222",
		emoji: "🇲🇷",
		emojiU: "U+1F1F2 U+1F1F7",
		states: [
			{
				id: 3344,
				name: "Adrar Region",
				state_code: "07"
			},
			{
				id: 3349,
				name: "Assaba Region",
				state_code: "03"
			},
			{
				id: 3339,
				name: "Brakna Region",
				state_code: "05"
			},
			{
				id: 3346,
				name: "Dakhlet Nouadhibou",
				state_code: "08"
			},
			{
				id: 3341,
				name: "Gorgol Region",
				state_code: "04"
			},
			{
				id: 3350,
				name: "Guidimaka Region",
				state_code: "10"
			},
			{
				id: 3338,
				name: "Hodh Ech Chargui Region",
				state_code: "01"
			},
			{
				id: 3351,
				name: "Hodh El Gharbi Region",
				state_code: "02"
			},
			{
				id: 3342,
				name: "Inchiri Region",
				state_code: "12"
			},
			{
				id: 3343,
				name: "Nouakchott-Nord Region",
				state_code: "14"
			},
			{
				id: 3352,
				name: "Nouakchott-Ouest Region",
				state_code: "13"
			},
			{
				id: 3347,
				name: "Nouakchott-Sud Region",
				state_code: "15"
			},
			{
				id: 3345,
				name: "Tagant Region",
				state_code: "09"
			},
			{
				id: 3340,
				name: "Tiris Zemmour Region",
				state_code: "11"
			},
			{
				id: 3348,
				name: "Trarza Region",
				state_code: "06"
			}
		]
	},
	{
		name: "Mauritius",
		iso3: "MUS",
		iso2: "MU",
		numeric_code: "480",
		phone_code: "230",
		emoji: "🇲🇺",
		emojiU: "U+1F1F2 U+1F1FA",
		states: [
			{
				id: 3248,
				name: "Agaléga",
				state_code: "AG"
			},
			{
				id: 3262,
				name: "Beau Bassin-Rose Hill",
				state_code: "BR"
			},
			{
				id: 3251,
				name: "Cargados Carajos",
				state_code: "CC"
			},
			{
				id: 3255,
				name: "Curepipe",
				state_code: "CU"
			},
			{
				id: 3254,
				name: "Flacq District",
				state_code: "FL"
			},
			{
				id: 3264,
				name: "Grand Port District",
				state_code: "GP"
			},
			{
				id: 3253,
				name: "Moka District",
				state_code: "MO"
			},
			{
				id: 3250,
				name: "Pamplemousses District",
				state_code: "PA"
			},
			{
				id: 3263,
				name: "Plaines Wilhems District",
				state_code: "PW"
			},
			{
				id: 3256,
				name: "Port Louis",
				state_code: "PU"
			},
			{
				id: 3260,
				name: "Port Louis District",
				state_code: "PL"
			},
			{
				id: 3258,
				name: "Quatre Bornes",
				state_code: "QB"
			},
			{
				id: 3261,
				name: "Rivière du Rempart District",
				state_code: "RR"
			},
			{
				id: 3259,
				name: "Rivière Noire District",
				state_code: "BL"
			},
			{
				id: 3249,
				name: "Rodrigues",
				state_code: "RO"
			},
			{
				id: 3257,
				name: "Savanne District",
				state_code: "SA"
			},
			{
				id: 3252,
				name: "Vacoas-Phoenix",
				state_code: "VP"
			}
		]
	},
	{
		name: "Mayotte",
		iso3: "MYT",
		iso2: "YT",
		numeric_code: "175",
		phone_code: "262",
		emoji: "🇾🇹",
		emojiU: "U+1F1FE U+1F1F9",
		states: [
		]
	},
	{
		name: "Mexico",
		iso3: "MEX",
		iso2: "MX",
		numeric_code: "484",
		phone_code: "52",
		emoji: "🇲🇽",
		emojiU: "U+1F1F2 U+1F1FD",
		states: [
			{
				id: 3456,
				name: "Aguascalientes",
				state_code: "AGU"
			},
			{
				id: 3457,
				name: "Baja California",
				state_code: "BCN"
			},
			{
				id: 3460,
				name: "Baja California Sur",
				state_code: "BCS"
			},
			{
				id: 3475,
				name: "Campeche",
				state_code: "CAM"
			},
			{
				id: 3451,
				name: "Chiapas",
				state_code: "CHP"
			},
			{
				id: 3447,
				name: "Chihuahua",
				state_code: "CHH"
			},
			{
				id: 3471,
				name: "Coahuila",
				state_code: "COA"
			},
			{
				id: 3472,
				name: "Colima",
				state_code: "COL"
			},
			{
				id: 3453,
				name: "Durango",
				state_code: "DUR"
			},
			{
				id: 3469,
				name: "Guanajuato",
				state_code: "GUA"
			},
			{
				id: 3459,
				name: "Guerrero",
				state_code: "GRO"
			},
			{
				id: 3470,
				name: "Hidalgo",
				state_code: "HID"
			},
			{
				id: 4857,
				name: "Jalisco",
				state_code: "JAL"
			},
			{
				id: 3450,
				name: "México",
				state_code: "MEX"
			},
			{
				id: 3473,
				name: "Mexico City",
				state_code: "CMX"
			},
			{
				id: 3474,
				name: "Michoacán",
				state_code: "MIC"
			},
			{
				id: 3465,
				name: "Morelos",
				state_code: "MOR"
			},
			{
				id: 3477,
				name: "Nayarit",
				state_code: "NAY"
			},
			{
				id: 3452,
				name: "Nuevo León",
				state_code: "NLE"
			},
			{
				id: 3448,
				name: "Oaxaca",
				state_code: "OAX"
			},
			{
				id: 3476,
				name: "Puebla",
				state_code: "PUE"
			},
			{
				id: 3455,
				name: "Querétaro",
				state_code: "QUE"
			},
			{
				id: 3467,
				name: "Quintana Roo",
				state_code: "ROO"
			},
			{
				id: 3461,
				name: "San Luis Potosí",
				state_code: "SLP"
			},
			{
				id: 3449,
				name: "Sinaloa",
				state_code: "SIN"
			},
			{
				id: 3468,
				name: "Sonora",
				state_code: "SON"
			},
			{
				id: 3454,
				name: "Tabasco",
				state_code: "TAB"
			},
			{
				id: 3463,
				name: "Tamaulipas",
				state_code: "TAM"
			},
			{
				id: 3458,
				name: "Tlaxcala",
				state_code: "TLA"
			},
			{
				id: 3464,
				name: "Veracruz",
				state_code: "VER"
			},
			{
				id: 3466,
				name: "Yucatán",
				state_code: "YUC"
			},
			{
				id: 3462,
				name: "Zacatecas",
				state_code: "ZAC"
			}
		]
	},
	{
		name: "Micronesia",
		iso3: "FSM",
		iso2: "FM",
		numeric_code: "583",
		phone_code: "691",
		emoji: "🇫🇲",
		emojiU: "U+1F1EB U+1F1F2",
		states: [
			{
				id: 2580,
				name: "Chuuk State",
				state_code: "TRK"
			},
			{
				id: 2583,
				name: "Kosrae State",
				state_code: "KSA"
			},
			{
				id: 2581,
				name: "Pohnpei State",
				state_code: "PNI"
			},
			{
				id: 2582,
				name: "Yap State",
				state_code: "YAP"
			}
		]
	},
	{
		name: "Moldova",
		iso3: "MDA",
		iso2: "MD",
		numeric_code: "498",
		phone_code: "373",
		emoji: "🇲🇩",
		emojiU: "U+1F1F2 U+1F1E9",
		states: [
			{
				id: 4368,
				name: "Anenii Noi District",
				state_code: "AN"
			},
			{
				id: 4393,
				name: "Bălți Municipality",
				state_code: "BA"
			},
			{
				id: 4379,
				name: "Basarabeasca District",
				state_code: "BS"
			},
			{
				id: 4362,
				name: "Bender Municipality",
				state_code: "BD"
			},
			{
				id: 4375,
				name: "Briceni District",
				state_code: "BR"
			},
			{
				id: 4391,
				name: "Cahul District",
				state_code: "CA"
			},
			{
				id: 4366,
				name: "Călărași District",
				state_code: "CL"
			},
			{
				id: 4380,
				name: "Cantemir District",
				state_code: "CT"
			},
			{
				id: 4365,
				name: "Căușeni District",
				state_code: "CS"
			},
			{
				id: 4373,
				name: "Chișinău Municipality",
				state_code: "CU"
			},
			{
				id: 4360,
				name: "Cimișlia District",
				state_code: "CM"
			},
			{
				id: 4390,
				name: "Criuleni District",
				state_code: "CR"
			},
			{
				id: 4384,
				name: "Dondușeni District",
				state_code: "DO"
			},
			{
				id: 4392,
				name: "Drochia District",
				state_code: "DR"
			},
			{
				id: 4383,
				name: "Dubăsari District",
				state_code: "DU"
			},
			{
				id: 4387,
				name: "Edineț District",
				state_code: "ED"
			},
			{
				id: 4381,
				name: "Fălești District",
				state_code: "FA"
			},
			{
				id: 4370,
				name: "Florești District",
				state_code: "FL"
			},
			{
				id: 4385,
				name: "Gagauzia",
				state_code: "GA"
			},
			{
				id: 4367,
				name: "Glodeni District",
				state_code: "GL"
			},
			{
				id: 4382,
				name: "Hîncești District",
				state_code: "HI"
			},
			{
				id: 4369,
				name: "Ialoveni District",
				state_code: "IA"
			},
			{
				id: 4363,
				name: "Nisporeni District",
				state_code: "NI"
			},
			{
				id: 4389,
				name: "Ocnița District",
				state_code: "OC"
			},
			{
				id: 4361,
				name: "Orhei District",
				state_code: "OR"
			},
			{
				id: 4394,
				name: "Rezina District",
				state_code: "RE"
			},
			{
				id: 4376,
				name: "Rîșcani District",
				state_code: "RI"
			},
			{
				id: 4364,
				name: "Sîngerei District",
				state_code: "SI"
			},
			{
				id: 4388,
				name: "Șoldănești District",
				state_code: "SD"
			},
			{
				id: 4374,
				name: "Soroca District",
				state_code: "SO"
			},
			{
				id: 4378,
				name: "Ștefan Vodă District",
				state_code: "SV"
			},
			{
				id: 4377,
				name: "Strășeni District",
				state_code: "ST"
			},
			{
				id: 4372,
				name: "Taraclia District",
				state_code: "TA"
			},
			{
				id: 4371,
				name: "Telenești District",
				state_code: "TE"
			},
			{
				id: 4395,
				name: "Transnistria autonomous territorial unit",
				state_code: "SN"
			},
			{
				id: 4386,
				name: "Ungheni District",
				state_code: "UN"
			}
		]
	},
	{
		name: "Monaco",
		iso3: "MCO",
		iso2: "MC",
		numeric_code: "492",
		phone_code: "377",
		emoji: "🇲🇨",
		emojiU: "U+1F1F2 U+1F1E8",
		states: [
			{
				id: 4917,
				name: "La Colle",
				state_code: "CL"
			},
			{
				id: 4918,
				name: "La Condamine",
				state_code: "CO"
			},
			{
				id: 4919,
				name: "Moneghetti",
				state_code: "MG"
			}
		]
	},
	{
		name: "Mongolia",
		iso3: "MNG",
		iso2: "MN",
		numeric_code: "496",
		phone_code: "976",
		emoji: "🇲🇳",
		emojiU: "U+1F1F2 U+1F1F3",
		states: [
			{
				id: 1973,
				name: "Arkhangai Province",
				state_code: "073"
			},
			{
				id: 1969,
				name: "Bayan-Ölgii Province",
				state_code: "071"
			},
			{
				id: 1976,
				name: "Bayankhongor Province",
				state_code: "069"
			},
			{
				id: 1961,
				name: "Bulgan Province",
				state_code: "067"
			},
			{
				id: 1962,
				name: "Darkhan-Uul Province",
				state_code: "037"
			},
			{
				id: 1963,
				name: "Dornod Province",
				state_code: "061"
			},
			{
				id: 1981,
				name: "Dornogovi Province",
				state_code: "063"
			},
			{
				id: 1970,
				name: "Dundgovi Province",
				state_code: "059"
			},
			{
				id: 1972,
				name: "Govi-Altai Province",
				state_code: "065"
			},
			{
				id: 1978,
				name: "Govisümber Province",
				state_code: "064"
			},
			{
				id: 1974,
				name: "Khentii Province",
				state_code: "039"
			},
			{
				id: 1964,
				name: "Khovd Province",
				state_code: "043"
			},
			{
				id: 1975,
				name: "Khövsgöl Province",
				state_code: "041"
			},
			{
				id: 1967,
				name: "Ömnögovi Province",
				state_code: "053"
			},
			{
				id: 1966,
				name: "Orkhon Province",
				state_code: "035"
			},
			{
				id: 1965,
				name: "Övörkhangai Province",
				state_code: "055"
			},
			{
				id: 1980,
				name: "Selenge Province",
				state_code: "049"
			},
			{
				id: 1977,
				name: "Sükhbaatar Province",
				state_code: "051"
			},
			{
				id: 1968,
				name: "Töv Province",
				state_code: "047"
			},
			{
				id: 1971,
				name: "Uvs Province",
				state_code: "046"
			},
			{
				id: 1979,
				name: "Zavkhan Province",
				state_code: "057"
			}
		]
	},
	{
		name: "Montenegro",
		iso3: "MNE",
		iso2: "ME",
		numeric_code: "499",
		phone_code: "382",
		emoji: "🇲🇪",
		emojiU: "U+1F1F2 U+1F1EA",
		states: [
			{
				id: 23,
				name: "Andrijevica Municipality",
				state_code: "01"
			},
			{
				id: 13,
				name: "Bar Municipality",
				state_code: "02"
			},
			{
				id: 21,
				name: "Berane Municipality",
				state_code: "03"
			},
			{
				id: 25,
				name: "Bijelo Polje Municipality",
				state_code: "04"
			},
			{
				id: 30,
				name: "Budva Municipality",
				state_code: "05"
			},
			{
				id: 14,
				name: "Danilovgrad Municipality",
				state_code: "07"
			},
			{
				id: 24,
				name: "Gusinje Municipality",
				state_code: "22"
			},
			{
				id: 31,
				name: "Kolašin Municipality",
				state_code: "09"
			},
			{
				id: 26,
				name: "Kotor Municipality",
				state_code: "10"
			},
			{
				id: 22,
				name: "Mojkovac Municipality",
				state_code: "11"
			},
			{
				id: 17,
				name: "Nikšić Municipality",
				state_code: "12"
			},
			{
				id: 28,
				name: "Old Royal Capital Cetinje",
				state_code: "06"
			},
			{
				id: 12,
				name: "Petnjica Municipality",
				state_code: "23"
			},
			{
				id: 19,
				name: "Plav Municipality",
				state_code: "13"
			},
			{
				id: 20,
				name: "Pljevlja Municipality",
				state_code: "14"
			},
			{
				id: 16,
				name: "Plužine Municipality",
				state_code: "15"
			},
			{
				id: 27,
				name: "Podgorica Municipality",
				state_code: "16"
			},
			{
				id: 15,
				name: "Rožaje Municipality",
				state_code: "17"
			},
			{
				id: 18,
				name: "Šavnik Municipality",
				state_code: "18"
			},
			{
				id: 29,
				name: "Tivat Municipality",
				state_code: "19"
			},
			{
				id: 33,
				name: "Ulcinj Municipality",
				state_code: "20"
			},
			{
				id: 32,
				name: "Žabljak Municipality",
				state_code: "21"
			}
		]
	},
	{
		name: "Montserrat",
		iso3: "MSR",
		iso2: "MS",
		numeric_code: "500",
		phone_code: "+1-664",
		emoji: "🇲🇸",
		emojiU: "U+1F1F2 U+1F1F8",
		states: [
		]
	},
	{
		name: "Morocco",
		iso3: "MAR",
		iso2: "MA",
		numeric_code: "504",
		phone_code: "212",
		emoji: "🇲🇦",
		emojiU: "U+1F1F2 U+1F1E6",
		states: [
			{
				id: 4928,
				name: "Agadir-Ida-Ou-Tanane",
				state_code: "AGD"
			},
			{
				id: 3320,
				name: "Al Haouz",
				state_code: "HAO"
			},
			{
				id: 3267,
				name: "Al Hoceïma",
				state_code: "HOC"
			},
			{
				id: 3266,
				name: "Aousserd (EH)",
				state_code: "AOU"
			},
			{
				id: 3297,
				name: "Assa-Zag (EH-partial)",
				state_code: "ASZ"
			},
			{
				id: 3321,
				name: "Azilal",
				state_code: "AZI"
			},
			{
				id: 3272,
				name: "Béni Mellal",
				state_code: "BEM"
			},
			{
				id: 3278,
				name: "Béni Mellal-Khénifra",
				state_code: "05"
			},
			{
				id: 3304,
				name: "Benslimane",
				state_code: "BES"
			},
			{
				id: 3285,
				name: "Berkane",
				state_code: "BER"
			},
			{
				id: 4929,
				name: "Berrechid",
				state_code: "BRR"
			},
			{
				id: 3275,
				name: "Boujdour (EH)",
				state_code: "BOD"
			},
			{
				id: 3270,
				name: "Boulemane",
				state_code: "BOM"
			},
			{
				id: 4930,
				name: "Casablanca",
				state_code: "CAS"
			},
			{
				id: 3303,
				name: "Casablanca-Settat",
				state_code: "06"
			},
			{
				id: 3310,
				name: "Chefchaouen",
				state_code: "CHE"
			},
			{
				id: 3274,
				name: "Chichaoua",
				state_code: "CHI"
			},
			{
				id: 3302,
				name: "Chtouka-Ait Baha",
				state_code: "CHT"
			},
			{
				id: 3306,
				name: "Dakhla-Oued Ed-Dahab (EH)",
				state_code: "12"
			},
			{
				id: 3290,
				name: "Drâa-Tafilalet",
				state_code: "08"
			},
			{
				id: 4931,
				name: "Driouch",
				state_code: "DRI"
			},
			{
				id: 3291,
				name: "El Hajeb",
				state_code: "HAJ"
			},
			{
				id: 3280,
				name: "El Jadida",
				state_code: "JDI"
			},
			{
				id: 3309,
				name: "El Kelâa des Sraghna",
				state_code: "KES"
			},
			{
				id: 3299,
				name: "Errachidia",
				state_code: "ERR"
			},
			{
				id: 3292,
				name: "Es-Semara (EH-partial)",
				state_code: "ESM"
			},
			{
				id: 3316,
				name: "Essaouira",
				state_code: "ESI"
			},
			{
				id: 3300,
				name: "Fahs-Anjra",
				state_code: "FAH"
			},
			{
				id: 4932,
				name: "Fès",
				state_code: "FES"
			},
			{
				id: 3313,
				name: "Fès-Meknès",
				state_code: "03"
			},
			{
				id: 3301,
				name: "Figuig",
				state_code: "FIG"
			},
			{
				id: 4933,
				name: "Fquih Ben Salah",
				state_code: "FQH"
			},
			{
				id: 3265,
				name: "Guelmim",
				state_code: "GUE"
			},
			{
				id: 3305,
				name: "Guelmim-Oued Noun (EH-partial)",
				state_code: "10"
			},
			{
				id: 4934,
				name: "Guercif",
				state_code: "GUF"
			},
			{
				id: 3325,
				name: "Ifrane",
				state_code: "IFR"
			},
			{
				id: 3294,
				name: "Inezgane-Ait Melloul",
				state_code: "INE"
			},
			{
				id: 3307,
				name: "Jerada",
				state_code: "JRA"
			},
			{
				id: 3308,
				name: "Kénitra",
				state_code: "KEN"
			},
			{
				id: 3276,
				name: "Khémisset",
				state_code: "KHE"
			},
			{
				id: 3317,
				name: "Khénifra",
				state_code: "KHN"
			},
			{
				id: 3326,
				name: "Khouribga",
				state_code: "KHO"
			},
			{
				id: 3271,
				name: "L'Oriental",
				state_code: "02"
			},
			{
				id: 3293,
				name: "Laâyoune (EH)",
				state_code: "LAA"
			},
			{
				id: 3298,
				name: "Laâyoune-Sakia El Hamra (EH-partial)",
				state_code: "11"
			},
			{
				id: 3268,
				name: "Larache",
				state_code: "LAR"
			},
			{
				id: 4936,
				name: "M’diq-Fnideq",
				state_code: "MDF"
			},
			{
				id: 4935,
				name: "Marrakech",
				state_code: "MAR"
			},
			{
				id: 3288,
				name: "Marrakesh-Safi",
				state_code: "07"
			},
			{
				id: 3284,
				name: "Médiouna",
				state_code: "MED"
			},
			{
				id: 4937,
				name: "Meknès",
				state_code: "MEK"
			},
			{
				id: 4938,
				name: "Midelt",
				state_code: "MID"
			},
			{
				id: 4939,
				name: "Mohammadia",
				state_code: "MOH"
			},
			{
				id: 3315,
				name: "Moulay Yacoub",
				state_code: "MOU"
			},
			{
				id: 3281,
				name: "Nador",
				state_code: "NAD"
			},
			{
				id: 3287,
				name: "Nouaceur",
				state_code: "NOU"
			},
			{
				id: 3269,
				name: "Ouarzazate",
				state_code: "OUA"
			},
			{
				id: 3319,
				name: "Oued Ed-Dahab (EH)",
				state_code: "OUD"
			},
			{
				id: 4941,
				name: "Ouezzane",
				state_code: "OUZ"
			},
			{
				id: 4940,
				name: "Oujda-Angad",
				state_code: "OUJ"
			},
			{
				id: 4942,
				name: "Rabat",
				state_code: "RAB"
			},
			{
				id: 4927,
				name: "Rabat-Salé-Kénitra",
				state_code: "04"
			},
			{
				id: 4943,
				name: "Rehamna",
				state_code: "REH"
			},
			{
				id: 3311,
				name: "Safi",
				state_code: "SAF"
			},
			{
				id: 4944,
				name: "Salé",
				state_code: "SAL"
			},
			{
				id: 3289,
				name: "Sefrou",
				state_code: "SEF"
			},
			{
				id: 3282,
				name: "Settat",
				state_code: "SET"
			},
			{
				id: 4945,
				name: "Sidi Bennour",
				state_code: "SIB"
			},
			{
				id: 4946,
				name: "Sidi Ifni",
				state_code: "SIF"
			},
			{
				id: 3279,
				name: "Sidi Kacem",
				state_code: "SIK"
			},
			{
				id: 4952,
				name: "Sidi Slimane",
				state_code: "SIL"
			},
			{
				id: 4947,
				name: "Skhirate-Témara",
				state_code: "SKH"
			},
			{
				id: 3295,
				name: "Souss-Massa",
				state_code: "09"
			},
			{
				id: 3286,
				name: "Tan-Tan (EH-partial)",
				state_code: "TNT"
			},
			{
				id: 4950,
				name: "Tanger-Assilah",
				state_code: "TNG"
			},
			{
				id: 3324,
				name: "Tanger-Tétouan-Al Hoceïma",
				state_code: "01"
			},
			{
				id: 3323,
				name: "Taounate",
				state_code: "TAO"
			},
			{
				id: 3322,
				name: "Taourirt",
				state_code: "TAI"
			},
			{
				id: 4948,
				name: "Tarfaya (EH-partial)",
				state_code: "TAF"
			},
			{
				id: 3314,
				name: "Taroudannt",
				state_code: "TAR"
			},
			{
				id: 3312,
				name: "Tata",
				state_code: "TAT"
			},
			{
				id: 3296,
				name: "Taza",
				state_code: "TAZ"
			},
			{
				id: 3318,
				name: "Tétouan",
				state_code: "TET"
			},
			{
				id: 4949,
				name: "Tinghir",
				state_code: "TIN"
			},
			{
				id: 3277,
				name: "Tiznit",
				state_code: "TIZ"
			},
			{
				id: 4951,
				name: "Youssoufia",
				state_code: "YUS"
			},
			{
				id: 3283,
				name: "Zagora",
				state_code: "ZAG"
			}
		]
	},
	{
		name: "Mozambique",
		iso3: "MOZ",
		iso2: "MZ",
		numeric_code: "508",
		phone_code: "258",
		emoji: "🇲🇿",
		emojiU: "U+1F1F2 U+1F1FF",
		states: [
			{
				id: 3327,
				name: "Cabo Delgado Province",
				state_code: "P"
			},
			{
				id: 3329,
				name: "Gaza Province",
				state_code: "G"
			},
			{
				id: 3330,
				name: "Inhambane Province",
				state_code: "I"
			},
			{
				id: 3337,
				name: "Manica Province",
				state_code: "B"
			},
			{
				id: 3335,
				name: "Maputo",
				state_code: "MPM"
			},
			{
				id: 3332,
				name: "Maputo Province",
				state_code: "L"
			},
			{
				id: 3336,
				name: "Nampula Province",
				state_code: "N"
			},
			{
				id: 3333,
				name: "Niassa Province",
				state_code: "A"
			},
			{
				id: 3331,
				name: "Sofala Province",
				state_code: "S"
			},
			{
				id: 3334,
				name: "Tete Province",
				state_code: "T"
			},
			{
				id: 3328,
				name: "Zambezia Province",
				state_code: "Q"
			}
		]
	},
	{
		name: "Myanmar",
		iso3: "MMR",
		iso2: "MM",
		numeric_code: "104",
		phone_code: "95",
		emoji: "🇲🇲",
		emojiU: "U+1F1F2 U+1F1F2",
		states: [
			{
				id: 2142,
				name: "Ayeyarwady Region",
				state_code: "07"
			},
			{
				id: 2141,
				name: "Bago",
				state_code: "02"
			},
			{
				id: 2137,
				name: "Chin State",
				state_code: "14"
			},
			{
				id: 2143,
				name: "Kachin State",
				state_code: "11"
			},
			{
				id: 2144,
				name: "Kayah State",
				state_code: "12"
			},
			{
				id: 2133,
				name: "Kayin State",
				state_code: "13"
			},
			{
				id: 2136,
				name: "Magway Region",
				state_code: "03"
			},
			{
				id: 2134,
				name: "Mandalay Region",
				state_code: "04"
			},
			{
				id: 2147,
				name: "Mon State",
				state_code: "15"
			},
			{
				id: 2146,
				name: "Naypyidaw Union Territory",
				state_code: "18"
			},
			{
				id: 2138,
				name: "Rakhine State",
				state_code: "16"
			},
			{
				id: 2145,
				name: "Sagaing Region",
				state_code: "01"
			},
			{
				id: 2139,
				name: "Shan State",
				state_code: "17"
			},
			{
				id: 2140,
				name: "Tanintharyi Region",
				state_code: "05"
			},
			{
				id: 2135,
				name: "Yangon Region",
				state_code: "06"
			}
		]
	},
	{
		name: "Namibia",
		iso3: "NAM",
		iso2: "NA",
		numeric_code: "516",
		phone_code: "264",
		emoji: "🇳🇦",
		emojiU: "U+1F1F3 U+1F1E6",
		states: [
			{
				id: 43,
				name: "Erongo Region",
				state_code: "ER"
			},
			{
				id: 38,
				name: "Hardap Region",
				state_code: "HA"
			},
			{
				id: 45,
				name: "Karas Region",
				state_code: "KA"
			},
			{
				id: 36,
				name: "Kavango East Region",
				state_code: "KE"
			},
			{
				id: 35,
				name: "Kavango West Region",
				state_code: "KW"
			},
			{
				id: 44,
				name: "Khomas Region",
				state_code: "KH"
			},
			{
				id: 34,
				name: "Kunene Region",
				state_code: "KU"
			},
			{
				id: 40,
				name: "Ohangwena Region",
				state_code: "OW"
			},
			{
				id: 41,
				name: "Omaheke Region",
				state_code: "OH"
			},
			{
				id: 39,
				name: "Omusati Region",
				state_code: "OS"
			},
			{
				id: 37,
				name: "Oshana Region",
				state_code: "ON"
			},
			{
				id: 42,
				name: "Oshikoto Region",
				state_code: "OT"
			},
			{
				id: 46,
				name: "Otjozondjupa Region",
				state_code: "OD"
			},
			{
				id: 47,
				name: "Zambezi Region",
				state_code: "CA"
			}
		]
	},
	{
		name: "Nauru",
		iso3: "NRU",
		iso2: "NR",
		numeric_code: "520",
		phone_code: "674",
		emoji: "🇳🇷",
		emojiU: "U+1F1F3 U+1F1F7",
		states: [
			{
				id: 4656,
				name: "Aiwo District",
				state_code: "01"
			},
			{
				id: 4658,
				name: "Anabar District",
				state_code: "02"
			},
			{
				id: 4667,
				name: "Anetan District",
				state_code: "03"
			},
			{
				id: 4663,
				name: "Anibare District",
				state_code: "04"
			},
			{
				id: 4660,
				name: "Baiti District",
				state_code: "05"
			},
			{
				id: 4665,
				name: "Boe District",
				state_code: "06"
			},
			{
				id: 4662,
				name: "Buada District",
				state_code: "07"
			},
			{
				id: 4666,
				name: "Denigomodu District",
				state_code: "08"
			},
			{
				id: 4654,
				name: "Ewa District",
				state_code: "09"
			},
			{
				id: 4661,
				name: "Ijuw District",
				state_code: "10"
			},
			{
				id: 4657,
				name: "Meneng District",
				state_code: "11"
			},
			{
				id: 4659,
				name: "Nibok District",
				state_code: "12"
			},
			{
				id: 4655,
				name: "Uaboe District",
				state_code: "13"
			},
			{
				id: 4664,
				name: "Yaren District",
				state_code: "14"
			}
		]
	},
	{
		name: "Nepal",
		iso3: "NPL",
		iso2: "NP",
		numeric_code: "524",
		phone_code: "977",
		emoji: "🇳🇵",
		emojiU: "U+1F1F3 U+1F1F5",
		states: [
			{
				id: 2082,
				name: "Bagmati Zone",
				state_code: "BA"
			},
			{
				id: 2071,
				name: "Bheri Zone",
				state_code: "BH"
			},
			{
				id: 2073,
				name: "Central Region",
				state_code: "1"
			},
			{
				id: 2080,
				name: "Dhaulagiri Zone",
				state_code: "DH"
			},
			{
				id: 2069,
				name: "Eastern Development Region",
				state_code: "4"
			},
			{
				id: 2068,
				name: "Far-Western Development Region",
				state_code: "5"
			},
			{
				id: 2081,
				name: "Gandaki Zone",
				state_code: "GA"
			},
			{
				id: 2076,
				name: "Janakpur Zone",
				state_code: "JA"
			},
			{
				id: 2079,
				name: "Karnali Zone",
				state_code: "KA"
			},
			{
				id: 2072,
				name: "Kosi Zone",
				state_code: "KO"
			},
			{
				id: 2074,
				name: "Lumbini Zone",
				state_code: "LU"
			},
			{
				id: 2083,
				name: "Mahakali Zone",
				state_code: "MA"
			},
			{
				id: 2070,
				name: "Mechi Zone",
				state_code: "ME"
			},
			{
				id: 2066,
				name: "Mid-Western Region",
				state_code: "2"
			},
			{
				id: 2075,
				name: "Narayani Zone",
				state_code: "NA"
			},
			{
				id: 2077,
				name: "Rapti Zone",
				state_code: "RA"
			},
			{
				id: 2084,
				name: "Sagarmatha Zone",
				state_code: "SA"
			},
			{
				id: 2078,
				name: "Seti Zone",
				state_code: "SE"
			},
			{
				id: 2067,
				name: "Western Region",
				state_code: "3"
			}
		]
	},
	{
		name: "Netherlands",
		iso3: "NLD",
		iso2: "NL",
		numeric_code: "528",
		phone_code: "31",
		emoji: "🇳🇱",
		emojiU: "U+1F1F3 U+1F1F1",
		states: [
			{
				id: 2624,
				name: "Bonaire",
				state_code: "BQ1"
			},
			{
				id: 2613,
				name: "Drenthe",
				state_code: "DR"
			},
			{
				id: 2619,
				name: "Flevoland",
				state_code: "FL"
			},
			{
				id: 2622,
				name: "Friesland",
				state_code: "FR"
			},
			{
				id: 2611,
				name: "Gelderland",
				state_code: "GE"
			},
			{
				id: 2617,
				name: "Groningen",
				state_code: "GR"
			},
			{
				id: 2615,
				name: "Limburg",
				state_code: "LI"
			},
			{
				id: 2623,
				name: "North Brabant",
				state_code: "NB"
			},
			{
				id: 2612,
				name: "North Holland",
				state_code: "NH"
			},
			{
				id: 2618,
				name: "Overijssel",
				state_code: "OV"
			},
			{
				id: 2621,
				name: "Saba",
				state_code: "BQ2"
			},
			{
				id: 2616,
				name: "Sint Eustatius",
				state_code: "BQ3"
			},
			{
				id: 2614,
				name: "South Holland",
				state_code: "ZH"
			},
			{
				id: 2610,
				name: "Utrecht",
				state_code: "UT"
			},
			{
				id: 2620,
				name: "Zeeland",
				state_code: "ZE"
			}
		]
	},
	{
		name: "New Caledonia",
		iso3: "NCL",
		iso2: "NC",
		numeric_code: "540",
		phone_code: "687",
		emoji: "🇳🇨",
		emojiU: "U+1F1F3 U+1F1E8",
		states: [
		]
	},
	{
		name: "New Zealand",
		iso3: "NZL",
		iso2: "NZ",
		numeric_code: "554",
		phone_code: "64",
		emoji: "🇳🇿",
		emojiU: "U+1F1F3 U+1F1FF",
		states: [
			{
				id: 4072,
				name: "Auckland Region",
				state_code: "AUK"
			},
			{
				id: 4074,
				name: "Bay of Plenty Region",
				state_code: "BOP"
			},
			{
				id: 4066,
				name: "Canterbury Region",
				state_code: "CAN"
			},
			{
				id: 4067,
				name: "Chatham Islands",
				state_code: "CIT"
			},
			{
				id: 4068,
				name: "Gisborne District",
				state_code: "GIS"
			},
			{
				id: 4075,
				name: "Hawke's Bay Region",
				state_code: "HKB"
			},
			{
				id: 4060,
				name: "Manawatu-Wanganui Region",
				state_code: "MWT"
			},
			{
				id: 4063,
				name: "Marlborough Region",
				state_code: "MBH"
			},
			{
				id: 4070,
				name: "Nelson Region",
				state_code: "NSN"
			},
			{
				id: 4059,
				name: "Northland Region",
				state_code: "NTL"
			},
			{
				id: 4062,
				name: "Otago Region",
				state_code: "OTA"
			},
			{
				id: 4071,
				name: "Southland Region",
				state_code: "STL"
			},
			{
				id: 4069,
				name: "Taranaki Region",
				state_code: "TKI"
			},
			{
				id: 4073,
				name: "Tasman District",
				state_code: "TAS"
			},
			{
				id: 4061,
				name: "Waikato Region",
				state_code: "WKO"
			},
			{
				id: 4065,
				name: "Wellington Region",
				state_code: "WGN"
			},
			{
				id: 4064,
				name: "West Coast Region",
				state_code: "WTC"
			}
		]
	},
	{
		name: "Nicaragua",
		iso3: "NIC",
		iso2: "NI",
		numeric_code: "558",
		phone_code: "505",
		emoji: "🇳🇮",
		emojiU: "U+1F1F3 U+1F1EE",
		states: [
			{
				id: 946,
				name: "Boaco",
				state_code: "BO"
			},
			{
				id: 950,
				name: "Carazo",
				state_code: "CA"
			},
			{
				id: 954,
				name: "Chinandega",
				state_code: "CI"
			},
			{
				id: 940,
				name: "Chontales",
				state_code: "CO"
			},
			{
				id: 945,
				name: "Estelí",
				state_code: "ES"
			},
			{
				id: 943,
				name: "Granada",
				state_code: "GR"
			},
			{
				id: 955,
				name: "Jinotega",
				state_code: "JI"
			},
			{
				id: 944,
				name: "León",
				state_code: "LE"
			},
			{
				id: 948,
				name: "Madriz",
				state_code: "MD"
			},
			{
				id: 941,
				name: "Managua",
				state_code: "MN"
			},
			{
				id: 953,
				name: "Masaya",
				state_code: "MS"
			},
			{
				id: 947,
				name: "Matagalpa",
				state_code: "MT"
			},
			{
				id: 951,
				name: "North Caribbean Coast",
				state_code: "AN"
			},
			{
				id: 4964,
				name: "Nueva Segovia\t",
				state_code: "NS"
			},
			{
				id: 949,
				name: "Río San Juan",
				state_code: "SJ"
			},
			{
				id: 942,
				name: "Rivas",
				state_code: "RI"
			},
			{
				id: 952,
				name: "South Caribbean Coast",
				state_code: "AS"
			}
		]
	},
	{
		name: "Niger",
		iso3: "NER",
		iso2: "NE",
		numeric_code: "562",
		phone_code: "227",
		emoji: "🇳🇪",
		emojiU: "U+1F1F3 U+1F1EA",
		states: [
			{
				id: 71,
				name: "Agadez Region",
				state_code: "1"
			},
			{
				id: 72,
				name: "Diffa Region",
				state_code: "2"
			},
			{
				id: 68,
				name: "Dosso Region",
				state_code: "3"
			},
			{
				id: 70,
				name: "Maradi Region",
				state_code: "4"
			},
			{
				id: 73,
				name: "Tahoua Region",
				state_code: "5"
			},
			{
				id: 67,
				name: "Tillabéri Region",
				state_code: "6"
			},
			{
				id: 69,
				name: "Zinder Region",
				state_code: "7"
			}
		]
	},
	{
		name: "Nigeria",
		iso3: "NGA",
		iso2: "NG",
		numeric_code: "566",
		phone_code: "234",
		emoji: "🇳🇬",
		emojiU: "U+1F1F3 U+1F1EC",
		states: [
			{
				id: 303,
				name: "Abia",
				state_code: "AB"
			},
			{
				id: 293,
				name: "Abuja Federal Capital Territory",
				state_code: "FC"
			},
			{
				id: 320,
				name: "Adamawa",
				state_code: "AD"
			},
			{
				id: 304,
				name: "Akwa Ibom",
				state_code: "AK"
			},
			{
				id: 315,
				name: "Anambra",
				state_code: "AN"
			},
			{
				id: 312,
				name: "Bauchi",
				state_code: "BA"
			},
			{
				id: 305,
				name: "Bayelsa",
				state_code: "BY"
			},
			{
				id: 291,
				name: "Benue",
				state_code: "BE"
			},
			{
				id: 307,
				name: "Borno",
				state_code: "BO"
			},
			{
				id: 314,
				name: "Cross River",
				state_code: "CR"
			},
			{
				id: 316,
				name: "Delta",
				state_code: "DE"
			},
			{
				id: 311,
				name: "Ebonyi",
				state_code: "EB"
			},
			{
				id: 318,
				name: "Edo",
				state_code: "ED"
			},
			{
				id: 309,
				name: "Ekiti",
				state_code: "EK"
			},
			{
				id: 289,
				name: "Enugu",
				state_code: "EN"
			},
			{
				id: 310,
				name: "Gombe",
				state_code: "GO"
			},
			{
				id: 308,
				name: "Imo",
				state_code: "IM"
			},
			{
				id: 288,
				name: "Jigawa",
				state_code: "JI"
			},
			{
				id: 294,
				name: "Kaduna",
				state_code: "KD"
			},
			{
				id: 300,
				name: "Kano",
				state_code: "KN"
			},
			{
				id: 313,
				name: "Katsina",
				state_code: "KT"
			},
			{
				id: 290,
				name: "Kebbi",
				state_code: "KE"
			},
			{
				id: 298,
				name: "Kogi",
				state_code: "KO"
			},
			{
				id: 295,
				name: "Kwara",
				state_code: "KW"
			},
			{
				id: 306,
				name: "Lagos",
				state_code: "LA"
			},
			{
				id: 301,
				name: "Nasarawa",
				state_code: "NA"
			},
			{
				id: 317,
				name: "Niger",
				state_code: "NI"
			},
			{
				id: 323,
				name: "Ogun",
				state_code: "OG"
			},
			{
				id: 321,
				name: "Ondo",
				state_code: "ON"
			},
			{
				id: 322,
				name: "Osun",
				state_code: "OS"
			},
			{
				id: 296,
				name: "Oyo",
				state_code: "OY"
			},
			{
				id: 302,
				name: "Plateau",
				state_code: "PL"
			},
			{
				id: 4926,
				name: "Rivers",
				state_code: "RI"
			},
			{
				id: 292,
				name: "Sokoto",
				state_code: "SO"
			},
			{
				id: 319,
				name: "Taraba",
				state_code: "TA"
			},
			{
				id: 297,
				name: "Yobe",
				state_code: "YO"
			},
			{
				id: 299,
				name: "Zamfara",
				state_code: "ZA"
			}
		]
	},
	{
		name: "Niue",
		iso3: "NIU",
		iso2: "NU",
		numeric_code: "570",
		phone_code: "683",
		emoji: "🇳🇺",
		emojiU: "U+1F1F3 U+1F1FA",
		states: [
		]
	},
	{
		name: "Norfolk Island",
		iso3: "NFK",
		iso2: "NF",
		numeric_code: "574",
		phone_code: "672",
		emoji: "🇳🇫",
		emojiU: "U+1F1F3 U+1F1EB",
		states: [
		]
	},
	{
		name: "North Korea",
		iso3: "PRK",
		iso2: "KP",
		numeric_code: "408",
		phone_code: "850",
		emoji: "🇰🇵",
		emojiU: "U+1F1F0 U+1F1F5",
		states: [
			{
				id: 3998,
				name: "Chagang Province",
				state_code: "04"
			},
			{
				id: 3999,
				name: "Kangwon Province",
				state_code: "07"
			},
			{
				id: 3995,
				name: "North Hamgyong Province",
				state_code: "09"
			},
			{
				id: 4004,
				name: "North Hwanghae Province",
				state_code: "06"
			},
			{
				id: 4002,
				name: "North Pyongan Province",
				state_code: "03"
			},
			{
				id: 4005,
				name: "Pyongyang",
				state_code: "01"
			},
			{
				id: 4001,
				name: "Rason",
				state_code: "13"
			},
			{
				id: 3996,
				name: "Ryanggang Province",
				state_code: "10"
			},
			{
				id: 4000,
				name: "South Hamgyong Province",
				state_code: "08"
			},
			{
				id: 4003,
				name: "South Hwanghae Province",
				state_code: "05"
			},
			{
				id: 3997,
				name: "South Pyongan Province",
				state_code: "02"
			}
		]
	},
	{
		name: "Northern Mariana Islands",
		iso3: "MNP",
		iso2: "MP",
		numeric_code: "580",
		phone_code: "+1-670",
		emoji: "🇲🇵",
		emojiU: "U+1F1F2 U+1F1F5",
		states: [
		]
	},
	{
		name: "Norway",
		iso3: "NOR",
		iso2: "NO",
		numeric_code: "578",
		phone_code: "47",
		emoji: "🇳🇴",
		emojiU: "U+1F1F3 U+1F1F4",
		states: [
			{
				id: 1017,
				name: "Akershus",
				state_code: "02"
			},
			{
				id: 1011,
				name: "Buskerud",
				state_code: "06"
			},
			{
				id: 1016,
				name: "Finnmark",
				state_code: "20"
			},
			{
				id: 1019,
				name: "Hedmark",
				state_code: "04"
			},
			{
				id: 1023,
				name: "Hordaland",
				state_code: "12"
			},
			{
				id: 1026,
				name: "Jan Mayen",
				state_code: "22"
			},
			{
				id: 1020,
				name: "Møre og Romsdal",
				state_code: "15"
			},
			{
				id: 1012,
				name: "Nord-Trøndelag",
				state_code: "17"
			},
			{
				id: 1025,
				name: "Nordland",
				state_code: "18"
			},
			{
				id: 1009,
				name: "Oppland",
				state_code: "05"
			},
			{
				id: 1007,
				name: "Oslo",
				state_code: "03"
			},
			{
				id: 1022,
				name: "Østfold",
				state_code: "01"
			},
			{
				id: 1021,
				name: "Rogaland",
				state_code: "11"
			},
			{
				id: 1018,
				name: "Sogn og Fjordane",
				state_code: "14"
			},
			{
				id: 1010,
				name: "Sør-Trøndelag",
				state_code: "16"
			},
			{
				id: 1013,
				name: "Svalbard",
				state_code: "21"
			},
			{
				id: 1024,
				name: "Telemark",
				state_code: "08"
			},
			{
				id: 1015,
				name: "Troms",
				state_code: "19"
			},
			{
				id: 1006,
				name: "Trøndelag",
				state_code: "50"
			},
			{
				id: 1014,
				name: "Vest-Agder",
				state_code: "10"
			},
			{
				id: 1008,
				name: "Vestfold",
				state_code: "07"
			}
		]
	},
	{
		name: "Oman",
		iso3: "OMN",
		iso2: "OM",
		numeric_code: "512",
		phone_code: "968",
		emoji: "🇴🇲",
		emojiU: "U+1F1F4 U+1F1F2",
		states: [
			{
				id: 3058,
				name: "Ad Dakhiliyah Governorate",
				state_code: "DA"
			},
			{
				id: 3047,
				name: "Ad Dhahirah Governorate",
				state_code: "ZA"
			},
			{
				id: 3048,
				name: "Al Batinah North Governorate",
				state_code: "BS"
			},
			{
				id: 3050,
				name: "Al Batinah Region",
				state_code: "BA"
			},
			{
				id: 3049,
				name: "Al Batinah South Governorate",
				state_code: "BJ"
			},
			{
				id: 3059,
				name: "Al Buraimi Governorate",
				state_code: "BU"
			},
			{
				id: 3056,
				name: "Al Wusta Governorate",
				state_code: "WU"
			},
			{
				id: 3053,
				name: "Ash Sharqiyah North Governorate",
				state_code: "SS"
			},
			{
				id: 3051,
				name: "Ash Sharqiyah Region",
				state_code: "SH"
			},
			{
				id: 3054,
				name: "Ash Sharqiyah South Governorate",
				state_code: "SJ"
			},
			{
				id: 3057,
				name: "Dhofar Governorate",
				state_code: "ZU"
			},
			{
				id: 3052,
				name: "Musandam Governorate",
				state_code: "MU"
			},
			{
				id: 3055,
				name: "Muscat Governorate",
				state_code: "MA"
			}
		]
	},
	{
		name: "Pakistan",
		iso3: "PAK",
		iso2: "PK",
		numeric_code: "586",
		phone_code: "92",
		emoji: "🇵🇰",
		emojiU: "U+1F1F5 U+1F1F0",
		states: [
			{
				id: 3172,
				name: "Azad Kashmir",
				state_code: "JK"
			},
			{
				id: 3174,
				name: "Balochistan",
				state_code: "BA"
			},
			{
				id: 3173,
				name: "Federally Administered Tribal Areas",
				state_code: "TA"
			},
			{
				id: 3170,
				name: "Gilgit-Baltistan",
				state_code: "GB"
			},
			{
				id: 3169,
				name: "Islamabad Capital Territory",
				state_code: "IS"
			},
			{
				id: 3171,
				name: "Khyber Pakhtunkhwa",
				state_code: "KP"
			},
			{
				id: 3176,
				name: "Punjab",
				state_code: "PB"
			},
			{
				id: 3175,
				name: "Sindh",
				state_code: "SD"
			}
		]
	},
	{
		name: "Palau",
		iso3: "PLW",
		iso2: "PW",
		numeric_code: "585",
		phone_code: "680",
		emoji: "🇵🇼",
		emojiU: "U+1F1F5 U+1F1FC",
		states: [
			{
				id: 4540,
				name: "Aimeliik",
				state_code: "002"
			},
			{
				id: 4528,
				name: "Airai",
				state_code: "004"
			},
			{
				id: 4538,
				name: "Angaur",
				state_code: "010"
			},
			{
				id: 4529,
				name: "Hatohobei",
				state_code: "050"
			},
			{
				id: 4539,
				name: "Kayangel",
				state_code: "100"
			},
			{
				id: 4532,
				name: "Koror",
				state_code: "150"
			},
			{
				id: 4530,
				name: "Melekeok",
				state_code: "212"
			},
			{
				id: 4537,
				name: "Ngaraard",
				state_code: "214"
			},
			{
				id: 4533,
				name: "Ngarchelong",
				state_code: "218"
			},
			{
				id: 4527,
				name: "Ngardmau",
				state_code: "222"
			},
			{
				id: 4531,
				name: "Ngatpang",
				state_code: "224"
			},
			{
				id: 4536,
				name: "Ngchesar",
				state_code: "226"
			},
			{
				id: 4541,
				name: "Ngeremlengui",
				state_code: "227"
			},
			{
				id: 4534,
				name: "Ngiwal",
				state_code: "228"
			},
			{
				id: 4526,
				name: "Peleliu",
				state_code: "350"
			},
			{
				id: 4535,
				name: "Sonsorol",
				state_code: "370"
			}
		]
	},
	{
		name: "Palestinian Territory Occupied",
		iso3: "PSE",
		iso2: "PS",
		numeric_code: "275",
		phone_code: "970",
		emoji: "🇵🇸",
		emojiU: "U+1F1F5 U+1F1F8",
		states: [
		]
	},
	{
		name: "Panama",
		iso3: "PAN",
		iso2: "PA",
		numeric_code: "591",
		phone_code: "507",
		emoji: "🇵🇦",
		emojiU: "U+1F1F5 U+1F1E6",
		states: [
			{
				id: 1393,
				name: "Bocas del Toro Province",
				state_code: "1"
			},
			{
				id: 1397,
				name: "Chiriquí Province",
				state_code: "4"
			},
			{
				id: 1387,
				name: "Coclé Province",
				state_code: "2"
			},
			{
				id: 1386,
				name: "Colón Province",
				state_code: "3"
			},
			{
				id: 1385,
				name: "Darién Province",
				state_code: "5"
			},
			{
				id: 1396,
				name: "Emberá-Wounaan Comarca",
				state_code: "EM"
			},
			{
				id: 1388,
				name: "Guna Yala",
				state_code: "KY"
			},
			{
				id: 1389,
				name: "Herrera Province",
				state_code: "6"
			},
			{
				id: 1390,
				name: "Los Santos Province",
				state_code: "7"
			},
			{
				id: 1391,
				name: "Ngöbe-Buglé Comarca",
				state_code: "NB"
			},
			{
				id: 1394,
				name: "Panamá Oeste Province",
				state_code: "10"
			},
			{
				id: 1395,
				name: "Panamá Province",
				state_code: "8"
			},
			{
				id: 1392,
				name: "Veraguas Province",
				state_code: "9"
			}
		]
	},
	{
		name: "Papua new Guinea",
		iso3: "PNG",
		iso2: "PG",
		numeric_code: "598",
		phone_code: "675",
		emoji: "🇵🇬",
		emojiU: "U+1F1F5 U+1F1EC",
		states: [
			{
				id: 4831,
				name: "Bougainville",
				state_code: "NSB"
			},
			{
				id: 4847,
				name: "Central Province",
				state_code: "CPM"
			},
			{
				id: 4846,
				name: "Chimbu Province",
				state_code: "CPK"
			},
			{
				id: 4834,
				name: "East New Britain",
				state_code: "EBR"
			},
			{
				id: 4845,
				name: "Eastern Highlands Province",
				state_code: "EHG"
			},
			{
				id: 4848,
				name: "Enga Province",
				state_code: "EPW"
			},
			{
				id: 4839,
				name: "Gulf",
				state_code: "GPK"
			},
			{
				id: 4833,
				name: "Hela",
				state_code: "HLA"
			},
			{
				id: 4832,
				name: "Jiwaka Province",
				state_code: "JWK"
			},
			{
				id: 4843,
				name: "Madang Province",
				state_code: "MPM"
			},
			{
				id: 4842,
				name: "Manus Province",
				state_code: "MRL"
			},
			{
				id: 4849,
				name: "Milne Bay Province",
				state_code: "MBA"
			},
			{
				id: 4835,
				name: "Morobe Province",
				state_code: "MPL"
			},
			{
				id: 4841,
				name: "New Ireland Province",
				state_code: "NIK"
			},
			{
				id: 4838,
				name: "Oro Province",
				state_code: "NPP"
			},
			{
				id: 4837,
				name: "Port Moresby",
				state_code: "NCD"
			},
			{
				id: 4836,
				name: "Sandaun Province",
				state_code: "SAN"
			},
			{
				id: 4844,
				name: "Southern Highlands Province",
				state_code: "SHM"
			},
			{
				id: 4830,
				name: "West New Britain Province",
				state_code: "WBK"
			},
			{
				id: 4840,
				name: "Western Highlands Province",
				state_code: "WHM"
			},
			{
				id: 4850,
				name: "Western Province",
				state_code: "WPD"
			}
		]
	},
	{
		name: "Paraguay",
		iso3: "PRY",
		iso2: "PY",
		numeric_code: "600",
		phone_code: "595",
		emoji: "🇵🇾",
		emojiU: "U+1F1F5 U+1F1FE",
		states: [
			{
				id: 2785,
				name: "Alto Paraguay Department",
				state_code: "16"
			},
			{
				id: 2784,
				name: "Alto Paraná Department",
				state_code: "10"
			},
			{
				id: 2782,
				name: "Amambay Department",
				state_code: "13"
			},
			{
				id: 2780,
				name: "Boquerón Department",
				state_code: "19"
			},
			{
				id: 2773,
				name: "Caaguazú",
				state_code: "5"
			},
			{
				id: 2775,
				name: "Caazapá",
				state_code: "6"
			},
			{
				id: 2771,
				name: "Canindeyú",
				state_code: "14"
			},
			{
				id: 2777,
				name: "Central Department",
				state_code: "11"
			},
			{
				id: 2779,
				name: "Concepción Department",
				state_code: "1"
			},
			{
				id: 2783,
				name: "Cordillera Department",
				state_code: "3"
			},
			{
				id: 2772,
				name: "Guairá Department",
				state_code: "4"
			},
			{
				id: 2778,
				name: "Itapúa",
				state_code: "7"
			},
			{
				id: 2786,
				name: "Misiones Department",
				state_code: "8"
			},
			{
				id: 2781,
				name: "Ñeembucú Department",
				state_code: "12"
			},
			{
				id: 2774,
				name: "Paraguarí Department",
				state_code: "9"
			},
			{
				id: 2770,
				name: "Presidente Hayes Department",
				state_code: "15"
			},
			{
				id: 2776,
				name: "San Pedro Department",
				state_code: "2"
			}
		]
	},
	{
		name: "Peru",
		iso3: "PER",
		iso2: "PE",
		numeric_code: "604",
		phone_code: "51",
		emoji: "🇵🇪",
		emojiU: "U+1F1F5 U+1F1EA",
		states: [
			{
				id: 3685,
				name: "Amazonas",
				state_code: "AMA"
			},
			{
				id: 3680,
				name: "Áncash",
				state_code: "ANC"
			},
			{
				id: 3699,
				name: "Apurímac",
				state_code: "APU"
			},
			{
				id: 3681,
				name: "Arequipa",
				state_code: "ARE"
			},
			{
				id: 3692,
				name: "Ayacucho",
				state_code: "AYA"
			},
			{
				id: 3688,
				name: "Cajamarca",
				state_code: "CAJ"
			},
			{
				id: 3701,
				name: "Callao",
				state_code: "CAL"
			},
			{
				id: 3691,
				name: "Cusco",
				state_code: "CUS"
			},
			{
				id: 3679,
				name: "Huancavelica",
				state_code: "HUV"
			},
			{
				id: 3687,
				name: "Huanuco",
				state_code: "HUC"
			},
			{
				id: 3700,
				name: "Ica",
				state_code: "ICA"
			},
			{
				id: 3693,
				name: "Junín",
				state_code: "JUN"
			},
			{
				id: 3683,
				name: "La Libertad",
				state_code: "LAL"
			},
			{
				id: 3702,
				name: "Lambayeque",
				state_code: "LAM"
			},
			{
				id: 3695,
				name: "Lima",
				state_code: "LIM"
			},
			{
				id: 4922,
				name: "Loreto",
				state_code: "LOR"
			},
			{
				id: 3678,
				name: "Madre de Dios",
				state_code: "MDD"
			},
			{
				id: 3698,
				name: "Moquegua",
				state_code: "MOQ"
			},
			{
				id: 3686,
				name: "Pasco",
				state_code: "PAS"
			},
			{
				id: 3697,
				name: "Piura",
				state_code: "PIU"
			},
			{
				id: 3682,
				name: "Puno",
				state_code: "PUN"
			},
			{
				id: 3694,
				name: "San Martín",
				state_code: "SAM"
			},
			{
				id: 3696,
				name: "Tacna",
				state_code: "TAC"
			},
			{
				id: 3689,
				name: "Tumbes",
				state_code: "TUM"
			},
			{
				id: 3684,
				name: "Ucayali",
				state_code: "UCA"
			}
		]
	},
	{
		name: "Philippines",
		iso3: "PHL",
		iso2: "PH",
		numeric_code: "608",
		phone_code: "63",
		emoji: "🇵🇭",
		emojiU: "U+1F1F5 U+1F1ED",
		states: [
			{
				id: 1324,
				name: "Abra",
				state_code: "ABR"
			},
			{
				id: 1323,
				name: "Agusan del Norte",
				state_code: "AGN"
			},
			{
				id: 1326,
				name: "Agusan del Sur",
				state_code: "AGS"
			},
			{
				id: 1331,
				name: "Aklan",
				state_code: "AKL"
			},
			{
				id: 1337,
				name: "Albay",
				state_code: "ALB"
			},
			{
				id: 1336,
				name: "Antique",
				state_code: "ANT"
			},
			{
				id: 1334,
				name: "Apayao",
				state_code: "APA"
			},
			{
				id: 1341,
				name: "Aurora",
				state_code: "AUR"
			},
			{
				id: 1316,
				name: "Autonomous Region in Muslim Mindanao",
				state_code: "14"
			},
			{
				id: 1346,
				name: "Basilan",
				state_code: "BAS"
			},
			{
				id: 1344,
				name: "Bataan",
				state_code: "BAN"
			},
			{
				id: 1352,
				name: "Batanes",
				state_code: "BTN"
			},
			{
				id: 1359,
				name: "Batangas",
				state_code: "BTG"
			},
			{
				id: 1363,
				name: "Benguet",
				state_code: "BEN"
			},
			{
				id: 1304,
				name: "Bicol Region",
				state_code: "05"
			},
			{
				id: 1274,
				name: "Biliran",
				state_code: "BIL"
			},
			{
				id: 1272,
				name: "Bohol",
				state_code: "BOH"
			},
			{
				id: 1270,
				name: "Bukidnon",
				state_code: "BUK"
			},
			{
				id: 1278,
				name: "Bulacan",
				state_code: "BUL"
			},
			{
				id: 1279,
				name: "Cagayan",
				state_code: "CAG"
			},
			{
				id: 1342,
				name: "Cagayan Valley",
				state_code: "02"
			},
			{
				id: 1294,
				name: "Calabarzon",
				state_code: "40"
			},
			{
				id: 1283,
				name: "Camarines Norte",
				state_code: "CAN"
			},
			{
				id: 1287,
				name: "Camarines Sur",
				state_code: "CAS"
			},
			{
				id: 1285,
				name: "Camiguin",
				state_code: "CAM"
			},
			{
				id: 1292,
				name: "Capiz",
				state_code: "CAP"
			},
			{
				id: 1314,
				name: "Caraga",
				state_code: "13"
			},
			{
				id: 1301,
				name: "Catanduanes",
				state_code: "CAT"
			},
			{
				id: 1307,
				name: "Cavite",
				state_code: "CAV"
			},
			{
				id: 1306,
				name: "Cebu",
				state_code: "CEB"
			},
			{
				id: 1345,
				name: "Central Luzon",
				state_code: "03"
			},
			{
				id: 1308,
				name: "Central Visayas",
				state_code: "07"
			},
			{
				id: 1311,
				name: "Compostela Valley",
				state_code: "COM"
			},
			{
				id: 1335,
				name: "Cordillera Administrative Region",
				state_code: "15"
			},
			{
				id: 1320,
				name: "Cotabato",
				state_code: "NCO"
			},
			{
				id: 1319,
				name: "Davao del Norte",
				state_code: "DAV"
			},
			{
				id: 1318,
				name: "Davao del Sur",
				state_code: "DAS"
			},
			{
				id: 1309,
				name: "Davao Occidental",
				state_code: "DVO"
			},
			{
				id: 1289,
				name: "Davao Oriental",
				state_code: "DAO"
			},
			{
				id: 1340,
				name: "Davao Region",
				state_code: "11"
			},
			{
				id: 1291,
				name: "Dinagat Islands",
				state_code: "DIN"
			},
			{
				id: 1290,
				name: "Eastern Samar",
				state_code: "EAS"
			},
			{
				id: 1322,
				name: "Eastern Visayas",
				state_code: "08"
			},
			{
				id: 1303,
				name: "Guimaras",
				state_code: "GUI"
			},
			{
				id: 1300,
				name: "Ifugao",
				state_code: "IFU"
			},
			{
				id: 1298,
				name: "Ilocos Norte",
				state_code: "ILN"
			},
			{
				id: 1355,
				name: "Ilocos Region",
				state_code: "01"
			},
			{
				id: 1321,
				name: "Ilocos Sur",
				state_code: "ILS"
			},
			{
				id: 1315,
				name: "Iloilo",
				state_code: "ILI"
			},
			{
				id: 1313,
				name: "Isabela",
				state_code: "ISA"
			},
			{
				id: 1312,
				name: "Kalinga",
				state_code: "KAL"
			},
			{
				id: 1317,
				name: "La Union",
				state_code: "LUN"
			},
			{
				id: 1328,
				name: "Laguna",
				state_code: "LAG"
			},
			{
				id: 1327,
				name: "Lanao del Norte",
				state_code: "LAN"
			},
			{
				id: 1333,
				name: "Lanao del Sur",
				state_code: "LAS"
			},
			{
				id: 1332,
				name: "Leyte",
				state_code: "LEY"
			},
			{
				id: 1330,
				name: "Maguindanao",
				state_code: "MAG"
			},
			{
				id: 1329,
				name: "Marinduque",
				state_code: "MAD"
			},
			{
				id: 1338,
				name: "Masbate",
				state_code: "MAS"
			},
			{
				id: 1347,
				name: "Metro Manila",
				state_code: "NCR"
			},
			{
				id: 1299,
				name: "Mimaropa",
				state_code: "41"
			},
			{
				id: 1343,
				name: "Misamis Occidental",
				state_code: "MSC"
			},
			{
				id: 1348,
				name: "Misamis Oriental",
				state_code: "MSR"
			},
			{
				id: 1353,
				name: "Mountain Province",
				state_code: "MOU"
			},
			{
				id: 1351,
				name: "Negros Occidental",
				state_code: "NEC"
			},
			{
				id: 1350,
				name: "Negros Oriental",
				state_code: "NER"
			},
			{
				id: 1339,
				name: "Northern Mindanao",
				state_code: "10"
			},
			{
				id: 1349,
				name: "Northern Samar",
				state_code: "NSA"
			},
			{
				id: 1360,
				name: "Nueva Ecija",
				state_code: "NUE"
			},
			{
				id: 1358,
				name: "Nueva Vizcaya",
				state_code: "NUV"
			},
			{
				id: 1356,
				name: "Occidental Mindoro",
				state_code: "MDC"
			},
			{
				id: 1354,
				name: "Oriental Mindoro",
				state_code: "MDR"
			},
			{
				id: 1361,
				name: "Palawan",
				state_code: "PLW"
			},
			{
				id: 1365,
				name: "Pampanga",
				state_code: "PAM"
			},
			{
				id: 1364,
				name: "Pangasinan",
				state_code: "PAN"
			},
			{
				id: 1275,
				name: "Quezon",
				state_code: "QUE"
			},
			{
				id: 1273,
				name: "Quirino",
				state_code: "QUI"
			},
			{
				id: 1271,
				name: "Rizal",
				state_code: "RIZ"
			},
			{
				id: 1269,
				name: "Romblon",
				state_code: "ROM"
			},
			{
				id: 1277,
				name: "Sarangani",
				state_code: "SAR"
			},
			{
				id: 1276,
				name: "Siquijor",
				state_code: "SIG"
			},
			{
				id: 1310,
				name: "Soccsksargen",
				state_code: "12"
			},
			{
				id: 1281,
				name: "Sorsogon",
				state_code: "SOR"
			},
			{
				id: 1280,
				name: "South Cotabato",
				state_code: "SCO"
			},
			{
				id: 1284,
				name: "Southern Leyte",
				state_code: "SLE"
			},
			{
				id: 1282,
				name: "Sultan Kudarat",
				state_code: "SUK"
			},
			{
				id: 1288,
				name: "Sulu",
				state_code: "SLU"
			},
			{
				id: 1286,
				name: "Surigao del Norte",
				state_code: "SUN"
			},
			{
				id: 1296,
				name: "Surigao del Sur",
				state_code: "SUR"
			},
			{
				id: 1295,
				name: "Tarlac",
				state_code: "TAR"
			},
			{
				id: 1293,
				name: "Tawi-Tawi",
				state_code: "TAW"
			},
			{
				id: 1305,
				name: "Western Visayas",
				state_code: "06"
			},
			{
				id: 1297,
				name: "Zambales",
				state_code: "ZMB"
			},
			{
				id: 1302,
				name: "Zamboanga del Norte",
				state_code: "ZAN"
			},
			{
				id: 1357,
				name: "Zamboanga del Sur",
				state_code: "ZAS"
			},
			{
				id: 1325,
				name: "Zamboanga Peninsula",
				state_code: "09"
			},
			{
				id: 1362,
				name: "Zamboanga Sibugay",
				state_code: "ZSI"
			}
		]
	},
	{
		name: "Pitcairn Island",
		iso3: "PCN",
		iso2: "PN",
		numeric_code: "612",
		phone_code: "870",
		emoji: "🇵🇳",
		emojiU: "U+1F1F5 U+1F1F3",
		states: [
		]
	},
	{
		name: "Poland",
		iso3: "POL",
		iso2: "PL",
		numeric_code: "616",
		phone_code: "48",
		emoji: "🇵🇱",
		emojiU: "U+1F1F5 U+1F1F1",
		states: [
			{
				id: 1634,
				name: "Greater Poland Voivodeship",
				state_code: "WP"
			},
			{
				id: 1625,
				name: "Kuyavian-Pomeranian Voivodeship",
				state_code: "KP"
			},
			{
				id: 1635,
				name: "Lesser Poland Voivodeship",
				state_code: "MA"
			},
			{
				id: 1629,
				name: "Lower Silesian Voivodeship",
				state_code: "DS"
			},
			{
				id: 1638,
				name: "Lublin Voivodeship",
				state_code: "LU"
			},
			{
				id: 1631,
				name: "Lubusz Voivodeship",
				state_code: "LB"
			},
			{
				id: 1636,
				name: "Łódź Voivodeship",
				state_code: "LD"
			},
			{
				id: 1637,
				name: "Masovian Voivodeship",
				state_code: "MZ"
			},
			{
				id: 1622,
				name: "Opole Voivodeship",
				state_code: "OP"
			},
			{
				id: 1626,
				name: "Podkarpackie Voivodeship",
				state_code: "PK"
			},
			{
				id: 1632,
				name: "Podlaskie Voivodeship",
				state_code: "PD"
			},
			{
				id: 1624,
				name: "Pomeranian Voivodeship",
				state_code: "PM"
			},
			{
				id: 1623,
				name: "Silesian Voivodeship",
				state_code: "SL"
			},
			{
				id: 1630,
				name: "Świętokrzyskie Voivodeship",
				state_code: "SK"
			},
			{
				id: 1628,
				name: "Warmian-Masurian Voivodeship",
				state_code: "WN"
			},
			{
				id: 1633,
				name: "West Pomeranian Voivodeship",
				state_code: "ZP"
			}
		]
	},
	{
		name: "Portugal",
		iso3: "PRT",
		iso2: "PT",
		numeric_code: "620",
		phone_code: "351",
		emoji: "🇵🇹",
		emojiU: "U+1F1F5 U+1F1F9",
		states: [
			{
				id: 2233,
				name: "Açores",
				state_code: "20"
			},
			{
				id: 2235,
				name: "Aveiro",
				state_code: "01"
			},
			{
				id: 2230,
				name: "Beja",
				state_code: "02"
			},
			{
				id: 2244,
				name: "Braga",
				state_code: "03"
			},
			{
				id: 2229,
				name: "Bragança",
				state_code: "04"
			},
			{
				id: 2241,
				name: "Castelo Branco",
				state_code: "05"
			},
			{
				id: 2246,
				name: "Coimbra",
				state_code: "06"
			},
			{
				id: 2236,
				name: "Évora",
				state_code: "07"
			},
			{
				id: 2239,
				name: "Faro",
				state_code: "08"
			},
			{
				id: 4859,
				name: "Guarda",
				state_code: "09"
			},
			{
				id: 2240,
				name: "Leiria",
				state_code: "10"
			},
			{
				id: 2228,
				name: "Lisbon",
				state_code: "11"
			},
			{
				id: 2231,
				name: "Madeira",
				state_code: "30"
			},
			{
				id: 2232,
				name: "Portalegre",
				state_code: "12"
			},
			{
				id: 2243,
				name: "Porto",
				state_code: "13"
			},
			{
				id: 2238,
				name: "Santarém",
				state_code: "14"
			},
			{
				id: 2242,
				name: "Setúbal",
				state_code: "15"
			},
			{
				id: 2245,
				name: "Viana do Castelo",
				state_code: "16"
			},
			{
				id: 2234,
				name: "Vila Real",
				state_code: "17"
			},
			{
				id: 2237,
				name: "Viseu",
				state_code: "18"
			}
		]
	},
	{
		name: "Puerto Rico",
		iso3: "PRI",
		iso2: "PR",
		numeric_code: "630",
		phone_code: "+1-787 and 1-939",
		emoji: "🇵🇷",
		emojiU: "U+1F1F5 U+1F1F7",
		states: [
		]
	},
	{
		name: "Qatar",
		iso3: "QAT",
		iso2: "QA",
		numeric_code: "634",
		phone_code: "974",
		emoji: "🇶🇦",
		emojiU: "U+1F1F6 U+1F1E6",
		states: [
			{
				id: 3182,
				name: "Al Daayen",
				state_code: "ZA"
			},
			{
				id: 3183,
				name: "Al Khor",
				state_code: "KH"
			},
			{
				id: 3177,
				name: "Al Rayyan Municipality",
				state_code: "RA"
			},
			{
				id: 3179,
				name: "Al Wakrah",
				state_code: "WA"
			},
			{
				id: 3178,
				name: "Al-Shahaniya",
				state_code: "SH"
			},
			{
				id: 3181,
				name: "Doha",
				state_code: "DA"
			},
			{
				id: 3180,
				name: "Madinat ash Shamal",
				state_code: "MS"
			},
			{
				id: 3184,
				name: "Umm Salal Municipality",
				state_code: "US"
			}
		]
	},
	{
		name: "Reunion",
		iso3: "REU",
		iso2: "RE",
		numeric_code: "638",
		phone_code: "262",
		emoji: "🇷🇪",
		emojiU: "U+1F1F7 U+1F1EA",
		states: [
		]
	},
	{
		name: "Romania",
		iso3: "ROU",
		iso2: "RO",
		numeric_code: "642",
		phone_code: "40",
		emoji: "🇷🇴",
		emojiU: "U+1F1F7 U+1F1F4",
		states: [
			{
				id: 4724,
				name: "Alba",
				state_code: "AB"
			},
			{
				id: 4739,
				name: "Arad County",
				state_code: "AR"
			},
			{
				id: 4722,
				name: "Arges",
				state_code: "AG"
			},
			{
				id: 4744,
				name: "Bacău County",
				state_code: "BC"
			},
			{
				id: 4723,
				name: "Bihor County",
				state_code: "BH"
			},
			{
				id: 4733,
				name: "Bistrița-Năsăud County",
				state_code: "BN"
			},
			{
				id: 4740,
				name: "Botoșani County",
				state_code: "BT"
			},
			{
				id: 4736,
				name: "Braila",
				state_code: "BR"
			},
			{
				id: 4759,
				name: "Brașov County",
				state_code: "BV"
			},
			{
				id: 4730,
				name: "Bucharest",
				state_code: "B"
			},
			{
				id: 4756,
				name: "Buzău County",
				state_code: "BZ"
			},
			{
				id: 4732,
				name: "Călărași County",
				state_code: "CL"
			},
			{
				id: 4753,
				name: "Caraș-Severin County",
				state_code: "CS"
			},
			{
				id: 4734,
				name: "Cluj County",
				state_code: "CJ"
			},
			{
				id: 4737,
				name: "Constanța County",
				state_code: "CT"
			},
			{
				id: 4754,
				name: "Covasna County",
				state_code: "CV"
			},
			{
				id: 4745,
				name: "Dâmbovița County",
				state_code: "DB"
			},
			{
				id: 4742,
				name: "Dolj County",
				state_code: "DJ"
			},
			{
				id: 4747,
				name: "Galați County",
				state_code: "GL"
			},
			{
				id: 4726,
				name: "Giurgiu County",
				state_code: "GR"
			},
			{
				id: 4750,
				name: "Gorj County",
				state_code: "GJ"
			},
			{
				id: 4749,
				name: "Harghita County",
				state_code: "HR"
			},
			{
				id: 4721,
				name: "Hunedoara County",
				state_code: "HD"
			},
			{
				id: 4743,
				name: "Ialomița County",
				state_code: "IL"
			},
			{
				id: 4735,
				name: "Iași County",
				state_code: "IS"
			},
			{
				id: 4725,
				name: "Ilfov County",
				state_code: "IF"
			},
			{
				id: 4760,
				name: "Maramureș County",
				state_code: "MM"
			},
			{
				id: 4751,
				name: "Mehedinți County",
				state_code: "MH"
			},
			{
				id: 4915,
				name: "Mureș County",
				state_code: "MS"
			},
			{
				id: 4731,
				name: "Neamț County",
				state_code: "NT"
			},
			{
				id: 4738,
				name: "Olt County",
				state_code: "OT"
			},
			{
				id: 4729,
				name: "Prahova County",
				state_code: "PH"
			},
			{
				id: 4741,
				name: "Sălaj County",
				state_code: "SJ"
			},
			{
				id: 4746,
				name: "Satu Mare County",
				state_code: "SM"
			},
			{
				id: 4755,
				name: "Sibiu County",
				state_code: "SB"
			},
			{
				id: 4720,
				name: "Suceava County",
				state_code: "SV"
			},
			{
				id: 4728,
				name: "Teleorman County",
				state_code: "TR"
			},
			{
				id: 4748,
				name: "Timiș County",
				state_code: "TM"
			},
			{
				id: 4727,
				name: "Tulcea County",
				state_code: "TL"
			},
			{
				id: 4757,
				name: "Vâlcea County",
				state_code: "VL"
			},
			{
				id: 4752,
				name: "Vaslui County",
				state_code: "VS"
			},
			{
				id: 4758,
				name: "Vrancea County",
				state_code: "VN"
			}
		]
	},
	{
		name: "Russia",
		iso3: "RUS",
		iso2: "RU",
		numeric_code: "643",
		phone_code: "7",
		emoji: "🇷🇺",
		emojiU: "U+1F1F7 U+1F1FA",
		states: [
			{
				id: 1911,
				name: "Altai Krai",
				state_code: "ALT"
			},
			{
				id: 1876,
				name: "Altai Republic",
				state_code: "AL"
			},
			{
				id: 1858,
				name: "Amur Oblast",
				state_code: "AMU"
			},
			{
				id: 1849,
				name: "Arkhangelsk",
				state_code: "ARK"
			},
			{
				id: 1866,
				name: "Astrakhan Oblast",
				state_code: "AST"
			},
			{
				id: 1903,
				name: "Belgorod Oblast",
				state_code: "BEL"
			},
			{
				id: 1867,
				name: "Bryansk Oblast",
				state_code: "BRY"
			},
			{
				id: 1893,
				name: "Chechen Republic",
				state_code: "CE"
			},
			{
				id: 1845,
				name: "Chelyabinsk Oblast",
				state_code: "CHE"
			},
			{
				id: 1859,
				name: "Chukotka Autonomous Okrug",
				state_code: "CHU"
			},
			{
				id: 1914,
				name: "Chuvash Republic",
				state_code: "CU"
			},
			{
				id: 1880,
				name: "Irkutsk",
				state_code: "IRK"
			},
			{
				id: 1864,
				name: "Ivanovo Oblast",
				state_code: "IVA"
			},
			{
				id: 1835,
				name: "Jewish Autonomous Oblast",
				state_code: "YEV"
			},
			{
				id: 1892,
				name: "Kabardino-Balkar Republic",
				state_code: "KB"
			},
			{
				id: 1902,
				name: "Kaliningrad",
				state_code: "KGD"
			},
			{
				id: 1844,
				name: "Kaluga Oblast",
				state_code: "KLU"
			},
			{
				id: 1865,
				name: "Kamchatka Krai",
				state_code: "KAM"
			},
			{
				id: 1869,
				name: "Karachay-Cherkess Republic",
				state_code: "KC"
			},
			{
				id: 1897,
				name: "Kemerovo Oblast",
				state_code: "KEM"
			},
			{
				id: 1873,
				name: "Khabarovsk Krai",
				state_code: "KHA"
			},
			{
				id: 1838,
				name: "Khanty-Mansi Autonomous Okrug",
				state_code: "KHM"
			},
			{
				id: 1890,
				name: "Kirov Oblast",
				state_code: "KIR"
			},
			{
				id: 1899,
				name: "Komi Republic",
				state_code: "KO"
			},
			{
				id: 1910,
				name: "Kostroma Oblast",
				state_code: "KOS"
			},
			{
				id: 1891,
				name: "Krasnodar Krai",
				state_code: "KDA"
			},
			{
				id: 1840,
				name: "Krasnoyarsk Krai",
				state_code: "KYA"
			},
			{
				id: 1915,
				name: "Kurgan Oblast",
				state_code: "KGN"
			},
			{
				id: 1855,
				name: "Kursk Oblast",
				state_code: "KRS"
			},
			{
				id: 1896,
				name: "Leningrad Oblast",
				state_code: "LEN"
			},
			{
				id: 1889,
				name: "Lipetsk Oblast",
				state_code: "LIP"
			},
			{
				id: 1839,
				name: "Magadan Oblast",
				state_code: "MAG"
			},
			{
				id: 1870,
				name: "Mari El Republic",
				state_code: "ME"
			},
			{
				id: 1901,
				name: "Moscow",
				state_code: "MOW"
			},
			{
				id: 1882,
				name: "Moscow Oblast",
				state_code: "MOS"
			},
			{
				id: 1843,
				name: "Murmansk Oblast",
				state_code: "MUR"
			},
			{
				id: 1836,
				name: "Nenets Autonomous Okrug",
				state_code: "NEN"
			},
			{
				id: 1857,
				name: "Nizhny Novgorod Oblast",
				state_code: "NIZ"
			},
			{
				id: 1834,
				name: "Novgorod Oblast",
				state_code: "NGR"
			},
			{
				id: 1888,
				name: "Novosibirsk",
				state_code: "NVS"
			},
			{
				id: 1846,
				name: "Omsk Oblast",
				state_code: "OMS"
			},
			{
				id: 1886,
				name: "Orenburg Oblast",
				state_code: "ORE"
			},
			{
				id: 1908,
				name: "Oryol Oblast",
				state_code: "ORL"
			},
			{
				id: 1909,
				name: "Penza Oblast",
				state_code: "PNZ"
			},
			{
				id: 1871,
				name: "Perm Krai",
				state_code: "PER"
			},
			{
				id: 1833,
				name: "Primorsky Krai",
				state_code: "PRI"
			},
			{
				id: 1863,
				name: "Pskov Oblast",
				state_code: "PSK"
			},
			{
				id: 1852,
				name: "Republic of Adygea",
				state_code: "AD"
			},
			{
				id: 1854,
				name: "Republic of Bashkortostan",
				state_code: "BA"
			},
			{
				id: 1842,
				name: "Republic of Buryatia",
				state_code: "BU"
			},
			{
				id: 1850,
				name: "Republic of Dagestan",
				state_code: "DA"
			},
			{
				id: 1884,
				name: "Republic of Ingushetia",
				state_code: "IN"
			},
			{
				id: 1883,
				name: "Republic of Kalmykia",
				state_code: "KL"
			},
			{
				id: 1841,
				name: "Republic of Karelia",
				state_code: "KR"
			},
			{
				id: 1877,
				name: "Republic of Khakassia",
				state_code: "KK"
			},
			{
				id: 1898,
				name: "Republic of Mordovia",
				state_code: "MO"
			},
			{
				id: 1853,
				name: "Republic of North Ossetia-Alania",
				state_code: "SE"
			},
			{
				id: 1861,
				name: "Republic of Tatarstan",
				state_code: "TA"
			},
			{
				id: 1837,
				name: "Rostov Oblast",
				state_code: "ROS"
			},
			{
				id: 1905,
				name: "Ryazan Oblast",
				state_code: "RYA"
			},
			{
				id: 1879,
				name: "Saint Petersburg",
				state_code: "SPE"
			},
			{
				id: 1848,
				name: "Sakha Republic",
				state_code: "SA"
			},
			{
				id: 1875,
				name: "Sakhalin",
				state_code: "SAK"
			},
			{
				id: 1862,
				name: "Samara Oblast",
				state_code: "SAM"
			},
			{
				id: 1887,
				name: "Saratov Oblast",
				state_code: "SAR"
			},
			{
				id: 1912,
				name: "Sevastopol",
				state_code: "UA-40"
			},
			{
				id: 1885,
				name: "Smolensk Oblast",
				state_code: "SMO"
			},
			{
				id: 1868,
				name: "Stavropol Krai",
				state_code: "STA"
			},
			{
				id: 1894,
				name: "Sverdlovsk",
				state_code: "SVE"
			},
			{
				id: 1878,
				name: "Tambov Oblast",
				state_code: "TAM"
			},
			{
				id: 1872,
				name: "Tomsk Oblast",
				state_code: "TOM"
			},
			{
				id: 1895,
				name: "Tula Oblast",
				state_code: "TUL"
			},
			{
				id: 1900,
				name: "Tuva Republic",
				state_code: "TY"
			},
			{
				id: 1860,
				name: "Tver Oblast",
				state_code: "TVE"
			},
			{
				id: 1907,
				name: "Tyumen Oblast",
				state_code: "TYU"
			},
			{
				id: 1913,
				name: "Udmurt Republic",
				state_code: "UD"
			},
			{
				id: 1856,
				name: "Ulyanovsk Oblast",
				state_code: "ULY"
			},
			{
				id: 1881,
				name: "Vladimir Oblast",
				state_code: "VLA"
			},
			{
				id: 4916,
				name: "Volgograd Oblast",
				state_code: "VGG"
			},
			{
				id: 1874,
				name: "Vologda Oblast",
				state_code: "VLG"
			},
			{
				id: 1906,
				name: "Voronezh Oblast",
				state_code: "VOR"
			},
			{
				id: 1847,
				name: "Yamalo-Nenets Autonomous Okrug",
				state_code: "YAN"
			},
			{
				id: 1851,
				name: "Yaroslavl Oblast",
				state_code: "YAR"
			},
			{
				id: 1904,
				name: "Zabaykalsky Krai",
				state_code: "ZAB"
			}
		]
	},
	{
		name: "Rwanda",
		iso3: "RWA",
		iso2: "RW",
		numeric_code: "646",
		phone_code: "250",
		emoji: "🇷🇼",
		emojiU: "U+1F1F7 U+1F1FC",
		states: [
			{
				id: 261,
				name: "Eastern Province",
				state_code: "02"
			},
			{
				id: 262,
				name: "Kigali district",
				state_code: "01"
			},
			{
				id: 263,
				name: "Northern Province",
				state_code: "03"
			},
			{
				id: 259,
				name: "Southern Province",
				state_code: "05"
			},
			{
				id: 260,
				name: "Western Province",
				state_code: "04"
			}
		]
	},
	{
		name: "Saint Helena",
		iso3: "SHN",
		iso2: "SH",
		numeric_code: "654",
		phone_code: "290",
		emoji: "🇸🇭",
		emojiU: "U+1F1F8 U+1F1ED",
		states: [
		]
	},
	{
		name: "Saint Kitts And Nevis",
		iso3: "KNA",
		iso2: "KN",
		numeric_code: "659",
		phone_code: "+1-869",
		emoji: "🇰🇳",
		emojiU: "U+1F1F0 U+1F1F3",
		states: [
			{
				id: 3833,
				name: "Christ Church Nichola Town Parish",
				state_code: "01"
			},
			{
				id: 3832,
				name: "Nevis",
				state_code: "N"
			},
			{
				id: 3836,
				name: "Saint Anne Sandy Point Parish",
				state_code: "02"
			},
			{
				id: 3837,
				name: "Saint George Gingerland Parish",
				state_code: "04"
			},
			{
				id: 3835,
				name: "Saint James Windward Parish",
				state_code: "05"
			},
			{
				id: 3845,
				name: "Saint John Capisterre Parish",
				state_code: "06"
			},
			{
				id: 3840,
				name: "Saint John Figtree Parish",
				state_code: "07"
			},
			{
				id: 3841,
				name: "Saint Kitts",
				state_code: "K"
			},
			{
				id: 3844,
				name: "Saint Mary Cayon Parish",
				state_code: "08"
			},
			{
				id: 3834,
				name: "Saint Paul Capisterre Parish",
				state_code: "09"
			},
			{
				id: 3838,
				name: "Saint Paul Charlestown Parish",
				state_code: "10"
			},
			{
				id: 3831,
				name: "Saint Peter Basseterre Parish",
				state_code: "11"
			},
			{
				id: 3839,
				name: "Saint Thomas Lowland Parish",
				state_code: "12"
			},
			{
				id: 3842,
				name: "Saint Thomas Middle Island Parish",
				state_code: "13"
			},
			{
				id: 3843,
				name: "Trinity Palmetto Point Parish",
				state_code: "15"
			}
		]
	},
	{
		name: "Saint Lucia",
		iso3: "LCA",
		iso2: "LC",
		numeric_code: "662",
		phone_code: "+1-758",
		emoji: "🇱🇨",
		emojiU: "U+1F1F1 U+1F1E8",
		states: [
			{
				id: 3757,
				name: "Anse la Raye Quarter",
				state_code: "01"
			},
			{
				id: 3761,
				name: "Canaries",
				state_code: "12"
			},
			{
				id: 3758,
				name: "Castries Quarter",
				state_code: "02"
			},
			{
				id: 3760,
				name: "Choiseul Quarter",
				state_code: "03"
			},
			{
				id: 3767,
				name: "Dauphin Quarter",
				state_code: "04"
			},
			{
				id: 3756,
				name: "Dennery Quarter",
				state_code: "05"
			},
			{
				id: 3766,
				name: "Gros Islet Quarter",
				state_code: "06"
			},
			{
				id: 3759,
				name: "Laborie Quarter",
				state_code: "07"
			},
			{
				id: 3762,
				name: "Micoud Quarter",
				state_code: "08"
			},
			{
				id: 3765,
				name: "Praslin Quarter",
				state_code: "09"
			},
			{
				id: 3764,
				name: "Soufrière Quarter",
				state_code: "10"
			},
			{
				id: 3763,
				name: "Vieux Fort Quarter",
				state_code: "11"
			}
		]
	},
	{
		name: "Saint Pierre and Miquelon",
		iso3: "SPM",
		iso2: "PM",
		numeric_code: "666",
		phone_code: "508",
		emoji: "🇵🇲",
		emojiU: "U+1F1F5 U+1F1F2",
		states: [
		]
	},
	{
		name: "Saint Vincent And The Grenadines",
		iso3: "VCT",
		iso2: "VC",
		numeric_code: "670",
		phone_code: "+1-784",
		emoji: "🇻🇨",
		emojiU: "U+1F1FB U+1F1E8",
		states: [
			{
				id: 3389,
				name: "Charlotte Parish",
				state_code: "01"
			},
			{
				id: 3388,
				name: "Grenadines Parish",
				state_code: "06"
			},
			{
				id: 3386,
				name: "Saint Andrew Parish",
				state_code: "02"
			},
			{
				id: 3387,
				name: "Saint David Parish",
				state_code: "03"
			},
			{
				id: 3384,
				name: "Saint George Parish",
				state_code: "04"
			},
			{
				id: 3385,
				name: "Saint Patrick Parish",
				state_code: "05"
			}
		]
	},
	{
		name: "Saint-Barthelemy",
		iso3: "BLM",
		iso2: "BL",
		numeric_code: "652",
		phone_code: "590",
		emoji: "🇧🇱",
		emojiU: "U+1F1E7 U+1F1F1",
		states: [
		]
	},
	{
		name: "Saint-Martin (French part)",
		iso3: "MAF",
		iso2: "MF",
		numeric_code: "663",
		phone_code: "590",
		emoji: "🇲🇫",
		emojiU: "U+1F1F2 U+1F1EB",
		states: [
		]
	},
	{
		name: "Samoa",
		iso3: "WSM",
		iso2: "WS",
		numeric_code: "882",
		phone_code: "685",
		emoji: "🇼🇸",
		emojiU: "U+1F1FC U+1F1F8",
		states: [
			{
				id: 4763,
				name: "A'ana",
				state_code: "AA"
			},
			{
				id: 4761,
				name: "Aiga-i-le-Tai",
				state_code: "AL"
			},
			{
				id: 4765,
				name: "Atua",
				state_code: "AT"
			},
			{
				id: 4764,
				name: "Fa'asaleleaga",
				state_code: "FA"
			},
			{
				id: 4769,
				name: "Gaga'emauga",
				state_code: "GE"
			},
			{
				id: 4771,
				name: "Gaga'ifomauga",
				state_code: "GI"
			},
			{
				id: 4767,
				name: "Palauli",
				state_code: "PA"
			},
			{
				id: 4762,
				name: "Satupa'itea",
				state_code: "SA"
			},
			{
				id: 4770,
				name: "Tuamasaga",
				state_code: "TU"
			},
			{
				id: 4768,
				name: "Va'a-o-Fonoti",
				state_code: "VF"
			},
			{
				id: 4766,
				name: "Vaisigano",
				state_code: "VS"
			}
		]
	},
	{
		name: "San Marino",
		iso3: "SMR",
		iso2: "SM",
		numeric_code: "674",
		phone_code: "378",
		emoji: "🇸🇲",
		emojiU: "U+1F1F8 U+1F1F2",
		states: [
			{
				id: 59,
				name: "Acquaviva",
				state_code: "01"
			},
			{
				id: 61,
				name: "Borgo Maggiore",
				state_code: "06"
			},
			{
				id: 60,
				name: "Chiesanuova",
				state_code: "02"
			},
			{
				id: 64,
				name: "Domagnano",
				state_code: "03"
			},
			{
				id: 62,
				name: "Faetano",
				state_code: "04"
			},
			{
				id: 66,
				name: "Fiorentino",
				state_code: "05"
			},
			{
				id: 63,
				name: "Montegiardino",
				state_code: "08"
			},
			{
				id: 58,
				name: "San Marino",
				state_code: "07"
			},
			{
				id: 65,
				name: "Serravalle",
				state_code: "09"
			}
		]
	},
	{
		name: "Sao Tome and Principe",
		iso3: "STP",
		iso2: "ST",
		numeric_code: "678",
		phone_code: "239",
		emoji: "🇸🇹",
		emojiU: "U+1F1F8 U+1F1F9",
		states: [
			{
				id: 270,
				name: "Príncipe Province",
				state_code: "P"
			},
			{
				id: 271,
				name: "São Tomé Province",
				state_code: "S"
			}
		]
	},
	{
		name: "Saudi Arabia",
		iso3: "SAU",
		iso2: "SA",
		numeric_code: "682",
		phone_code: "966",
		emoji: "🇸🇦",
		emojiU: "U+1F1F8 U+1F1E6",
		states: [
			{
				id: 2853,
				name: "'Asir",
				state_code: "14"
			},
			{
				id: 2859,
				name: "Al Bahah",
				state_code: "11"
			},
			{
				id: 2857,
				name: "Al Jawf",
				state_code: "12"
			},
			{
				id: 2851,
				name: "Al Madinah",
				state_code: "03"
			},
			{
				id: 2861,
				name: "Al-Qassim",
				state_code: "05"
			},
			{
				id: 2856,
				name: "Eastern Province",
				state_code: "04"
			},
			{
				id: 2855,
				name: "Ha'il",
				state_code: "06"
			},
			{
				id: 2858,
				name: "Jizan",
				state_code: "09"
			},
			{
				id: 2850,
				name: "Makkah",
				state_code: "02"
			},
			{
				id: 2860,
				name: "Najran",
				state_code: "10"
			},
			{
				id: 2854,
				name: "Northern Borders",
				state_code: "08"
			},
			{
				id: 2849,
				name: "Riyadh",
				state_code: "01"
			},
			{
				id: 2852,
				name: "Tabuk",
				state_code: "07"
			}
		]
	},
	{
		name: "Senegal",
		iso3: "SEN",
		iso2: "SN",
		numeric_code: "686",
		phone_code: "221",
		emoji: "🇸🇳",
		emojiU: "U+1F1F8 U+1F1F3",
		states: [
			{
				id: 473,
				name: "Dakar",
				state_code: "DK"
			},
			{
				id: 480,
				name: "Diourbel Region",
				state_code: "DB"
			},
			{
				id: 479,
				name: "Fatick",
				state_code: "FK"
			},
			{
				id: 475,
				name: "Kaffrine",
				state_code: "KA"
			},
			{
				id: 483,
				name: "Kaolack",
				state_code: "KL"
			},
			{
				id: 481,
				name: "Kédougou",
				state_code: "KE"
			},
			{
				id: 474,
				name: "Kolda",
				state_code: "KD"
			},
			{
				id: 485,
				name: "Louga",
				state_code: "LG"
			},
			{
				id: 476,
				name: "Matam",
				state_code: "MT"
			},
			{
				id: 477,
				name: "Saint-Louis",
				state_code: "SL"
			},
			{
				id: 482,
				name: "Sédhiou",
				state_code: "SE"
			},
			{
				id: 486,
				name: "Tambacounda Region",
				state_code: "TC"
			},
			{
				id: 484,
				name: "Thiès Region",
				state_code: "TH"
			},
			{
				id: 478,
				name: "Ziguinchor",
				state_code: "ZG"
			}
		]
	},
	{
		name: "Serbia",
		iso3: "SRB",
		iso2: "RS",
		numeric_code: "688",
		phone_code: "381",
		emoji: "🇷🇸",
		emojiU: "U+1F1F7 U+1F1F8",
		states: [
			{
				id: 3728,
				name: "Belgrade",
				state_code: "00"
			},
			{
				id: 3717,
				name: "Bor District",
				state_code: "14"
			},
			{
				id: 3732,
				name: "Braničevo District",
				state_code: "11"
			},
			{
				id: 3716,
				name: "Central Banat District",
				state_code: "02"
			},
			{
				id: 3715,
				name: "Jablanica District",
				state_code: "23"
			},
			{
				id: 3724,
				name: "Kolubara District",
				state_code: "09"
			},
			{
				id: 3719,
				name: "Mačva District",
				state_code: "08"
			},
			{
				id: 3727,
				name: "Moravica District",
				state_code: "17"
			},
			{
				id: 3722,
				name: "Nišava District",
				state_code: "20"
			},
			{
				id: 3714,
				name: "North Bačka District",
				state_code: "01"
			},
			{
				id: 3736,
				name: "North Banat District",
				state_code: "03"
			},
			{
				id: 3721,
				name: "Pčinja District",
				state_code: "24"
			},
			{
				id: 3712,
				name: "Pirot District",
				state_code: "22"
			},
			{
				id: 3741,
				name: "Podunavlje District",
				state_code: "10"
			},
			{
				id: 3737,
				name: "Pomoravlje District",
				state_code: "13"
			},
			{
				id: 3720,
				name: "Rasina District",
				state_code: "19"
			},
			{
				id: 3725,
				name: "Raška District",
				state_code: "18"
			},
			{
				id: 3711,
				name: "South Bačka District",
				state_code: "06"
			},
			{
				id: 3713,
				name: "South Banat District",
				state_code: "04"
			},
			{
				id: 3740,
				name: "Srem District",
				state_code: "07"
			},
			{
				id: 3734,
				name: "Šumadija District",
				state_code: "12"
			},
			{
				id: 3718,
				name: "Toplica District",
				state_code: "21"
			},
			{
				id: 3733,
				name: "Vojvodina",
				state_code: "VO"
			},
			{
				id: 3726,
				name: "West Bačka District",
				state_code: "05"
			},
			{
				id: 3731,
				name: "Zaječar District",
				state_code: "15"
			},
			{
				id: 3729,
				name: "Zlatibor District",
				state_code: "16"
			}
		]
	},
	{
		name: "Seychelles",
		iso3: "SYC",
		iso2: "SC",
		numeric_code: "690",
		phone_code: "248",
		emoji: "🇸🇨",
		emojiU: "U+1F1F8 U+1F1E8",
		states: [
			{
				id: 513,
				name: "Anse Boileau",
				state_code: "02"
			},
			{
				id: 502,
				name: "Anse Royale",
				state_code: "05"
			},
			{
				id: 506,
				name: "Anse-aux-Pins",
				state_code: "01"
			},
			{
				id: 508,
				name: "Au Cap",
				state_code: "04"
			},
			{
				id: 497,
				name: "Baie Lazare",
				state_code: "06"
			},
			{
				id: 514,
				name: "Baie Sainte Anne",
				state_code: "07"
			},
			{
				id: 512,
				name: "Beau Vallon",
				state_code: "08"
			},
			{
				id: 515,
				name: "Bel Air",
				state_code: "09"
			},
			{
				id: 505,
				name: "Bel Ombre",
				state_code: "10"
			},
			{
				id: 517,
				name: "Cascade",
				state_code: "11"
			},
			{
				id: 503,
				name: "Glacis",
				state_code: "12"
			},
			{
				id: 500,
				name: "Grand'Anse Mahé",
				state_code: "13"
			},
			{
				id: 504,
				name: "Grand'Anse Praslin",
				state_code: "14"
			},
			{
				id: 495,
				name: "La Digue",
				state_code: "15"
			},
			{
				id: 516,
				name: "La Rivière Anglaise",
				state_code: "16"
			},
			{
				id: 499,
				name: "Les Mamelles",
				state_code: "24"
			},
			{
				id: 494,
				name: "Mont Buxton",
				state_code: "17"
			},
			{
				id: 498,
				name: "Mont Fleuri",
				state_code: "18"
			},
			{
				id: 511,
				name: "Plaisance",
				state_code: "19"
			},
			{
				id: 510,
				name: "Pointe La Rue",
				state_code: "20"
			},
			{
				id: 507,
				name: "Port Glaud",
				state_code: "21"
			},
			{
				id: 501,
				name: "Roche Caiman",
				state_code: "25"
			},
			{
				id: 496,
				name: "Saint Louis",
				state_code: "22"
			},
			{
				id: 509,
				name: "Takamaka",
				state_code: "23"
			}
		]
	},
	{
		name: "Sierra Leone",
		iso3: "SLE",
		iso2: "SL",
		numeric_code: "694",
		phone_code: "232",
		emoji: "🇸🇱",
		emojiU: "U+1F1F8 U+1F1F1",
		states: [
			{
				id: 914,
				name: "Eastern Province",
				state_code: "E"
			},
			{
				id: 911,
				name: "Northern Province",
				state_code: "N"
			},
			{
				id: 912,
				name: "Southern Province",
				state_code: "S"
			},
			{
				id: 913,
				name: "Western Area",
				state_code: "W"
			}
		]
	},
	{
		name: "Singapore",
		iso3: "SGP",
		iso2: "SG",
		numeric_code: "702",
		phone_code: "65",
		emoji: "🇸🇬",
		emojiU: "U+1F1F8 U+1F1EC",
		states: [
			{
				id: 4651,
				name: "Central Singapore Community Development Council",
				state_code: "01"
			},
			{
				id: 4649,
				name: "North East Community Development Council",
				state_code: "02"
			},
			{
				id: 4653,
				name: "North West Community Development Council",
				state_code: "03"
			},
			{
				id: 4650,
				name: "South East Community Development Council",
				state_code: "04"
			},
			{
				id: 4652,
				name: "South West Community Development Council",
				state_code: "05"
			}
		]
	},
	{
		name: "Sint Maarten (Dutch part)",
		iso3: "SXM",
		iso2: "SX",
		numeric_code: "534",
		phone_code: "1721",
		emoji: "🇸🇽",
		emojiU: "U+1F1F8 U+1F1FD",
		states: [
		]
	},
	{
		name: "Slovakia",
		iso3: "SVK",
		iso2: "SK",
		numeric_code: "703",
		phone_code: "421",
		emoji: "🇸🇰",
		emojiU: "U+1F1F8 U+1F1F0",
		states: [
			{
				id: 4352,
				name: "Banská Bystrica Region",
				state_code: "BC"
			},
			{
				id: 4356,
				name: "Bratislava Region",
				state_code: "BL"
			},
			{
				id: 4353,
				name: "Košice Region",
				state_code: "KI"
			},
			{
				id: 4357,
				name: "Nitra Region",
				state_code: "NI"
			},
			{
				id: 4354,
				name: "Prešov Region",
				state_code: "PV"
			},
			{
				id: 4358,
				name: "Trenčín Region",
				state_code: "TC"
			},
			{
				id: 4355,
				name: "Trnava Region",
				state_code: "TA"
			},
			{
				id: 4359,
				name: "Žilina Region",
				state_code: "ZI"
			}
		]
	},
	{
		name: "Slovenia",
		iso3: "SVN",
		iso2: "SI",
		numeric_code: "705",
		phone_code: "386",
		emoji: "🇸🇮",
		emojiU: "U+1F1F8 U+1F1EE",
		states: [
			{
				id: 4183,
				name: "Ajdovščina Municipality",
				state_code: "001"
			},
			{
				id: 4326,
				name: "Ankaran Municipality",
				state_code: "213"
			},
			{
				id: 4301,
				name: "Beltinci Municipality",
				state_code: "002"
			},
			{
				id: 4166,
				name: "Benedikt Municipality",
				state_code: "148"
			},
			{
				id: 4179,
				name: "Bistrica ob Sotli Municipality",
				state_code: "149"
			},
			{
				id: 4202,
				name: "Bled Municipality",
				state_code: "003"
			},
			{
				id: 4278,
				name: "Bloke Municipality",
				state_code: "150"
			},
			{
				id: 4282,
				name: "Bohinj Municipality",
				state_code: "004"
			},
			{
				id: 4200,
				name: "Borovnica Municipality",
				state_code: "005"
			},
			{
				id: 4181,
				name: "Bovec Municipality",
				state_code: "006"
			},
			{
				id: 4141,
				name: "Braslovče Municipality",
				state_code: "151"
			},
			{
				id: 4240,
				name: "Brda Municipality",
				state_code: "007"
			},
			{
				id: 4215,
				name: "Brežice Municipality",
				state_code: "009"
			},
			{
				id: 4165,
				name: "Brezovica Municipality",
				state_code: "008"
			},
			{
				id: 4147,
				name: "Cankova Municipality",
				state_code: "152"
			},
			{
				id: 4310,
				name: "Cerklje na Gorenjskem Municipality",
				state_code: "012"
			},
			{
				id: 4162,
				name: "Cerknica Municipality",
				state_code: "013"
			},
			{
				id: 4178,
				name: "Cerkno Municipality",
				state_code: "014"
			},
			{
				id: 4176,
				name: "Cerkvenjak Municipality",
				state_code: "153"
			},
			{
				id: 4191,
				name: "City Municipality of Celje",
				state_code: "011"
			},
			{
				id: 4236,
				name: "City Municipality of Novo Mesto",
				state_code: "085"
			},
			{
				id: 4151,
				name: "Črenšovci Municipality",
				state_code: "015"
			},
			{
				id: 4232,
				name: "Črna na Koroškem Municipality",
				state_code: "016"
			},
			{
				id: 4291,
				name: "Črnomelj Municipality",
				state_code: "017"
			},
			{
				id: 4304,
				name: "Destrnik Municipality",
				state_code: "018"
			},
			{
				id: 4167,
				name: "Divača Municipality",
				state_code: "019"
			},
			{
				id: 4295,
				name: "Dobje Municipality",
				state_code: "154"
			},
			{
				id: 4216,
				name: "Dobrepolje Municipality",
				state_code: "020"
			},
			{
				id: 4252,
				name: "Dobrna Municipality",
				state_code: "155"
			},
			{
				id: 4308,
				name: "Dobrova–Polhov Gradec Municipality",
				state_code: "021"
			},
			{
				id: 4189,
				name: "Dobrovnik Municipality",
				state_code: "156"
			},
			{
				id: 4173,
				name: "Dol pri Ljubljani Municipality",
				state_code: "022"
			},
			{
				id: 4281,
				name: "Dolenjske Toplice Municipality",
				state_code: "157"
			},
			{
				id: 4159,
				name: "Domžale Municipality",
				state_code: "023"
			},
			{
				id: 4290,
				name: "Dornava Municipality",
				state_code: "024"
			},
			{
				id: 4345,
				name: "Dravograd Municipality",
				state_code: "025"
			},
			{
				id: 4213,
				name: "Duplek Municipality",
				state_code: "026"
			},
			{
				id: 4293,
				name: "Gorenja Vas–Poljane Municipality",
				state_code: "027"
			},
			{
				id: 4210,
				name: "Gorišnica Municipality",
				state_code: "028"
			},
			{
				id: 4284,
				name: "Gorje Municipality",
				state_code: "207"
			},
			{
				id: 4343,
				name: "Gornja Radgona Municipality",
				state_code: "029"
			},
			{
				id: 4339,
				name: "Gornji Grad Municipality",
				state_code: "030"
			},
			{
				id: 4271,
				name: "Gornji Petrovci Municipality",
				state_code: "031"
			},
			{
				id: 4217,
				name: "Grad Municipality",
				state_code: "158"
			},
			{
				id: 4336,
				name: "Grosuplje Municipality",
				state_code: "032"
			},
			{
				id: 4145,
				name: "Hajdina Municipality",
				state_code: "159"
			},
			{
				id: 4175,
				name: "Hoče–Slivnica Municipality",
				state_code: "160"
			},
			{
				id: 4327,
				name: "Hodoš Municipality",
				state_code: "161"
			},
			{
				id: 4193,
				name: "Horjul Municipality",
				state_code: "162"
			},
			{
				id: 4341,
				name: "Hrastnik Municipality",
				state_code: "034"
			},
			{
				id: 4321,
				name: "Hrpelje–Kozina Municipality",
				state_code: "035"
			},
			{
				id: 4152,
				name: "Idrija Municipality",
				state_code: "036"
			},
			{
				id: 4286,
				name: "Ig Municipality",
				state_code: "037"
			},
			{
				id: 4305,
				name: "Ivančna Gorica Municipality",
				state_code: "039"
			},
			{
				id: 4322,
				name: "Izola Municipality",
				state_code: "040"
			},
			{
				id: 4337,
				name: "Jesenice Municipality",
				state_code: "041"
			},
			{
				id: 4203,
				name: "Jezersko Municipality",
				state_code: "163"
			},
			{
				id: 4266,
				name: "Juršinci Municipality",
				state_code: "042"
			},
			{
				id: 4180,
				name: "Kamnik Municipality",
				state_code: "043"
			},
			{
				id: 4227,
				name: "Kanal ob Soči Municipality",
				state_code: "044"
			},
			{
				id: 4150,
				name: "Kidričevo Municipality",
				state_code: "045"
			},
			{
				id: 4243,
				name: "Kobarid Municipality",
				state_code: "046"
			},
			{
				id: 4325,
				name: "Kobilje Municipality",
				state_code: "047"
			},
			{
				id: 4335,
				name: "Kočevje Municipality",
				state_code: "048"
			},
			{
				id: 4315,
				name: "Komen Municipality",
				state_code: "049"
			},
			{
				id: 4283,
				name: "Komenda Municipality",
				state_code: "164"
			},
			{
				id: 4319,
				name: "Koper City Municipality",
				state_code: "050"
			},
			{
				id: 4254,
				name: "Kostanjevica na Krki Municipality",
				state_code: "197"
			},
			{
				id: 4331,
				name: "Kostel Municipality",
				state_code: "165"
			},
			{
				id: 4186,
				name: "Kozje Municipality",
				state_code: "051"
			},
			{
				id: 4287,
				name: "Kranj City Municipality",
				state_code: "052"
			},
			{
				id: 4340,
				name: "Kranjska Gora Municipality",
				state_code: "053"
			},
			{
				id: 4238,
				name: "Križevci Municipality",
				state_code: "166"
			},
			{
				id: 4197,
				name: "Kungota",
				state_code: "055"
			},
			{
				id: 4211,
				name: "Kuzma Municipality",
				state_code: "056"
			},
			{
				id: 4338,
				name: "Laško Municipality",
				state_code: "057"
			},
			{
				id: 4142,
				name: "Lenart Municipality",
				state_code: "058"
			},
			{
				id: 4225,
				name: "Lendava Municipality",
				state_code: "059"
			},
			{
				id: 4347,
				name: "Litija Municipality",
				state_code: "060"
			},
			{
				id: 4270,
				name: "Ljubljana City Municipality",
				state_code: "061"
			},
			{
				id: 4294,
				name: "Ljubno Municipality",
				state_code: "062"
			},
			{
				id: 4351,
				name: "Ljutomer Municipality",
				state_code: "063"
			},
			{
				id: 4306,
				name: "Log–Dragomer Municipality",
				state_code: "208"
			},
			{
				id: 4350,
				name: "Logatec Municipality",
				state_code: "064"
			},
			{
				id: 4174,
				name: "Loška Dolina Municipality",
				state_code: "065"
			},
			{
				id: 4158,
				name: "Loški Potok Municipality",
				state_code: "066"
			},
			{
				id: 4156,
				name: "Lovrenc na Pohorju Municipality",
				state_code: "167"
			},
			{
				id: 4219,
				name: "Luče Municipality",
				state_code: "067"
			},
			{
				id: 4302,
				name: "Lukovica Municipality",
				state_code: "068"
			},
			{
				id: 4157,
				name: "Majšperk Municipality",
				state_code: "069"
			},
			{
				id: 4224,
				name: "Makole Municipality",
				state_code: "198"
			},
			{
				id: 4242,
				name: "Maribor City Municipality",
				state_code: "070"
			},
			{
				id: 4244,
				name: "Markovci Municipality",
				state_code: "168"
			},
			{
				id: 4349,
				name: "Medvode Municipality",
				state_code: "071"
			},
			{
				id: 4348,
				name: "Mengeš Municipality",
				state_code: "072"
			},
			{
				id: 4323,
				name: "Metlika Municipality",
				state_code: "073"
			},
			{
				id: 4265,
				name: "Mežica Municipality",
				state_code: "074"
			},
			{
				id: 4223,
				name: "Miklavž na Dravskem Polju Municipality",
				state_code: "169"
			},
			{
				id: 4220,
				name: "Miren–Kostanjevica Municipality",
				state_code: "075"
			},
			{
				id: 4298,
				name: "Mirna Municipality",
				state_code: "212"
			},
			{
				id: 4237,
				name: "Mirna Peč Municipality",
				state_code: "170"
			},
			{
				id: 4212,
				name: "Mislinja Municipality",
				state_code: "076"
			},
			{
				id: 4297,
				name: "Mokronog–Trebelno Municipality",
				state_code: "199"
			},
			{
				id: 4168,
				name: "Moravče Municipality",
				state_code: "077"
			},
			{
				id: 4218,
				name: "Moravske Toplice Municipality",
				state_code: "078"
			},
			{
				id: 4190,
				name: "Mozirje Municipality",
				state_code: "079"
			},
			{
				id: 4318,
				name: "Municipality of Apače",
				state_code: "195"
			},
			{
				id: 4309,
				name: "Municipality of Cirkulane",
				state_code: "196"
			},
			{
				id: 4344,
				name: "Municipality of Ilirska Bistrica",
				state_code: "038"
			},
			{
				id: 4314,
				name: "Municipality of Krško",
				state_code: "054"
			},
			{
				id: 4187,
				name: "Municipality of Škofljica",
				state_code: "123"
			},
			{
				id: 4313,
				name: "Murska Sobota City Municipality",
				state_code: "080"
			},
			{
				id: 4208,
				name: "Muta Municipality",
				state_code: "081"
			},
			{
				id: 4177,
				name: "Naklo Municipality",
				state_code: "082"
			},
			{
				id: 4329,
				name: "Nazarje Municipality",
				state_code: "083"
			},
			{
				id: 4205,
				name: "Nova Gorica City Municipality",
				state_code: "084"
			},
			{
				id: 4320,
				name: "Odranci Municipality",
				state_code: "086"
			},
			{
				id: 4143,
				name: "Oplotnica",
				state_code: "171"
			},
			{
				id: 4221,
				name: "Ormož Municipality",
				state_code: "087"
			},
			{
				id: 4199,
				name: "Osilnica Municipality",
				state_code: "088"
			},
			{
				id: 4172,
				name: "Pesnica Municipality",
				state_code: "089"
			},
			{
				id: 4201,
				name: "Piran Municipality",
				state_code: "090"
			},
			{
				id: 4184,
				name: "Pivka Municipality",
				state_code: "091"
			},
			{
				id: 4146,
				name: "Podčetrtek Municipality",
				state_code: "092"
			},
			{
				id: 4161,
				name: "Podlehnik Municipality",
				state_code: "172"
			},
			{
				id: 4234,
				name: "Podvelka Municipality",
				state_code: "093"
			},
			{
				id: 4239,
				name: "Poljčane Municipality",
				state_code: "200"
			},
			{
				id: 4272,
				name: "Polzela Municipality",
				state_code: "173"
			},
			{
				id: 4330,
				name: "Postojna Municipality",
				state_code: "094"
			},
			{
				id: 4188,
				name: "Prebold Municipality",
				state_code: "174"
			},
			{
				id: 4303,
				name: "Preddvor Municipality",
				state_code: "095"
			},
			{
				id: 4274,
				name: "Prevalje Municipality",
				state_code: "175"
			},
			{
				id: 4228,
				name: "Ptuj City Municipality",
				state_code: "096"
			},
			{
				id: 4288,
				name: "Puconci Municipality",
				state_code: "097"
			},
			{
				id: 4204,
				name: "Rače–Fram Municipality",
				state_code: "098"
			},
			{
				id: 4195,
				name: "Radeče Municipality",
				state_code: "099"
			},
			{
				id: 4292,
				name: "Radenci Municipality",
				state_code: "100"
			},
			{
				id: 4275,
				name: "Radlje ob Dravi Municipality",
				state_code: "101"
			},
			{
				id: 4231,
				name: "Radovljica Municipality",
				state_code: "102"
			},
			{
				id: 4155,
				name: "Ravne na Koroškem Municipality",
				state_code: "103"
			},
			{
				id: 4206,
				name: "Razkrižje Municipality",
				state_code: "176"
			},
			{
				id: 4160,
				name: "Rečica ob Savinji Municipality",
				state_code: "209"
			},
			{
				id: 4253,
				name: "Renče–Vogrsko Municipality",
				state_code: "201"
			},
			{
				id: 4235,
				name: "Ribnica Municipality",
				state_code: "104"
			},
			{
				id: 4207,
				name: "Ribnica na Pohorju Municipality",
				state_code: "177"
			},
			{
				id: 4233,
				name: "Rogaška Slatina Municipality",
				state_code: "106"
			},
			{
				id: 4264,
				name: "Rogašovci Municipality",
				state_code: "105"
			},
			{
				id: 4209,
				name: "Rogatec Municipality",
				state_code: "107"
			},
			{
				id: 4280,
				name: "Ruše Municipality",
				state_code: "108"
			},
			{
				id: 4222,
				name: "Šalovci Municipality",
				state_code: "033"
			},
			{
				id: 4230,
				name: "Selnica ob Dravi Municipality",
				state_code: "178"
			},
			{
				id: 4346,
				name: "Semič Municipality",
				state_code: "109"
			},
			{
				id: 4317,
				name: "Šempeter–Vrtojba Municipality",
				state_code: "183"
			},
			{
				id: 4299,
				name: "Šenčur Municipality",
				state_code: "117"
			},
			{
				id: 4324,
				name: "Šentilj Municipality",
				state_code: "118"
			},
			{
				id: 4241,
				name: "Šentjernej Municipality",
				state_code: "119"
			},
			{
				id: 4171,
				name: "Šentjur Municipality",
				state_code: "120"
			},
			{
				id: 4311,
				name: "Šentrupert Municipality",
				state_code: "211"
			},
			{
				id: 4268,
				name: "Sevnica Municipality",
				state_code: "110"
			},
			{
				id: 4149,
				name: "Sežana Municipality",
				state_code: "111"
			},
			{
				id: 4170,
				name: "Škocjan Municipality",
				state_code: "121"
			},
			{
				id: 4316,
				name: "Škofja Loka Municipality",
				state_code: "122"
			},
			{
				id: 4169,
				name: "Slovenj Gradec City Municipality",
				state_code: "112"
			},
			{
				id: 4332,
				name: "Slovenska Bistrica Municipality",
				state_code: "113"
			},
			{
				id: 4198,
				name: "Slovenske Konjice Municipality",
				state_code: "114"
			},
			{
				id: 4285,
				name: "Šmarje pri Jelšah Municipality",
				state_code: "124"
			},
			{
				id: 4289,
				name: "Šmarješke Toplice Municipality",
				state_code: "206"
			},
			{
				id: 4296,
				name: "Šmartno ob Paki Municipality",
				state_code: "125"
			},
			{
				id: 4279,
				name: "Šmartno pri Litiji Municipality",
				state_code: "194"
			},
			{
				id: 4277,
				name: "Sodražica Municipality",
				state_code: "179"
			},
			{
				id: 4261,
				name: "Solčava Municipality",
				state_code: "180"
			},
			{
				id: 4248,
				name: "Šoštanj Municipality",
				state_code: "126"
			},
			{
				id: 4263,
				name: "Središče ob Dravi",
				state_code: "202"
			},
			{
				id: 4259,
				name: "Starše Municipality",
				state_code: "115"
			},
			{
				id: 4185,
				name: "Štore Municipality",
				state_code: "127"
			},
			{
				id: 4333,
				name: "Straža Municipality",
				state_code: "203"
			},
			{
				id: 4164,
				name: "Sveta Ana Municipality",
				state_code: "181"
			},
			{
				id: 4260,
				name: "Sveta Trojica v Slovenskih Goricah Municipality",
				state_code: "204"
			},
			{
				id: 4229,
				name: "Sveti Andraž v Slovenskih Goricah Municipality",
				state_code: "182"
			},
			{
				id: 4255,
				name: "Sveti Jurij ob Ščavnici Municipality",
				state_code: "116"
			},
			{
				id: 4328,
				name: "Sveti Jurij v Slovenskih Goricah Municipality",
				state_code: "210"
			},
			{
				id: 4273,
				name: "Sveti Tomaž Municipality",
				state_code: "205"
			},
			{
				id: 4194,
				name: "Tabor Municipality",
				state_code: "184"
			},
			{
				id: 4312,
				name: "Tišina Municipality",
				state_code: "010"
			},
			{
				id: 4247,
				name: "Tolmin Municipality",
				state_code: "128"
			},
			{
				id: 4246,
				name: "Trbovlje Municipality",
				state_code: "129"
			},
			{
				id: 4214,
				name: "Trebnje Municipality",
				state_code: "130"
			},
			{
				id: 4153,
				name: "Trnovska Vas Municipality",
				state_code: "185"
			},
			{
				id: 4250,
				name: "Tržič Municipality",
				state_code: "131"
			},
			{
				id: 4334,
				name: "Trzin Municipality",
				state_code: "186"
			},
			{
				id: 4251,
				name: "Turnišče Municipality",
				state_code: "132"
			},
			{
				id: 4267,
				name: "Velika Polana Municipality",
				state_code: "187"
			},
			{
				id: 4144,
				name: "Velike Lašče Municipality",
				state_code: "134"
			},
			{
				id: 4257,
				name: "Veržej Municipality",
				state_code: "188"
			},
			{
				id: 4300,
				name: "Videm Municipality",
				state_code: "135"
			},
			{
				id: 4196,
				name: "Vipava Municipality",
				state_code: "136"
			},
			{
				id: 4148,
				name: "Vitanje Municipality",
				state_code: "137"
			},
			{
				id: 4154,
				name: "Vodice Municipality",
				state_code: "138"
			},
			{
				id: 4245,
				name: "Vojnik Municipality",
				state_code: "139"
			},
			{
				id: 4163,
				name: "Vransko Municipality",
				state_code: "189"
			},
			{
				id: 4262,
				name: "Vrhnika Municipality",
				state_code: "140"
			},
			{
				id: 4226,
				name: "Vuzenica Municipality",
				state_code: "141"
			},
			{
				id: 4269,
				name: "Zagorje ob Savi Municipality",
				state_code: "142"
			},
			{
				id: 4258,
				name: "Žalec Municipality",
				state_code: "190"
			},
			{
				id: 4182,
				name: "Zavrč Municipality",
				state_code: "143"
			},
			{
				id: 4256,
				name: "Železniki Municipality",
				state_code: "146"
			},
			{
				id: 4249,
				name: "Žetale Municipality",
				state_code: "191"
			},
			{
				id: 4192,
				name: "Žiri Municipality",
				state_code: "147"
			},
			{
				id: 4276,
				name: "Žirovnica Municipality",
				state_code: "192"
			},
			{
				id: 4342,
				name: "Zreče Municipality",
				state_code: "144"
			},
			{
				id: 4307,
				name: "Žužemberk Municipality",
				state_code: "193"
			}
		]
	},
	{
		name: "Solomon Islands",
		iso3: "SLB",
		iso2: "SB",
		numeric_code: "090",
		phone_code: "677",
		emoji: "🇸🇧",
		emojiU: "U+1F1F8 U+1F1E7",
		states: [
			{
				id: 4784,
				name: "Central Province",
				state_code: "CE"
			},
			{
				id: 4781,
				name: "Choiseul Province",
				state_code: "CH"
			},
			{
				id: 4785,
				name: "Guadalcanal Province",
				state_code: "GU"
			},
			{
				id: 4778,
				name: "Honiara",
				state_code: "CT"
			},
			{
				id: 4780,
				name: "Isabel Province",
				state_code: "IS"
			},
			{
				id: 4782,
				name: "Makira-Ulawa Province",
				state_code: "MK"
			},
			{
				id: 4783,
				name: "Malaita Province",
				state_code: "ML"
			},
			{
				id: 4787,
				name: "Rennell and Bellona Province",
				state_code: "RB"
			},
			{
				id: 4779,
				name: "Temotu Province",
				state_code: "TE"
			},
			{
				id: 4786,
				name: "Western Province",
				state_code: "WE"
			}
		]
	},
	{
		name: "Somalia",
		iso3: "SOM",
		iso2: "SO",
		numeric_code: "706",
		phone_code: "252",
		emoji: "🇸🇴",
		emojiU: "U+1F1F8 U+1F1F4",
		states: [
			{
				id: 925,
				name: "Awdal Region",
				state_code: "AW"
			},
			{
				id: 917,
				name: "Bakool",
				state_code: "BK"
			},
			{
				id: 927,
				name: "Banaadir",
				state_code: "BN"
			},
			{
				id: 930,
				name: "Bari",
				state_code: "BR"
			},
			{
				id: 926,
				name: "Bay",
				state_code: "BY"
			},
			{
				id: 918,
				name: "Galguduud",
				state_code: "GA"
			},
			{
				id: 928,
				name: "Gedo",
				state_code: "GE"
			},
			{
				id: 915,
				name: "Hiran",
				state_code: "HI"
			},
			{
				id: 924,
				name: "Lower Juba",
				state_code: "JH"
			},
			{
				id: 921,
				name: "Lower Shebelle",
				state_code: "SH"
			},
			{
				id: 922,
				name: "Middle Juba",
				state_code: "JD"
			},
			{
				id: 923,
				name: "Middle Shebelle",
				state_code: "SD"
			},
			{
				id: 916,
				name: "Mudug",
				state_code: "MU"
			},
			{
				id: 920,
				name: "Nugal",
				state_code: "NU"
			},
			{
				id: 919,
				name: "Sanaag Region",
				state_code: "SA"
			},
			{
				id: 929,
				name: "Togdheer Region",
				state_code: "TO"
			}
		]
	},
	{
		name: "South Africa",
		iso3: "ZAF",
		iso2: "ZA",
		numeric_code: "710",
		phone_code: "27",
		emoji: "🇿🇦",
		emojiU: "U+1F1FF U+1F1E6",
		states: [
			{
				id: 938,
				name: "Eastern Cape",
				state_code: "EC"
			},
			{
				id: 932,
				name: "Free State",
				state_code: "FS"
			},
			{
				id: 936,
				name: "Gauteng",
				state_code: "GP"
			},
			{
				id: 935,
				name: "KwaZulu-Natal",
				state_code: "KZN"
			},
			{
				id: 933,
				name: "Limpopo",
				state_code: "LP"
			},
			{
				id: 937,
				name: "Mpumalanga",
				state_code: "MP"
			},
			{
				id: 934,
				name: "North West",
				state_code: "NW"
			},
			{
				id: 931,
				name: "Northern Cape",
				state_code: "NC"
			},
			{
				id: 939,
				name: "Western Cape",
				state_code: "WC"
			}
		]
	},
	{
		name: "South Georgia",
		iso3: "SGS",
		iso2: "GS",
		numeric_code: "239",
		phone_code: "500",
		emoji: "🇬🇸",
		emojiU: "U+1F1EC U+1F1F8",
		states: [
		]
	},
	{
		name: "South Korea",
		iso3: "KOR",
		iso2: "KR",
		numeric_code: "410",
		phone_code: "82",
		emoji: "🇰🇷",
		emojiU: "U+1F1F0 U+1F1F7",
		states: [
			{
				id: 3860,
				name: "Busan",
				state_code: "26"
			},
			{
				id: 3846,
				name: "Daegu",
				state_code: "27"
			},
			{
				id: 3850,
				name: "Daejeon",
				state_code: "30"
			},
			{
				id: 3862,
				name: "Gangwon Province",
				state_code: "42"
			},
			{
				id: 3858,
				name: "Gwangju",
				state_code: "29"
			},
			{
				id: 3847,
				name: "Gyeonggi Province",
				state_code: "41"
			},
			{
				id: 3848,
				name: "Incheon",
				state_code: "28"
			},
			{
				id: 3853,
				name: "Jeju",
				state_code: "49"
			},
			{
				id: 3854,
				name: "North Chungcheong Province",
				state_code: "43"
			},
			{
				id: 3855,
				name: "North Gyeongsang Province",
				state_code: "47"
			},
			{
				id: 3851,
				name: "North Jeolla Province",
				state_code: "45"
			},
			{
				id: 3861,
				name: "Sejong City",
				state_code: "50"
			},
			{
				id: 3849,
				name: "Seoul",
				state_code: "11"
			},
			{
				id: 3859,
				name: "South Chungcheong Province",
				state_code: "44"
			},
			{
				id: 3857,
				name: "South Gyeongsang Province",
				state_code: "48"
			},
			{
				id: 3856,
				name: "South Jeolla Province",
				state_code: "46"
			},
			{
				id: 3852,
				name: "Ulsan",
				state_code: "31"
			}
		]
	},
	{
		name: "South Sudan",
		iso3: "SSD",
		iso2: "SS",
		numeric_code: "728",
		phone_code: "211",
		emoji: "🇸🇸",
		emojiU: "U+1F1F8 U+1F1F8",
		states: [
			{
				id: 2092,
				name: "Central Equatoria",
				state_code: "EC"
			},
			{
				id: 2093,
				name: "Eastern Equatoria",
				state_code: "EE"
			},
			{
				id: 2094,
				name: "Jonglei State",
				state_code: "JG"
			},
			{
				id: 2090,
				name: "Lakes",
				state_code: "LK"
			},
			{
				id: 2088,
				name: "Northern Bahr el Ghazal",
				state_code: "BN"
			},
			{
				id: 2085,
				name: "Unity",
				state_code: "UY"
			},
			{
				id: 2086,
				name: "Upper Nile",
				state_code: "NU"
			},
			{
				id: 2087,
				name: "Warrap",
				state_code: "WR"
			},
			{
				id: 2091,
				name: "Western Bahr el Ghazal",
				state_code: "BW"
			},
			{
				id: 2089,
				name: "Western Equatoria",
				state_code: "EW"
			}
		]
	},
	{
		name: "Spain",
		iso3: "ESP",
		iso2: "ES",
		numeric_code: "724",
		phone_code: "34",
		emoji: "🇪🇸",
		emojiU: "U+1F1EA U+1F1F8",
		states: [
			{
				id: 1193,
				name: "Andalusia",
				state_code: "AN"
			},
			{
				id: 1177,
				name: "Aragon",
				state_code: "AR"
			},
			{
				id: 1160,
				name: "Asturias",
				state_code: "AS"
			},
			{
				id: 1189,
				name: "Ávila",
				state_code: "AV"
			},
			{
				id: 1174,
				name: "Balearic Islands",
				state_code: "PM"
			},
			{
				id: 1191,
				name: "Basque Country",
				state_code: "PV"
			},
			{
				id: 1146,
				name: "Burgos Province",
				state_code: "BU"
			},
			{
				id: 1185,
				name: "Canary Islands",
				state_code: "CN"
			},
			{
				id: 1170,
				name: "Cantabria",
				state_code: "CB"
			},
			{
				id: 1184,
				name: "Castile and León",
				state_code: "CL"
			},
			{
				id: 1205,
				name: "Castilla La Mancha",
				state_code: "CM"
			},
			{
				id: 1203,
				name: "Catalonia",
				state_code: "CT"
			},
			{
				id: 1206,
				name: "Ceuta",
				state_code: "CE"
			},
			{
				id: 1190,
				name: "Extremadura",
				state_code: "EX"
			},
			{
				id: 1167,
				name: "Galicia",
				state_code: "GA"
			},
			{
				id: 1171,
				name: "La Rioja",
				state_code: "RI"
			},
			{
				id: 1200,
				name: "Léon",
				state_code: "LE"
			},
			{
				id: 1158,
				name: "Madrid",
				state_code: "MD"
			},
			{
				id: 1159,
				name: "Melilla",
				state_code: "ML"
			},
			{
				id: 1176,
				name: "Murcia",
				state_code: "MC"
			},
			{
				id: 1204,
				name: "Navarra",
				state_code: "NC"
			},
			{
				id: 1157,
				name: "Palencia Province",
				state_code: "P"
			},
			{
				id: 1147,
				name: "Salamanca Province",
				state_code: "SA"
			},
			{
				id: 1192,
				name: "Segovia Province",
				state_code: "SG"
			},
			{
				id: 1208,
				name: "Soria Province",
				state_code: "SO"
			},
			{
				id: 1175,
				name: "Valencia",
				state_code: "VC"
			},
			{
				id: 1183,
				name: "Valladolid Province",
				state_code: "VA"
			},
			{
				id: 1161,
				name: "Zamora Province",
				state_code: "ZA"
			}
		]
	},
	{
		name: "Sri Lanka",
		iso3: "LKA",
		iso2: "LK",
		numeric_code: "144",
		phone_code: "94",
		emoji: "🇱🇰",
		emojiU: "U+1F1F1 U+1F1F0",
		states: [
			{
				id: 2799,
				name: "Ampara District",
				state_code: "52"
			},
			{
				id: 2816,
				name: "Anuradhapura District",
				state_code: "71"
			},
			{
				id: 2790,
				name: "Badulla District",
				state_code: "81"
			},
			{
				id: 2818,
				name: "Batticaloa District",
				state_code: "51"
			},
			{
				id: 2798,
				name: "Central Province",
				state_code: "2"
			},
			{
				id: 2815,
				name: "Colombo District",
				state_code: "11"
			},
			{
				id: 2808,
				name: "Eastern Province",
				state_code: "5"
			},
			{
				id: 2792,
				name: "Galle District",
				state_code: "31"
			},
			{
				id: 2804,
				name: "Gampaha District",
				state_code: "12"
			},
			{
				id: 2791,
				name: "Hambantota District",
				state_code: "33"
			},
			{
				id: 2787,
				name: "Jaffna District",
				state_code: "41"
			},
			{
				id: 2789,
				name: "Kalutara District",
				state_code: "13"
			},
			{
				id: 2788,
				name: "Kandy District",
				state_code: "21"
			},
			{
				id: 2797,
				name: "Kegalle District",
				state_code: "92"
			},
			{
				id: 2793,
				name: "Kilinochchi District",
				state_code: "42"
			},
			{
				id: 2805,
				name: "Mannar District",
				state_code: "43"
			},
			{
				id: 2810,
				name: "Matale District",
				state_code: "22"
			},
			{
				id: 2806,
				name: "Matara District",
				state_code: "32"
			},
			{
				id: 2819,
				name: "Monaragala District",
				state_code: "82"
			},
			{
				id: 2814,
				name: "Mullaitivu District",
				state_code: "45"
			},
			{
				id: 2800,
				name: "North Central Province",
				state_code: "7"
			},
			{
				id: 2817,
				name: "North Western Province",
				state_code: "6"
			},
			{
				id: 2813,
				name: "Northern Province",
				state_code: "4"
			},
			{
				id: 2794,
				name: "Nuwara Eliya District",
				state_code: "23"
			},
			{
				id: 2812,
				name: "Polonnaruwa District",
				state_code: "72"
			},
			{
				id: 2796,
				name: "Puttalam District",
				state_code: "62"
			},
			{
				id: 2807,
				name: "Ratnapura district",
				state_code: "91"
			},
			{
				id: 2803,
				name: "Sabaragamuwa Province",
				state_code: "9"
			},
			{
				id: 2801,
				name: "Southern Province",
				state_code: "3"
			},
			{
				id: 2795,
				name: "Trincomalee District",
				state_code: "53"
			},
			{
				id: 2811,
				name: "Uva Province",
				state_code: "8"
			},
			{
				id: 2809,
				name: "Vavuniya District",
				state_code: "44"
			},
			{
				id: 2802,
				name: "Western Province",
				state_code: "1"
			}
		]
	},
	{
		name: "Sudan",
		iso3: "SDN",
		iso2: "SD",
		numeric_code: "729",
		phone_code: "249",
		emoji: "🇸🇩",
		emojiU: "U+1F1F8 U+1F1E9",
		states: [
			{
				id: 885,
				name: "Al Jazirah",
				state_code: "GZ"
			},
			{
				id: 886,
				name: "Al Qadarif",
				state_code: "GD"
			},
			{
				id: 887,
				name: "Blue Nile",
				state_code: "NB"
			},
			{
				id: 896,
				name: "Central Darfur",
				state_code: "DC"
			},
			{
				id: 892,
				name: "East Darfur",
				state_code: "DE"
			},
			{
				id: 884,
				name: "Kassala",
				state_code: "KA"
			},
			{
				id: 881,
				name: "Khartoum",
				state_code: "KH"
			},
			{
				id: 890,
				name: "North Darfur",
				state_code: "DN"
			},
			{
				id: 893,
				name: "North Kordofan",
				state_code: "KN"
			},
			{
				id: 895,
				name: "Northern",
				state_code: "NO"
			},
			{
				id: 880,
				name: "Red Sea",
				state_code: "RS"
			},
			{
				id: 891,
				name: "River Nile",
				state_code: "NR"
			},
			{
				id: 882,
				name: "Sennar",
				state_code: "SI"
			},
			{
				id: 894,
				name: "South Darfur",
				state_code: "DS"
			},
			{
				id: 883,
				name: "South Kordofan",
				state_code: "KS"
			},
			{
				id: 888,
				name: "West Darfur",
				state_code: "DW"
			},
			{
				id: 889,
				name: "West Kordofan",
				state_code: "GK"
			},
			{
				id: 879,
				name: "White Nile",
				state_code: "NW"
			}
		]
	},
	{
		name: "Suriname",
		iso3: "SUR",
		iso2: "SR",
		numeric_code: "740",
		phone_code: "597",
		emoji: "🇸🇷",
		emojiU: "U+1F1F8 U+1F1F7",
		states: [
			{
				id: 2846,
				name: "Brokopondo District",
				state_code: "BR"
			},
			{
				id: 2839,
				name: "Commewijne District",
				state_code: "CM"
			},
			{
				id: 2842,
				name: "Coronie District",
				state_code: "CR"
			},
			{
				id: 2845,
				name: "Marowijne District",
				state_code: "MA"
			},
			{
				id: 2840,
				name: "Nickerie District",
				state_code: "NI"
			},
			{
				id: 2841,
				name: "Para District",
				state_code: "PR"
			},
			{
				id: 2843,
				name: "Paramaribo District",
				state_code: "PM"
			},
			{
				id: 2848,
				name: "Saramacca District",
				state_code: "SA"
			},
			{
				id: 2847,
				name: "Sipaliwini District",
				state_code: "SI"
			},
			{
				id: 2844,
				name: "Wanica District",
				state_code: "WA"
			}
		]
	},
	{
		name: "Svalbard And Jan Mayen Islands",
		iso3: "SJM",
		iso2: "SJ",
		numeric_code: "744",
		phone_code: "47",
		emoji: "🇸🇯",
		emojiU: "U+1F1F8 U+1F1EF",
		states: [
		]
	},
	{
		name: "Swaziland",
		iso3: "SWZ",
		iso2: "SZ",
		numeric_code: "748",
		phone_code: "268",
		emoji: "🇸🇿",
		emojiU: "U+1F1F8 U+1F1FF",
		states: [
			{
				id: 969,
				name: "Hhohho District",
				state_code: "HH"
			},
			{
				id: 970,
				name: "Lubombo District",
				state_code: "LU"
			},
			{
				id: 968,
				name: "Manzini District",
				state_code: "MA"
			},
			{
				id: 971,
				name: "Shiselweni District",
				state_code: "SH"
			}
		]
	},
	{
		name: "Sweden",
		iso3: "SWE",
		iso2: "SE",
		numeric_code: "752",
		phone_code: "46",
		emoji: "🇸🇪",
		emojiU: "U+1F1F8 U+1F1EA",
		states: [
			{
				id: 1537,
				name: "Blekinge",
				state_code: "K"
			},
			{
				id: 1534,
				name: "Dalarna County",
				state_code: "W"
			},
			{
				id: 1533,
				name: "Gävleborg County",
				state_code: "X"
			},
			{
				id: 1546,
				name: "Gotland County",
				state_code: "I"
			},
			{
				id: 1548,
				name: "Halland County",
				state_code: "N"
			},
			{
				id: 1550,
				name: "Jönköping County",
				state_code: "F"
			},
			{
				id: 1544,
				name: "Kalmar County",
				state_code: "H"
			},
			{
				id: 1542,
				name: "Kronoberg County",
				state_code: "G"
			},
			{
				id: 1538,
				name: "Norrbotten County",
				state_code: "BD"
			},
			{
				id: 1539,
				name: "Örebro County",
				state_code: "T"
			},
			{
				id: 1536,
				name: "Östergötland County",
				state_code: "E"
			},
			{
				id: 1541,
				name: "Skåne County",
				state_code: "M"
			},
			{
				id: 1540,
				name: "Södermanland County",
				state_code: "D"
			},
			{
				id: 1551,
				name: "Stockholm County",
				state_code: "AB"
			},
			{
				id: 1545,
				name: "Uppsala County",
				state_code: "C"
			},
			{
				id: 1535,
				name: "Värmland County",
				state_code: "S"
			},
			{
				id: 1543,
				name: "Västerbotten County",
				state_code: "AC"
			},
			{
				id: 1552,
				name: "Västernorrland County",
				state_code: "Y"
			},
			{
				id: 1549,
				name: "Västmanland County",
				state_code: "U"
			},
			{
				id: 1547,
				name: "Västra Götaland County",
				state_code: "O"
			}
		]
	},
	{
		name: "Switzerland",
		iso3: "CHE",
		iso2: "CH",
		numeric_code: "756",
		phone_code: "41",
		emoji: "🇨🇭",
		emojiU: "U+1F1E8 U+1F1ED",
		states: [
			{
				id: 1639,
				name: "Aargau",
				state_code: "AG"
			},
			{
				id: 1655,
				name: "Appenzell Ausserrhoden",
				state_code: "AR"
			},
			{
				id: 1649,
				name: "Appenzell Innerrhoden",
				state_code: "AI"
			},
			{
				id: 1641,
				name: "Basel-Land",
				state_code: "BL"
			},
			{
				id: 4957,
				name: "Basel-Stadt",
				state_code: "BS"
			},
			{
				id: 1645,
				name: "Bern",
				state_code: "BE"
			},
			{
				id: 1640,
				name: "Fribourg",
				state_code: "FR"
			},
			{
				id: 1647,
				name: "Geneva",
				state_code: "GE"
			},
			{
				id: 1661,
				name: "Glarus",
				state_code: "GL"
			},
			{
				id: 1660,
				name: "Graubünden",
				state_code: "GR"
			},
			{
				id: 1658,
				name: "Jura",
				state_code: "JU"
			},
			{
				id: 1663,
				name: "Lucerne",
				state_code: "LU"
			},
			{
				id: 1659,
				name: "Neuchâtel",
				state_code: "NE"
			},
			{
				id: 1652,
				name: "Nidwalden",
				state_code: "NW"
			},
			{
				id: 1650,
				name: "Obwalden",
				state_code: "OW"
			},
			{
				id: 1654,
				name: "Schaffhausen",
				state_code: "SH"
			},
			{
				id: 1653,
				name: "Schwyz",
				state_code: "SZ"
			},
			{
				id: 1662,
				name: "Solothurn",
				state_code: "SO"
			},
			{
				id: 1644,
				name: "St. Gallen",
				state_code: "SG"
			},
			{
				id: 1657,
				name: "Thurgau",
				state_code: "TG"
			},
			{
				id: 1643,
				name: "Ticino",
				state_code: "TI"
			},
			{
				id: 1642,
				name: "Uri",
				state_code: "UR"
			},
			{
				id: 1648,
				name: "Valais",
				state_code: "VS"
			},
			{
				id: 1651,
				name: "Vaud",
				state_code: "VD"
			},
			{
				id: 1646,
				name: "Zug",
				state_code: "ZG"
			},
			{
				id: 1656,
				name: "Zürich",
				state_code: "ZH"
			}
		]
	},
	{
		name: "Syria",
		iso3: "SYR",
		iso2: "SY",
		numeric_code: "760",
		phone_code: "963",
		emoji: "🇸🇾",
		emojiU: "U+1F1F8 U+1F1FE",
		states: [
			{
				id: 2941,
				name: "Al-Hasakah Governorate",
				state_code: "HA"
			},
			{
				id: 2944,
				name: "Al-Raqqah Governorate",
				state_code: "RA"
			},
			{
				id: 2946,
				name: "Aleppo Governorate",
				state_code: "HL"
			},
			{
				id: 2936,
				name: "As-Suwayda Governorate",
				state_code: "SU"
			},
			{
				id: 2939,
				name: "Damascus Governorate",
				state_code: "DI"
			},
			{
				id: 2945,
				name: "Daraa Governorate",
				state_code: "DR"
			},
			{
				id: 2937,
				name: "Deir ez-Zor Governorate",
				state_code: "DY"
			},
			{
				id: 2934,
				name: "Hama Governorate",
				state_code: "HM"
			},
			{
				id: 2942,
				name: "Homs Governorate",
				state_code: "HI"
			},
			{
				id: 2940,
				name: "Idlib Governorate",
				state_code: "ID"
			},
			{
				id: 2938,
				name: "Latakia Governorate",
				state_code: "LA"
			},
			{
				id: 2943,
				name: "Quneitra Governorate",
				state_code: "QU"
			},
			{
				id: 2935,
				name: "Rif Dimashq Governorate",
				state_code: "RD"
			},
			{
				id: 2947,
				name: "Tartus Governorate",
				state_code: "TA"
			}
		]
	},
	{
		name: "Taiwan",
		iso3: "TWN",
		iso2: "TW",
		numeric_code: "158",
		phone_code: "886",
		emoji: "🇹🇼",
		emojiU: "U+1F1F9 U+1F1FC",
		states: [
			{
				id: 3404,
				name: "Changhua",
				state_code: "CHA"
			},
			{
				id: 3408,
				name: "Chiayi",
				state_code: "CYI"
			},
			{
				id: 3418,
				name: "Chiayi",
				state_code: "CYQ"
			},
			{
				id: 3423,
				name: "Hsinchu",
				state_code: "HSQ"
			},
			{
				id: 3417,
				name: "Hsinchu",
				state_code: "HSZ"
			},
			{
				id: 3411,
				name: "Hualien",
				state_code: "HUA"
			},
			{
				id: 3412,
				name: "Kaohsiung",
				state_code: "KHH"
			},
			{
				id: 4965,
				name: "Keelung",
				state_code: "KEE"
			},
			{
				id: 3415,
				name: "Kinmen",
				state_code: "KIN"
			},
			{
				id: 3420,
				name: "Lienchiang",
				state_code: "LIE"
			},
			{
				id: 3413,
				name: "Miaoli",
				state_code: "MIA"
			},
			{
				id: 3407,
				name: "Nantou",
				state_code: "NAN"
			},
			{
				id: 4966,
				name: "New Taipei",
				state_code: "NWT"
			},
			{
				id: 3403,
				name: "Penghu",
				state_code: "PEN"
			},
			{
				id: 3405,
				name: "Pingtung",
				state_code: "PIF"
			},
			{
				id: 3406,
				name: "Taichung",
				state_code: "TXG"
			},
			{
				id: 3421,
				name: "Tainan",
				state_code: "TNN"
			},
			{
				id: 3422,
				name: "Taipei",
				state_code: "TPE"
			},
			{
				id: 3410,
				name: "Taitung",
				state_code: "TTT"
			},
			{
				id: 3419,
				name: "Taoyuan",
				state_code: "TAO"
			},
			{
				id: 3402,
				name: "Yilan",
				state_code: "ILA"
			},
			{
				id: 3416,
				name: "Yunlin",
				state_code: "YUN"
			}
		]
	},
	{
		name: "Tajikistan",
		iso3: "TJK",
		iso2: "TJ",
		numeric_code: "762",
		phone_code: "992",
		emoji: "🇹🇯",
		emojiU: "U+1F1F9 U+1F1EF",
		states: [
			{
				id: 3397,
				name: "districts of Republican Subordination",
				state_code: "RA"
			},
			{
				id: 3399,
				name: "Gorno-Badakhshan Autonomous Province",
				state_code: "GB"
			},
			{
				id: 3398,
				name: "Khatlon Province",
				state_code: "KT"
			},
			{
				id: 3400,
				name: "Sughd Province",
				state_code: "SU"
			}
		]
	},
	{
		name: "Tanzania",
		iso3: "TZA",
		iso2: "TZ",
		numeric_code: "834",
		phone_code: "255",
		emoji: "🇹🇿",
		emojiU: "U+1F1F9 U+1F1FF",
		states: [
			{
				id: 1491,
				name: "Arusha",
				state_code: "01"
			},
			{
				id: 1490,
				name: "Dar es Salaam",
				state_code: "02"
			},
			{
				id: 1466,
				name: "Dodoma",
				state_code: "03"
			},
			{
				id: 1481,
				name: "Geita",
				state_code: "27"
			},
			{
				id: 1489,
				name: "Iringa",
				state_code: "04"
			},
			{
				id: 1465,
				name: "Kagera",
				state_code: "05"
			},
			{
				id: 1482,
				name: "Katavi",
				state_code: "28"
			},
			{
				id: 1478,
				name: "Kigoma",
				state_code: "08"
			},
			{
				id: 1467,
				name: "Kilimanjaro",
				state_code: "09"
			},
			{
				id: 1483,
				name: "Lindi",
				state_code: "12"
			},
			{
				id: 1484,
				name: "Manyara",
				state_code: "26"
			},
			{
				id: 1468,
				name: "Mara",
				state_code: "13"
			},
			{
				id: 4955,
				name: "Mbeya",
				state_code: "14"
			},
			{
				id: 1470,
				name: "Morogoro",
				state_code: "16"
			},
			{
				id: 1476,
				name: "Mtwara",
				state_code: "17"
			},
			{
				id: 1479,
				name: "Mwanza",
				state_code: "18"
			},
			{
				id: 1480,
				name: "Njombe",
				state_code: "29"
			},
			{
				id: 1488,
				name: "Pemba North",
				state_code: "06"
			},
			{
				id: 1472,
				name: "Pemba South",
				state_code: "10"
			},
			{
				id: 1485,
				name: "Pwani",
				state_code: "19"
			},
			{
				id: 1477,
				name: "Rukwa",
				state_code: "20"
			},
			{
				id: 1486,
				name: "Ruvuma",
				state_code: "21"
			},
			{
				id: 1463,
				name: "Shinyanga",
				state_code: "22"
			},
			{
				id: 1464,
				name: "Simiyu",
				state_code: "30"
			},
			{
				id: 1474,
				name: "Singida",
				state_code: "23"
			},
			{
				id: 4956,
				name: "Songwe",
				state_code: "31"
			},
			{
				id: 1469,
				name: "Tabora",
				state_code: "24"
			},
			{
				id: 1487,
				name: "Tanga",
				state_code: "25"
			},
			{
				id: 1473,
				name: "Zanzibar North",
				state_code: "07"
			},
			{
				id: 1471,
				name: "Zanzibar South",
				state_code: "11"
			},
			{
				id: 1475,
				name: "Zanzibar West",
				state_code: "15"
			}
		]
	},
	{
		name: "Thailand",
		iso3: "THA",
		iso2: "TH",
		numeric_code: "764",
		phone_code: "66",
		emoji: "🇹🇭",
		emojiU: "U+1F1F9 U+1F1ED",
		states: [
			{
				id: 3523,
				name: "Amnat Charoen",
				state_code: "37"
			},
			{
				id: 3519,
				name: "Ang Thong",
				state_code: "15"
			},
			{
				id: 3554,
				name: "Bangkok",
				state_code: "10"
			},
			{
				id: 3533,
				name: "Bueng Kan",
				state_code: "38"
			},
			{
				id: 3534,
				name: "Buri Ram",
				state_code: "31"
			},
			{
				id: 3552,
				name: "Chachoengsao",
				state_code: "24"
			},
			{
				id: 3522,
				name: "Chai Nat",
				state_code: "18"
			},
			{
				id: 4954,
				name: "Chaiyaphum",
				state_code: "36"
			},
			{
				id: 3486,
				name: "Chanthaburi",
				state_code: "22"
			},
			{
				id: 3491,
				name: "Chiang Mai",
				state_code: "50"
			},
			{
				id: 3498,
				name: "Chiang Rai",
				state_code: "57"
			},
			{
				id: 3513,
				name: "Chon Buri",
				state_code: "20"
			},
			{
				id: 3526,
				name: "Chumphon",
				state_code: "86"
			},
			{
				id: 3550,
				name: "Kalasin",
				state_code: "46"
			},
			{
				id: 3516,
				name: "Kamphaeng Phet",
				state_code: "62"
			},
			{
				id: 3511,
				name: "Kanchanaburi",
				state_code: "71"
			},
			{
				id: 3485,
				name: "Khon Kaen",
				state_code: "40"
			},
			{
				id: 3478,
				name: "Krabi",
				state_code: "81"
			},
			{
				id: 3544,
				name: "Lampang",
				state_code: "52"
			},
			{
				id: 3483,
				name: "Lamphun",
				state_code: "51"
			},
			{
				id: 3509,
				name: "Loei",
				state_code: "42"
			},
			{
				id: 3543,
				name: "Lop Buri",
				state_code: "16"
			},
			{
				id: 3505,
				name: "Mae Hong Son",
				state_code: "58"
			},
			{
				id: 3517,
				name: "Maha Sarakham",
				state_code: "44"
			},
			{
				id: 3546,
				name: "Mukdahan",
				state_code: "49"
			},
			{
				id: 3535,
				name: "Nakhon Nayok",
				state_code: "26"
			},
			{
				id: 3503,
				name: "Nakhon Pathom",
				state_code: "73"
			},
			{
				id: 3548,
				name: "Nakhon Phanom",
				state_code: "48"
			},
			{
				id: 3497,
				name: "Nakhon Ratchasima",
				state_code: "30"
			},
			{
				id: 3492,
				name: "Nakhon Sawan",
				state_code: "60"
			},
			{
				id: 3520,
				name: "Nakhon Si Thammarat",
				state_code: "80"
			},
			{
				id: 3530,
				name: "Nan",
				state_code: "55"
			},
			{
				id: 3553,
				name: "Narathiwat",
				state_code: "96"
			},
			{
				id: 3480,
				name: "Nong Bua Lam Phu",
				state_code: "39"
			},
			{
				id: 3484,
				name: "Nong Khai",
				state_code: "43"
			},
			{
				id: 3495,
				name: "Nonthaburi",
				state_code: "12"
			},
			{
				id: 3500,
				name: "Pathum Thani",
				state_code: "13"
			},
			{
				id: 3540,
				name: "Pattani",
				state_code: "94"
			},
			{
				id: 3507,
				name: "Pattaya",
				state_code: "S"
			},
			{
				id: 3549,
				name: "Phangnga",
				state_code: "82"
			},
			{
				id: 3488,
				name: "Phatthalung",
				state_code: "93"
			},
			{
				id: 3538,
				name: "Phayao",
				state_code: "56"
			},
			{
				id: 3515,
				name: "Phetchabun",
				state_code: "67"
			},
			{
				id: 3532,
				name: "Phetchaburi",
				state_code: "76"
			},
			{
				id: 3514,
				name: "Phichit",
				state_code: "66"
			},
			{
				id: 3506,
				name: "Phitsanulok",
				state_code: "65"
			},
			{
				id: 3494,
				name: "Phra Nakhon Si Ayutthaya",
				state_code: "14"
			},
			{
				id: 3528,
				name: "Phrae",
				state_code: "54"
			},
			{
				id: 3536,
				name: "Phuket",
				state_code: "83"
			},
			{
				id: 3542,
				name: "Prachin Buri",
				state_code: "25"
			},
			{
				id: 3508,
				name: "Prachuap Khiri Khan",
				state_code: "77"
			},
			{
				id: 3479,
				name: "Ranong",
				state_code: "85"
			},
			{
				id: 3499,
				name: "Ratchaburi",
				state_code: "70"
			},
			{
				id: 3518,
				name: "Rayong",
				state_code: "21"
			},
			{
				id: 3510,
				name: "Roi Et",
				state_code: "45"
			},
			{
				id: 3529,
				name: "Sa Kaeo",
				state_code: "27"
			},
			{
				id: 3501,
				name: "Sakon Nakhon",
				state_code: "47"
			},
			{
				id: 3481,
				name: "Samut Prakan",
				state_code: "11"
			},
			{
				id: 3504,
				name: "Samut Sakhon",
				state_code: "74"
			},
			{
				id: 3502,
				name: "Samut Songkhram",
				state_code: "75"
			},
			{
				id: 3487,
				name: "Saraburi",
				state_code: "19"
			},
			{
				id: 3537,
				name: "Satun",
				state_code: "91"
			},
			{
				id: 3547,
				name: "Si Sa Ket",
				state_code: "33"
			},
			{
				id: 3490,
				name: "Sing Buri",
				state_code: "17"
			},
			{
				id: 3539,
				name: "Songkhla",
				state_code: "90"
			},
			{
				id: 3545,
				name: "Sukhothai",
				state_code: "64"
			},
			{
				id: 3524,
				name: "Suphan Buri",
				state_code: "72"
			},
			{
				id: 3482,
				name: "Surat Thani",
				state_code: "84"
			},
			{
				id: 3531,
				name: "Surin",
				state_code: "32"
			},
			{
				id: 3525,
				name: "Tak",
				state_code: "63"
			},
			{
				id: 3541,
				name: "Trang",
				state_code: "92"
			},
			{
				id: 3496,
				name: "Trat",
				state_code: "23"
			},
			{
				id: 3512,
				name: "Ubon Ratchathani",
				state_code: "34"
			},
			{
				id: 3527,
				name: "Udon Thani",
				state_code: "41"
			},
			{
				id: 3551,
				name: "Uthai Thani",
				state_code: "61"
			},
			{
				id: 3489,
				name: "Uttaradit",
				state_code: "53"
			},
			{
				id: 3493,
				name: "Yala",
				state_code: "95"
			},
			{
				id: 3521,
				name: "Yasothon",
				state_code: "35"
			}
		]
	},
	{
		name: "Togo",
		iso3: "TGO",
		iso2: "TG",
		numeric_code: "768",
		phone_code: "228",
		emoji: "🇹🇬",
		emojiU: "U+1F1F9 U+1F1EC",
		states: [
			{
				id: 2575,
				name: "Centrale Region",
				state_code: "C"
			},
			{
				id: 2579,
				name: "Kara Region",
				state_code: "K"
			},
			{
				id: 2576,
				name: "Maritime",
				state_code: "M"
			},
			{
				id: 2577,
				name: "Plateaux Region",
				state_code: "P"
			},
			{
				id: 2578,
				name: "Savanes Region",
				state_code: "S"
			}
		]
	},
	{
		name: "Tokelau",
		iso3: "TKL",
		iso2: "TK",
		numeric_code: "772",
		phone_code: "690",
		emoji: "🇹🇰",
		emojiU: "U+1F1F9 U+1F1F0",
		states: [
		]
	},
	{
		name: "Tonga",
		iso3: "TON",
		iso2: "TO",
		numeric_code: "776",
		phone_code: "676",
		emoji: "🇹🇴",
		emojiU: "U+1F1F9 U+1F1F4",
		states: [
			{
				id: 3913,
				name: "Haʻapai",
				state_code: "02"
			},
			{
				id: 3915,
				name: "ʻEua",
				state_code: "01"
			},
			{
				id: 3914,
				name: "Niuas",
				state_code: "03"
			},
			{
				id: 3912,
				name: "Tongatapu",
				state_code: "04"
			},
			{
				id: 3911,
				name: "Vavaʻu",
				state_code: "05"
			}
		]
	},
	{
		name: "Trinidad And Tobago",
		iso3: "TTO",
		iso2: "TT",
		numeric_code: "780",
		phone_code: "+1-868",
		emoji: "🇹🇹",
		emojiU: "U+1F1F9 U+1F1F9",
		states: [
			{
				id: 3362,
				name: "Arima",
				state_code: "ARI"
			},
			{
				id: 3366,
				name: "Chaguanas",
				state_code: "CHA"
			},
			{
				id: 3354,
				name: "Couva-Tabaquite-Talparo Regional Corporation",
				state_code: "CTT"
			},
			{
				id: 3367,
				name: "Diego Martin Regional Corporation",
				state_code: "DMN"
			},
			{
				id: 3355,
				name: "Eastern Tobago",
				state_code: "ETO"
			},
			{
				id: 3365,
				name: "Penal-Debe Regional Corporation",
				state_code: "PED"
			},
			{
				id: 3360,
				name: "Point Fortin",
				state_code: "PTF"
			},
			{
				id: 3363,
				name: "Port of Spain",
				state_code: "POS"
			},
			{
				id: 3368,
				name: "Princes Town Regional Corporation",
				state_code: "PRT"
			},
			{
				id: 3356,
				name: "Rio Claro-Mayaro Regional Corporation",
				state_code: "MRC"
			},
			{
				id: 3359,
				name: "San Fernando",
				state_code: "SFO"
			},
			{
				id: 3357,
				name: "San Juan-Laventille Regional Corporation",
				state_code: "SJL"
			},
			{
				id: 3361,
				name: "Sangre Grande Regional Corporation",
				state_code: "SGE"
			},
			{
				id: 3364,
				name: "Siparia Regional Corporation",
				state_code: "SIP"
			},
			{
				id: 3358,
				name: "Tunapuna-Piarco Regional Corporation",
				state_code: "TUP"
			},
			{
				id: 3353,
				name: "Western Tobago",
				state_code: "WTO"
			}
		]
	},
	{
		name: "Tunisia",
		iso3: "TUN",
		iso2: "TN",
		numeric_code: "788",
		phone_code: "216",
		emoji: "🇹🇳",
		emojiU: "U+1F1F9 U+1F1F3",
		states: [
			{
				id: 2550,
				name: "Ariana Governorate",
				state_code: "12"
			},
			{
				id: 2566,
				name: "Ben Arous Governorate",
				state_code: "13"
			},
			{
				id: 2551,
				name: "Bizerte Governorate",
				state_code: "23"
			},
			{
				id: 2558,
				name: "Gabès Governorate",
				state_code: "81"
			},
			{
				id: 2556,
				name: "Gafsa Governorate",
				state_code: "71"
			},
			{
				id: 2552,
				name: "Jendouba Governorate",
				state_code: "32"
			},
			{
				id: 2564,
				name: "Kairouan Governorate",
				state_code: "41"
			},
			{
				id: 2570,
				name: "Kasserine Governorate",
				state_code: "42"
			},
			{
				id: 2572,
				name: "Kassrine",
				state_code: "31"
			},
			{
				id: 2562,
				name: "Kebili Governorate",
				state_code: "73"
			},
			{
				id: 2561,
				name: "Kef Governorate",
				state_code: "33"
			},
			{
				id: 2568,
				name: "Mahdia Governorate",
				state_code: "53"
			},
			{
				id: 2555,
				name: "Manouba Governorate",
				state_code: "14"
			},
			{
				id: 2560,
				name: "Medenine Governorate",
				state_code: "82"
			},
			{
				id: 2553,
				name: "Monastir Governorate",
				state_code: "52"
			},
			{
				id: 2557,
				name: "Sfax Governorate",
				state_code: "61"
			},
			{
				id: 2567,
				name: "Sidi Bouzid Governorate",
				state_code: "43"
			},
			{
				id: 2563,
				name: "Siliana Governorate",
				state_code: "34"
			},
			{
				id: 2571,
				name: "Sousse Governorate",
				state_code: "51"
			},
			{
				id: 2559,
				name: "Tataouine Governorate",
				state_code: "83"
			},
			{
				id: 2569,
				name: "Tozeur Governorate",
				state_code: "72"
			},
			{
				id: 2554,
				name: "Tunis Governorate",
				state_code: "11"
			},
			{
				id: 2565,
				name: "Zaghouan Governorate",
				state_code: "22"
			}
		]
	},
	{
		name: "Turkey",
		iso3: "TUR",
		iso2: "TR",
		numeric_code: "792",
		phone_code: "90",
		emoji: "🇹🇷",
		emojiU: "U+1F1F9 U+1F1F7",
		states: [
			{
				id: 2212,
				name: "Adana",
				state_code: "01"
			},
			{
				id: 2155,
				name: "Adıyaman",
				state_code: "02"
			},
			{
				id: 2179,
				name: "Afyonkarahisar",
				state_code: "03"
			},
			{
				id: 2193,
				name: "Ağrı",
				state_code: "04"
			},
			{
				id: 2210,
				name: "Aksaray",
				state_code: "68"
			},
			{
				id: 2161,
				name: "Amasya",
				state_code: "05"
			},
			{
				id: 2217,
				name: "Ankara",
				state_code: "06"
			},
			{
				id: 2169,
				name: "Antalya",
				state_code: "07"
			},
			{
				id: 2185,
				name: "Ardahan",
				state_code: "75"
			},
			{
				id: 2191,
				name: "Artvin",
				state_code: "08"
			},
			{
				id: 2187,
				name: "Aydın",
				state_code: "09"
			},
			{
				id: 2175,
				name: "Balıkesir",
				state_code: "10"
			},
			{
				id: 2148,
				name: "Bartın",
				state_code: "74"
			},
			{
				id: 2194,
				name: "Batman",
				state_code: "72"
			},
			{
				id: 2177,
				name: "Bayburt",
				state_code: "69"
			},
			{
				id: 2221,
				name: "Bilecik",
				state_code: "11"
			},
			{
				id: 2153,
				name: "Bingöl",
				state_code: "12"
			},
			{
				id: 2215,
				name: "Bitlis",
				state_code: "13"
			},
			{
				id: 2172,
				name: "Bolu",
				state_code: "14"
			},
			{
				id: 2209,
				name: "Burdur",
				state_code: "15"
			},
			{
				id: 2163,
				name: "Bursa",
				state_code: "16"
			},
			{
				id: 2216,
				name: "Çanakkale",
				state_code: "17"
			},
			{
				id: 2168,
				name: "Çankırı",
				state_code: "18"
			},
			{
				id: 2173,
				name: "Çorum",
				state_code: "19"
			},
			{
				id: 2157,
				name: "Denizli",
				state_code: "20"
			},
			{
				id: 2226,
				name: "Diyarbakır",
				state_code: "21"
			},
			{
				id: 2202,
				name: "Düzce",
				state_code: "81"
			},
			{
				id: 2151,
				name: "Edirne",
				state_code: "22"
			},
			{
				id: 2159,
				name: "Elazığ",
				state_code: "23"
			},
			{
				id: 2160,
				name: "Erzincan",
				state_code: "24"
			},
			{
				id: 2165,
				name: "Erzurum",
				state_code: "25"
			},
			{
				id: 2164,
				name: "Eskişehir",
				state_code: "26"
			},
			{
				id: 2203,
				name: "Gaziantep",
				state_code: "27"
			},
			{
				id: 2186,
				name: "Giresun",
				state_code: "28"
			},
			{
				id: 2204,
				name: "Gümüşhane",
				state_code: "29"
			},
			{
				id: 2190,
				name: "Hakkâri",
				state_code: "30"
			},
			{
				id: 2211,
				name: "Hatay",
				state_code: "31"
			},
			{
				id: 2166,
				name: "Iğdır",
				state_code: "76"
			},
			{
				id: 2222,
				name: "Isparta",
				state_code: "32"
			},
			{
				id: 2170,
				name: "Istanbul",
				state_code: "34"
			},
			{
				id: 2205,
				name: "İzmir",
				state_code: "35"
			},
			{
				id: 2227,
				name: "Kahramanmaraş",
				state_code: "46"
			},
			{
				id: 2223,
				name: "Karabük",
				state_code: "78"
			},
			{
				id: 2184,
				name: "Karaman",
				state_code: "70"
			},
			{
				id: 2208,
				name: "Kars",
				state_code: "36"
			},
			{
				id: 2197,
				name: "Kastamonu",
				state_code: "37"
			},
			{
				id: 2200,
				name: "Kayseri",
				state_code: "38"
			},
			{
				id: 2154,
				name: "Kilis",
				state_code: "79"
			},
			{
				id: 2178,
				name: "Kırıkkale",
				state_code: "71"
			},
			{
				id: 2176,
				name: "Kırklareli",
				state_code: "39"
			},
			{
				id: 2180,
				name: "Kırşehir",
				state_code: "40"
			},
			{
				id: 2195,
				name: "Kocaeli",
				state_code: "41"
			},
			{
				id: 2171,
				name: "Konya",
				state_code: "42"
			},
			{
				id: 2149,
				name: "Kütahya",
				state_code: "43"
			},
			{
				id: 2158,
				name: "Malatya",
				state_code: "44"
			},
			{
				id: 2198,
				name: "Manisa",
				state_code: "45"
			},
			{
				id: 2224,
				name: "Mardin",
				state_code: "47"
			},
			{
				id: 2156,
				name: "Mersin",
				state_code: "33"
			},
			{
				id: 2182,
				name: "Muğla",
				state_code: "48"
			},
			{
				id: 2162,
				name: "Muş",
				state_code: "49"
			},
			{
				id: 2196,
				name: "Nevşehir",
				state_code: "50"
			},
			{
				id: 2189,
				name: "Niğde",
				state_code: "51"
			},
			{
				id: 2174,
				name: "Ordu",
				state_code: "52"
			},
			{
				id: 2214,
				name: "Osmaniye",
				state_code: "80"
			},
			{
				id: 2219,
				name: "Rize",
				state_code: "53"
			},
			{
				id: 2150,
				name: "Sakarya",
				state_code: "54"
			},
			{
				id: 2220,
				name: "Samsun",
				state_code: "55"
			},
			{
				id: 2183,
				name: "Şanlıurfa",
				state_code: "63"
			},
			{
				id: 2207,
				name: "Siirt",
				state_code: "56"
			},
			{
				id: 4854,
				name: "Sinop",
				state_code: "57"
			},
			{
				id: 2181,
				name: "Sivas",
				state_code: "58"
			},
			{
				id: 2225,
				name: "Şırnak",
				state_code: "73"
			},
			{
				id: 2167,
				name: "Tekirdağ",
				state_code: "59"
			},
			{
				id: 2199,
				name: "Tokat",
				state_code: "60"
			},
			{
				id: 2206,
				name: "Trabzon",
				state_code: "61"
			},
			{
				id: 2192,
				name: "Tunceli",
				state_code: "62"
			},
			{
				id: 2201,
				name: "Uşak",
				state_code: "64"
			},
			{
				id: 2152,
				name: "Van",
				state_code: "65"
			},
			{
				id: 2218,
				name: "Yalova",
				state_code: "77"
			},
			{
				id: 2188,
				name: "Yozgat",
				state_code: "66"
			},
			{
				id: 2213,
				name: "Zonguldak",
				state_code: "67"
			}
		]
	},
	{
		name: "Turkmenistan",
		iso3: "TKM",
		iso2: "TM",
		numeric_code: "795",
		phone_code: "993",
		emoji: "🇹🇲",
		emojiU: "U+1F1F9 U+1F1F2",
		states: [
			{
				id: 3374,
				name: "Ahal Region",
				state_code: "A"
			},
			{
				id: 3371,
				name: "Ashgabat",
				state_code: "S"
			},
			{
				id: 3372,
				name: "Balkan Region",
				state_code: "B"
			},
			{
				id: 3373,
				name: "Daşoguz Region",
				state_code: "D"
			},
			{
				id: 3370,
				name: "Lebap Region",
				state_code: "L"
			},
			{
				id: 3369,
				name: "Mary Region",
				state_code: "M"
			}
		]
	},
	{
		name: "Turks And Caicos Islands",
		iso3: "TCA",
		iso2: "TC",
		numeric_code: "796",
		phone_code: "+1-649",
		emoji: "🇹🇨",
		emojiU: "U+1F1F9 U+1F1E8",
		states: [
		]
	},
	{
		name: "Tuvalu",
		iso3: "TUV",
		iso2: "TV",
		numeric_code: "798",
		phone_code: "688",
		emoji: "🇹🇻",
		emojiU: "U+1F1F9 U+1F1FB",
		states: [
			{
				id: 3951,
				name: "Funafuti",
				state_code: "FUN"
			},
			{
				id: 3947,
				name: "Nanumanga",
				state_code: "NMG"
			},
			{
				id: 3949,
				name: "Nanumea",
				state_code: "NMA"
			},
			{
				id: 3946,
				name: "Niutao Island Council",
				state_code: "NIT"
			},
			{
				id: 3948,
				name: "Nui",
				state_code: "NUI"
			},
			{
				id: 3952,
				name: "Nukufetau",
				state_code: "NKF"
			},
			{
				id: 3953,
				name: "Nukulaelae",
				state_code: "NKL"
			},
			{
				id: 3950,
				name: "Vaitupu",
				state_code: "VAI"
			}
		]
	},
	{
		name: "Uganda",
		iso3: "UGA",
		iso2: "UG",
		numeric_code: "800",
		phone_code: "256",
		emoji: "🇺🇬",
		emojiU: "U+1F1FA U+1F1EC",
		states: [
			{
				id: 329,
				name: "Abim District",
				state_code: "314"
			},
			{
				id: 361,
				name: "Adjumani District",
				state_code: "301"
			},
			{
				id: 392,
				name: "Agago District",
				state_code: "322"
			},
			{
				id: 344,
				name: "Alebtong District",
				state_code: "323"
			},
			{
				id: 416,
				name: "Amolatar District",
				state_code: "315"
			},
			{
				id: 353,
				name: "Amudat District",
				state_code: "324"
			},
			{
				id: 352,
				name: "Amuria District",
				state_code: "216"
			},
			{
				id: 335,
				name: "Amuru District",
				state_code: "316"
			},
			{
				id: 328,
				name: "Apac District",
				state_code: "302"
			},
			{
				id: 447,
				name: "Arua District",
				state_code: "303"
			},
			{
				id: 441,
				name: "Budaka District",
				state_code: "217"
			},
			{
				id: 349,
				name: "Bududa District",
				state_code: "218"
			},
			{
				id: 387,
				name: "Bugiri District",
				state_code: "201"
			},
			{
				id: 391,
				name: "Buhweju District",
				state_code: "420"
			},
			{
				id: 377,
				name: "Buikwe District",
				state_code: "117"
			},
			{
				id: 343,
				name: "Bukedea District",
				state_code: "219"
			},
			{
				id: 375,
				name: "Bukomansimbi District",
				state_code: "118"
			},
			{
				id: 385,
				name: "Bukwo District",
				state_code: "220"
			},
			{
				id: 428,
				name: "Bulambuli District",
				state_code: "225"
			},
			{
				id: 389,
				name: "Buliisa District",
				state_code: "416"
			},
			{
				id: 419,
				name: "Bundibugyo District",
				state_code: "401"
			},
			{
				id: 381,
				name: "Bunyangabu District",
				state_code: "430"
			},
			{
				id: 386,
				name: "Bushenyi District",
				state_code: "402"
			},
			{
				id: 431,
				name: "Busia District",
				state_code: "202"
			},
			{
				id: 365,
				name: "Butaleja District",
				state_code: "221"
			},
			{
				id: 384,
				name: "Butambala District",
				state_code: "119"
			},
			{
				id: 388,
				name: "Butebo District",
				state_code: "233"
			},
			{
				id: 414,
				name: "Buvuma District",
				state_code: "120"
			},
			{
				id: 380,
				name: "Buyende District",
				state_code: "226"
			},
			{
				id: 396,
				name: "Central Region",
				state_code: "C"
			},
			{
				id: 341,
				name: "Dokolo District",
				state_code: "317"
			},
			{
				id: 372,
				name: "Eastern Region",
				state_code: "E"
			},
			{
				id: 366,
				name: "Gomba District",
				state_code: "121"
			},
			{
				id: 413,
				name: "Gulu District",
				state_code: "304"
			},
			{
				id: 339,
				name: "Ibanda District",
				state_code: "417"
			},
			{
				id: 340,
				name: "Iganga District",
				state_code: "203"
			},
			{
				id: 383,
				name: "Isingiro District",
				state_code: "418"
			},
			{
				id: 367,
				name: "Jinja District",
				state_code: "204"
			},
			{
				id: 434,
				name: "Kaabong District",
				state_code: "318"
			},
			{
				id: 426,
				name: "Kabale District",
				state_code: "404"
			},
			{
				id: 326,
				name: "Kabarole District",
				state_code: "405"
			},
			{
				id: 336,
				name: "Kaberamaido District",
				state_code: "213"
			},
			{
				id: 403,
				name: "Kagadi District",
				state_code: "427"
			},
			{
				id: 399,
				name: "Kakumiro District",
				state_code: "428"
			},
			{
				id: 405,
				name: "Kalangala District",
				state_code: "101"
			},
			{
				id: 398,
				name: "Kaliro District",
				state_code: "222"
			},
			{
				id: 394,
				name: "Kalungu District",
				state_code: "122"
			},
			{
				id: 382,
				name: "Kampala District",
				state_code: "102"
			},
			{
				id: 334,
				name: "Kamuli District",
				state_code: "205"
			},
			{
				id: 360,
				name: "Kamwenge District",
				state_code: "413"
			},
			{
				id: 373,
				name: "Kanungu District",
				state_code: "414"
			},
			{
				id: 432,
				name: "Kapchorwa District",
				state_code: "206"
			},
			{
				id: 440,
				name: "Kasese District",
				state_code: "406"
			},
			{
				id: 420,
				name: "Katakwi District",
				state_code: "207"
			},
			{
				id: 368,
				name: "Kayunga District",
				state_code: "112"
			},
			{
				id: 436,
				name: "Kibaale District",
				state_code: "407"
			},
			{
				id: 347,
				name: "Kiboga District",
				state_code: "103"
			},
			{
				id: 338,
				name: "Kibuku District",
				state_code: "227"
			},
			{
				id: 355,
				name: "Kiruhura District",
				state_code: "419"
			},
			{
				id: 346,
				name: "Kiryandongo District",
				state_code: "421"
			},
			{
				id: 409,
				name: "Kisoro District",
				state_code: "408"
			},
			{
				id: 348,
				name: "Kitgum District",
				state_code: "305"
			},
			{
				id: 345,
				name: "Koboko District",
				state_code: "319"
			},
			{
				id: 401,
				name: "Kole District",
				state_code: "325"
			},
			{
				id: 443,
				name: "Kotido District",
				state_code: "306"
			},
			{
				id: 425,
				name: "Kumi District",
				state_code: "208"
			},
			{
				id: 369,
				name: "Kween District",
				state_code: "228"
			},
			{
				id: 325,
				name: "Kyankwanzi District",
				state_code: "123"
			},
			{
				id: 437,
				name: "Kyegegwa District",
				state_code: "422"
			},
			{
				id: 402,
				name: "Kyenjojo District",
				state_code: "415"
			},
			{
				id: 448,
				name: "Kyotera District",
				state_code: "125"
			},
			{
				id: 411,
				name: "Lamwo District",
				state_code: "326"
			},
			{
				id: 342,
				name: "Lira District",
				state_code: "307"
			},
			{
				id: 445,
				name: "Luuka District",
				state_code: "229"
			},
			{
				id: 433,
				name: "Luwero District",
				state_code: "104"
			},
			{
				id: 417,
				name: "Lwengo District",
				state_code: "124"
			},
			{
				id: 376,
				name: "Lyantonde District",
				state_code: "114"
			},
			{
				id: 438,
				name: "Manafwa District",
				state_code: "223"
			},
			{
				id: 421,
				name: "Maracha District",
				state_code: "320"
			},
			{
				id: 356,
				name: "Masaka District",
				state_code: "105"
			},
			{
				id: 354,
				name: "Masindi District",
				state_code: "409"
			},
			{
				id: 418,
				name: "Mayuge District",
				state_code: "214"
			},
			{
				id: 350,
				name: "Mbale District",
				state_code: "209"
			},
			{
				id: 415,
				name: "Mbarara District",
				state_code: "410"
			},
			{
				id: 435,
				name: "Mitooma District",
				state_code: "423"
			},
			{
				id: 364,
				name: "Mityana District",
				state_code: "115"
			},
			{
				id: 395,
				name: "Moroto District",
				state_code: "308"
			},
			{
				id: 363,
				name: "Moyo District",
				state_code: "309"
			},
			{
				id: 327,
				name: "Mpigi District",
				state_code: "106"
			},
			{
				id: 371,
				name: "Mubende District",
				state_code: "107"
			},
			{
				id: 410,
				name: "Mukono District",
				state_code: "108"
			},
			{
				id: 393,
				name: "Nakapiripirit District",
				state_code: "311"
			},
			{
				id: 423,
				name: "Nakaseke District",
				state_code: "116"
			},
			{
				id: 406,
				name: "Nakasongola District",
				state_code: "109"
			},
			{
				id: 351,
				name: "Namayingo District",
				state_code: "230"
			},
			{
				id: 400,
				name: "Namisindwa District",
				state_code: "234"
			},
			{
				id: 337,
				name: "Namutumba District",
				state_code: "224"
			},
			{
				id: 430,
				name: "Napak District",
				state_code: "327"
			},
			{
				id: 446,
				name: "Nebbi District",
				state_code: "310"
			},
			{
				id: 424,
				name: "Ngora District",
				state_code: "231"
			},
			{
				id: 332,
				name: "Northern Region",
				state_code: "N"
			},
			{
				id: 422,
				name: "Ntoroko District",
				state_code: "424"
			},
			{
				id: 404,
				name: "Ntungamo District",
				state_code: "411"
			},
			{
				id: 378,
				name: "Nwoya District",
				state_code: "328"
			},
			{
				id: 374,
				name: "Omoro District",
				state_code: "331"
			},
			{
				id: 390,
				name: "Otuke District",
				state_code: "329"
			},
			{
				id: 397,
				name: "Oyam District",
				state_code: "321"
			},
			{
				id: 408,
				name: "Pader District",
				state_code: "312"
			},
			{
				id: 357,
				name: "Pakwach District",
				state_code: "332"
			},
			{
				id: 412,
				name: "Pallisa District",
				state_code: "210"
			},
			{
				id: 439,
				name: "Rakai District",
				state_code: "110"
			},
			{
				id: 358,
				name: "Rubanda District",
				state_code: "429"
			},
			{
				id: 442,
				name: "Rubirizi District",
				state_code: "425"
			},
			{
				id: 331,
				name: "Rukiga District",
				state_code: "431"
			},
			{
				id: 324,
				name: "Rukungiri District",
				state_code: "412"
			},
			{
				id: 427,
				name: "Sembabule District",
				state_code: "111"
			},
			{
				id: 333,
				name: "Serere District",
				state_code: "232"
			},
			{
				id: 407,
				name: "Sheema District",
				state_code: "426"
			},
			{
				id: 429,
				name: "Sironko District",
				state_code: "215"
			},
			{
				id: 444,
				name: "Soroti District",
				state_code: "211"
			},
			{
				id: 359,
				name: "Tororo District",
				state_code: "212"
			},
			{
				id: 362,
				name: "Wakiso District",
				state_code: "113"
			},
			{
				id: 370,
				name: "Western Region",
				state_code: "W"
			},
			{
				id: 330,
				name: "Yumbe District",
				state_code: "313"
			},
			{
				id: 379,
				name: "Zombo District",
				state_code: "330"
			}
		]
	},
	{
		name: "Ukraine",
		iso3: "UKR",
		iso2: "UA",
		numeric_code: "804",
		phone_code: "380",
		emoji: "🇺🇦",
		emojiU: "U+1F1FA U+1F1E6",
		states: [
			{
				id: 4689,
				name: "Autonomous Republic of Crimea",
				state_code: "43"
			},
			{
				id: 4680,
				name: "Cherkasy Oblast",
				state_code: "71"
			},
			{
				id: 4692,
				name: "Chernihiv Oblast",
				state_code: "74"
			},
			{
				id: 4678,
				name: "Chernivtsi Oblast",
				state_code: "77"
			},
			{
				id: 4675,
				name: "Dnipropetrovsk Oblast",
				state_code: "12"
			},
			{
				id: 4691,
				name: "Donetsk Oblast",
				state_code: "14"
			},
			{
				id: 4682,
				name: "Ivano-Frankivsk Oblast",
				state_code: "26"
			},
			{
				id: 4686,
				name: "Kharkiv Oblast",
				state_code: "63"
			},
			{
				id: 4684,
				name: "Kherson Oblast",
				state_code: "65"
			},
			{
				id: 4681,
				name: "Khmelnytsky Oblast",
				state_code: "68"
			},
			{
				id: 4676,
				name: "Kiev",
				state_code: "30"
			},
			{
				id: 4677,
				name: "Kirovohrad Oblast",
				state_code: "35"
			},
			{
				id: 4671,
				name: "Kyiv Oblast",
				state_code: "32"
			},
			{
				id: 4673,
				name: "Luhansk Oblast",
				state_code: "09"
			},
			{
				id: 4672,
				name: "Lviv Oblast",
				state_code: "46"
			},
			{
				id: 4679,
				name: "Mykolaiv Oblast",
				state_code: "48"
			},
			{
				id: 4688,
				name: "Odessa Oblast",
				state_code: "51"
			},
			{
				id: 4683,
				name: "Rivne Oblast",
				state_code: "56"
			},
			{
				id: 4685,
				name: "Sumy Oblast",
				state_code: "59"
			},
			{
				id: 4674,
				name: "Ternopil Oblast",
				state_code: "61"
			},
			{
				id: 4669,
				name: "Vinnytsia Oblast",
				state_code: "05"
			},
			{
				id: 4690,
				name: "Volyn Oblast",
				state_code: "07"
			},
			{
				id: 4670,
				name: "Zakarpattia Oblast",
				state_code: "21"
			},
			{
				id: 4687,
				name: "Zaporizhzhya Oblast",
				state_code: "23"
			},
			{
				id: 4668,
				name: "Zhytomyr Oblast",
				state_code: "18"
			}
		]
	},
	{
		name: "United Arab Emirates",
		iso3: "ARE",
		iso2: "AE",
		numeric_code: "784",
		phone_code: "971",
		emoji: "🇦🇪",
		emojiU: "U+1F1E6 U+1F1EA",
		states: [
			{
				id: 3396,
				name: "Abu Dhabi Emirate",
				state_code: "AZ"
			},
			{
				id: 3395,
				name: "Ajman Emirate",
				state_code: "AJ"
			},
			{
				id: 3391,
				name: "Dubai",
				state_code: "DU"
			},
			{
				id: 3393,
				name: "Fujairah",
				state_code: "FU"
			},
			{
				id: 3394,
				name: "Ras al-Khaimah",
				state_code: "RK"
			},
			{
				id: 3390,
				name: "Sharjah Emirate",
				state_code: "SH"
			},
			{
				id: 3392,
				name: "Umm al-Quwain",
				state_code: "UQ"
			}
		]
	},
	{
		name: "United Kingdom",
		iso3: "GBR",
		iso2: "GB",
		numeric_code: "826",
		phone_code: "44",
		emoji: "🇬🇧",
		emojiU: "U+1F1EC U+1F1E7",
		states: [
			{
				id: 2463,
				name: "Aberdeen",
				state_code: "ABE"
			},
			{
				id: 2401,
				name: "Aberdeenshire",
				state_code: "ABD"
			},
			{
				id: 2387,
				name: "Angus",
				state_code: "ANS"
			},
			{
				id: 2533,
				name: "Antrim",
				state_code: "ANT"
			},
			{
				id: 2412,
				name: "Antrim and Newtownabbey",
				state_code: "ANN"
			},
			{
				id: 2498,
				name: "Ards",
				state_code: "ARD"
			},
			{
				id: 2523,
				name: "Ards and North Down",
				state_code: "AND"
			},
			{
				id: 2392,
				name: "Argyll and Bute",
				state_code: "AGB"
			},
			{
				id: 2331,
				name: "Armagh City and District Council",
				state_code: "ARM"
			},
			{
				id: 2324,
				name: "Armagh, Banbridge and Craigavon",
				state_code: "ABC"
			},
			{
				id: 2378,
				name: "Ascension Island",
				state_code: "SH-AC"
			},
			{
				id: 2363,
				name: "Ballymena Borough",
				state_code: "BLA"
			},
			{
				id: 2361,
				name: "Ballymoney",
				state_code: "BLY"
			},
			{
				id: 2315,
				name: "Banbridge",
				state_code: "BNB"
			},
			{
				id: 2499,
				name: "Barnsley",
				state_code: "BNS"
			},
			{
				id: 2339,
				name: "Bath and North East Somerset",
				state_code: "BAS"
			},
			{
				id: 2507,
				name: "Bedford",
				state_code: "BDF"
			},
			{
				id: 2311,
				name: "Belfast district",
				state_code: "BFS"
			},
			{
				id: 2425,
				name: "Birmingham",
				state_code: "BIR"
			},
			{
				id: 2329,
				name: "Blackburn with Darwen",
				state_code: "BBD"
			},
			{
				id: 2451,
				name: "Blackpool",
				state_code: "BPL"
			},
			{
				id: 2530,
				name: "Blaenau Gwent County Borough",
				state_code: "BGW"
			},
			{
				id: 2504,
				name: "Bolton",
				state_code: "BOL"
			},
			{
				id: 2342,
				name: "Bournemouth",
				state_code: "BMH"
			},
			{
				id: 2470,
				name: "Bracknell Forest",
				state_code: "BRC"
			},
			{
				id: 2529,
				name: "Bradford",
				state_code: "BRD"
			},
			{
				id: 2452,
				name: "Bridgend County Borough",
				state_code: "BGE"
			},
			{
				id: 2395,
				name: "Brighton and Hove",
				state_code: "BNH"
			},
			{
				id: 2405,
				name: "Buckinghamshire",
				state_code: "BKM"
			},
			{
				id: 2459,
				name: "Bury",
				state_code: "BUR"
			},
			{
				id: 2298,
				name: "Caerphilly County Borough",
				state_code: "CAY"
			},
			{
				id: 2517,
				name: "Calderdale",
				state_code: "CLD"
			},
			{
				id: 2423,
				name: "Cambridgeshire",
				state_code: "CAM"
			},
			{
				id: 2484,
				name: "Carmarthenshire",
				state_code: "CMN"
			},
			{
				id: 2439,
				name: "Carrickfergus Borough Council",
				state_code: "CKF"
			},
			{
				id: 2525,
				name: "Castlereagh",
				state_code: "CSR"
			},
			{
				id: 2316,
				name: "Causeway Coast and Glens",
				state_code: "CCG"
			},
			{
				id: 2303,
				name: "Central Bedfordshire",
				state_code: "CBF"
			},
			{
				id: 2509,
				name: "Ceredigion",
				state_code: "CGN"
			},
			{
				id: 2444,
				name: "Cheshire East",
				state_code: "CHE"
			},
			{
				id: 2442,
				name: "Cheshire West and Chester",
				state_code: "CHW"
			},
			{
				id: 2528,
				name: "City and County of Cardiff",
				state_code: "CRF"
			},
			{
				id: 2433,
				name: "City and County of Swansea",
				state_code: "SWA"
			},
			{
				id: 2413,
				name: "City of Bristol",
				state_code: "BST"
			},
			{
				id: 2485,
				name: "City of Derby",
				state_code: "DER"
			},
			{
				id: 2475,
				name: "City of Kingston upon Hull",
				state_code: "KHL"
			},
			{
				id: 2318,
				name: "City of Leicester",
				state_code: "LCE"
			},
			{
				id: 2424,
				name: "City of London",
				state_code: "LND"
			},
			{
				id: 2359,
				name: "City of Nottingham",
				state_code: "NGM"
			},
			{
				id: 2297,
				name: "City of Peterborough",
				state_code: "PTE"
			},
			{
				id: 2514,
				name: "City of Plymouth",
				state_code: "PLY"
			},
			{
				id: 2305,
				name: "City of Portsmouth",
				state_code: "POR"
			},
			{
				id: 2294,
				name: "City of Southampton",
				state_code: "STH"
			},
			{
				id: 2506,
				name: "City of Stoke-on-Trent",
				state_code: "STE"
			},
			{
				id: 2372,
				name: "City of Sunderland",
				state_code: "SND"
			},
			{
				id: 2357,
				name: "City of Westminster",
				state_code: "WSM"
			},
			{
				id: 2489,
				name: "City of Wolverhampton",
				state_code: "WLV"
			},
			{
				id: 2426,
				name: "City of York",
				state_code: "YOR"
			},
			{
				id: 2450,
				name: "Clackmannanshire",
				state_code: "CLK"
			},
			{
				id: 2461,
				name: "Coleraine Borough Council",
				state_code: "CLR"
			},
			{
				id: 2352,
				name: "Conwy County Borough",
				state_code: "CWY"
			},
			{
				id: 2445,
				name: "Cookstown District Council",
				state_code: "CKT"
			},
			{
				id: 2312,
				name: "Cornwall",
				state_code: "CON"
			},
			{
				id: 2406,
				name: "County Durham",
				state_code: "DUR"
			},
			{
				id: 2438,
				name: "Coventry",
				state_code: "COV"
			},
			{
				id: 2449,
				name: "Craigavon Borough Council",
				state_code: "CGV"
			},
			{
				id: 2334,
				name: "Cumbria",
				state_code: "CMA"
			},
			{
				id: 2389,
				name: "Darlington",
				state_code: "DAL"
			},
			{
				id: 2497,
				name: "Denbighshire",
				state_code: "DEN"
			},
			{
				id: 2403,
				name: "Derbyshire",
				state_code: "DBY"
			},
			{
				id: 2446,
				name: "Derry City and Strabane",
				state_code: "DRS"
			},
			{
				id: 2417,
				name: "Derry City Council",
				state_code: "DRY"
			},
			{
				id: 2491,
				name: "Devon",
				state_code: "DEV"
			},
			{
				id: 2364,
				name: "Doncaster",
				state_code: "DNC"
			},
			{
				id: 2345,
				name: "Dorset",
				state_code: "DOR"
			},
			{
				id: 2304,
				name: "Down District Council",
				state_code: "DOW"
			},
			{
				id: 2457,
				name: "Dudley",
				state_code: "DUD"
			},
			{
				id: 2415,
				name: "Dumfries and Galloway",
				state_code: "DGY"
			},
			{
				id: 2511,
				name: "Dundee",
				state_code: "DND"
			},
			{
				id: 2508,
				name: "Dungannon and South Tyrone Borough Council",
				state_code: "DGN"
			},
			{
				id: 2374,
				name: "East Ayrshire",
				state_code: "EAY"
			},
			{
				id: 2454,
				name: "East Dunbartonshire",
				state_code: "EDU"
			},
			{
				id: 2462,
				name: "East Lothian",
				state_code: "ELN"
			},
			{
				id: 2333,
				name: "East Renfrewshire",
				state_code: "ERW"
			},
			{
				id: 2370,
				name: "East Riding of Yorkshire",
				state_code: "ERY"
			},
			{
				id: 2414,
				name: "East Sussex",
				state_code: "ESX"
			},
			{
				id: 2428,
				name: "Edinburgh",
				state_code: "EDH"
			},
			{
				id: 2336,
				name: "England",
				state_code: "ENG"
			},
			{
				id: 2410,
				name: "Essex",
				state_code: "ESS"
			},
			{
				id: 2344,
				name: "Falkirk",
				state_code: "FAL"
			},
			{
				id: 2366,
				name: "Fermanagh and Omagh",
				state_code: "FMO"
			},
			{
				id: 2531,
				name: "Fermanagh District Council",
				state_code: "FER"
			},
			{
				id: 2479,
				name: "Fife",
				state_code: "FIF"
			},
			{
				id: 2437,
				name: "Flintshire",
				state_code: "FLN"
			},
			{
				id: 2431,
				name: "Gateshead",
				state_code: "GAT"
			},
			{
				id: 2404,
				name: "Glasgow",
				state_code: "GLG"
			},
			{
				id: 2373,
				name: "Gloucestershire",
				state_code: "GLS"
			},
			{
				id: 2379,
				name: "Gwynedd",
				state_code: "GWN"
			},
			{
				id: 2466,
				name: "Halton",
				state_code: "HAL"
			},
			{
				id: 2435,
				name: "Hampshire",
				state_code: "HAM"
			},
			{
				id: 2309,
				name: "Hartlepool",
				state_code: "HPL"
			},
			{
				id: 2500,
				name: "Herefordshire",
				state_code: "HEF"
			},
			{
				id: 2369,
				name: "Hertfordshire",
				state_code: "HRT"
			},
			{
				id: 2383,
				name: "Highland",
				state_code: "HLD"
			},
			{
				id: 2388,
				name: "Inverclyde",
				state_code: "IVC"
			},
			{
				id: 2289,
				name: "Isle of Wight",
				state_code: "IOW"
			},
			{
				id: 2343,
				name: "Isles of Scilly",
				state_code: "IOS"
			},
			{
				id: 2464,
				name: "Kent",
				state_code: "KEN"
			},
			{
				id: 2371,
				name: "Kirklees",
				state_code: "KIR"
			},
			{
				id: 2330,
				name: "Knowsley",
				state_code: "KWL"
			},
			{
				id: 2495,
				name: "Lancashire",
				state_code: "LAN"
			},
			{
				id: 2515,
				name: "Larne Borough Council",
				state_code: "LRN"
			},
			{
				id: 2503,
				name: "Leeds",
				state_code: "LDS"
			},
			{
				id: 2516,
				name: "Leicestershire",
				state_code: "LEC"
			},
			{
				id: 2382,
				name: "Limavady Borough Council",
				state_code: "LMV"
			},
			{
				id: 2355,
				name: "Lincolnshire",
				state_code: "LIN"
			},
			{
				id: 2460,
				name: "Lisburn and Castlereagh",
				state_code: "LBC"
			},
			{
				id: 2494,
				name: "Lisburn City Council",
				state_code: "LSB"
			},
			{
				id: 2340,
				name: "Liverpool",
				state_code: "LIV"
			},
			{
				id: 2356,
				name: "London Borough of Barking and Dagenham",
				state_code: "BDG"
			},
			{
				id: 2520,
				name: "London Borough of Barnet",
				state_code: "BNE"
			},
			{
				id: 2307,
				name: "London Borough of Bexley",
				state_code: "BEX"
			},
			{
				id: 2291,
				name: "London Borough of Brent",
				state_code: "BEN"
			},
			{
				id: 2490,
				name: "London Borough of Bromley",
				state_code: "BRY"
			},
			{
				id: 2349,
				name: "London Borough of Camden",
				state_code: "CMD"
			},
			{
				id: 2512,
				name: "London Borough of Croydon",
				state_code: "CRY"
			},
			{
				id: 2532,
				name: "London Borough of Ealing",
				state_code: "EAL"
			},
			{
				id: 2476,
				name: "London Borough of Enfield",
				state_code: "ENF"
			},
			{
				id: 2411,
				name: "London Borough of Hackney",
				state_code: "HCK"
			},
			{
				id: 2448,
				name: "London Borough of Hammersmith and Fulham",
				state_code: "HMF"
			},
			{
				id: 2306,
				name: "London Borough of Haringey",
				state_code: "HRY"
			},
			{
				id: 2385,
				name: "London Borough of Harrow",
				state_code: "HRW"
			},
			{
				id: 2347,
				name: "London Borough of Havering",
				state_code: "HAV"
			},
			{
				id: 2376,
				name: "London Borough of Hillingdon",
				state_code: "HIL"
			},
			{
				id: 2380,
				name: "London Borough of Hounslow",
				state_code: "HNS"
			},
			{
				id: 2319,
				name: "London Borough of Islington",
				state_code: "ISL"
			},
			{
				id: 2396,
				name: "London Borough of Lambeth",
				state_code: "LBH"
			},
			{
				id: 2358,
				name: "London Borough of Lewisham",
				state_code: "LEW"
			},
			{
				id: 2483,
				name: "London Borough of Merton",
				state_code: "MRT"
			},
			{
				id: 2418,
				name: "London Borough of Newham",
				state_code: "NWM"
			},
			{
				id: 2397,
				name: "London Borough of Redbridge",
				state_code: "RDB"
			},
			{
				id: 2501,
				name: "London Borough of Richmond upon Thames",
				state_code: "RIC"
			},
			{
				id: 2432,
				name: "London Borough of Southwark",
				state_code: "SWK"
			},
			{
				id: 2313,
				name: "London Borough of Sutton",
				state_code: "STN"
			},
			{
				id: 2390,
				name: "London Borough of Tower Hamlets",
				state_code: "TWH"
			},
			{
				id: 2326,
				name: "London Borough of Waltham Forest",
				state_code: "WFT"
			},
			{
				id: 2434,
				name: "London Borough of Wandsworth",
				state_code: "WND"
			},
			{
				id: 2322,
				name: "Magherafelt District Council",
				state_code: "MFT"
			},
			{
				id: 2398,
				name: "Manchester",
				state_code: "MAN"
			},
			{
				id: 2381,
				name: "Medway",
				state_code: "MDW"
			},
			{
				id: 2328,
				name: "Merthyr Tydfil County Borough",
				state_code: "MTY"
			},
			{
				id: 2320,
				name: "Metropolitan Borough of Wigan",
				state_code: "WGN"
			},
			{
				id: 2429,
				name: "Mid and East Antrim",
				state_code: "MEA"
			},
			{
				id: 2399,
				name: "Mid Ulster",
				state_code: "MUL"
			},
			{
				id: 2332,
				name: "Middlesbrough",
				state_code: "MDB"
			},
			{
				id: 2519,
				name: "Midlothian",
				state_code: "MLN"
			},
			{
				id: 2416,
				name: "Milton Keynes",
				state_code: "MIK"
			},
			{
				id: 2402,
				name: "Monmouthshire",
				state_code: "MON"
			},
			{
				id: 2360,
				name: "Moray",
				state_code: "MRY"
			},
			{
				id: 2348,
				name: "Moyle District Council",
				state_code: "MYL"
			},
			{
				id: 2351,
				name: "Neath Port Talbot County Borough",
				state_code: "NTL"
			},
			{
				id: 2458,
				name: "Newcastle upon Tyne",
				state_code: "NET"
			},
			{
				id: 2524,
				name: "Newport",
				state_code: "NWP"
			},
			{
				id: 2350,
				name: "Newry and Mourne District Council",
				state_code: "NYM"
			},
			{
				id: 2534,
				name: "Newry, Mourne and Down",
				state_code: "NMD"
			},
			{
				id: 2317,
				name: "Newtownabbey Borough Council",
				state_code: "NTA"
			},
			{
				id: 2473,
				name: "Norfolk",
				state_code: "NFK"
			},
			{
				id: 2535,
				name: "North Ayrshire",
				state_code: "NAY"
			},
			{
				id: 2513,
				name: "North Down Borough Council",
				state_code: "NDN"
			},
			{
				id: 2384,
				name: "North East Lincolnshire",
				state_code: "NEL"
			},
			{
				id: 2487,
				name: "North Lanarkshire",
				state_code: "NLK"
			},
			{
				id: 2453,
				name: "North Lincolnshire",
				state_code: "NLN"
			},
			{
				id: 2430,
				name: "North Somerset",
				state_code: "NSM"
			},
			{
				id: 2521,
				name: "North Tyneside",
				state_code: "NTY"
			},
			{
				id: 2522,
				name: "North Yorkshire",
				state_code: "NYK"
			},
			{
				id: 2480,
				name: "Northamptonshire",
				state_code: "NTH"
			},
			{
				id: 2337,
				name: "Northern Ireland",
				state_code: "NIR"
			},
			{
				id: 2365,
				name: "Northumberland",
				state_code: "NBL"
			},
			{
				id: 2456,
				name: "Nottinghamshire",
				state_code: "NTT"
			},
			{
				id: 2477,
				name: "Oldham",
				state_code: "OLD"
			},
			{
				id: 2314,
				name: "Omagh District Council",
				state_code: "OMH"
			},
			{
				id: 2474,
				name: "Orkney Islands",
				state_code: "ORK"
			},
			{
				id: 2353,
				name: "Outer Hebrides",
				state_code: "ELS"
			},
			{
				id: 2321,
				name: "Oxfordshire",
				state_code: "OXF"
			},
			{
				id: 2486,
				name: "Pembrokeshire",
				state_code: "PEM"
			},
			{
				id: 2325,
				name: "Perth and Kinross",
				state_code: "PKN"
			},
			{
				id: 2302,
				name: "Poole",
				state_code: "POL"
			},
			{
				id: 2441,
				name: "Powys",
				state_code: "POW"
			},
			{
				id: 2455,
				name: "Reading",
				state_code: "RDG"
			},
			{
				id: 2527,
				name: "Redcar and Cleveland",
				state_code: "RCC"
			},
			{
				id: 2443,
				name: "Renfrewshire",
				state_code: "RFW"
			},
			{
				id: 2301,
				name: "Rhondda Cynon Taf",
				state_code: "RCT"
			},
			{
				id: 2327,
				name: "Rochdale",
				state_code: "RCH"
			},
			{
				id: 2308,
				name: "Rotherham",
				state_code: "ROT"
			},
			{
				id: 2492,
				name: "Royal Borough of Greenwich",
				state_code: "GRE"
			},
			{
				id: 2368,
				name: "Royal Borough of Kensington and Chelsea",
				state_code: "KEC"
			},
			{
				id: 2481,
				name: "Royal Borough of Kingston upon Thames",
				state_code: "KTT"
			},
			{
				id: 2472,
				name: "Rutland",
				state_code: "RUT"
			},
			{
				id: 2502,
				name: "Saint Helena",
				state_code: "SH-HL"
			},
			{
				id: 2493,
				name: "Salford",
				state_code: "SLF"
			},
			{
				id: 2341,
				name: "Sandwell",
				state_code: "SAW"
			},
			{
				id: 2335,
				name: "Scotland",
				state_code: "SCT"
			},
			{
				id: 2346,
				name: "Scottish Borders",
				state_code: "SCB"
			},
			{
				id: 2518,
				name: "Sefton",
				state_code: "SFT"
			},
			{
				id: 2295,
				name: "Sheffield",
				state_code: "SHF"
			},
			{
				id: 2300,
				name: "Shetland Islands",
				state_code: "ZET"
			},
			{
				id: 2407,
				name: "Shropshire",
				state_code: "SHR"
			},
			{
				id: 2427,
				name: "Slough",
				state_code: "SLG"
			},
			{
				id: 2469,
				name: "Solihull",
				state_code: "SOL"
			},
			{
				id: 2386,
				name: "Somerset",
				state_code: "SOM"
			},
			{
				id: 2377,
				name: "South Ayrshire",
				state_code: "SAY"
			},
			{
				id: 2400,
				name: "South Gloucestershire",
				state_code: "SGC"
			},
			{
				id: 2362,
				name: "South Lanarkshire",
				state_code: "SLK"
			},
			{
				id: 2409,
				name: "South Tyneside",
				state_code: "STY"
			},
			{
				id: 2323,
				name: "Southend-on-Sea",
				state_code: "SOS"
			},
			{
				id: 2290,
				name: "St Helens",
				state_code: "SHN"
			},
			{
				id: 2447,
				name: "Staffordshire",
				state_code: "STS"
			},
			{
				id: 2488,
				name: "Stirling",
				state_code: "STG"
			},
			{
				id: 2394,
				name: "Stockport",
				state_code: "SKP"
			},
			{
				id: 2421,
				name: "Stockton-on-Tees",
				state_code: "STT"
			},
			{
				id: 2393,
				name: "Strabane District Council",
				state_code: "STB"
			},
			{
				id: 2467,
				name: "Suffolk",
				state_code: "SFK"
			},
			{
				id: 2526,
				name: "Surrey",
				state_code: "SRY"
			},
			{
				id: 2422,
				name: "Swindon",
				state_code: "SWD"
			},
			{
				id: 2367,
				name: "Tameside",
				state_code: "TAM"
			},
			{
				id: 2310,
				name: "Telford and Wrekin",
				state_code: "TFW"
			},
			{
				id: 2468,
				name: "Thurrock",
				state_code: "THR"
			},
			{
				id: 2478,
				name: "Torbay",
				state_code: "TOB"
			},
			{
				id: 2496,
				name: "Torfaen",
				state_code: "TOF"
			},
			{
				id: 2293,
				name: "Trafford",
				state_code: "TRF"
			},
			{
				id: 2375,
				name: "United Kingdom",
				state_code: "UKM"
			},
			{
				id: 2299,
				name: "Vale of Glamorgan",
				state_code: "VGL"
			},
			{
				id: 2465,
				name: "Wakefield",
				state_code: "WKF"
			},
			{
				id: 2338,
				name: "Wales",
				state_code: "WLS"
			},
			{
				id: 2292,
				name: "Walsall",
				state_code: "WLL"
			},
			{
				id: 2420,
				name: "Warrington",
				state_code: "WRT"
			},
			{
				id: 2505,
				name: "Warwickshire",
				state_code: "WAR"
			},
			{
				id: 2471,
				name: "West Berkshire",
				state_code: "WBK"
			},
			{
				id: 2440,
				name: "West Dunbartonshire",
				state_code: "WDU"
			},
			{
				id: 2354,
				name: "West Lothian",
				state_code: "WLN"
			},
			{
				id: 2296,
				name: "West Sussex",
				state_code: "WSX"
			},
			{
				id: 2391,
				name: "Wiltshire",
				state_code: "WIL"
			},
			{
				id: 2482,
				name: "Windsor and Maidenhead",
				state_code: "WNM"
			},
			{
				id: 2408,
				name: "Wirral",
				state_code: "WRL"
			},
			{
				id: 2419,
				name: "Wokingham",
				state_code: "WOK"
			},
			{
				id: 2510,
				name: "Worcestershire",
				state_code: "WOR"
			},
			{
				id: 2436,
				name: "Wrexham County Borough",
				state_code: "WRX"
			}
		]
	},
	{
		name: "United States Minor Outlying Islands",
		iso3: "UMI",
		iso2: "UM",
		numeric_code: "581",
		phone_code: "1",
		emoji: "🇺🇲",
		emojiU: "U+1F1FA U+1F1F2",
		states: [
		]
	},
	{
		name: "Uruguay",
		iso3: "URY",
		iso2: "UY",
		numeric_code: "858",
		phone_code: "598",
		emoji: "🇺🇾",
		emojiU: "U+1F1FA U+1F1FE",
		states: [
			{
				id: 3205,
				name: "Artigas Department",
				state_code: "AR"
			},
			{
				id: 3213,
				name: "Canelones Department",
				state_code: "CA"
			},
			{
				id: 3211,
				name: "Cerro Largo Department",
				state_code: "CL"
			},
			{
				id: 3208,
				name: "Colonia Department",
				state_code: "CO"
			},
			{
				id: 3209,
				name: "Durazno Department",
				state_code: "DU"
			},
			{
				id: 3203,
				name: "Flores Department",
				state_code: "FS"
			},
			{
				id: 3217,
				name: "Florida Department",
				state_code: "FD"
			},
			{
				id: 3215,
				name: "Lavalleja Department",
				state_code: "LA"
			},
			{
				id: 3206,
				name: "Maldonado Department",
				state_code: "MA"
			},
			{
				id: 3218,
				name: "Montevideo Department",
				state_code: "MO"
			},
			{
				id: 3212,
				name: "Paysandú Department",
				state_code: "PA"
			},
			{
				id: 3210,
				name: "Río Negro Department",
				state_code: "RN"
			},
			{
				id: 3207,
				name: "Rivera Department",
				state_code: "RV"
			},
			{
				id: 3216,
				name: "Rocha Department",
				state_code: "RO"
			},
			{
				id: 3220,
				name: "Salto Department",
				state_code: "SA"
			},
			{
				id: 3204,
				name: "San José Department",
				state_code: "SJ"
			},
			{
				id: 3219,
				name: "Soriano Department",
				state_code: "SO"
			},
			{
				id: 3221,
				name: "Tacuarembó Department",
				state_code: "TA"
			},
			{
				id: 3214,
				name: "Treinta y Tres Department",
				state_code: "TT"
			}
		]
	},
	{
		name: "Uzbekistan",
		iso3: "UZB",
		iso2: "UZ",
		numeric_code: "860",
		phone_code: "998",
		emoji: "🇺🇿",
		emojiU: "U+1F1FA U+1F1FF",
		states: [
			{
				id: 2540,
				name: "Andijan Region",
				state_code: "AN"
			},
			{
				id: 2541,
				name: "Bukhara Region",
				state_code: "BU"
			},
			{
				id: 2538,
				name: "Fergana Region",
				state_code: "FA"
			},
			{
				id: 2545,
				name: "Jizzakh Region",
				state_code: "JI"
			},
			{
				id: 2548,
				name: "Karakalpakstan",
				state_code: "QR"
			},
			{
				id: 2537,
				name: "Namangan Region",
				state_code: "NG"
			},
			{
				id: 2542,
				name: "Navoiy Region",
				state_code: "NW"
			},
			{
				id: 2543,
				name: "Qashqadaryo Region",
				state_code: "QA"
			},
			{
				id: 2544,
				name: "Samarqand Region",
				state_code: "SA"
			},
			{
				id: 2547,
				name: "Sirdaryo Region",
				state_code: "SI"
			},
			{
				id: 2546,
				name: "Surxondaryo Region",
				state_code: "SU"
			},
			{
				id: 2536,
				name: "Tashkent",
				state_code: "TK"
			},
			{
				id: 2549,
				name: "Tashkent Region",
				state_code: "TO"
			},
			{
				id: 2539,
				name: "Xorazm Region",
				state_code: "XO"
			}
		]
	},
	{
		name: "Vanuatu",
		iso3: "VUT",
		iso2: "VU",
		numeric_code: "548",
		phone_code: "678",
		emoji: "🇻🇺",
		emojiU: "U+1F1FB U+1F1FA",
		states: [
			{
				id: 4775,
				name: "Malampa",
				state_code: "MAP"
			},
			{
				id: 4773,
				name: "Penama",
				state_code: "PAM"
			},
			{
				id: 4776,
				name: "Sanma",
				state_code: "SAM"
			},
			{
				id: 4774,
				name: "Shefa",
				state_code: "SEE"
			},
			{
				id: 4777,
				name: "Tafea",
				state_code: "TAE"
			},
			{
				id: 4772,
				name: "Torba",
				state_code: "TOB"
			}
		]
	},
	{
		name: "Vatican City State (Holy See)",
		iso3: "VAT",
		iso2: "VA",
		numeric_code: "336",
		phone_code: "379",
		emoji: "🇻🇦",
		emojiU: "U+1F1FB U+1F1E6",
		states: [
		]
	},
	{
		name: "Venezuela",
		iso3: "VEN",
		iso2: "VE",
		numeric_code: "862",
		phone_code: "58",
		emoji: "🇻🇪",
		emojiU: "U+1F1FB U+1F1EA",
		states: [
			{
				id: 2044,
				name: "Amazonas",
				state_code: "Z"
			},
			{
				id: 2050,
				name: "Anzoátegui",
				state_code: "B"
			},
			{
				id: 4856,
				name: "Apure",
				state_code: "C"
			},
			{
				id: 2047,
				name: "Aragua",
				state_code: "D"
			},
			{
				id: 2049,
				name: "Barinas",
				state_code: "E"
			},
			{
				id: 2039,
				name: "Bolívar",
				state_code: "F"
			},
			{
				id: 2040,
				name: "Carabobo",
				state_code: "G"
			},
			{
				id: 2034,
				name: "Cojedes",
				state_code: "H"
			},
			{
				id: 2051,
				name: "Delta Amacuro",
				state_code: "Y"
			},
			{
				id: 4855,
				name: "Distrito Capital",
				state_code: "A"
			},
			{
				id: 2035,
				name: "Falcón",
				state_code: "I"
			},
			{
				id: 2046,
				name: "Federal Dependencies of Venezuela",
				state_code: "W"
			},
			{
				id: 2045,
				name: "Guárico",
				state_code: "J"
			},
			{
				id: 2055,
				name: "La Guaira",
				state_code: "X"
			},
			{
				id: 2038,
				name: "Lara",
				state_code: "K"
			},
			{
				id: 2053,
				name: "Mérida",
				state_code: "L"
			},
			{
				id: 2037,
				name: "Miranda",
				state_code: "M"
			},
			{
				id: 2054,
				name: "Monagas",
				state_code: "N"
			},
			{
				id: 2052,
				name: "Nueva Esparta",
				state_code: "O"
			},
			{
				id: 2036,
				name: "Portuguesa",
				state_code: "P"
			},
			{
				id: 2056,
				name: "Sucre",
				state_code: "R"
			},
			{
				id: 2048,
				name: "Táchira",
				state_code: "S"
			},
			{
				id: 2043,
				name: "Trujillo",
				state_code: "T"
			},
			{
				id: 2041,
				name: "Yaracuy",
				state_code: "U"
			},
			{
				id: 2042,
				name: "Zulia",
				state_code: "V"
			}
		]
	},
	{
		name: "Vietnam",
		iso3: "VNM",
		iso2: "VN",
		numeric_code: "704",
		phone_code: "84",
		emoji: "🇻🇳",
		emojiU: "U+1F1FB U+1F1F3",
		states: [
			{
				id: 3794,
				name: "An Giang",
				state_code: "44"
			},
			{
				id: 3770,
				name: "Bà Rịa-Vũng Tàu",
				state_code: "43"
			},
			{
				id: 3815,
				name: "Bắc Giang",
				state_code: "54"
			},
			{
				id: 3822,
				name: "Bắc Kạn",
				state_code: "53"
			},
			{
				id: 3804,
				name: "Bạc Liêu",
				state_code: "55"
			},
			{
				id: 3791,
				name: "Bắc Ninh",
				state_code: "56"
			},
			{
				id: 3796,
				name: "Bến Tre",
				state_code: "50"
			},
			{
				id: 3785,
				name: "Bình Dương",
				state_code: "57"
			},
			{
				id: 3830,
				name: "Bình Định",
				state_code: "31"
			},
			{
				id: 3797,
				name: "Bình Phước",
				state_code: "58"
			},
			{
				id: 3787,
				name: "Bình Thuận",
				state_code: "40"
			},
			{
				id: 3778,
				name: "Cà Mau",
				state_code: "59"
			},
			{
				id: 4925,
				name: "Cần Thơ",
				state_code: "CT"
			},
			{
				id: 3782,
				name: "Cao Bằng",
				state_code: "04"
			},
			{
				id: 3806,
				name: "Đà Nẵng",
				state_code: "DN"
			},
			{
				id: 3829,
				name: "Đắk Lắk",
				state_code: "33"
			},
			{
				id: 3823,
				name: "Đắk Nông",
				state_code: "72"
			},
			{
				id: 3773,
				name: "Điện Biên",
				state_code: "71"
			},
			{
				id: 3821,
				name: "Đồng Nai",
				state_code: "39"
			},
			{
				id: 3769,
				name: "Đồng Tháp",
				state_code: "45"
			},
			{
				id: 3813,
				name: "Gia Lai",
				state_code: "30"
			},
			{
				id: 3779,
				name: "Hà Giang",
				state_code: "03"
			},
			{
				id: 3802,
				name: "Hà Nam",
				state_code: "63"
			},
			{
				id: 3810,
				name: "Hà Nội",
				state_code: "HN"
			},
			{
				id: 3816,
				name: "Hà Tĩnh",
				state_code: "23"
			},
			{
				id: 3827,
				name: "Hải Dương",
				state_code: "61"
			},
			{
				id: 3783,
				name: "Hải Phòng",
				state_code: "HP"
			},
			{
				id: 3777,
				name: "Hậu Giang",
				state_code: "73"
			},
			{
				id: 3811,
				name: "Hồ Chí Minh",
				state_code: "SG"
			},
			{
				id: 3799,
				name: "Hòa Bình",
				state_code: "14"
			},
			{
				id: 3768,
				name: "Hưng Yên",
				state_code: "66"
			},
			{
				id: 3793,
				name: "Khánh Hòa",
				state_code: "34"
			},
			{
				id: 3800,
				name: "Kiên Giang",
				state_code: "47"
			},
			{
				id: 3772,
				name: "Kon Tum",
				state_code: "28"
			},
			{
				id: 3825,
				name: "Lai Châu",
				state_code: "01"
			},
			{
				id: 3818,
				name: "Lâm Đồng",
				state_code: "35"
			},
			{
				id: 3792,
				name: "Lạng Sơn",
				state_code: "09"
			},
			{
				id: 3817,
				name: "Lào Cai",
				state_code: "02"
			},
			{
				id: 3808,
				name: "Long An",
				state_code: "41"
			},
			{
				id: 3789,
				name: "Nam Định",
				state_code: "67"
			},
			{
				id: 3780,
				name: "Nghệ An",
				state_code: "22"
			},
			{
				id: 3786,
				name: "Ninh Bình",
				state_code: "18"
			},
			{
				id: 3788,
				name: "Ninh Thuận",
				state_code: "36"
			},
			{
				id: 3801,
				name: "Phú Thọ",
				state_code: "68"
			},
			{
				id: 3824,
				name: "Phú Yên",
				state_code: "32"
			},
			{
				id: 3809,
				name: "Quảng Bình",
				state_code: "24"
			},
			{
				id: 3776,
				name: "Quảng Nam",
				state_code: "27"
			},
			{
				id: 3828,
				name: "Quảng Ngãi",
				state_code: "29"
			},
			{
				id: 3814,
				name: "Quảng Ninh",
				state_code: "13"
			},
			{
				id: 3803,
				name: "Quảng Trị",
				state_code: "25"
			},
			{
				id: 3819,
				name: "Sóc Trăng",
				state_code: "52"
			},
			{
				id: 3812,
				name: "Sơn La",
				state_code: "05"
			},
			{
				id: 3826,
				name: "Tây Ninh",
				state_code: "37"
			},
			{
				id: 3775,
				name: "Thái Bình",
				state_code: "20"
			},
			{
				id: 3807,
				name: "Thái Nguyên",
				state_code: "69"
			},
			{
				id: 3771,
				name: "Thanh Hóa",
				state_code: "21"
			},
			{
				id: 3798,
				name: "Thừa Thiên-Huế",
				state_code: "26"
			},
			{
				id: 3781,
				name: "Tiền Giang",
				state_code: "46"
			},
			{
				id: 3805,
				name: "Trà Vinh",
				state_code: "51"
			},
			{
				id: 3795,
				name: "Tuyên Quang",
				state_code: "07"
			},
			{
				id: 3790,
				name: "Vĩnh Long",
				state_code: "49"
			},
			{
				id: 3774,
				name: "Vĩnh Phúc",
				state_code: "70"
			},
			{
				id: 3784,
				name: "Yên Bái",
				state_code: "06"
			}
		]
	},
	{
		name: "Virgin Islands (British)",
		iso3: "VGB",
		iso2: "VG",
		numeric_code: "092",
		phone_code: "+1-284",
		emoji: "🇻🇬",
		emojiU: "U+1F1FB U+1F1EC",
		states: [
		]
	},
	{
		name: "Virgin Islands (US)",
		iso3: "VIR",
		iso2: "VI",
		numeric_code: "850",
		phone_code: "+1-340",
		emoji: "🇻🇮",
		emojiU: "U+1F1FB U+1F1EE",
		states: [
		]
	},
	{
		name: "Wallis And Futuna Islands",
		iso3: "WLF",
		iso2: "WF",
		numeric_code: "876",
		phone_code: "681",
		emoji: "🇼🇫",
		emojiU: "U+1F1FC U+1F1EB",
		states: [
		]
	},
	{
		name: "Western Sahara",
		iso3: "ESH",
		iso2: "EH",
		numeric_code: "732",
		phone_code: "212",
		emoji: "🇪🇭",
		emojiU: "U+1F1EA U+1F1ED",
		states: [
		]
	},
	{
		name: "Yemen",
		iso3: "YEM",
		iso2: "YE",
		numeric_code: "887",
		phone_code: "967",
		emoji: "🇾🇪",
		emojiU: "U+1F1FE U+1F1EA",
		states: [
			{
				id: 1242,
				name: "'Adan Governorate",
				state_code: "AD"
			},
			{
				id: 1250,
				name: "'Amran Governorate",
				state_code: "AM"
			},
			{
				id: 1237,
				name: "Abyan Governorate",
				state_code: "AB"
			},
			{
				id: 1240,
				name: "Al Bayda' Governorate",
				state_code: "BA"
			},
			{
				id: 1241,
				name: "Al Hudaydah Governorate",
				state_code: "HU"
			},
			{
				id: 1243,
				name: "Al Jawf Governorate",
				state_code: "JA"
			},
			{
				id: 1251,
				name: "Al Mahrah Governorate",
				state_code: "MR"
			},
			{
				id: 1235,
				name: "Al Mahwit Governorate",
				state_code: "MW"
			},
			{
				id: 1246,
				name: "Dhamar Governorate",
				state_code: "DH"
			},
			{
				id: 1238,
				name: "Hadhramaut Governorate",
				state_code: "HD"
			},
			{
				id: 1244,
				name: "Hajjah Governorate",
				state_code: "HJ"
			},
			{
				id: 1233,
				name: "Ibb Governorate",
				state_code: "IB"
			},
			{
				id: 1245,
				name: "Lahij Governorate",
				state_code: "LA"
			},
			{
				id: 1234,
				name: "Ma'rib Governorate",
				state_code: "MA"
			},
			{
				id: 1248,
				name: "Raymah Governorate",
				state_code: "RA"
			},
			{
				id: 1249,
				name: "Saada Governorate",
				state_code: "SD"
			},
			{
				id: 1232,
				name: "Sana'a",
				state_code: "SA"
			},
			{
				id: 1236,
				name: "Sana'a Governorate",
				state_code: "SN"
			},
			{
				id: 1247,
				name: "Shabwah Governorate",
				state_code: "SH"
			},
			{
				id: 1239,
				name: "Socotra Governorate",
				state_code: "SU"
			},
			{
				id: 1231,
				name: "Ta'izz Governorate",
				state_code: "TA"
			}
		]
	},
	{
		name: "Zambia",
		iso3: "ZMB",
		iso2: "ZM",
		numeric_code: "894",
		phone_code: "260",
		emoji: "🇿🇲",
		emojiU: "U+1F1FF U+1F1F2",
		states: [
			{
				id: 1986,
				name: "Central Province",
				state_code: "02"
			},
			{
				id: 1984,
				name: "Copperbelt Province",
				state_code: "08"
			},
			{
				id: 1991,
				name: "Eastern Province",
				state_code: "03"
			},
			{
				id: 1987,
				name: "Luapula Province",
				state_code: "04"
			},
			{
				id: 1988,
				name: "Lusaka Province",
				state_code: "09"
			},
			{
				id: 1989,
				name: "Muchinga Province",
				state_code: "10"
			},
			{
				id: 1982,
				name: "Northern Province",
				state_code: "05"
			},
			{
				id: 1985,
				name: "Northwestern Province",
				state_code: "06"
			},
			{
				id: 1990,
				name: "Southern Province",
				state_code: "07"
			},
			{
				id: 1983,
				name: "Western Province",
				state_code: "01"
			}
		]
	},
	{
		name: "Zimbabwe",
		iso3: "ZWE",
		iso2: "ZW",
		numeric_code: "716",
		phone_code: "263",
		emoji: "🇿🇼",
		emojiU: "U+1F1FF U+1F1FC",
		states: [
			{
				id: 1956,
				name: "Bulawayo Province",
				state_code: "BU"
			},
			{
				id: 1958,
				name: "Harare Province",
				state_code: "HA"
			},
			{
				id: 1959,
				name: "Manicaland",
				state_code: "MA"
			},
			{
				id: 1955,
				name: "Mashonaland Central Province",
				state_code: "MC"
			},
			{
				id: 1951,
				name: "Mashonaland East Province",
				state_code: "ME"
			},
			{
				id: 1953,
				name: "Mashonaland West Province",
				state_code: "MW"
			},
			{
				id: 1960,
				name: "Masvingo Province",
				state_code: "MV"
			},
			{
				id: 1954,
				name: "Matabeleland North Province",
				state_code: "MN"
			},
			{
				id: 1952,
				name: "Matabeleland South Province",
				state_code: "MS"
			},
			{
				id: 1957,
				name: "Midlands Province",
				state_code: "MI"
			}
		]
	}
];

var _excluded$v = ["onChange"];
var CountryDropdown = function CountryDropdown(_ref) {
  var onChange = _ref.onChange,
    props = _objectWithoutProperties(_ref, _excluded$v);
  var options = countries.map(function (country) {
    return {
      text: country.name,
      value: country.iso2,
      states: country.states,
      icon: /*#__PURE__*/React__default.createElement("span", null, country.emoji)
    };
  });
  console.log(options);
  var handleChange = function handleChange(option) {
    if (option) {
      onChange(option.value, option.states.map(function (state) {
        return {
          text: state.name,
          value: state.state_code
        };
      }));
    }
  };
  return /*#__PURE__*/React__default.createElement(Dropdown, _extends$1({
    options: options,
    onChange: handleChange,
    returnObjModel: true
  }, props));
};
CountryDropdown.defaultProps = {};
CountryDropdown.propTypes = {
  onChange: propTypes.exports.func
};

var classnames = {exports: {}};

/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/

(function (module) {
	/* global define */

	(function () {

		var hasOwn = {}.hasOwnProperty;

		function classNames() {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					if (arg.length) {
						var inner = classNames.apply(null, arg);
						if (inner) {
							classes.push(inner);
						}
					}
				} else if (argType === 'object') {
					if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {
						classes.push(arg.toString());
						continue;
					}

					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}

			return classes.join(' ');
		}

		if (module.exports) {
			classNames.default = classNames;
			module.exports = classNames;
		} else {
			window.classNames = classNames;
		}
	}());
} (classnames));

var r = classnames.exports;

function _typeof$4(obj) {
  "@babel/helpers - typeof";

  return _typeof$4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof$4(obj);
}

function requiredArgs(required, args) {
  if (args.length < required) {
    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');
  }
}

/**
 * @name isDate
 * @category Common Helpers
 * @summary Is the given value a date?
 *
 * @description
 * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.
 *
 * @param {*} value - the value to check
 * @returns {boolean} true if the given value is a date
 * @throws {TypeError} 1 arguments required
 *
 * @example
 * // For a valid date:
 * const result = isDate(new Date())
 * //=> true
 *
 * @example
 * // For an invalid date:
 * const result = isDate(new Date(NaN))
 * //=> true
 *
 * @example
 * // For some value:
 * const result = isDate('2014-02-31')
 * //=> false
 *
 * @example
 * // For an object:
 * const result = isDate({})
 * //=> false
 */
function isDate$1(value) {
  requiredArgs(1, arguments);
  return value instanceof Date || _typeof$4(value) === 'object' && Object.prototype.toString.call(value) === '[object Date]';
}

/**
 * @name toDate
 * @category Common Helpers
 * @summary Convert the given argument to an instance of Date.
 *
 * @description
 * Convert the given argument to an instance of Date.
 *
 * If the argument is an instance of Date, the function returns its clone.
 *
 * If the argument is a number, it is treated as a timestamp.
 *
 * If the argument is none of the above, the function returns Invalid Date.
 *
 * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
 *
 * @param {Date|Number} argument - the value to convert
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Clone the date:
 * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert the timestamp to date:
 * const result = toDate(1392098430000)
 * //=> Tue Feb 11 2014 11:30:30
 */
function toDate(argument) {
  requiredArgs(1, arguments);
  var argStr = Object.prototype.toString.call(argument);

  // Clone the date
  if (argument instanceof Date || _typeof$4(argument) === 'object' && argStr === '[object Date]') {
    // Prevent the date to lose the milliseconds when passed to new Date() in IE10
    return new Date(argument.getTime());
  } else if (typeof argument === 'number' || argStr === '[object Number]') {
    return new Date(argument);
  } else {
    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {
      // eslint-disable-next-line no-console
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments");
      // eslint-disable-next-line no-console
      console.warn(new Error().stack);
    }
    return new Date(NaN);
  }
}

/**
 * @name isValid
 * @category Common Helpers
 * @summary Is the given date valid?
 *
 * @description
 * Returns false if argument is Invalid Date and true otherwise.
 * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * Invalid Date is a Date, whose time value is NaN.
 *
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * @param {*} date - the date to check
 * @returns {Boolean} the date is valid
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // For the valid date:
 * const result = isValid(new Date(2014, 1, 31))
 * //=> true
 *
 * @example
 * // For the value, convertable into a date:
 * const result = isValid(1393804800000)
 * //=> true
 *
 * @example
 * // For the invalid date:
 * const result = isValid(new Date(''))
 * //=> false
 */
function isValid(dirtyDate) {
  requiredArgs(1, arguments);
  if (!isDate$1(dirtyDate) && typeof dirtyDate !== 'number') {
    return false;
  }
  var date = toDate(dirtyDate);
  return !isNaN(Number(date));
}

function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }
  var number = Number(dirtyNumber);
  if (isNaN(number)) {
    return number;
  }
  return number < 0 ? Math.ceil(number) : Math.floor(number);
}

/**
 * @name addMilliseconds
 * @category Millisecond Helpers
 * @summary Add the specified number of milliseconds to the given date.
 *
 * @description
 * Add the specified number of milliseconds to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the milliseconds added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
 * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:30.750
 */
function addMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var timestamp = toDate(dirtyDate).getTime();
  var amount = toInteger(dirtyAmount);
  return new Date(timestamp + amount);
}

/**
 * @name subMilliseconds
 * @category Millisecond Helpers
 * @summary Subtract the specified number of milliseconds from the given date.
 *
 * @description
 * Subtract the specified number of milliseconds from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the milliseconds subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
 * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:29.250
 */
function subMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, -amount);
}

var MILLISECONDS_IN_DAY$1 = 86400000;
function getUTCDayOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var timestamp = date.getTime();
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime();
  var difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / MILLISECONDS_IN_DAY$1) + 1;
}

function startOfUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var weekStartsOn = 1;
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

function getUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

function startOfUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var year = getUTCISOWeekYear(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCISOWeek(fourthOfJanuary);
  return date;
}

var MILLISECONDS_IN_WEEK$2 = 604800000;
function getUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime();

  // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)
  return Math.round(diff / MILLISECONDS_IN_WEEK$2) + 1;
}

var defaultOptions = {};
function getDefaultOptions() {
  return defaultOptions;
}

function startOfUTCWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

function getUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var defaultOptions = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);

  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }
  var firstWeekOfNextYear = new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);
  var firstWeekOfThisYear = new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

function startOfUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  var year = getUTCWeekYear(dirtyDate, options);
  var firstWeek = new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCWeek(firstWeek, options);
  return date;
}

var MILLISECONDS_IN_WEEK$1 = 604800000;
function getUTCWeek(dirtyDate, options) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();

  // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)
  return Math.round(diff / MILLISECONDS_IN_WEEK$1) + 1;
}

function addLeadingZeros(number, targetLength) {
  var sign = number < 0 ? '-' : '';
  var output = Math.abs(number).toString();
  while (output.length < targetLength) {
    output = '0' + output;
  }
  return sign + output;
}

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* |                                |
 * |  d  | Day of month                   |  D  |                                |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  m  | Minute                         |  M  | Month                          |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  y  | Year (abs)                     |  Y  |                                |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 */
var formatters$1 = {
  // Year
  y: function y(date, token) {
    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
    // |----------|-------|----|-------|-------|-------|
    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |

    var signedYear = date.getUTCFullYear();
    // Returns 1 for 1 BC (which is year 0 in JavaScript)
    var year = signedYear > 0 ? signedYear : 1 - signedYear;
    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);
  },
  // Month
  M: function M(date, token) {
    var month = date.getUTCMonth();
    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);
  },
  // Day of the month
  d: function d(date, token) {
    return addLeadingZeros(date.getUTCDate(), token.length);
  },
  // AM or PM
  a: function a(date, token) {
    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';
    switch (token) {
      case 'a':
      case 'aa':
        return dayPeriodEnumValue.toUpperCase();
      case 'aaa':
        return dayPeriodEnumValue;
      case 'aaaaa':
        return dayPeriodEnumValue[0];
      case 'aaaa':
      default:
        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';
    }
  },
  // Hour [1-12]
  h: function h(date, token) {
    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);
  },
  // Hour [0-23]
  H: function H(date, token) {
    return addLeadingZeros(date.getUTCHours(), token.length);
  },
  // Minute
  m: function m(date, token) {
    return addLeadingZeros(date.getUTCMinutes(), token.length);
  },
  // Second
  s: function s(date, token) {
    return addLeadingZeros(date.getUTCSeconds(), token.length);
  },
  // Fraction of second
  S: function S(date, token) {
    var numberOfDigits = token.length;
    var milliseconds = date.getUTCMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
    return addLeadingZeros(fractionalSeconds, token.length);
  }
};

var dayPeriodEnum = {
  am: 'am',
  pm: 'pm',
  midnight: 'midnight',
  noon: 'noon',
  morning: 'morning',
  afternoon: 'afternoon',
  evening: 'evening',
  night: 'night'
};
/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
 * |  p! | Long localized time            |  P! | Long localized date            |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 * - `P` is long localized date format
 * - `p` is long localized time format
 */

var formatters = {
  // Era
  G: function G(date, token, localize) {
    var era = date.getUTCFullYear() > 0 ? 1 : 0;
    switch (token) {
      // AD, BC
      case 'G':
      case 'GG':
      case 'GGG':
        return localize.era(era, {
          width: 'abbreviated'
        });
      // A, B
      case 'GGGGG':
        return localize.era(era, {
          width: 'narrow'
        });
      // Anno Domini, Before Christ
      case 'GGGG':
      default:
        return localize.era(era, {
          width: 'wide'
        });
    }
  },
  // Year
  y: function y(date, token, localize) {
    // Ordinal number
    if (token === 'yo') {
      var signedYear = date.getUTCFullYear();
      // Returns 1 for 1 BC (which is year 0 in JavaScript)
      var year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize.ordinalNumber(year, {
        unit: 'year'
      });
    }
    return formatters$1.y(date, token);
  },
  // Local week-numbering year
  Y: function Y(date, token, localize, options) {
    var signedWeekYear = getUTCWeekYear(date, options);
    // Returns 1 for 1 BC (which is year 0 in JavaScript)
    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;

    // Two digit year
    if (token === 'YY') {
      var twoDigitYear = weekYear % 100;
      return addLeadingZeros(twoDigitYear, 2);
    }

    // Ordinal number
    if (token === 'Yo') {
      return localize.ordinalNumber(weekYear, {
        unit: 'year'
      });
    }

    // Padding
    return addLeadingZeros(weekYear, token.length);
  },
  // ISO week-numbering year
  R: function R(date, token) {
    var isoWeekYear = getUTCISOWeekYear(date);

    // Padding
    return addLeadingZeros(isoWeekYear, token.length);
  },
  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function u(date, token) {
    var year = date.getUTCFullYear();
    return addLeadingZeros(year, token.length);
  },
  // Quarter
  Q: function Q(date, token, localize) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      // 1, 2, 3, 4
      case 'Q':
        return String(quarter);
      // 01, 02, 03, 04
      case 'QQ':
        return addLeadingZeros(quarter, 2);
      // 1st, 2nd, 3rd, 4th
      case 'Qo':
        return localize.ordinalNumber(quarter, {
          unit: 'quarter'
        });
      // Q1, Q2, Q3, Q4
      case 'QQQ':
        return localize.quarter(quarter, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case 'QQQQQ':
        return localize.quarter(quarter, {
          width: 'narrow',
          context: 'formatting'
        });
      // 1st quarter, 2nd quarter, ...
      case 'QQQQ':
      default:
        return localize.quarter(quarter, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone quarter
  q: function q(date, token, localize) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      // 1, 2, 3, 4
      case 'q':
        return String(quarter);
      // 01, 02, 03, 04
      case 'qq':
        return addLeadingZeros(quarter, 2);
      // 1st, 2nd, 3rd, 4th
      case 'qo':
        return localize.ordinalNumber(quarter, {
          unit: 'quarter'
        });
      // Q1, Q2, Q3, Q4
      case 'qqq':
        return localize.quarter(quarter, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case 'qqqqq':
        return localize.quarter(quarter, {
          width: 'narrow',
          context: 'standalone'
        });
      // 1st quarter, 2nd quarter, ...
      case 'qqqq':
      default:
        return localize.quarter(quarter, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // Month
  M: function M(date, token, localize) {
    var month = date.getUTCMonth();
    switch (token) {
      case 'M':
      case 'MM':
        return formatters$1.M(date, token);
      // 1st, 2nd, ..., 12th
      case 'Mo':
        return localize.ordinalNumber(month + 1, {
          unit: 'month'
        });
      // Jan, Feb, ..., Dec
      case 'MMM':
        return localize.month(month, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // J, F, ..., D
      case 'MMMMM':
        return localize.month(month, {
          width: 'narrow',
          context: 'formatting'
        });
      // January, February, ..., December
      case 'MMMM':
      default:
        return localize.month(month, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone month
  L: function L(date, token, localize) {
    var month = date.getUTCMonth();
    switch (token) {
      // 1, 2, ..., 12
      case 'L':
        return String(month + 1);
      // 01, 02, ..., 12
      case 'LL':
        return addLeadingZeros(month + 1, 2);
      // 1st, 2nd, ..., 12th
      case 'Lo':
        return localize.ordinalNumber(month + 1, {
          unit: 'month'
        });
      // Jan, Feb, ..., Dec
      case 'LLL':
        return localize.month(month, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // J, F, ..., D
      case 'LLLLL':
        return localize.month(month, {
          width: 'narrow',
          context: 'standalone'
        });
      // January, February, ..., December
      case 'LLLL':
      default:
        return localize.month(month, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // Local week of year
  w: function w(date, token, localize, options) {
    var week = getUTCWeek(date, options);
    if (token === 'wo') {
      return localize.ordinalNumber(week, {
        unit: 'week'
      });
    }
    return addLeadingZeros(week, token.length);
  },
  // ISO week of year
  I: function I(date, token, localize) {
    var isoWeek = getUTCISOWeek(date);
    if (token === 'Io') {
      return localize.ordinalNumber(isoWeek, {
        unit: 'week'
      });
    }
    return addLeadingZeros(isoWeek, token.length);
  },
  // Day of the month
  d: function d(date, token, localize) {
    if (token === 'do') {
      return localize.ordinalNumber(date.getUTCDate(), {
        unit: 'date'
      });
    }
    return formatters$1.d(date, token);
  },
  // Day of year
  D: function D(date, token, localize) {
    var dayOfYear = getUTCDayOfYear(date);
    if (token === 'Do') {
      return localize.ordinalNumber(dayOfYear, {
        unit: 'dayOfYear'
      });
    }
    return addLeadingZeros(dayOfYear, token.length);
  },
  // Day of week
  E: function E(date, token, localize) {
    var dayOfWeek = date.getUTCDay();
    switch (token) {
      // Tue
      case 'E':
      case 'EE':
      case 'EEE':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T
      case 'EEEEE':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu
      case 'EEEEEE':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday
      case 'EEEE':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Local day of week
  e: function e(date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      // Numerical value (Nth day of week with current locale or weekStartsOn)
      case 'e':
        return String(localDayOfWeek);
      // Padded numerical value
      case 'ee':
        return addLeadingZeros(localDayOfWeek, 2);
      // 1st, 2nd, ..., 7th
      case 'eo':
        return localize.ordinalNumber(localDayOfWeek, {
          unit: 'day'
        });
      case 'eee':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T
      case 'eeeee':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu
      case 'eeeeee':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday
      case 'eeee':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone local day of week
  c: function c(date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      // Numerical value (same as in `e`)
      case 'c':
        return String(localDayOfWeek);
      // Padded numerical value
      case 'cc':
        return addLeadingZeros(localDayOfWeek, token.length);
      // 1st, 2nd, ..., 7th
      case 'co':
        return localize.ordinalNumber(localDayOfWeek, {
          unit: 'day'
        });
      case 'ccc':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // T
      case 'ccccc':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'standalone'
        });
      // Tu
      case 'cccccc':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'standalone'
        });
      // Tuesday
      case 'cccc':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // ISO day of week
  i: function i(date, token, localize) {
    var dayOfWeek = date.getUTCDay();
    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
    switch (token) {
      // 2
      case 'i':
        return String(isoDayOfWeek);
      // 02
      case 'ii':
        return addLeadingZeros(isoDayOfWeek, token.length);
      // 2nd
      case 'io':
        return localize.ordinalNumber(isoDayOfWeek, {
          unit: 'day'
        });
      // Tue
      case 'iii':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T
      case 'iiiii':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu
      case 'iiiiii':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday
      case 'iiii':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // AM or PM
  a: function a(date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
    switch (token) {
      case 'a':
      case 'aa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });
      case 'aaa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        }).toLowerCase();
      case 'aaaaa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });
      case 'aaaa':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // AM, PM, midnight, noon
  b: function b(date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
    }
    switch (token) {
      case 'b':
      case 'bb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });
      case 'bbb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        }).toLowerCase();
      case 'bbbbb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });
      case 'bbbb':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // in the morning, in the afternoon, in the evening, at night
  B: function B(date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }
    switch (token) {
      case 'B':
      case 'BB':
      case 'BBB':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });
      case 'BBBBB':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });
      case 'BBBB':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Hour [1-12]
  h: function h(date, token, localize) {
    if (token === 'ho') {
      var hours = date.getUTCHours() % 12;
      if (hours === 0) hours = 12;
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }
    return formatters$1.h(date, token);
  },
  // Hour [0-23]
  H: function H(date, token, localize) {
    if (token === 'Ho') {
      return localize.ordinalNumber(date.getUTCHours(), {
        unit: 'hour'
      });
    }
    return formatters$1.H(date, token);
  },
  // Hour [0-11]
  K: function K(date, token, localize) {
    var hours = date.getUTCHours() % 12;
    if (token === 'Ko') {
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }
    return addLeadingZeros(hours, token.length);
  },
  // Hour [1-24]
  k: function k(date, token, localize) {
    var hours = date.getUTCHours();
    if (hours === 0) hours = 24;
    if (token === 'ko') {
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }
    return addLeadingZeros(hours, token.length);
  },
  // Minute
  m: function m(date, token, localize) {
    if (token === 'mo') {
      return localize.ordinalNumber(date.getUTCMinutes(), {
        unit: 'minute'
      });
    }
    return formatters$1.m(date, token);
  },
  // Second
  s: function s(date, token, localize) {
    if (token === 'so') {
      return localize.ordinalNumber(date.getUTCSeconds(), {
        unit: 'second'
      });
    }
    return formatters$1.s(date, token);
  },
  // Fraction of second
  S: function S(date, token) {
    return formatters$1.S(date, token);
  },
  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function X(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    if (timezoneOffset === 0) {
      return 'Z';
    }
    switch (token) {
      // Hours and optional minutes
      case 'X':
        return formatTimezoneWithOptionalMinutes(timezoneOffset);

      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XX`
      case 'XXXX':
      case 'XX':
        // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);

      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XXX`
      case 'XXXXX':
      case 'XXX': // Hours and minutes with `:` delimiter
      default:
        return formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function x(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      // Hours and optional minutes
      case 'x':
        return formatTimezoneWithOptionalMinutes(timezoneOffset);

      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xx`
      case 'xxxx':
      case 'xx':
        // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);

      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xxx`
      case 'xxxxx':
      case 'xxx': // Hours and minutes with `:` delimiter
      default:
        return formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (GMT)
  O: function O(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      // Short
      case 'O':
      case 'OO':
      case 'OOO':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
      // Long
      case 'OOOO':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (specific non-location)
  z: function z(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      // Short
      case 'z':
      case 'zz':
      case 'zzz':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
      // Long
      case 'zzzz':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':');
    }
  },
  // Seconds timestamp
  t: function t(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = Math.floor(originalDate.getTime() / 1000);
    return addLeadingZeros(timestamp, token.length);
  },
  // Milliseconds timestamp
  T: function T(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = originalDate.getTime();
    return addLeadingZeros(timestamp, token.length);
  }
};
function formatTimezoneShort(offset, dirtyDelimiter) {
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;
  if (minutes === 0) {
    return sign + String(hours);
  }
  var delimiter = dirtyDelimiter || '';
  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
}
function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
  if (offset % 60 === 0) {
    var sign = offset > 0 ? '-' : '+';
    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);
  }
  return formatTimezone(offset, dirtyDelimiter);
}
function formatTimezone(offset, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || '';
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
  var minutes = addLeadingZeros(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}

var dateLongFormatter = function dateLongFormatter(pattern, formatLong) {
  switch (pattern) {
    case 'P':
      return formatLong.date({
        width: 'short'
      });
    case 'PP':
      return formatLong.date({
        width: 'medium'
      });
    case 'PPP':
      return formatLong.date({
        width: 'long'
      });
    case 'PPPP':
    default:
      return formatLong.date({
        width: 'full'
      });
  }
};
var timeLongFormatter = function timeLongFormatter(pattern, formatLong) {
  switch (pattern) {
    case 'p':
      return formatLong.time({
        width: 'short'
      });
    case 'pp':
      return formatLong.time({
        width: 'medium'
      });
    case 'ppp':
      return formatLong.time({
        width: 'long'
      });
    case 'pppp':
    default:
      return formatLong.time({
        width: 'full'
      });
  }
};
var dateTimeLongFormatter = function dateTimeLongFormatter(pattern, formatLong) {
  var matchResult = pattern.match(/(P+)(p+)?/) || [];
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];
  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong);
  }
  var dateTimeFormat;
  switch (datePattern) {
    case 'P':
      dateTimeFormat = formatLong.dateTime({
        width: 'short'
      });
      break;
    case 'PP':
      dateTimeFormat = formatLong.dateTime({
        width: 'medium'
      });
      break;
    case 'PPP':
      dateTimeFormat = formatLong.dateTime({
        width: 'long'
      });
      break;
    case 'PPPP':
    default:
      dateTimeFormat = formatLong.dateTime({
        width: 'full'
      });
      break;
  }
  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));
};
var longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
};

/**
 * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
 * They usually appear for dates that denote time before the timezones were introduced
 * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
 * and GMT+01:00:00 after that date)
 *
 * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
 * which would lead to incorrect calculations.
 *
 * This function returns the timezone offset in milliseconds that takes seconds in account.
 */
function getTimezoneOffsetInMilliseconds(date) {
  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
  utcDate.setUTCFullYear(date.getFullYear());
  return date.getTime() - utcDate.getTime();
}

var protectedDayOfYearTokens = ['D', 'DD'];
var protectedWeekYearTokens = ['YY', 'YYYY'];
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token, format, input) {
  if (token === 'YYYY') {
    throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === 'YY') {
    throw new RangeError("Use `yy` instead of `YY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === 'D') {
    throw new RangeError("Use `d` instead of `D` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === 'DD') {
    throw new RangeError("Use `dd` instead of `DD` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  }
}

var formatDistanceLocale = {
  lessThanXSeconds: {
    one: 'less than a second',
    other: 'less than {{count}} seconds'
  },
  xSeconds: {
    one: '1 second',
    other: '{{count}} seconds'
  },
  halfAMinute: 'half a minute',
  lessThanXMinutes: {
    one: 'less than a minute',
    other: 'less than {{count}} minutes'
  },
  xMinutes: {
    one: '1 minute',
    other: '{{count}} minutes'
  },
  aboutXHours: {
    one: 'about 1 hour',
    other: 'about {{count}} hours'
  },
  xHours: {
    one: '1 hour',
    other: '{{count}} hours'
  },
  xDays: {
    one: '1 day',
    other: '{{count}} days'
  },
  aboutXWeeks: {
    one: 'about 1 week',
    other: 'about {{count}} weeks'
  },
  xWeeks: {
    one: '1 week',
    other: '{{count}} weeks'
  },
  aboutXMonths: {
    one: 'about 1 month',
    other: 'about {{count}} months'
  },
  xMonths: {
    one: '1 month',
    other: '{{count}} months'
  },
  aboutXYears: {
    one: 'about 1 year',
    other: 'about {{count}} years'
  },
  xYears: {
    one: '1 year',
    other: '{{count}} years'
  },
  overXYears: {
    one: 'over 1 year',
    other: 'over {{count}} years'
  },
  almostXYears: {
    one: 'almost 1 year',
    other: 'almost {{count}} years'
  }
};
var formatDistance = function formatDistance(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === 'string') {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace('{{count}}', count.toString());
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return 'in ' + result;
    } else {
      return result + ' ago';
    }
  }
  return result;
};

function buildFormatLongFn(args) {
  return function () {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    // TODO: Remove String()
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}

var dateFormats = {
  full: 'EEEE, MMMM do, y',
  long: 'MMMM do, y',
  medium: 'MMM d, y',
  short: 'MM/dd/yyyy'
};
var timeFormats = {
  full: 'h:mm:ss a zzzz',
  long: 'h:mm:ss a z',
  medium: 'h:mm:ss a',
  short: 'h:mm a'
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: '{{date}}, {{time}}',
  short: '{{date}}, {{time}}'
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: 'full'
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: 'full'
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: 'full'
  })
};

var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: 'P'
};
var formatRelative = function formatRelative(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
};

function buildLocalizeFn(args) {
  return function (dirtyIndex, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : 'standalone';
    var valuesArray;
    if (context === 'formatting' && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!
    return valuesArray[index];
  };
}

var eraValues = {
  narrow: ['B', 'A'],
  abbreviated: ['BC', 'AD'],
  wide: ['Before Christ', 'Anno Domini']
};
var quarterValues = {
  narrow: ['1', '2', '3', '4'],
  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
var monthValues = {
  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
};
var dayValues = {
  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
};
var dayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  }
};
var ordinalNumber = function ordinalNumber(dirtyNumber, _options) {
  var number = Number(dirtyNumber);

  // If ordinal numbers depend on context, for example,
  // if they are different for different grammatical genders,
  // use `options.unit`.
  //
  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
  // 'day', 'hour', 'minute', 'second'.

  var rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + 'st';
      case 2:
        return number + 'nd';
      case 3:
        return number + 'rd';
    }
  }
  return number + 'th';
};
var localize = {
  ordinalNumber: ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: 'wide'
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: 'wide',
    argumentCallback: function argumentCallback(quarter) {
      return quarter - 1;
    }
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: 'wide'
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: 'wide'
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: 'wide',
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: 'wide'
  })
};

function buildMatchFn(args) {
  return function (string) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex$1(parsePatterns, function (pattern) {
      return pattern.test(matchedString);
    }) : findKey(parsePatterns, function (pattern) {
      return pattern.test(matchedString);
    });
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value: value,
      rest: rest
    };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }
  return undefined;
}
function findIndex$1(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return undefined;
}

function buildMatchPatternFn(args) {
  return function (string) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult) return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult) return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value: value,
      rest: rest
    };
  };
}

var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match$1 = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {
      return parseInt(value, 10);
    }
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseEraPatterns,
    defaultParseWidth: 'any'
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: 'any',
    valueCallback: function valueCallback(index) {
      return index + 1;
    }
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: 'any'
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseDayPatterns,
    defaultParseWidth: 'any'
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: 'any',
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: 'any'
  })
};

/**
 * @type {Locale}
 * @category Locales
 * @summary English locale (United States).
 * @language English
 * @iso-639-2 eng
 * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
 * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
 */
var locale = {
  code: 'en-US',
  formatDistance: formatDistance,
  formatLong: formatLong,
  formatRelative: formatRelative,
  localize: localize,
  match: match$1,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1
  }
};

// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps
var formattingTokensRegExp$1 = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;

// This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`
var longFormattingTokensRegExp$1 = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp$1 = /^'([^]*?)'?$/;
var doubleQuoteRegExp$1 = /''/g;
var unescapedLatinCharacterRegExp$1 = /[a-zA-Z]/;

/**
 * @name format
 * @category Common Helpers
 * @summary Format the date.
 *
 * @description
 * Return the formatted date string in the given format. The result may vary by locale.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * The characters wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 * (see the last example)
 *
 * Format of the string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 7 below the table).
 *
 * Accepted patterns:
 * | Unit                            | Pattern | Result examples                   | Notes |
 * |---------------------------------|---------|-----------------------------------|-------|
 * | Era                             | G..GGG  | AD, BC                            |       |
 * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 | GGGGG   | A, B                              |       |
 * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
 * |                                 | yy      | 44, 01, 00, 17                    | 5     |
 * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
 * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
 * |                                 | yyyyy   | ...                               | 3,5   |
 * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
 * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
 * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
 * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
 * |                                 | YYYYY   | ...                               | 3,5   |
 * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
 * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
 * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
 * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
 * |                                 | RRRRR   | ...                               | 3,5,7 |
 * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
 * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
 * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
 * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
 * |                                 | uuuuu   | ...                               | 3,5   |
 * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
 * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | QQ      | 01, 02, 03, 04                    |       |
 * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
 * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | qq      | 01, 02, 03, 04                    |       |
 * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
 * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
 * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | MM      | 01, 02, ..., 12                   |       |
 * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 | MMMM    | January, February, ..., December  | 2     |
 * |                                 | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
 * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | LL      | 01, 02, ..., 12                   |       |
 * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 | LLLL    | January, February, ..., December  | 2     |
 * |                                 | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | w       | 1, 2, ..., 53                     |       |
 * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
 * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | II      | 01, 02, ..., 53                   | 7     |
 * | Day of month                    | d       | 1, 2, ..., 31                     |       |
 * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
 * |                                 | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |
 * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
 * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |
 * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 | DDDD    | ...                               | 3     |
 * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
 * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
 * |                                 | ii      | 01, 02, ..., 07                   | 7     |
 * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |
 * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
 * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
 * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |
 * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | ee      | 02, 03, ..., 01                   |       |
 * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | cc      | 02, 03, ..., 01                   |       |
 * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | AM, PM                          | a..aa   | AM, PM                            |       |
 * |                                 | aaa     | am, pm                            |       |
 * |                                 | aaaa    | a.m., p.m.                        | 2     |
 * |                                 | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |
 * |                                 | bbb     | am, pm, noon, midnight            |       |
 * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
 * |                                 | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
 * |                                 | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
 * |                                 | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
 * |                                 | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
 * |                                 | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          | m       | 0, 1, ..., 59                     |       |
 * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | mm      | 00, 01, ..., 59                   |       |
 * | Second                          | s       | 0, 1, ..., 59                     |       |
 * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | ss      | 00, 01, ..., 59                   |       |
 * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
 * |                                 | SS      | 00, 01, ..., 99                   |       |
 * |                                 | SSS     | 000, 001, ..., 999                |       |
 * |                                 | SSSS    | ...                               | 3     |
 * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
 * |                                 | XX      | -0800, +0530, Z                   |       |
 * |                                 | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
 * |                                 | xx      | -0800, +0530, +0000               |       |
 * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
 * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
 * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
 * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
 * | Seconds timestamp               | t       | 512969520                         | 7     |
 * |                                 | tt      | ...                               | 3,7   |
 * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
 * |                                 | TT      | ...                               | 3,7   |
 * | Long localized date             | P       | 04/29/1453                        | 7     |
 * |                                 | PP      | Apr 29, 1453                      | 7     |
 * |                                 | PPP     | April 29th, 1453                  | 7     |
 * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |
 * | Long localized time             | p       | 12:00 AM                          | 7     |
 * |                                 | pp      | 12:00:00 AM                       | 7     |
 * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
 * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
 * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |
 * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |
 * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |
 * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
 *    the output will be the same as default pattern for this unit, usually
 *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
 *    are marked with "2" in the last column of the table.
 *
 *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
 *
 * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
 *    The output will be padded with zeros to match the length of the pattern.
 *
 *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
 *
 * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 5. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` always returns the last two digits of a year,
 *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
 *
 *    | Year | `yy` | `uu` |
 *    |------|------|------|
 *    | 1    |   01 |   01 |
 *    | 14   |   14 |   14 |
 *    | 376  |   76 |  376 |
 *    | 1453 |   53 | 1453 |
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
 *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
 *
 * 6. Specific non-location timezones are currently unavailable in `date-fns`,
 *    so right now these tokens fall back to GMT timezones.
 *
 * 7. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `t`: seconds timestamp
 *    - `T`: milliseconds timestamp
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * @param {Date|Number} date - the original date
 * @param {String} format - the string of tokens
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
 * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @returns {String} the formatted date string
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `options.locale` must contain `localize` property
 * @throws {RangeError} `options.locale` must contain `formatLong` property
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} format string contains an unescaped latin alphabet character
 *
 * @example
 * // Represent 11 February 2014 in middle-endian format:
 * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')
 * //=> '02/11/2014'
 *
 * @example
 * // Represent 2 July 2014 in Esperanto:
 * import { eoLocale } from 'date-fns/locale/eo'
 * const result = format(new Date(2014, 6, 2), "do 'de' MMMM yyyy", {
 *   locale: eoLocale
 * })
 * //=> '2-a de julio 2014'
 *
 * @example
 * // Escape string by single quote characters:
 * const result = format(new Date(2014, 6, 2, 15), "h 'o''clock'")
 * //=> "3 o'clock"
 */

function format(dirtyDate, dirtyFormatStr, options) {
  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
  requiredArgs(2, arguments);
  var formatStr = String(dirtyFormatStr);
  var defaultOptions = getDefaultOptions();
  var locale$1 = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : locale;
  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);

  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }
  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  if (!locale$1.localize) {
    throw new RangeError('locale must contain localize property');
  }
  if (!locale$1.formatLong) {
    throw new RangeError('locale must contain formatLong property');
  }
  var originalDate = toDate(dirtyDate);
  if (!isValid(originalDate)) {
    throw new RangeError('Invalid time value');
  }

  // Convert the date in system timezone to the same date in UTC+00:00 timezone.
  // This ensures that when UTC functions will be implemented, locales will be compatible with them.
  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376
  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);
  var utcDate = subMilliseconds(originalDate, timezoneOffset);
  var formatterOptions = {
    firstWeekContainsDate: firstWeekContainsDate,
    weekStartsOn: weekStartsOn,
    locale: locale$1,
    _originalDate: originalDate
  };
  var result = formatStr.match(longFormattingTokensRegExp$1).map(function (substring) {
    var firstCharacter = substring[0];
    if (firstCharacter === 'p' || firstCharacter === 'P') {
      var longFormatter = longFormatters[firstCharacter];
      return longFormatter(substring, locale$1.formatLong);
    }
    return substring;
  }).join('').match(formattingTokensRegExp$1).map(function (substring) {
    // Replace two single quote characters with one single quote character
    if (substring === "''") {
      return "'";
    }
    var firstCharacter = substring[0];
    if (firstCharacter === "'") {
      return cleanEscapedString$1(substring);
    }
    var formatter = formatters[firstCharacter];
    if (formatter) {
      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
      }
      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
      }
      return formatter(utcDate, substring, locale$1.localize, formatterOptions);
    }
    if (firstCharacter.match(unescapedLatinCharacterRegExp$1)) {
      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
    }
    return substring;
  }).join('');
  return result;
}
function cleanEscapedString$1(input) {
  var matched = input.match(escapedStringRegExp$1);
  if (!matched) {
    return input;
  }
  return matched[1].replace(doubleQuoteRegExp$1, "'");
}

var MILLISECONDS_IN_MINUTE = 60000;

/**
 * @name addMinutes
 * @category Minute Helpers
 * @summary Add the specified number of minutes to the given date.
 *
 * @description
 * Add the specified number of minutes to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the minutes added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 30 minutes to 10 July 2014 12:00:00:
 * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)
 * //=> Thu Jul 10 2014 12:30:00
 */
function addMinutes(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);
}

var MILLISECONDS_IN_HOUR = 3600000;

/**
 * @name addHours
 * @category Hour Helpers
 * @summary Add the specified number of hours to the given date.
 *
 * @description
 * Add the specified number of hours to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the hours added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 2 hours to 10 July 2014 23:00:00:
 * const result = addHours(new Date(2014, 6, 10, 23, 0), 2)
 * //=> Fri Jul 11 2014 01:00:00
 */
function addHours(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);
}

/**
 * @name addDays
 * @category Day Helpers
 * @summary Add the specified number of days to the given date.
 *
 * @description
 * Add the specified number of days to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} - the new date with the days added
 * @throws {TypeError} - 2 arguments required
 *
 * @example
 * // Add 10 days to 1 September 2014:
 * const result = addDays(new Date(2014, 8, 1), 10)
 * //=> Thu Sep 11 2014 00:00:00
 */
function addDays(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  if (isNaN(amount)) {
    return new Date(NaN);
  }
  if (!amount) {
    // If 0 days, no-op to avoid changing times in the hour before end of DST
    return date;
  }
  date.setDate(date.getDate() + amount);
  return date;
}

/**
 * @name addWeeks
 * @category Week Helpers
 * @summary Add the specified number of weeks to the given date.
 *
 * @description
 * Add the specified number of week to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the weeks added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 4 weeks to 1 September 2014:
 * const result = addWeeks(new Date(2014, 8, 1), 4)
 * //=> Mon Sep 29 2014 00:00:00
 */
function addWeeks(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  var days = amount * 7;
  return addDays(dirtyDate, days);
}

/**
 * @name addMonths
 * @category Month Helpers
 * @summary Add the specified number of months to the given date.
 *
 * @description
 * Add the specified number of months to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the months added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 5 months to 1 September 2014:
 * const result = addMonths(new Date(2014, 8, 1), 5)
 * //=> Sun Feb 01 2015 00:00:00
 */
function addMonths(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  if (isNaN(amount)) {
    return new Date(NaN);
  }
  if (!amount) {
    // If 0 months, no-op to avoid changing times in the hour before end of DST
    return date;
  }
  var dayOfMonth = date.getDate();

  // The JS Date object supports date math by accepting out-of-bounds values for
  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and
  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we
  // want except that dates will wrap around the end of a month, meaning that
  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So
  // we'll default to the end of the desired month by adding 1 to the desired
  // month and using a date of 0 to back up one day to the end of the desired
  // month.
  var endOfDesiredMonth = new Date(date.getTime());
  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
  var daysInMonth = endOfDesiredMonth.getDate();
  if (dayOfMonth >= daysInMonth) {
    // If we're already at the end of the month, then this is the correct date
    // and we're done.
    return endOfDesiredMonth;
  } else {
    // Otherwise, we now know that setting the original day-of-month value won't
    // cause an overflow, so set the desired day-of-month. Note that we can't
    // just set the date of `endOfDesiredMonth` because that object may have had
    // its time changed in the unusual case where where a DST transition was on
    // the last day of the month and its local time was in the hour skipped or
    // repeated next to a DST transition.  So we use `date` instead which is
    // guaranteed to still have the original time.
    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
    return date;
  }
}

/**
 * @name addQuarters
 * @category Quarter Helpers
 * @summary Add the specified number of year quarters to the given date.
 *
 * @description
 * Add the specified number of year quarters to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the quarters added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 1 quarter to 1 September 2014:
 * const result = addQuarters(new Date(2014, 8, 1), 1)
 * //=> Mon Dec 01 2014 00:00:00
 */
function addQuarters(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  var months = amount * 3;
  return addMonths(dirtyDate, months);
}

/**
 * @name addYears
 * @category Year Helpers
 * @summary Add the specified number of years to the given date.
 *
 * @description
 * Add the specified number of years to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the years added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 5 years to 1 September 2014:
 * const result = addYears(new Date(2014, 8, 1), 5)
 * //=> Sun Sep 01 2019 00:00:00
 */
function addYears(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMonths(dirtyDate, amount * 12);
}

/**
 * @name subDays
 * @category Day Helpers
 * @summary Subtract the specified number of days from the given date.
 *
 * @description
 * Subtract the specified number of days from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the days subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 10 days from 1 September 2014:
 * const result = subDays(new Date(2014, 8, 1), 10)
 * //=> Fri Aug 22 2014 00:00:00
 */
function subDays(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addDays(dirtyDate, -amount);
}

/**
 * @name subWeeks
 * @category Week Helpers
 * @summary Subtract the specified number of weeks from the given date.
 *
 * @description
 * Subtract the specified number of weeks from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the weeks subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 4 weeks from 1 September 2014:
 * const result = subWeeks(new Date(2014, 8, 1), 4)
 * //=> Mon Aug 04 2014 00:00:00
 */
function subWeeks(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addWeeks(dirtyDate, -amount);
}

/**
 * @name subMonths
 * @category Month Helpers
 * @summary Subtract the specified number of months from the given date.
 *
 * @description
 * Subtract the specified number of months from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the months subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 5 months from 1 February 2015:
 * const result = subMonths(new Date(2015, 1, 1), 5)
 * //=> Mon Sep 01 2014 00:00:00
 */
function subMonths(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMonths(dirtyDate, -amount);
}

/**
 * @name subQuarters
 * @category Quarter Helpers
 * @summary Subtract the specified number of year quarters from the given date.
 *
 * @description
 * Subtract the specified number of year quarters from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of quarters to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the quarters subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 3 quarters from 1 September 2014:
 * const result = subQuarters(new Date(2014, 8, 1), 3)
 * //=> Sun Dec 01 2013 00:00:00
 */
function subQuarters(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addQuarters(dirtyDate, -amount);
}

/**
 * @name subYears
 * @category Year Helpers
 * @summary Subtract the specified number of years from the given date.
 *
 * @description
 * Subtract the specified number of years from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the years subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 5 years from 1 September 2014:
 * const result = subYears(new Date(2014, 8, 1), 5)
 * //=> Tue Sep 01 2009 00:00:00
 */
function subYears(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addYears(dirtyDate, -amount);
}

/**
 * @name getSeconds
 * @category Second Helpers
 * @summary Get the seconds of the given date.
 *
 * @description
 * Get the seconds of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the seconds
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Get the seconds of 29 February 2012 11:45:05.123:
 * const result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))
 * //=> 5
 */
function getSeconds(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var seconds = date.getSeconds();
  return seconds;
}

/**
 * @name getMinutes
 * @category Minute Helpers
 * @summary Get the minutes of the given date.
 *
 * @description
 * Get the minutes of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the minutes
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Get the minutes of 29 February 2012 11:45:05:
 * const result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))
 * //=> 45
 */
function getMinutes(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var minutes = date.getMinutes();
  return minutes;
}

/**
 * @name getHours
 * @category Hour Helpers
 * @summary Get the hours of the given date.
 *
 * @description
 * Get the hours of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the hours
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Get the hours of 29 February 2012 11:45:00:
 * const result = getHours(new Date(2012, 1, 29, 11, 45))
 * //=> 11
 */
function getHours(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var hours = date.getHours();
  return hours;
}

/**
 * @name getDay
 * @category Weekday Helpers
 * @summary Get the day of the week of the given date.
 *
 * @description
 * Get the day of the week of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {0|1|2|3|4|5|6} the day of week, 0 represents Sunday
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which day of the week is 29 February 2012?
 * const result = getDay(new Date(2012, 1, 29))
 * //=> 3
 */
function getDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var day = date.getDay();
  return day;
}

/**
 * @name getDate
 * @category Day Helpers
 * @summary Get the day of the month of the given date.
 *
 * @description
 * Get the day of the month of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the day of month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which day of the month is 29 February 2012?
 * const result = getDate(new Date(2012, 1, 29))
 * //=> 29
 */
function getDate(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var dayOfMonth = date.getDate();
  return dayOfMonth;
}

/**
 * @name startOfWeek
 * @category Week Helpers
 * @summary Return the start of a week for the given date.
 *
 * @description
 * Return the start of a week for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Date} the start of a week
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 *
 * @example
 * // The start of a week for 2 September 2014 11:55:00:
 * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sun Aug 31 2014 00:00:00
 *
 * @example
 * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:
 * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
 * //=> Mon Sep 01 2014 00:00:00
 */
function startOfWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  var date = toDate(dirtyDate);
  var day = date.getDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setDate(date.getDate() - diff);
  date.setHours(0, 0, 0, 0);
  return date;
}

/**
 * @name startOfISOWeek
 * @category ISO Week Helpers
 * @summary Return the start of an ISO week for the given date.
 *
 * @description
 * Return the start of an ISO week for the given date.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of an ISO week
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of an ISO week for 2 September 2014 11:55:00:
 * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Mon Sep 01 2014 00:00:00
 */
function startOfISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  return startOfWeek(dirtyDate, {
    weekStartsOn: 1
  });
}

/**
 * @name getISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Get the ISO week-numbering year of the given date.
 *
 * @description
 * Get the ISO week-numbering year of the given date,
 * which always starts 3 days before the year's first Thursday.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the ISO week-numbering year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which ISO-week numbering year is 2 January 2005?
 * const result = getISOWeekYear(new Date(2005, 0, 2))
 * //=> 2004
 */
function getISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);
  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

/**
 * @name startOfISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Return the start of an ISO week-numbering year for the given date.
 *
 * @description
 * Return the start of an ISO week-numbering year,
 * which always starts 3 days before the year's first Thursday.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of an ISO week-numbering year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of an ISO week-numbering year for 2 July 2005:
 * const result = startOfISOWeekYear(new Date(2005, 6, 2))
 * //=> Mon Jan 03 2005 00:00:00
 */
function startOfISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var year = getISOWeekYear(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setFullYear(year, 0, 4);
  fourthOfJanuary.setHours(0, 0, 0, 0);
  var date = startOfISOWeek(fourthOfJanuary);
  return date;
}

var MILLISECONDS_IN_WEEK = 604800000;

/**
 * @name getISOWeek
 * @category ISO Week Helpers
 * @summary Get the ISO week of the given date.
 *
 * @description
 * Get the ISO week of the given date.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the ISO week
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which week of the ISO-week numbering year is 2 January 2005?
 * const result = getISOWeek(new Date(2005, 0, 2))
 * //=> 53
 */
function getISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfISOWeek(date).getTime() - startOfISOWeekYear(date).getTime();

  // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)
  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

/**
 * @name getMonth
 * @category Month Helpers
 * @summary Get the month of the given date.
 *
 * @description
 * Get the month of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which month is 29 February 2012?
 * const result = getMonth(new Date(2012, 1, 29))
 * //=> 1
 */
function getMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var month = date.getMonth();
  return month;
}

/**
 * @name getQuarter
 * @category Quarter Helpers
 * @summary Get the year quarter of the given date.
 *
 * @description
 * Get the year quarter of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the quarter
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which quarter is 2 July 2014?
 * const result = getQuarter(new Date(2014, 6, 2))
 * //=> 3
 */
function getQuarter(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var quarter = Math.floor(date.getMonth() / 3) + 1;
  return quarter;
}

/**
 * @name getYear
 * @category Year Helpers
 * @summary Get the year of the given date.
 *
 * @description
 * Get the year of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which year is 2 July 2014?
 * const result = getYear(new Date(2014, 6, 2))
 * //=> 2014
 */
function getYear(dirtyDate) {
  requiredArgs(1, arguments);
  return toDate(dirtyDate).getFullYear();
}

/**
 * @name getTime
 * @category Timestamp Helpers
 * @summary Get the milliseconds timestamp of the given date.
 *
 * @description
 * Get the milliseconds timestamp of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the timestamp
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Get the timestamp of 29 February 2012 11:45:05.123:
 * const result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))
 * //=> 1330515905123
 */
function getTime(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var timestamp = date.getTime();
  return timestamp;
}

/**
 * @name setSeconds
 * @category Second Helpers
 * @summary Set the seconds to the given date.
 *
 * @description
 * Set the seconds to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} seconds - the seconds of the new date
 * @returns {Date} the new date with the seconds set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set 45 seconds to 1 September 2014 11:30:40:
 * const result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)
 * //=> Mon Sep 01 2014 11:30:45
 */
function setSeconds(dirtyDate, dirtySeconds) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var seconds = toInteger(dirtySeconds);
  date.setSeconds(seconds);
  return date;
}

/**
 * @name setMinutes
 * @category Minute Helpers
 * @summary Set the minutes to the given date.
 *
 * @description
 * Set the minutes to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} minutes - the minutes of the new date
 * @returns {Date} the new date with the minutes set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set 45 minutes to 1 September 2014 11:30:40:
 * const result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)
 * //=> Mon Sep 01 2014 11:45:40
 */
function setMinutes(dirtyDate, dirtyMinutes) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var minutes = toInteger(dirtyMinutes);
  date.setMinutes(minutes);
  return date;
}

/**
 * @name setHours
 * @category Hour Helpers
 * @summary Set the hours to the given date.
 *
 * @description
 * Set the hours to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} hours - the hours of the new date
 * @returns {Date} the new date with the hours set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set 4 hours to 1 September 2014 11:30:00:
 * const result = setHours(new Date(2014, 8, 1, 11, 30), 4)
 * //=> Mon Sep 01 2014 04:30:00
 */
function setHours(dirtyDate, dirtyHours) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var hours = toInteger(dirtyHours);
  date.setHours(hours);
  return date;
}

/**
 * @name getDaysInMonth
 * @category Month Helpers
 * @summary Get the number of days in a month of the given date.
 *
 * @description
 * Get the number of days in a month of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the number of days in a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // How many days are in February 2000?
 * const result = getDaysInMonth(new Date(2000, 1))
 * //=> 29
 */
function getDaysInMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getFullYear();
  var monthIndex = date.getMonth();
  var lastDayOfMonth = new Date(0);
  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);
  lastDayOfMonth.setHours(0, 0, 0, 0);
  return lastDayOfMonth.getDate();
}

/**
 * @name setMonth
 * @category Month Helpers
 * @summary Set the month to the given date.
 *
 * @description
 * Set the month to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} month - the month of the new date
 * @returns {Date} the new date with the month set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set February to 1 September 2014:
 * const result = setMonth(new Date(2014, 8, 1), 1)
 * //=> Sat Feb 01 2014 00:00:00
 */
function setMonth(dirtyDate, dirtyMonth) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var month = toInteger(dirtyMonth);
  var year = date.getFullYear();
  var day = date.getDate();
  var dateWithDesiredMonth = new Date(0);
  dateWithDesiredMonth.setFullYear(year, month, 15);
  dateWithDesiredMonth.setHours(0, 0, 0, 0);
  var daysInMonth = getDaysInMonth(dateWithDesiredMonth);
  // Set the last day of the new month
  // if the original date was the last day of the longer month
  date.setMonth(month, Math.min(day, daysInMonth));
  return date;
}

/**
 * @name setQuarter
 * @category Quarter Helpers
 * @summary Set the year quarter to the given date.
 *
 * @description
 * Set the year quarter to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} quarter - the quarter of the new date
 * @returns {Date} the new date with the quarter set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set the 2nd quarter to 2 July 2014:
 * const result = setQuarter(new Date(2014, 6, 2), 2)
 * //=> Wed Apr 02 2014 00:00:00
 */
function setQuarter(dirtyDate, dirtyQuarter) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var quarter = toInteger(dirtyQuarter);
  var oldQuarter = Math.floor(date.getMonth() / 3) + 1;
  var diff = quarter - oldQuarter;
  return setMonth(date, date.getMonth() + diff * 3);
}

/**
 * @name setYear
 * @category Year Helpers
 * @summary Set the year to the given date.
 *
 * @description
 * Set the year to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} year - the year of the new date
 * @returns {Date} the new date with the year set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set year 2013 to 1 September 2014:
 * const result = setYear(new Date(2014, 8, 1), 2013)
 * //=> Sun Sep 01 2013 00:00:00
 */
function setYear(dirtyDate, dirtyYear) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var year = toInteger(dirtyYear);

  // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date
  if (isNaN(date.getTime())) {
    return new Date(NaN);
  }
  date.setFullYear(year);
  return date;
}

/**
 * @name min
 * @category Common Helpers
 * @summary Returns the earliest of the given dates.
 *
 * @description
 * Returns the earliest of the given dates.
 *
 * @param {Date[]|Number[]} datesArray - the dates to compare
 * @returns {Date} - the earliest of the dates
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which of these dates is the earliest?
 * const result = min([
 *   new Date(1989, 6, 10),
 *   new Date(1987, 1, 11),
 *   new Date(1995, 6, 2),
 *   new Date(1990, 0, 1)
 * ])
 * //=> Wed Feb 11 1987 00:00:00
 */
function min$5(dirtyDatesArray) {
  requiredArgs(1, arguments);
  var datesArray;
  // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {
    datesArray = dirtyDatesArray;
    // If `dirtyDatesArray` is Array-like Object, convert to Array.
  } else if (_typeof$4(dirtyDatesArray) === 'object' && dirtyDatesArray !== null) {
    datesArray = Array.prototype.slice.call(dirtyDatesArray);
  } else {
    // `dirtyDatesArray` is non-iterable, return Invalid Date
    return new Date(NaN);
  }
  var result;
  datesArray.forEach(function (dirtyDate) {
    var currentDate = toDate(dirtyDate);
    if (result === undefined || result > currentDate || isNaN(currentDate.getDate())) {
      result = currentDate;
    }
  });
  return result || new Date(NaN);
}

/**
 * @name max
 * @category Common Helpers
 * @summary Return the latest of the given dates.
 *
 * @description
 * Return the latest of the given dates.
 *
 * @param {Date[]|Number[]} datesArray - the dates to compare
 * @returns {Date} the latest of the dates
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which of these dates is the latest?
 * const result = max([
 *   new Date(1989, 6, 10),
 *   new Date(1987, 1, 11),
 *   new Date(1995, 6, 2),
 *   new Date(1990, 0, 1)
 * ])
 * //=> Sun Jul 02 1995 00:00:00
 */
function max$4(dirtyDatesArray) {
  requiredArgs(1, arguments);
  var datesArray;
  // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {
    datesArray = dirtyDatesArray;

    // If `dirtyDatesArray` is Array-like Object, convert to Array.
  } else if (_typeof$4(dirtyDatesArray) === 'object' && dirtyDatesArray !== null) {
    datesArray = Array.prototype.slice.call(dirtyDatesArray);
  } else {
    // `dirtyDatesArray` is non-iterable, return Invalid Date
    return new Date(NaN);
  }
  var result;
  datesArray.forEach(function (dirtyDate) {
    var currentDate = toDate(dirtyDate);
    if (result === undefined || result < currentDate || isNaN(Number(currentDate))) {
      result = currentDate;
    }
  });
  return result || new Date(NaN);
}

/**
 * @name startOfDay
 * @category Day Helpers
 * @summary Return the start of a day for the given date.
 *
 * @description
 * Return the start of a day for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a day
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a day for 2 September 2014 11:55:00:
 * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 00:00:00
 */
function startOfDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setHours(0, 0, 0, 0);
  return date;
}

var MILLISECONDS_IN_DAY = 86400000;

/**
 * @name differenceInCalendarDays
 * @category Day Helpers
 * @summary Get the number of calendar days between the given dates.
 *
 * @description
 * Get the number of calendar days between the given dates. This means that the times are removed
 * from the dates and then the difference in days is calculated.
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar days
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many calendar days are between
 * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
 * const result = differenceInCalendarDays(
 *   new Date(2012, 6, 2, 0, 0),
 *   new Date(2011, 6, 2, 23, 0)
 * )
 * //=> 366
 * // How many calendar days are between
 * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
 * const result = differenceInCalendarDays(
 *   new Date(2011, 6, 3, 0, 1),
 *   new Date(2011, 6, 2, 23, 59)
 * )
 * //=> 1
 */
function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var startOfDayLeft = startOfDay(dirtyDateLeft);
  var startOfDayRight = startOfDay(dirtyDateRight);
  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);
  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight);

  // Round the number of days to the nearest integer
  // because the number of milliseconds in a day is not constant
  // (e.g. it's different in the day of the daylight saving time clock shift)
  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
}

/**
 * @name differenceInCalendarMonths
 * @category Month Helpers
 * @summary Get the number of calendar months between the given dates.
 *
 * @description
 * Get the number of calendar months between the given dates.
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar months
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many calendar months are between 31 January 2014 and 1 September 2014?
 * const result = differenceInCalendarMonths(
 *   new Date(2014, 8, 1),
 *   new Date(2014, 0, 31)
 * )
 * //=> 8
 */
function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();
  return yearDiff * 12 + monthDiff;
}

/**
 * @name differenceInCalendarYears
 * @category Year Helpers
 * @summary Get the number of calendar years between the given dates.
 *
 * @description
 * Get the number of calendar years between the given dates.
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar years
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many calendar years are between 31 December 2013 and 11 February 2015?
 * const result = differenceInCalendarYears(
 *   new Date(2015, 1, 11),
 *   new Date(2013, 11, 31)
 * )
 * //=> 2
 */
function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() - dateRight.getFullYear();
}

/**
 * @name startOfMonth
 * @category Month Helpers
 * @summary Return the start of a month for the given date.
 *
 * @description
 * Return the start of a month for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a month for 2 September 2014 11:55:00:
 * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Mon Sep 01 2014 00:00:00
 */
function startOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
  return date;
}

/**
 * @name startOfQuarter
 * @category Quarter Helpers
 * @summary Return the start of a year quarter for the given date.
 *
 * @description
 * Return the start of a year quarter for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a quarter
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a quarter for 2 September 2014 11:55:00:
 * const result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Jul 01 2014 00:00:00
 */
function startOfQuarter(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var currentMonth = date.getMonth();
  var month = currentMonth - currentMonth % 3;
  date.setMonth(month, 1);
  date.setHours(0, 0, 0, 0);
  return date;
}

/**
 * @name startOfYear
 * @category Year Helpers
 * @summary Return the start of a year for the given date.
 *
 * @description
 * Return the start of a year for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a year for 2 September 2014 11:55:00:
 * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Jan 01 2014 00:00:00
 */
function startOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var cleanDate = toDate(dirtyDate);
  var date = new Date(0);
  date.setFullYear(cleanDate.getFullYear(), 0, 1);
  date.setHours(0, 0, 0, 0);
  return date;
}

/**
 * @name endOfDay
 * @category Day Helpers
 * @summary Return the end of a day for the given date.
 *
 * @description
 * Return the end of a day for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a day
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a day for 2 September 2014 11:55:00:
 * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 23:59:59.999
 */
function endOfDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setHours(23, 59, 59, 999);
  return date;
}

/**
 * @name endOfMonth
 * @category Month Helpers
 * @summary Return the end of a month for the given date.
 *
 * @description
 * Return the end of a month for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a month for 2 September 2014 11:55:00:
 * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 30 2014 23:59:59.999
 */
function endOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var month = date.getMonth();
  date.setFullYear(date.getFullYear(), month + 1, 0);
  date.setHours(23, 59, 59, 999);
  return date;
}

/**
 * @name endOfYear
 * @category Year Helpers
 * @summary Return the end of a year for the given date.
 *
 * @description
 * Return the end of a year for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a year for 2 September 2014 11:55:00:
 * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Dec 31 2014 23:59:59.999
 */
function endOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getFullYear();
  date.setFullYear(year + 1, 0, 0);
  date.setHours(23, 59, 59, 999);
  return date;
}

/**
 * @name isEqual
 * @category Common Helpers
 * @summary Are the given dates equal?
 *
 * @description
 * Are the given dates equal?
 *
 * @param {Date|Number} dateLeft - the first date to compare
 * @param {Date|Number} dateRight - the second date to compare
 * @returns {Boolean} the dates are equal
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?
 * const result = isEqual(
 *   new Date(2014, 6, 2, 6, 30, 45, 0),
 *   new Date(2014, 6, 2, 6, 30, 45, 500)
 * )
 * //=> false
 */
function isEqual$3(dirtyLeftDate, dirtyRightDate) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyLeftDate);
  var dateRight = toDate(dirtyRightDate);
  return dateLeft.getTime() === dateRight.getTime();
}

/**
 * @name isSameDay
 * @category Day Helpers
 * @summary Are the given dates in the same day (and year and month)?
 *
 * @description
 * Are the given dates in the same day (and year and month)?
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same day (and year and month)
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?
 * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))
 * //=> true
 *
 * @example
 * // Are 4 September and 4 October in the same day?
 * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))
 * //=> false
 *
 * @example
 * // Are 4 September, 2014 and 4 September, 2015 in the same day?
 * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))
 * //=> false
 */
function isSameDay(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);
  var dateRightStartOfDay = startOfDay(dirtyDateRight);
  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
}

/**
 * @name isSameMonth
 * @category Month Helpers
 * @summary Are the given dates in the same month (and year)?
 *
 * @description
 * Are the given dates in the same month (and year)?
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same month (and year)
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 2 September 2014 and 25 September 2014 in the same month?
 * const result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))
 * //=> true
 *
 * @example
 * // Are 2 September 2014 and 25 September 2015 in the same month?
 * const result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))
 * //=> false
 */
function isSameMonth(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();
}

/**
 * @name isSameYear
 * @category Year Helpers
 * @summary Are the given dates in the same year?
 *
 * @description
 * Are the given dates in the same year?
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same year
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 2 September 2014 and 25 September 2014 in the same year?
 * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))
 * //=> true
 */
function isSameYear(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() === dateRight.getFullYear();
}

/**
 * @name isSameQuarter
 * @category Quarter Helpers
 * @summary Are the given dates in the same quarter (and year)?
 *
 * @description
 * Are the given dates in the same quarter (and year)?
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same quarter (and year)
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 1 January 2014 and 8 March 2014 in the same quarter?
 * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))
 * //=> true
 *
 * @example
 * // Are 1 January 2014 and 1 January 2015 in the same quarter?
 * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2015, 0, 1))
 * //=> false
 */
function isSameQuarter(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeftStartOfQuarter = startOfQuarter(dirtyDateLeft);
  var dateRightStartOfQuarter = startOfQuarter(dirtyDateRight);
  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();
}

/**
 * @name isAfter
 * @category Common Helpers
 * @summary Is the first date after the second one?
 *
 * @description
 * Is the first date after the second one?
 *
 * @param {Date|Number} date - the date that should be after the other one to return true
 * @param {Date|Number} dateToCompare - the date to compare with
 * @returns {Boolean} the first date is after the second date
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Is 10 July 1989 after 11 February 1987?
 * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))
 * //=> true
 */
function isAfter(dirtyDate, dirtyDateToCompare) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var dateToCompare = toDate(dirtyDateToCompare);
  return date.getTime() > dateToCompare.getTime();
}

/**
 * @name isBefore
 * @category Common Helpers
 * @summary Is the first date before the second one?
 *
 * @description
 * Is the first date before the second one?
 *
 * @param {Date|Number} date - the date that should be before the other one to return true
 * @param {Date|Number} dateToCompare - the date to compare with
 * @returns {Boolean} the first date is before the second date
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Is 10 July 1989 before 11 February 1987?
 * const result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))
 * //=> false
 */
function isBefore(dirtyDate, dirtyDateToCompare) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var dateToCompare = toDate(dirtyDateToCompare);
  return date.getTime() < dateToCompare.getTime();
}

/**
 * @name isWithinInterval
 * @category Interval Helpers
 * @summary Is the given date within the interval?
 *
 * @description
 * Is the given date within the interval? (Including start and end.)
 *
 * @param {Date|Number} date - the date to check
 * @param {Interval} interval - the interval to check
 * @returns {Boolean} the date is within the interval
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} The start of an interval cannot be after its end
 * @throws {RangeError} Date in interval cannot be `Invalid Date`
 *
 * @example
 * // For the date within the interval:
 * isWithinInterval(new Date(2014, 0, 3), {
 *   start: new Date(2014, 0, 1),
 *   end: new Date(2014, 0, 7)
 * })
 * //=> true
 *
 * @example
 * // For the date outside of the interval:
 * isWithinInterval(new Date(2014, 0, 10), {
 *   start: new Date(2014, 0, 1),
 *   end: new Date(2014, 0, 7)
 * })
 * //=> false
 *
 * @example
 * // For date equal to interval start:
 * isWithinInterval(date, { start, end: date }) // => true
 *
 * @example
 * // For date equal to interval end:
 * isWithinInterval(date, { start: date, end }) // => true
 */
function isWithinInterval(dirtyDate, interval) {
  requiredArgs(2, arguments);
  var time = toDate(dirtyDate).getTime();
  var startTime = toDate(interval.start).getTime();
  var endTime = toDate(interval.end).getTime();

  // Throw an exception if start date is after end date or if any date is `Invalid Date`
  if (!(startTime <= endTime)) {
    throw new RangeError('Invalid interval');
  }
  return time >= startTime && time <= endTime;
}

function _arrayLikeToArray$d(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}

function _unsupportedIterableToArray$d(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray$d(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$d(o, minLen);
}

function _createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray$d(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F() {};
      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e) {
          throw _e;
        },
        f: F
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true,
    didErr = false,
    err;
  return {
    s: function s() {
      it = it.call(o);
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e2) {
      didErr = true;
      err = _e2;
    },
    f: function f() {
      try {
        if (!normalCompletion && it["return"] != null) it["return"]();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}

function assign(target, object) {
  if (target == null) {
    throw new TypeError('assign requires that input parameter not be null or undefined');
  }
  for (var property in object) {
    if (Object.prototype.hasOwnProperty.call(object, property)) {
      target[property] = object[property];
    }
  }
  return target;
}

function _assertThisInitialized$2(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}

function _setPrototypeOf$2(o, p) {
  _setPrototypeOf$2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf$2(o, p);
}

function _inherits$1(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf$2(subClass, superClass);
}

function _getPrototypeOf$1(o) {
  _getPrototypeOf$1 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf$1(o);
}

function _isNativeReflectConstruct$1() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _possibleConstructorReturn$1(self, call) {
  if (call && (_typeof$4(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized$2(self);
}

function _createSuper$1(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$1();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$1(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$1(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$1(this, result);
  };
}

function _classCallCheck$d(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _toPrimitive(input, hint) {
  if (_typeof$4(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (_typeof$4(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}

function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return _typeof$4(key) === "symbol" ? key : String(key);
}

function _defineProperties$d(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass$d(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties$d(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties$d(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

function _defineProperty$5(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

var TIMEZONE_UNIT_PRIORITY = 10;
var Setter = /*#__PURE__*/function () {
  function Setter() {
    _classCallCheck$d(this, Setter);
    _defineProperty$5(this, "priority", void 0);
    _defineProperty$5(this, "subPriority", 0);
  }
  _createClass$d(Setter, [{
    key: "validate",
    value: function validate(_utcDate, _options) {
      return true;
    }
  }]);
  return Setter;
}();
var ValueSetter = /*#__PURE__*/function (_Setter) {
  _inherits$1(ValueSetter, _Setter);
  var _super = _createSuper$1(ValueSetter);
  function ValueSetter(value, validateValue, setValue, priority, subPriority) {
    var _this;
    _classCallCheck$d(this, ValueSetter);
    _this = _super.call(this);
    _this.value = value;
    _this.validateValue = validateValue;
    _this.setValue = setValue;
    _this.priority = priority;
    if (subPriority) {
      _this.subPriority = subPriority;
    }
    return _this;
  }
  _createClass$d(ValueSetter, [{
    key: "validate",
    value: function validate(utcDate, options) {
      return this.validateValue(utcDate, this.value, options);
    }
  }, {
    key: "set",
    value: function set(utcDate, flags, options) {
      return this.setValue(utcDate, flags, this.value, options);
    }
  }]);
  return ValueSetter;
}(Setter);
var DateToSystemTimezoneSetter = /*#__PURE__*/function (_Setter2) {
  _inherits$1(DateToSystemTimezoneSetter, _Setter2);
  var _super2 = _createSuper$1(DateToSystemTimezoneSetter);
  function DateToSystemTimezoneSetter() {
    var _this2;
    _classCallCheck$d(this, DateToSystemTimezoneSetter);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this2 = _super2.call.apply(_super2, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this2), "priority", TIMEZONE_UNIT_PRIORITY);
    _defineProperty$5(_assertThisInitialized$2(_this2), "subPriority", -1);
    return _this2;
  }
  _createClass$d(DateToSystemTimezoneSetter, [{
    key: "set",
    value: function set(date, flags) {
      if (flags.timestampIsSet) {
        return date;
      }
      var convertedDate = new Date(0);
      convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());
      convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());
      return convertedDate;
    }
  }]);
  return DateToSystemTimezoneSetter;
}(Setter);

var Parser = /*#__PURE__*/function () {
  function Parser() {
    _classCallCheck$d(this, Parser);
    _defineProperty$5(this, "incompatibleTokens", void 0);
    _defineProperty$5(this, "priority", void 0);
    _defineProperty$5(this, "subPriority", void 0);
  }
  _createClass$d(Parser, [{
    key: "run",
    value: function run(dateString, token, match, options) {
      var result = this.parse(dateString, token, match, options);
      if (!result) {
        return null;
      }
      return {
        setter: new ValueSetter(result.value, this.validate, this.set, this.priority, this.subPriority),
        rest: result.rest
      };
    }
  }, {
    key: "validate",
    value: function validate(_utcDate, _value, _options) {
      return true;
    }
  }]);
  return Parser;
}();

var EraParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(EraParser, _Parser);
  var _super = _createSuper$1(EraParser);
  function EraParser() {
    var _this;
    _classCallCheck$d(this, EraParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 140);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['R', 'u', 't', 'T']);
    return _this;
  }
  _createClass$d(EraParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        // AD, BC
        case 'G':
        case 'GG':
        case 'GGG':
          return match.era(dateString, {
            width: 'abbreviated'
          }) || match.era(dateString, {
            width: 'narrow'
          });
        // A, B
        case 'GGGGG':
          return match.era(dateString, {
            width: 'narrow'
          });
        // Anno Domini, Before Christ
        case 'GGGG':
        default:
          return match.era(dateString, {
            width: 'wide'
          }) || match.era(dateString, {
            width: 'abbreviated'
          }) || match.era(dateString, {
            width: 'narrow'
          });
      }
    }
  }, {
    key: "set",
    value: function set(date, flags, value) {
      flags.era = value;
      date.setUTCFullYear(value, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return EraParser;
}(Parser);

/**
 * Days in 1 week.
 *
 * @name daysInWeek
 * @constant
 * @type {number}
 * @default
 */

/**
 * Milliseconds in 1 minute
 *
 * @name millisecondsInMinute
 * @constant
 * @type {number}
 * @default
 */
var millisecondsInMinute = 60000;

/**
 * Milliseconds in 1 hour
 *
 * @name millisecondsInHour
 * @constant
 * @type {number}
 * @default
 */
var millisecondsInHour = 3600000;

/**
 * Milliseconds in 1 second
 *
 * @name millisecondsInSecond
 * @constant
 * @type {number}
 * @default
 */
var millisecondsInSecond = 1000;

var numericPatterns = {
  month: /^(1[0-2]|0?\d)/,
  // 0 to 12
  date: /^(3[0-1]|[0-2]?\d)/,
  // 0 to 31
  dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
  // 0 to 366
  week: /^(5[0-3]|[0-4]?\d)/,
  // 0 to 53
  hour23h: /^(2[0-3]|[0-1]?\d)/,
  // 0 to 23
  hour24h: /^(2[0-4]|[0-1]?\d)/,
  // 0 to 24
  hour11h: /^(1[0-1]|0?\d)/,
  // 0 to 11
  hour12h: /^(1[0-2]|0?\d)/,
  // 0 to 12
  minute: /^[0-5]?\d/,
  // 0 to 59
  second: /^[0-5]?\d/,
  // 0 to 59

  singleDigit: /^\d/,
  // 0 to 9
  twoDigits: /^\d{1,2}/,
  // 0 to 99
  threeDigits: /^\d{1,3}/,
  // 0 to 999
  fourDigits: /^\d{1,4}/,
  // 0 to 9999

  anyDigitsSigned: /^-?\d+/,
  singleDigitSigned: /^-?\d/,
  // 0 to 9, -0 to -9
  twoDigitsSigned: /^-?\d{1,2}/,
  // 0 to 99, -0 to -99
  threeDigitsSigned: /^-?\d{1,3}/,
  // 0 to 999, -0 to -999
  fourDigitsSigned: /^-?\d{1,4}/ // 0 to 9999, -0 to -9999
};

var timezonePatterns = {
  basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
  basic: /^([+-])(\d{2})(\d{2})|Z/,
  basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
  extended: /^([+-])(\d{2}):(\d{2})|Z/,
  extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
};

function mapValue(parseFnResult, mapFn) {
  if (!parseFnResult) {
    return parseFnResult;
  }
  return {
    value: mapFn(parseFnResult.value),
    rest: parseFnResult.rest
  };
}
function parseNumericPattern(pattern, dateString) {
  var matchResult = dateString.match(pattern);
  if (!matchResult) {
    return null;
  }
  return {
    value: parseInt(matchResult[0], 10),
    rest: dateString.slice(matchResult[0].length)
  };
}
function parseTimezonePattern(pattern, dateString) {
  var matchResult = dateString.match(pattern);
  if (!matchResult) {
    return null;
  }

  // Input is 'Z'
  if (matchResult[0] === 'Z') {
    return {
      value: 0,
      rest: dateString.slice(1)
    };
  }
  var sign = matchResult[1] === '+' ? 1 : -1;
  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
  return {
    value: sign * (hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * millisecondsInSecond),
    rest: dateString.slice(matchResult[0].length)
  };
}
function parseAnyDigitsSigned(dateString) {
  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);
}
function parseNDigits(n, dateString) {
  switch (n) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigit, dateString);
    case 2:
      return parseNumericPattern(numericPatterns.twoDigits, dateString);
    case 3:
      return parseNumericPattern(numericPatterns.threeDigits, dateString);
    case 4:
      return parseNumericPattern(numericPatterns.fourDigits, dateString);
    default:
      return parseNumericPattern(new RegExp('^\\d{1,' + n + '}'), dateString);
  }
}
function parseNDigitsSigned(n, dateString) {
  switch (n) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);
    case 2:
      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);
    case 3:
      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);
    case 4:
      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);
    default:
      return parseNumericPattern(new RegExp('^-?\\d{1,' + n + '}'), dateString);
  }
}
function dayPeriodEnumToHours(dayPeriod) {
  switch (dayPeriod) {
    case 'morning':
      return 4;
    case 'evening':
      return 17;
    case 'pm':
    case 'noon':
    case 'afternoon':
      return 12;
    case 'am':
    case 'midnight':
    case 'night':
    default:
      return 0;
  }
}
function normalizeTwoDigitYear(twoDigitYear, currentYear) {
  var isCommonEra = currentYear > 0;
  // Absolute number of the current year:
  // 1 -> 1 AC
  // 0 -> 1 BC
  // -1 -> 2 BC
  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;
  var result;
  if (absCurrentYear <= 50) {
    result = twoDigitYear || 100;
  } else {
    var rangeEnd = absCurrentYear + 50;
    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
  }
  return isCommonEra ? result : 1 - result;
}
function isLeapYearIndex$1(year) {
  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}

// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns
// | Year     |     y | yy |   yyy |  yyyy | yyyyy |
// |----------|-------|----|-------|-------|-------|
// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
var YearParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(YearParser, _Parser);
  var _super = _createSuper$1(YearParser);
  function YearParser() {
    var _this;
    _classCallCheck$d(this, YearParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 130);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass$d(YearParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      var valueCallback = function valueCallback(year) {
        return {
          year: year,
          isTwoDigitYear: token === 'yy'
        };
      };
      switch (token) {
        case 'y':
          return mapValue(parseNDigits(4, dateString), valueCallback);
        case 'yo':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'year'
          }), valueCallback);
        default:
          return mapValue(parseNDigits(token.length, dateString), valueCallback);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value.isTwoDigitYear || value.year > 0;
    }
  }, {
    key: "set",
    value: function set(date, flags, value) {
      var currentYear = date.getUTCFullYear();
      if (value.isTwoDigitYear) {
        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
        date.setUTCHours(0, 0, 0, 0);
        return date;
      }
      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;
      date.setUTCFullYear(year, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return YearParser;
}(Parser);

// Local week-numbering year
var LocalWeekYearParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(LocalWeekYearParser, _Parser);
  var _super = _createSuper$1(LocalWeekYearParser);
  function LocalWeekYearParser() {
    var _this;
    _classCallCheck$d(this, LocalWeekYearParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 130);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']);
    return _this;
  }
  _createClass$d(LocalWeekYearParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      var valueCallback = function valueCallback(year) {
        return {
          year: year,
          isTwoDigitYear: token === 'YY'
        };
      };
      switch (token) {
        case 'Y':
          return mapValue(parseNDigits(4, dateString), valueCallback);
        case 'Yo':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'year'
          }), valueCallback);
        default:
          return mapValue(parseNDigits(token.length, dateString), valueCallback);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value.isTwoDigitYear || value.year > 0;
    }
  }, {
    key: "set",
    value: function set(date, flags, value, options) {
      var currentYear = getUTCWeekYear(date, options);
      if (value.isTwoDigitYear) {
        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);
        date.setUTCHours(0, 0, 0, 0);
        return startOfUTCWeek(date, options);
      }
      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;
      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);
      date.setUTCHours(0, 0, 0, 0);
      return startOfUTCWeek(date, options);
    }
  }]);
  return LocalWeekYearParser;
}(Parser);

var ISOWeekYearParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(ISOWeekYearParser, _Parser);
  var _super = _createSuper$1(ISOWeekYearParser);
  function ISOWeekYearParser() {
    var _this;
    _classCallCheck$d(this, ISOWeekYearParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 130);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass$d(ISOWeekYearParser, [{
    key: "parse",
    value: function parse(dateString, token) {
      if (token === 'R') {
        return parseNDigitsSigned(4, dateString);
      }
      return parseNDigitsSigned(token.length, dateString);
    }
  }, {
    key: "set",
    value: function set(_date, _flags, value) {
      var firstWeekOfYear = new Date(0);
      firstWeekOfYear.setUTCFullYear(value, 0, 4);
      firstWeekOfYear.setUTCHours(0, 0, 0, 0);
      return startOfUTCISOWeek(firstWeekOfYear);
    }
  }]);
  return ISOWeekYearParser;
}(Parser);

var ExtendedYearParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(ExtendedYearParser, _Parser);
  var _super = _createSuper$1(ExtendedYearParser);
  function ExtendedYearParser() {
    var _this;
    _classCallCheck$d(this, ExtendedYearParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 130);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass$d(ExtendedYearParser, [{
    key: "parse",
    value: function parse(dateString, token) {
      if (token === 'u') {
        return parseNDigitsSigned(4, dateString);
      }
      return parseNDigitsSigned(token.length, dateString);
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCFullYear(value, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return ExtendedYearParser;
}(Parser);

var QuarterParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(QuarterParser, _Parser);
  var _super = _createSuper$1(QuarterParser);
  function QuarterParser() {
    var _this;
    _classCallCheck$d(this, QuarterParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 120);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass$d(QuarterParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        // 1, 2, 3, 4
        case 'Q':
        case 'QQ':
          // 01, 02, 03, 04
          return parseNDigits(token.length, dateString);
        // 1st, 2nd, 3rd, 4th
        case 'Qo':
          return match.ordinalNumber(dateString, {
            unit: 'quarter'
          });
        // Q1, Q2, Q3, Q4
        case 'QQQ':
          return match.quarter(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.quarter(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // 1, 2, 3, 4 (narrow quarter; could be not numerical)
        case 'QQQQQ':
          return match.quarter(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // 1st quarter, 2nd quarter, ...
        case 'QQQQ':
        default:
          return match.quarter(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.quarter(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.quarter(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 4;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth((value - 1) * 3, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return QuarterParser;
}(Parser);

var StandAloneQuarterParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(StandAloneQuarterParser, _Parser);
  var _super = _createSuper$1(StandAloneQuarterParser);
  function StandAloneQuarterParser() {
    var _this;
    _classCallCheck$d(this, StandAloneQuarterParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 120);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass$d(StandAloneQuarterParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        // 1, 2, 3, 4
        case 'q':
        case 'qq':
          // 01, 02, 03, 04
          return parseNDigits(token.length, dateString);
        // 1st, 2nd, 3rd, 4th
        case 'qo':
          return match.ordinalNumber(dateString, {
            unit: 'quarter'
          });
        // Q1, Q2, Q3, Q4
        case 'qqq':
          return match.quarter(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.quarter(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // 1, 2, 3, 4 (narrow quarter; could be not numerical)
        case 'qqqqq':
          return match.quarter(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // 1st quarter, 2nd quarter, ...
        case 'qqqq':
        default:
          return match.quarter(dateString, {
            width: 'wide',
            context: 'standalone'
          }) || match.quarter(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.quarter(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 4;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth((value - 1) * 3, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return StandAloneQuarterParser;
}(Parser);

var MonthParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(MonthParser, _Parser);
  var _super = _createSuper$1(MonthParser);
  function MonthParser() {
    var _this;
    _classCallCheck$d(this, MonthParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 110);
    return _this;
  }
  _createClass$d(MonthParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      var valueCallback = function valueCallback(value) {
        return value - 1;
      };
      switch (token) {
        // 1, 2, ..., 12
        case 'M':
          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback);
        // 01, 02, ..., 12
        case 'MM':
          return mapValue(parseNDigits(2, dateString), valueCallback);
        // 1st, 2nd, ..., 12th
        case 'Mo':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'month'
          }), valueCallback);
        // Jan, Feb, ..., Dec
        case 'MMM':
          return match.month(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.month(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // J, F, ..., D
        case 'MMMMM':
          return match.month(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // January, February, ..., December
        case 'MMMM':
        default:
          return match.month(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.month(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.month(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth(value, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return MonthParser;
}(Parser);

var StandAloneMonthParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(StandAloneMonthParser, _Parser);
  var _super = _createSuper$1(StandAloneMonthParser);
  function StandAloneMonthParser() {
    var _this;
    _classCallCheck$d(this, StandAloneMonthParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 110);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass$d(StandAloneMonthParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      var valueCallback = function valueCallback(value) {
        return value - 1;
      };
      switch (token) {
        // 1, 2, ..., 12
        case 'L':
          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback);
        // 01, 02, ..., 12
        case 'LL':
          return mapValue(parseNDigits(2, dateString), valueCallback);
        // 1st, 2nd, ..., 12th
        case 'Lo':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'month'
          }), valueCallback);
        // Jan, Feb, ..., Dec
        case 'LLL':
          return match.month(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.month(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // J, F, ..., D
        case 'LLLLL':
          return match.month(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // January, February, ..., December
        case 'LLLL':
        default:
          return match.month(dateString, {
            width: 'wide',
            context: 'standalone'
          }) || match.month(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.month(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth(value, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return StandAloneMonthParser;
}(Parser);

function setUTCWeek(dirtyDate, dirtyWeek, options) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var week = toInteger(dirtyWeek);
  var diff = getUTCWeek(date, options) - week;
  date.setUTCDate(date.getUTCDate() - diff * 7);
  return date;
}

var LocalWeekParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(LocalWeekParser, _Parser);
  var _super = _createSuper$1(LocalWeekParser);
  function LocalWeekParser() {
    var _this;
    _classCallCheck$d(this, LocalWeekParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 100);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']);
    return _this;
  }
  _createClass$d(LocalWeekParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'w':
          return parseNumericPattern(numericPatterns.week, dateString);
        case 'wo':
          return match.ordinalNumber(dateString, {
            unit: 'week'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 53;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value, options) {
      return startOfUTCWeek(setUTCWeek(date, value, options), options);
    }
  }]);
  return LocalWeekParser;
}(Parser);

function setUTCISOWeek(dirtyDate, dirtyISOWeek) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var isoWeek = toInteger(dirtyISOWeek);
  var diff = getUTCISOWeek(date) - isoWeek;
  date.setUTCDate(date.getUTCDate() - diff * 7);
  return date;
}

var ISOWeekParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(ISOWeekParser, _Parser);
  var _super = _createSuper$1(ISOWeekParser);
  function ISOWeekParser() {
    var _this;
    _classCallCheck$d(this, ISOWeekParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 100);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass$d(ISOWeekParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'I':
          return parseNumericPattern(numericPatterns.week, dateString);
        case 'Io':
          return match.ordinalNumber(dateString, {
            unit: 'week'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 53;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      return startOfUTCISOWeek(setUTCISOWeek(date, value));
    }
  }]);
  return ISOWeekParser;
}(Parser);

var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

// Day of the month
var DateParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(DateParser, _Parser);
  var _super = _createSuper$1(DateParser);
  function DateParser() {
    var _this;
    _classCallCheck$d(this, DateParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 90);
    _defineProperty$5(_assertThisInitialized$2(_this), "subPriority", 1);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass$d(DateParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'd':
          return parseNumericPattern(numericPatterns.date, dateString);
        case 'do':
          return match.ordinalNumber(dateString, {
            unit: 'date'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(date, value) {
      var year = date.getUTCFullYear();
      var isLeapYear = isLeapYearIndex$1(year);
      var month = date.getUTCMonth();
      if (isLeapYear) {
        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
      } else {
        return value >= 1 && value <= DAYS_IN_MONTH[month];
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCDate(value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return DateParser;
}(Parser);

var DayOfYearParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(DayOfYearParser, _Parser);
  var _super = _createSuper$1(DayOfYearParser);
  function DayOfYearParser() {
    var _this;
    _classCallCheck$d(this, DayOfYearParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 90);
    _defineProperty$5(_assertThisInitialized$2(_this), "subpriority", 1);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass$d(DayOfYearParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'D':
        case 'DD':
          return parseNumericPattern(numericPatterns.dayOfYear, dateString);
        case 'Do':
          return match.ordinalNumber(dateString, {
            unit: 'date'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(date, value) {
      var year = date.getUTCFullYear();
      var isLeapYear = isLeapYearIndex$1(year);
      if (isLeapYear) {
        return value >= 1 && value <= 366;
      } else {
        return value >= 1 && value <= 365;
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth(0, value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return DayOfYearParser;
}(Parser);

function setUTCDay(dirtyDate, dirtyDay, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(2, arguments);
  var defaultOptions = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  var date = toDate(dirtyDate);
  var day = toInteger(dirtyDay);
  var currentDay = date.getUTCDay();
  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;
  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}

var DayParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(DayParser, _Parser);
  var _super = _createSuper$1(DayParser);
  function DayParser() {
    var _this;
    _classCallCheck$d(this, DayParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 90);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['D', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass$d(DayParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        // Tue
        case 'E':
        case 'EE':
        case 'EEE':
          return match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // T
        case 'EEEEE':
          return match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // Tu
        case 'EEEEEE':
          return match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // Tuesday
        case 'EEEE':
        default:
          return match.day(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return DayParser;
}(Parser);

var LocalDayParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(LocalDayParser, _Parser);
  var _super = _createSuper$1(LocalDayParser);
  function LocalDayParser() {
    var _this;
    _classCallCheck$d(this, LocalDayParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 90);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']);
    return _this;
  }
  _createClass$d(LocalDayParser, [{
    key: "parse",
    value: function parse(dateString, token, match, options) {
      var valueCallback = function valueCallback(value) {
        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
      };
      switch (token) {
        // 3
        case 'e':
        case 'ee':
          // 03
          return mapValue(parseNDigits(token.length, dateString), valueCallback);
        // 3rd
        case 'eo':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'day'
          }), valueCallback);
        // Tue
        case 'eee':
          return match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // T
        case 'eeeee':
          return match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // Tu
        case 'eeeeee':
          return match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // Tuesday
        case 'eeee':
        default:
          return match.day(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return LocalDayParser;
}(Parser);

var StandAloneLocalDayParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(StandAloneLocalDayParser, _Parser);
  var _super = _createSuper$1(StandAloneLocalDayParser);
  function StandAloneLocalDayParser() {
    var _this;
    _classCallCheck$d(this, StandAloneLocalDayParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 90);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']);
    return _this;
  }
  _createClass$d(StandAloneLocalDayParser, [{
    key: "parse",
    value: function parse(dateString, token, match, options) {
      var valueCallback = function valueCallback(value) {
        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
      };
      switch (token) {
        // 3
        case 'c':
        case 'cc':
          // 03
          return mapValue(parseNDigits(token.length, dateString), valueCallback);
        // 3rd
        case 'co':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'day'
          }), valueCallback);
        // Tue
        case 'ccc':
          return match.day(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'short',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // T
        case 'ccccc':
          return match.day(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // Tu
        case 'cccccc':
          return match.day(dateString, {
            width: 'short',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // Tuesday
        case 'cccc':
        default:
          return match.day(dateString, {
            width: 'wide',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'short',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return StandAloneLocalDayParser;
}(Parser);

function setUTCISODay(dirtyDate, dirtyDay) {
  requiredArgs(2, arguments);
  var day = toInteger(dirtyDay);
  if (day % 7 === 0) {
    day = day - 7;
  }
  var weekStartsOn = 1;
  var date = toDate(dirtyDate);
  var currentDay = date.getUTCDay();
  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;
  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}

var ISODayParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(ISODayParser, _Parser);
  var _super = _createSuper$1(ISODayParser);
  function ISODayParser() {
    var _this;
    _classCallCheck$d(this, ISODayParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 90);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass$d(ISODayParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      var valueCallback = function valueCallback(value) {
        if (value === 0) {
          return 7;
        }
        return value;
      };
      switch (token) {
        // 2
        case 'i':
        case 'ii':
          // 02
          return parseNDigits(token.length, dateString);
        // 2nd
        case 'io':
          return match.ordinalNumber(dateString, {
            unit: 'day'
          });
        // Tue
        case 'iii':
          return mapValue(match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          }), valueCallback);
        // T
        case 'iiiii':
          return mapValue(match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          }), valueCallback);
        // Tu
        case 'iiiiii':
          return mapValue(match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          }), valueCallback);
        // Tuesday
        case 'iiii':
        default:
          return mapValue(match.day(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          }), valueCallback);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 7;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date = setUTCISODay(date, value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return ISODayParser;
}(Parser);

var AMPMParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(AMPMParser, _Parser);
  var _super = _createSuper$1(AMPMParser);
  function AMPMParser() {
    var _this;
    _classCallCheck$d(this, AMPMParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 80);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['b', 'B', 'H', 'k', 't', 'T']);
    return _this;
  }
  _createClass$d(AMPMParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'a':
        case 'aa':
        case 'aaa':
          return match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'aaaaa':
          return match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'aaaa':
        default:
          return match.dayPeriod(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    }
  }]);
  return AMPMParser;
}(Parser);

var AMPMMidnightParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(AMPMMidnightParser, _Parser);
  var _super = _createSuper$1(AMPMMidnightParser);
  function AMPMMidnightParser() {
    var _this;
    _classCallCheck$d(this, AMPMMidnightParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 80);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['a', 'B', 'H', 'k', 't', 'T']);
    return _this;
  }
  _createClass$d(AMPMMidnightParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'b':
        case 'bb':
        case 'bbb':
          return match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'bbbbb':
          return match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'bbbb':
        default:
          return match.dayPeriod(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    }
  }]);
  return AMPMMidnightParser;
}(Parser);

var DayPeriodParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(DayPeriodParser, _Parser);
  var _super = _createSuper$1(DayPeriodParser);
  function DayPeriodParser() {
    var _this;
    _classCallCheck$d(this, DayPeriodParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 80);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['a', 'b', 't', 'T']);
    return _this;
  }
  _createClass$d(DayPeriodParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'B':
        case 'BB':
        case 'BBB':
          return match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'BBBBB':
          return match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'BBBB':
        default:
          return match.dayPeriod(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    }
  }]);
  return DayPeriodParser;
}(Parser);

var Hour1to12Parser = /*#__PURE__*/function (_Parser) {
  _inherits$1(Hour1to12Parser, _Parser);
  var _super = _createSuper$1(Hour1to12Parser);
  function Hour1to12Parser() {
    var _this;
    _classCallCheck$d(this, Hour1to12Parser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 70);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['H', 'K', 'k', 't', 'T']);
    return _this;
  }
  _createClass$d(Hour1to12Parser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'h':
          return parseNumericPattern(numericPatterns.hour12h, dateString);
        case 'ho':
          return match.ordinalNumber(dateString, {
            unit: 'hour'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 12;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      var isPM = date.getUTCHours() >= 12;
      if (isPM && value < 12) {
        date.setUTCHours(value + 12, 0, 0, 0);
      } else if (!isPM && value === 12) {
        date.setUTCHours(0, 0, 0, 0);
      } else {
        date.setUTCHours(value, 0, 0, 0);
      }
      return date;
    }
  }]);
  return Hour1to12Parser;
}(Parser);

var Hour0to23Parser = /*#__PURE__*/function (_Parser) {
  _inherits$1(Hour0to23Parser, _Parser);
  var _super = _createSuper$1(Hour0to23Parser);
  function Hour0to23Parser() {
    var _this;
    _classCallCheck$d(this, Hour0to23Parser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 70);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['a', 'b', 'h', 'K', 'k', 't', 'T']);
    return _this;
  }
  _createClass$d(Hour0to23Parser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'H':
          return parseNumericPattern(numericPatterns.hour23h, dateString);
        case 'Ho':
          return match.ordinalNumber(dateString, {
            unit: 'hour'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 23;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCHours(value, 0, 0, 0);
      return date;
    }
  }]);
  return Hour0to23Parser;
}(Parser);

var Hour0To11Parser = /*#__PURE__*/function (_Parser) {
  _inherits$1(Hour0To11Parser, _Parser);
  var _super = _createSuper$1(Hour0To11Parser);
  function Hour0To11Parser() {
    var _this;
    _classCallCheck$d(this, Hour0To11Parser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 70);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['h', 'H', 'k', 't', 'T']);
    return _this;
  }
  _createClass$d(Hour0To11Parser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'K':
          return parseNumericPattern(numericPatterns.hour11h, dateString);
        case 'Ko':
          return match.ordinalNumber(dateString, {
            unit: 'hour'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      var isPM = date.getUTCHours() >= 12;
      if (isPM && value < 12) {
        date.setUTCHours(value + 12, 0, 0, 0);
      } else {
        date.setUTCHours(value, 0, 0, 0);
      }
      return date;
    }
  }]);
  return Hour0To11Parser;
}(Parser);

var Hour1To24Parser = /*#__PURE__*/function (_Parser) {
  _inherits$1(Hour1To24Parser, _Parser);
  var _super = _createSuper$1(Hour1To24Parser);
  function Hour1To24Parser() {
    var _this;
    _classCallCheck$d(this, Hour1To24Parser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 70);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['a', 'b', 'h', 'H', 'K', 't', 'T']);
    return _this;
  }
  _createClass$d(Hour1To24Parser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'k':
          return parseNumericPattern(numericPatterns.hour24h, dateString);
        case 'ko':
          return match.ordinalNumber(dateString, {
            unit: 'hour'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 24;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      var hours = value <= 24 ? value % 24 : value;
      date.setUTCHours(hours, 0, 0, 0);
      return date;
    }
  }]);
  return Hour1To24Parser;
}(Parser);

var MinuteParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(MinuteParser, _Parser);
  var _super = _createSuper$1(MinuteParser);
  function MinuteParser() {
    var _this;
    _classCallCheck$d(this, MinuteParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 60);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['t', 'T']);
    return _this;
  }
  _createClass$d(MinuteParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'm':
          return parseNumericPattern(numericPatterns.minute, dateString);
        case 'mo':
          return match.ordinalNumber(dateString, {
            unit: 'minute'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 59;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMinutes(value, 0, 0);
      return date;
    }
  }]);
  return MinuteParser;
}(Parser);

var SecondParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(SecondParser, _Parser);
  var _super = _createSuper$1(SecondParser);
  function SecondParser() {
    var _this;
    _classCallCheck$d(this, SecondParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 50);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['t', 'T']);
    return _this;
  }
  _createClass$d(SecondParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 's':
          return parseNumericPattern(numericPatterns.second, dateString);
        case 'so':
          return match.ordinalNumber(dateString, {
            unit: 'second'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 59;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCSeconds(value, 0);
      return date;
    }
  }]);
  return SecondParser;
}(Parser);

var FractionOfSecondParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(FractionOfSecondParser, _Parser);
  var _super = _createSuper$1(FractionOfSecondParser);
  function FractionOfSecondParser() {
    var _this;
    _classCallCheck$d(this, FractionOfSecondParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 30);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['t', 'T']);
    return _this;
  }
  _createClass$d(FractionOfSecondParser, [{
    key: "parse",
    value: function parse(dateString, token) {
      var valueCallback = function valueCallback(value) {
        return Math.floor(value * Math.pow(10, -token.length + 3));
      };
      return mapValue(parseNDigits(token.length, dateString), valueCallback);
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMilliseconds(value);
      return date;
    }
  }]);
  return FractionOfSecondParser;
}(Parser);

var ISOTimezoneWithZParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(ISOTimezoneWithZParser, _Parser);
  var _super = _createSuper$1(ISOTimezoneWithZParser);
  function ISOTimezoneWithZParser() {
    var _this;
    _classCallCheck$d(this, ISOTimezoneWithZParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 10);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['t', 'T', 'x']);
    return _this;
  }
  _createClass$d(ISOTimezoneWithZParser, [{
    key: "parse",
    value: function parse(dateString, token) {
      switch (token) {
        case 'X':
          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);
        case 'XX':
          return parseTimezonePattern(timezonePatterns.basic, dateString);
        case 'XXXX':
          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);
        case 'XXXXX':
          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);
        case 'XXX':
        default:
          return parseTimezonePattern(timezonePatterns.extended, dateString);
      }
    }
  }, {
    key: "set",
    value: function set(date, flags, value) {
      if (flags.timestampIsSet) {
        return date;
      }
      return new Date(date.getTime() - value);
    }
  }]);
  return ISOTimezoneWithZParser;
}(Parser);

var ISOTimezoneParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(ISOTimezoneParser, _Parser);
  var _super = _createSuper$1(ISOTimezoneParser);
  function ISOTimezoneParser() {
    var _this;
    _classCallCheck$d(this, ISOTimezoneParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 10);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", ['t', 'T', 'X']);
    return _this;
  }
  _createClass$d(ISOTimezoneParser, [{
    key: "parse",
    value: function parse(dateString, token) {
      switch (token) {
        case 'x':
          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);
        case 'xx':
          return parseTimezonePattern(timezonePatterns.basic, dateString);
        case 'xxxx':
          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);
        case 'xxxxx':
          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);
        case 'xxx':
        default:
          return parseTimezonePattern(timezonePatterns.extended, dateString);
      }
    }
  }, {
    key: "set",
    value: function set(date, flags, value) {
      if (flags.timestampIsSet) {
        return date;
      }
      return new Date(date.getTime() - value);
    }
  }]);
  return ISOTimezoneParser;
}(Parser);

var TimestampSecondsParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(TimestampSecondsParser, _Parser);
  var _super = _createSuper$1(TimestampSecondsParser);
  function TimestampSecondsParser() {
    var _this;
    _classCallCheck$d(this, TimestampSecondsParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 40);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", '*');
    return _this;
  }
  _createClass$d(TimestampSecondsParser, [{
    key: "parse",
    value: function parse(dateString) {
      return parseAnyDigitsSigned(dateString);
    }
  }, {
    key: "set",
    value: function set(_date, _flags, value) {
      return [new Date(value * 1000), {
        timestampIsSet: true
      }];
    }
  }]);
  return TimestampSecondsParser;
}(Parser);

var TimestampMillisecondsParser = /*#__PURE__*/function (_Parser) {
  _inherits$1(TimestampMillisecondsParser, _Parser);
  var _super = _createSuper$1(TimestampMillisecondsParser);
  function TimestampMillisecondsParser() {
    var _this;
    _classCallCheck$d(this, TimestampMillisecondsParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty$5(_assertThisInitialized$2(_this), "priority", 20);
    _defineProperty$5(_assertThisInitialized$2(_this), "incompatibleTokens", '*');
    return _this;
  }
  _createClass$d(TimestampMillisecondsParser, [{
    key: "parse",
    value: function parse(dateString) {
      return parseAnyDigitsSigned(dateString);
    }
  }, {
    key: "set",
    value: function set(_date, _flags, value) {
      return [new Date(value), {
        timestampIsSet: true
      }];
    }
  }]);
  return TimestampMillisecondsParser;
}(Parser);

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |
 * |  p  |                                |  P  |                                |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 */
var parsers = {
  G: new EraParser(),
  y: new YearParser(),
  Y: new LocalWeekYearParser(),
  R: new ISOWeekYearParser(),
  u: new ExtendedYearParser(),
  Q: new QuarterParser(),
  q: new StandAloneQuarterParser(),
  M: new MonthParser(),
  L: new StandAloneMonthParser(),
  w: new LocalWeekParser(),
  I: new ISOWeekParser(),
  d: new DateParser(),
  D: new DayOfYearParser(),
  E: new DayParser(),
  e: new LocalDayParser(),
  c: new StandAloneLocalDayParser(),
  i: new ISODayParser(),
  a: new AMPMParser(),
  b: new AMPMMidnightParser(),
  B: new DayPeriodParser(),
  h: new Hour1to12Parser(),
  H: new Hour0to23Parser(),
  K: new Hour0To11Parser(),
  k: new Hour1To24Parser(),
  m: new MinuteParser(),
  s: new SecondParser(),
  S: new FractionOfSecondParser(),
  X: new ISOTimezoneWithZParser(),
  x: new ISOTimezoneParser(),
  t: new TimestampSecondsParser(),
  T: new TimestampMillisecondsParser()
};

// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps
var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;

// This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`
var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var notWhitespaceRegExp = /\S/;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;

/**
 * @name parse
 * @category Common Helpers
 * @summary Parse the date.
 *
 * @description
 * Return the date parsed from string using the given format string.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * The characters in the format string wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 *
 * Format of the format string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 5 below the table).
 *
 * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited
 * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:
 *
 * ```javascript
 * parse('23 AM', 'HH a', new Date())
 * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time
 * ```
 *
 * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true
 *
 * Accepted format string patterns:
 * | Unit                            |Prior| Pattern | Result examples                   | Notes |
 * |---------------------------------|-----|---------|-----------------------------------|-------|
 * | Era                             | 140 | G..GGG  | AD, BC                            |       |
 * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 |     | GGGGG   | A, B                              |       |
 * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |
 * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |
 * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |
 * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |
 * |                                 |     | yyyyy   | ...                               | 2,4   |
 * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |
 * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |
 * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |
 * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |
 * |                                 |     | YYYYY   | ...                               | 2,4   |
 * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |
 * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |
 * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |
 * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |
 * |                                 |     | RRRRR   | ...                               | 2,4,5 |
 * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |
 * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |
 * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |
 * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |
 * |                                 |     | uuuuu   | ...                               | 2,4   |
 * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |
 * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | QQ      | 01, 02, 03, 04                    |       |
 * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |
 * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | qq      | 01, 02, 03, 04                    |       |
 * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |
 * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |
 * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | MM      | 01, 02, ..., 12                   |       |
 * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | MMMM    | January, February, ..., December  | 2     |
 * |                                 |     | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |
 * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | LL      | 01, 02, ..., 12                   |       |
 * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | LLLL    | January, February, ..., December  | 2     |
 * |                                 |     | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |
 * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |
 * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | II      | 01, 02, ..., 53                   | 5     |
 * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |
 * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |
 * |                                 |     | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |
 * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |
 * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |
 * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 |     | DDDD    | ...                               | 2     |
 * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |
 * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |
 * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |
 * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |
 * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |
 * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |
 * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |
 * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | ee      | 02, 03, ..., 01                   |       |
 * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | cc      | 02, 03, ..., 01                   |       |
 * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |
 * |                                 |     | aaaa    | a.m., p.m.                        | 2     |
 * |                                 |     | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |
 * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 |     | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |
 * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 |     | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |
 * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |
 * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |
 * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |
 * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |
 * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | mm      | 00, 01, ..., 59                   |       |
 * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |
 * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | ss      | 00, 01, ..., 59                   |       |
 * | Seconds timestamp               |  40 | t       | 512969520                         |       |
 * |                                 |     | tt      | ...                               | 2     |
 * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |
 * |                                 |     | SS      | 00, 01, ..., 99                   |       |
 * |                                 |     | SSS     | 000, 001, ..., 999                |       |
 * |                                 |     | SSSS    | ...                               | 2     |
 * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |
 * |                                 |     | TT      | ...                               | 2     |
 * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |
 * |                                 |     | XX      | -0800, +0530, Z                   |       |
 * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |
 * |                                 |     | xx      | -0800, +0530, +0000               |       |
 * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |
 * |                                 |     | PP      | May 29, 1453                      |       |
 * |                                 |     | PPP     | May 29th, 1453                    |       |
 * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |
 * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |
 * |                                 |     | pp      | 12:00:00 AM                       |       |
 * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |
 * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |
 * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |
 * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular.
 *    In `format` function, they will produce different result:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 *    `parse` will try to match both formatting and stand-alone units interchangably.
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table:
 *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number
 *      as wide as the sequence
 *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.
 *      These variations are marked with "2" in the last column of the table.
 *
 * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 4. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:
 *
 *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`
 *
 *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`
 *
 *    while `uu` will just assign the year as is:
 *
 *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`
 *
 *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}
 *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).
 *
 * 5. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based
 *    on the given locale.
 *
 *    using `en-US` locale: `P` => `MM/dd/yyyy`
 *    using `en-US` locale: `p` => `hh:mm a`
 *    using `pt-BR` locale: `P` => `dd/MM/yyyy`
 *    using `pt-BR` locale: `p` => `HH:mm`
 *
 * Values will be assigned to the date in the descending order of its unit's priority.
 * Units of an equal priority overwrite each other in the order of appearance.
 *
 * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),
 * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.
 *
 * `referenceDate` must be passed for correct work of the function.
 * If you're not sure which `referenceDate` to supply, create a new instance of Date:
 * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`
 * In this case parsing will be done in the context of the current date.
 * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,
 * then `Invalid Date` will be returned.
 *
 * The result may vary by locale.
 *
 * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.
 *
 * If parsing failed, `Invalid Date` will be returned.
 * Invalid Date is a Date, whose time value is NaN.
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * @param {String} dateString - the string to parse
 * @param {String} formatString - the string of tokens
 * @param {Date|Number} referenceDate - defines values missing from the parsed dateString
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
 * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @returns {Date} the parsed date
 * @throws {TypeError} 3 arguments required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} `options.locale` must contain `match` property
 * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} format string contains an unescaped latin alphabet character
 *
 * @example
 * // Parse 11 February 2014 from middle-endian format:
 * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())
 * //=> Tue Feb 11 2014 00:00:00
 *
 * @example
 * // Parse 28th of February in Esperanto locale in the context of 2010 year:
 * import eo from 'date-fns/locale/eo'
 * var result = parse('28-a de februaro', "do 'de' MMMM", new Date(2010, 0, 1), {
 *   locale: eo
 * })
 * //=> Sun Feb 28 2010 00:00:00
 */
function parse$2(dirtyDateString, dirtyFormatString, dirtyReferenceDate, options) {
  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
  requiredArgs(3, arguments);
  var dateString = String(dirtyDateString);
  var formatString = String(dirtyFormatString);
  var defaultOptions = getDefaultOptions();
  var locale$1 = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : locale;
  if (!locale$1.match) {
    throw new RangeError('locale must contain match property');
  }
  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);

  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }
  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  if (formatString === '') {
    if (dateString === '') {
      return toDate(dirtyReferenceDate);
    } else {
      return new Date(NaN);
    }
  }
  var subFnOptions = {
    firstWeekContainsDate: firstWeekContainsDate,
    weekStartsOn: weekStartsOn,
    locale: locale$1
  };

  // If timezone isn't specified, it will be set to the system timezone
  var setters = [new DateToSystemTimezoneSetter()];
  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {
    var firstCharacter = substring[0];
    if (firstCharacter in longFormatters) {
      var longFormatter = longFormatters[firstCharacter];
      return longFormatter(substring, locale$1.formatLong);
    }
    return substring;
  }).join('').match(formattingTokensRegExp);
  var usedTokens = [];
  var _iterator = _createForOfIteratorHelper(tokens),
    _step;
  try {
    var _loop = function _loop() {
      var token = _step.value;
      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(token)) {
        throwProtectedError(token, formatString, dirtyDateString);
      }
      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(token)) {
        throwProtectedError(token, formatString, dirtyDateString);
      }
      var firstCharacter = token[0];
      var parser = parsers[firstCharacter];
      if (parser) {
        var incompatibleTokens = parser.incompatibleTokens;
        if (Array.isArray(incompatibleTokens)) {
          var incompatibleToken = usedTokens.find(function (usedToken) {
            return incompatibleTokens.includes(usedToken.token) || usedToken.token === firstCharacter;
          });
          if (incompatibleToken) {
            throw new RangeError("The format string mustn't contain `".concat(incompatibleToken.fullToken, "` and `").concat(token, "` at the same time"));
          }
        } else if (parser.incompatibleTokens === '*' && usedTokens.length > 0) {
          throw new RangeError("The format string mustn't contain `".concat(token, "` and any other token at the same time"));
        }
        usedTokens.push({
          token: firstCharacter,
          fullToken: token
        });
        var parseResult = parser.run(dateString, token, locale$1.match, subFnOptions);
        if (!parseResult) {
          return {
            v: new Date(NaN)
          };
        }
        setters.push(parseResult.setter);
        dateString = parseResult.rest;
      } else {
        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
          throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
        }

        // Replace two single quote characters with one single quote character
        if (token === "''") {
          token = "'";
        } else if (firstCharacter === "'") {
          token = cleanEscapedString(token);
        }

        // Cut token from string, or, if string doesn't match the token, return Invalid Date
        if (dateString.indexOf(token) === 0) {
          dateString = dateString.slice(token.length);
        } else {
          return {
            v: new Date(NaN)
          };
        }
      }
    };
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _ret = _loop();
      if (_typeof$4(_ret) === "object") return _ret.v;
    }

    // Check if the remaining input contains something other than whitespace
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {
    return new Date(NaN);
  }
  var uniquePrioritySetters = setters.map(function (setter) {
    return setter.priority;
  }).sort(function (a, b) {
    return b - a;
  }).filter(function (priority, index, array) {
    return array.indexOf(priority) === index;
  }).map(function (priority) {
    return setters.filter(function (setter) {
      return setter.priority === priority;
    }).sort(function (a, b) {
      return b.subPriority - a.subPriority;
    });
  }).map(function (setterArray) {
    return setterArray[0];
  });
  var date = toDate(dirtyReferenceDate);
  if (isNaN(date.getTime())) {
    return new Date(NaN);
  }

  // Convert the date in system timezone to the same date in UTC+00:00 timezone.
  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));
  var flags = {};
  var _iterator2 = _createForOfIteratorHelper(uniquePrioritySetters),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var setter = _step2.value;
      if (!setter.validate(utcDate, subFnOptions)) {
        return new Date(NaN);
      }
      var result = setter.set(utcDate, flags, subFnOptions);
      // Result is tuple (date, flags)
      if (Array.isArray(result)) {
        utcDate = result[0];
        assign(flags, result[1]);
        // Result is date
      } else {
        utcDate = result;
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return utcDate;
}
function cleanEscapedString(input) {
  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
}

/**
 * @name parseISO
 * @category Common Helpers
 * @summary Parse ISO string
 *
 * @description
 * Parse the given string in ISO 8601 format and return an instance of Date.
 *
 * Function accepts complete ISO 8601 formats as well as partial implementations.
 * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601
 *
 * If the argument isn't a string, the function cannot parse the string or
 * the values are invalid, it returns Invalid Date.
 *
 * @param {String} argument - the value to convert
 * @param {Object} [options] - an object with options.
 * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
 *
 * @example
 * // Convert string '2014-02-11T11:30:30' to date:
 * const result = parseISO('2014-02-11T11:30:30')
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert string '+02014101' to date,
 * // if the additional number of digits in the extended year format is 1:
 * const result = parseISO('+02014101', { additionalDigits: 1 })
 * //=> Fri Apr 11 2014 00:00:00
 */
function parseISO(argument, options) {
  var _options$additionalDi;
  requiredArgs(1, arguments);
  var additionalDigits = toInteger((_options$additionalDi = options === null || options === void 0 ? void 0 : options.additionalDigits) !== null && _options$additionalDi !== void 0 ? _options$additionalDi : 2);
  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {
    throw new RangeError('additionalDigits must be 0, 1 or 2');
  }
  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {
    return new Date(NaN);
  }
  var dateStrings = splitDateString(argument);
  var date;
  if (dateStrings.date) {
    var parseYearResult = parseYear(dateStrings.date, additionalDigits);
    date = parseDate(parseYearResult.restDateString, parseYearResult.year);
  }
  if (!date || isNaN(date.getTime())) {
    return new Date(NaN);
  }
  var timestamp = date.getTime();
  var time = 0;
  var offset;
  if (dateStrings.time) {
    time = parseTime(dateStrings.time);
    if (isNaN(time)) {
      return new Date(NaN);
    }
  }
  if (dateStrings.timezone) {
    offset = parseTimezone(dateStrings.timezone);
    if (isNaN(offset)) {
      return new Date(NaN);
    }
  } else {
    var dirtyDate = new Date(timestamp + time);
    // js parsed string assuming it's in UTC timezone
    // but we need it to be parsed in our timezone
    // so we use utc values to build date in our timezone.
    // Year values from 0 to 99 map to the years 1900 to 1999
    // so set year explicitly with setFullYear.
    var result = new Date(0);
    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());
    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());
    return result;
  }
  return new Date(timestamp + time + offset);
}
var patterns = {
  dateTimeDelimiter: /[T ]/,
  timeZoneDelimiter: /[Z ]/i,
  timezone: /([Z+-].*)$/
};
var dateRegex = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/;
var timeRegex = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/;
var timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
function splitDateString(dateString) {
  var dateStrings = {};
  var array = dateString.split(patterns.dateTimeDelimiter);
  var timeString;

  // The regex match should only return at maximum two array elements.
  // [date], [time], or [date, time].
  if (array.length > 2) {
    return dateStrings;
  }
  if (/:/.test(array[0])) {
    timeString = array[0];
  } else {
    dateStrings.date = array[0];
    timeString = array[1];
    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {
      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];
      timeString = dateString.substr(dateStrings.date.length, dateString.length);
    }
  }
  if (timeString) {
    var token = patterns.timezone.exec(timeString);
    if (token) {
      dateStrings.time = timeString.replace(token[1], '');
      dateStrings.timezone = token[1];
    } else {
      dateStrings.time = timeString;
    }
  }
  return dateStrings;
}
function parseYear(dateString, additionalDigits) {
  var regex = new RegExp('^(?:(\\d{4}|[+-]\\d{' + (4 + additionalDigits) + '})|(\\d{2}|[+-]\\d{' + (2 + additionalDigits) + '})$)');
  var captures = dateString.match(regex);
  // Invalid ISO-formatted year
  if (!captures) return {
    year: NaN,
    restDateString: ''
  };
  var year = captures[1] ? parseInt(captures[1]) : null;
  var century = captures[2] ? parseInt(captures[2]) : null;

  // either year or century is null, not both
  return {
    year: century === null ? year : century * 100,
    restDateString: dateString.slice((captures[1] || captures[2]).length)
  };
}
function parseDate(dateString, year) {
  // Invalid ISO-formatted year
  if (year === null) return new Date(NaN);
  var captures = dateString.match(dateRegex);
  // Invalid ISO-formatted string
  if (!captures) return new Date(NaN);
  var isWeekDate = !!captures[4];
  var dayOfYear = parseDateUnit(captures[1]);
  var month = parseDateUnit(captures[2]) - 1;
  var day = parseDateUnit(captures[3]);
  var week = parseDateUnit(captures[4]);
  var dayOfWeek = parseDateUnit(captures[5]) - 1;
  if (isWeekDate) {
    if (!validateWeekDate(year, week, dayOfWeek)) {
      return new Date(NaN);
    }
    return dayOfISOWeekYear(year, week, dayOfWeek);
  } else {
    var date = new Date(0);
    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {
      return new Date(NaN);
    }
    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));
    return date;
  }
}
function parseDateUnit(value) {
  return value ? parseInt(value) : 1;
}
function parseTime(timeString) {
  var captures = timeString.match(timeRegex);
  if (!captures) return NaN; // Invalid ISO-formatted time

  var hours = parseTimeUnit(captures[1]);
  var minutes = parseTimeUnit(captures[2]);
  var seconds = parseTimeUnit(captures[3]);
  if (!validateTime(hours, minutes, seconds)) {
    return NaN;
  }
  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000;
}
function parseTimeUnit(value) {
  return value && parseFloat(value.replace(',', '.')) || 0;
}
function parseTimezone(timezoneString) {
  if (timezoneString === 'Z') return 0;
  var captures = timezoneString.match(timezoneRegex);
  if (!captures) return 0;
  var sign = captures[1] === '+' ? -1 : 1;
  var hours = parseInt(captures[2]);
  var minutes = captures[3] && parseInt(captures[3]) || 0;
  if (!validateTimezone(hours, minutes)) {
    return NaN;
  }
  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);
}
function dayOfISOWeekYear(isoWeekYear, week, day) {
  var date = new Date(0);
  date.setUTCFullYear(isoWeekYear, 0, 4);
  var fourthOfJanuaryDay = date.getUTCDay() || 7;
  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}

// Validation functions

// February is null to handle the leap year (using ||)
var daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
function isLeapYearIndex(year) {
  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}
function validateDate(year, month, date) {
  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));
}
function validateDayOfYearDate(year, dayOfYear) {
  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);
}
function validateWeekDate(_year, week, day) {
  return week >= 1 && week <= 53 && day >= 0 && day <= 6;
}
function validateTime(hours, minutes, seconds) {
  if (hours === 24) {
    return minutes === 0 && seconds === 0;
  }
  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;
}
function validateTimezone(_hours, minutes) {
  return minutes >= 0 && minutes <= 59;
}

function _inheritsLoose$1(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;

  _setPrototypeOf$1(subClass, superClass);
}

function _setPrototypeOf$1(o, p) {
  _setPrototypeOf$1 = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf$1(o, p);
}

function _objectWithoutPropertiesLoose$1(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _assertThisInitialized$1(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}/**
 * Check whether some DOM node is our Component's node.
 */
function isNodeFound(current, componentNode, ignoreClass) {
  if (current === componentNode) {
    return true;
  } // SVG <use/> elements do not technically reside in the rendered DOM, so
  // they do not have classList directly, but they offer a link to their
  // corresponding element, which can have classList. This extra check is for
  // that case.
  // See: http://www.w3.org/TR/SVG11/struct.html#InterfaceSVGUseElement
  // Discussion: https://github.com/Pomax/react-onclickoutside/pull/17


  if (current.correspondingElement) {
    return current.correspondingElement.classList.contains(ignoreClass);
  }

  return current.classList.contains(ignoreClass);
}
/**
 * Try to find our node in a hierarchy of nodes, returning the document
 * node as highest node if our node is not found in the path up.
 */

function findHighest(current, componentNode, ignoreClass) {
  if (current === componentNode) {
    return true;
  } // If source=local then this event came from 'somewhere'
  // inside and should be ignored. We could handle this with
  // a layered approach, too, but that requires going back to
  // thinking in terms of Dom node nesting, running counter
  // to React's 'you shouldn't care about the DOM' philosophy.
  // Also cover shadowRoot node by checking current.host


  while (current.parentNode || current.host) {
    // Only check normal node without shadowRoot
    if (current.parentNode && isNodeFound(current, componentNode, ignoreClass)) {
      return true;
    }

    current = current.parentNode || current.host;
  }

  return current;
}
/**
 * Check if the browser scrollbar was clicked
 */

function clickedScrollbar(evt) {
  return document.documentElement.clientWidth <= evt.clientX || document.documentElement.clientHeight <= evt.clientY;
}// ideally will get replaced with external dep
// when rafrex/detect-passive-events#4 and rafrex/detect-passive-events#5 get merged in
var testPassiveEventSupport = function testPassiveEventSupport() {
  if (typeof window === 'undefined' || typeof window.addEventListener !== 'function') {
    return;
  }

  var passive = false;
  var options = Object.defineProperty({}, 'passive', {
    get: function get() {
      passive = true;
    }
  });

  var noop = function noop() {};

  window.addEventListener('testPassiveEventSupport', noop, options);
  window.removeEventListener('testPassiveEventSupport', noop, options);
  return passive;
};function autoInc(seed) {
  if (seed === void 0) {
    seed = 0;
  }

  return function () {
    return ++seed;
  };
}

var uid = autoInc();var passiveEventSupport;
var handlersMap = {};
var enabledInstances = {};
var touchEvents = ['touchstart', 'touchmove'];
var IGNORE_CLASS_NAME = 'ignore-react-onclickoutside';
/**
 * Options for addEventHandler and removeEventHandler
 */

function getEventHandlerOptions(instance, eventName) {
  var handlerOptions = {};
  var isTouchEvent = touchEvents.indexOf(eventName) !== -1;

  if (isTouchEvent && passiveEventSupport) {
    handlerOptions.passive = !instance.props.preventDefault;
  }

  return handlerOptions;
}
/**
 * This function generates the HOC function that you'll use
 * in order to impart onOutsideClick listening to an
 * arbitrary component. It gets called at the end of the
 * bootstrapping code to yield an instance of the
 * onClickOutsideHOC function defined inside setupHOC().
 */


function onClickOutsideHOC(WrappedComponent, config) {
  var _class, _temp;

  var componentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
  return _temp = _class = /*#__PURE__*/function (_Component) {
    _inheritsLoose$1(onClickOutside, _Component);

    function onClickOutside(props) {
      var _this;

      _this = _Component.call(this, props) || this;

      _this.__outsideClickHandler = function (event) {
        if (typeof _this.__clickOutsideHandlerProp === 'function') {
          _this.__clickOutsideHandlerProp(event);

          return;
        }

        var instance = _this.getInstance();

        if (typeof instance.props.handleClickOutside === 'function') {
          instance.props.handleClickOutside(event);
          return;
        }

        if (typeof instance.handleClickOutside === 'function') {
          instance.handleClickOutside(event);
          return;
        }

        throw new Error("WrappedComponent: " + componentName + " lacks a handleClickOutside(event) function for processing outside click events.");
      };

      _this.__getComponentNode = function () {
        var instance = _this.getInstance();

        if (config && typeof config.setClickOutsideRef === 'function') {
          return config.setClickOutsideRef()(instance);
        }

        if (typeof instance.setClickOutsideRef === 'function') {
          return instance.setClickOutsideRef();
        }

        return findDOMNode(instance);
      };

      _this.enableOnClickOutside = function () {
        if (typeof document === 'undefined' || enabledInstances[_this._uid]) {
          return;
        }

        if (typeof passiveEventSupport === 'undefined') {
          passiveEventSupport = testPassiveEventSupport();
        }

        enabledInstances[_this._uid] = true;
        var events = _this.props.eventTypes;

        if (!events.forEach) {
          events = [events];
        }

        handlersMap[_this._uid] = function (event) {
          if (_this.componentNode === null) return;

          if (_this.props.preventDefault) {
            event.preventDefault();
          }

          if (_this.props.stopPropagation) {
            event.stopPropagation();
          }

          if (_this.props.excludeScrollbar && clickedScrollbar(event)) return;
          var current = event.composed && event.composedPath && event.composedPath().shift() || event.target;

          if (findHighest(current, _this.componentNode, _this.props.outsideClickIgnoreClass) !== document) {
            return;
          }

          _this.__outsideClickHandler(event);
        };

        events.forEach(function (eventName) {
          document.addEventListener(eventName, handlersMap[_this._uid], getEventHandlerOptions(_assertThisInitialized$1(_this), eventName));
        });
      };

      _this.disableOnClickOutside = function () {
        delete enabledInstances[_this._uid];
        var fn = handlersMap[_this._uid];

        if (fn && typeof document !== 'undefined') {
          var events = _this.props.eventTypes;

          if (!events.forEach) {
            events = [events];
          }

          events.forEach(function (eventName) {
            return document.removeEventListener(eventName, fn, getEventHandlerOptions(_assertThisInitialized$1(_this), eventName));
          });
          delete handlersMap[_this._uid];
        }
      };

      _this.getRef = function (ref) {
        return _this.instanceRef = ref;
      };

      _this._uid = uid();
      return _this;
    }
    /**
     * Access the WrappedComponent's instance.
     */


    var _proto = onClickOutside.prototype;

    _proto.getInstance = function getInstance() {
      if (WrappedComponent.prototype && !WrappedComponent.prototype.isReactComponent) {
        return this;
      }

      var ref = this.instanceRef;
      return ref.getInstance ? ref.getInstance() : ref;
    };

    /**
     * Add click listeners to the current document,
     * linked to this component's state.
     */
    _proto.componentDidMount = function componentDidMount() {
      // If we are in an environment without a DOM such
      // as shallow rendering or snapshots then we exit
      // early to prevent any unhandled errors being thrown.
      if (typeof document === 'undefined' || !document.createElement) {
        return;
      }

      var instance = this.getInstance();

      if (config && typeof config.handleClickOutside === 'function') {
        this.__clickOutsideHandlerProp = config.handleClickOutside(instance);

        if (typeof this.__clickOutsideHandlerProp !== 'function') {
          throw new Error("WrappedComponent: " + componentName + " lacks a function for processing outside click events specified by the handleClickOutside config option.");
        }
      }

      this.componentNode = this.__getComponentNode(); // return early so we dont initiate onClickOutside

      if (this.props.disableOnClickOutside) return;
      this.enableOnClickOutside();
    };

    _proto.componentDidUpdate = function componentDidUpdate() {
      this.componentNode = this.__getComponentNode();
    }
    /**
     * Remove all document's event listeners for this component
     */
    ;

    _proto.componentWillUnmount = function componentWillUnmount() {
      this.disableOnClickOutside();
    }
    /**
     * Can be called to explicitly enable event listening
     * for clicks and touches outside of this element.
     */
    ;

    /**
     * Pass-through render
     */
    _proto.render = function render() {
      // eslint-disable-next-line no-unused-vars
      var _this$props = this.props;
          _this$props.excludeScrollbar;
          var props = _objectWithoutPropertiesLoose$1(_this$props, ["excludeScrollbar"]);

      if (WrappedComponent.prototype && WrappedComponent.prototype.isReactComponent) {
        props.ref = this.getRef;
      } else {
        props.wrappedRef = this.getRef;
      }

      props.disableOnClickOutside = this.disableOnClickOutside;
      props.enableOnClickOutside = this.enableOnClickOutside;
      return createElement$1(WrappedComponent, props);
    };

    return onClickOutside;
  }(Component$1), _class.displayName = "OnClickOutside(" + componentName + ")", _class.defaultProps = {
    eventTypes: ['mousedown', 'touchstart'],
    excludeScrollbar: config && config.excludeScrollbar || false,
    outsideClickIgnoreClass: IGNORE_CLASS_NAME,
    preventDefault: false,
    stopPropagation: false
  }, _class.getClass = function () {
    return WrappedComponent.getClass ? WrappedComponent.getClass() : WrappedComponent;
  }, _temp;
}

var ManagerReferenceNodeContext = React.createContext();
var ManagerReferenceNodeSetterContext = React.createContext();
function Manager(_ref) {
  var children = _ref.children;

  var _React$useState = React.useState(null),
      referenceNode = _React$useState[0],
      setReferenceNode = _React$useState[1];

  var hasUnmounted = React.useRef(false);
  React.useEffect(function () {
    return function () {
      hasUnmounted.current = true;
    };
  }, []);
  var handleSetReferenceNode = React.useCallback(function (node) {
    if (!hasUnmounted.current) {
      setReferenceNode(node);
    }
  }, []);
  return /*#__PURE__*/React.createElement(ManagerReferenceNodeContext.Provider, {
    value: referenceNode
  }, /*#__PURE__*/React.createElement(ManagerReferenceNodeSetterContext.Provider, {
    value: handleSetReferenceNode
  }, children));
}

/**
 * Takes an argument and if it's an array, returns the first item in the array,
 * otherwise returns the argument. Used for Preact compatibility.
 */
var unwrapArray = function unwrapArray(arg) {
  return Array.isArray(arg) ? arg[0] : arg;
};
/**
 * Takes a maybe-undefined function and arbitrary args and invokes the function
 * only if it is defined.
 */

var safeInvoke = function safeInvoke(fn) {
  if (typeof fn === 'function') {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return fn.apply(void 0, args);
  }
};
/**
 * Sets a ref using either a ref callback or a ref object
 */

var setRef = function setRef(ref, node) {
  // if its a function call it
  if (typeof ref === 'function') {
    return safeInvoke(ref, node);
  } // otherwise we should treat it as a ref object
  else if (ref != null) {
      ref.current = node;
    }
};
/**
 * Simple ponyfill for Object.fromEntries
 */

var fromEntries = function fromEntries(entries) {
  return entries.reduce(function (acc, _ref) {
    var key = _ref[0],
        value = _ref[1];
    acc[key] = value;
    return acc;
  }, {});
};
/**
 * Small wrapper around `useLayoutEffect` to get rid of the warning on SSR envs
 */

var useIsomorphicLayoutEffect$2 = typeof window !== 'undefined' && window.document && window.document.createElement ? React.useLayoutEffect : React.useEffect;

var top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [top, bottom, right, left];
var start$1 = 'start';
var end$1 = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start$1, placement + "-" + end$1]);
}, []);
var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start$1, placement + "-" + end$1]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

function getNodeName$1(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}

function getWindow$1(node) {
  if (node == null) {
    return window;
  }

  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}

function isElement$2(node) {
  var OwnElement = getWindow$1(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}

function isHTMLElement$1(node) {
  var OwnElement = getWindow$1(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}

function isShadowRoot$1(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }

  var OwnElement = getWindow$1(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}

// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!isHTMLElement$1(element) || !getNodeName$1(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe[cannot-write]


    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];

      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}

function effect$2(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;

  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }

  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!isHTMLElement$1(element) || !getNodeName$1(element)) {
        return;
      }

      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules


var applyStyles$1 = {
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: effect$2,
  requires: ['computeStyles']
};

function getBasePlacement(placement) {
  return placement.split('-')[0];
}

var max$3 = Math.max;
var min$4 = Math.min;
var round$1 = Math.round;

function getUAString() {
  var uaData = navigator.userAgentData;

  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
    return uaData.brands.map(function (item) {
      return item.brand + "/" + item.version;
    }).join(' ');
  }

  return navigator.userAgent;
}

function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}

function getBoundingClientRect$1(element, includeScale, isFixedStrategy) {
  if (includeScale === void 0) {
    includeScale = false;
  }

  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }

  var clientRect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;

  if (includeScale && isHTMLElement$1(element)) {
    scaleX = element.offsetWidth > 0 ? round$1(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? round$1(clientRect.height) / element.offsetHeight || 1 : 1;
  }

  var _ref = isElement$2(element) ? getWindow$1(element) : window,
      visualViewport = _ref.visualViewport;

  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
  var width = clientRect.width / scaleX;
  var height = clientRect.height / scaleY;
  return {
    width: width,
    height: height,
    top: y,
    right: x + width,
    bottom: y + height,
    left: x,
    x: x,
    y: y
  };
}

// means it doesn't take into account transforms.

function getLayoutRect(element) {
  var clientRect = getBoundingClientRect$1(element); // Use the clientRect sizes if it's not been transformed.
  // Fixes https://github.com/popperjs/popper-core/issues/1223

  var width = element.offsetWidth;
  var height = element.offsetHeight;

  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }

  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }

  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width,
    height: height
  };
}

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && isShadowRoot$1(rootNode)) {
      var next = child;

      do {
        if (next && parent.isSameNode(next)) {
          return true;
        } // $FlowFixMe[prop-missing]: need a better way to handle this...


        next = next.parentNode || next.host;
      } while (next);
    } // Give up, the result is false


  return false;
}

function getComputedStyle$2(element) {
  return getWindow$1(element).getComputedStyle(element);
}

function isTableElement$1(element) {
  return ['table', 'td', 'th'].indexOf(getNodeName$1(element)) >= 0;
}

function getDocumentElement$2(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return ((isElement$2(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}

function getParentNode$1(element) {
  if (getNodeName$1(element) === 'html') {
    return element;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ( // DOM Element detected
    isShadowRoot$1(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement$2(element) // fallback

  );
}

function getTrueOffsetParent$1(element) {
  if (!isHTMLElement$1(element) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle$2(element).position === 'fixed') {
    return null;
  }

  return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock$1(element) {
  var isFirefox = /firefox/i.test(getUAString());
  var isIE = /Trident/i.test(getUAString());

  if (isIE && isHTMLElement$1(element)) {
    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
    var elementCss = getComputedStyle$2(element);

    if (elementCss.position === 'fixed') {
      return null;
    }
  }

  var currentNode = getParentNode$1(element);

  if (isShadowRoot$1(currentNode)) {
    currentNode = currentNode.host;
  }

  while (isHTMLElement$1(currentNode) && ['html', 'body'].indexOf(getNodeName$1(currentNode)) < 0) {
    var css = getComputedStyle$2(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent$1(element) {
  var window = getWindow$1(element);
  var offsetParent = getTrueOffsetParent$1(element);

  while (offsetParent && isTableElement$1(offsetParent) && getComputedStyle$2(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent$1(offsetParent);
  }

  if (offsetParent && (getNodeName$1(offsetParent) === 'html' || getNodeName$1(offsetParent) === 'body' && getComputedStyle$2(offsetParent).position === 'static')) {
    return window;
  }

  return offsetParent || getContainingBlock$1(element) || window;
}

function getMainAxisFromPlacement$1(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}

function within$1(min, value, max) {
  return max$3(min, min$4(value, max));
}
function withinMaxClamp(min, value, max) {
  var v = within$1(min, value, max);
  return v > max ? max : v;
}

function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}

function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

var toPaddingObject = function toPaddingObject(padding, state) {
  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
};

function arrow(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name,
      options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement$1(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === 'y' ? top : left;
  var maxProp = axis === 'y' ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent$1(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = within$1(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function effect$1(_ref2) {
  var state = _ref2.state,
      options = _ref2.options;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  if (!contains(state.elements.popper, arrowElement)) {
    return;
  }

  state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules


var arrow$1 = {
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: effect$1,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
};

function getVariation(placement) {
  return placement.split('-')[1];
}

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref, win) {
  var x = _ref.x,
      y = _ref.y;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round$1(x * dpr) / dpr || 0,
    y: round$1(y * dpr) / dpr || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      variation = _ref2.variation,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive,
      roundOffsets = _ref2.roundOffsets,
      isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x,
      x = _offsets$x === void 0 ? 0 : _offsets$x,
      _offsets$y = offsets.y,
      y = _offsets$y === void 0 ? 0 : _offsets$y;

  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
    x: x,
    y: y
  }) : {
    x: x,
    y: y
  };

  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = left;
  var sideY = top;
  var win = window;

  if (adaptive) {
    var offsetParent = getOffsetParent$1(popper);
    var heightProp = 'clientHeight';
    var widthProp = 'clientWidth';

    if (offsetParent === getWindow$1(popper)) {
      offsetParent = getDocumentElement$2(popper);

      if (getComputedStyle$2(offsetParent).position !== 'static' && position === 'absolute') {
        heightProp = 'scrollHeight';
        widthProp = 'scrollWidth';
      }
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


    offsetParent = offsetParent;

    if (placement === top || (placement === left || placement === right) && variation === end$1) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]
      offsetParent[heightProp];
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === left || (placement === top || placement === bottom) && variation === end$1) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]
      offsetParent[widthProp];
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x: x,
    y: y
  }, getWindow$1(popper)) : {
    x: x,
    y: y
  };

  x = _ref4.x;
  y = _ref4.y;

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref5) {
  var state = _ref5.state,
      options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
      _options$roundOffsets = options.roundOffsets,
      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration,
    isFixed: state.options.strategy === 'fixed'
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }

  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var computeStyles$1 = {
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
};

var passive = {
  passive: true
};

function effect(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = getWindow$1(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


var eventListeners = {
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
};

var hash$1 = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement$1(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash$1[matched];
  });
}

var hash = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return hash[matched];
  });
}

function getWindowScroll$2(node) {
  var win = getWindow$1(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}

function getWindowScrollBarX$1(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return getBoundingClientRect$1(getDocumentElement$2(element)).left + getWindowScroll$2(element).scrollLeft;
}

function getViewportRect$1(element, strategy) {
  var win = getWindow$1(element);
  var html = getDocumentElement$2(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0;

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    var layoutViewport = isLayoutViewport();

    if (layoutViewport || !layoutViewport && strategy === 'fixed') {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + getWindowScrollBarX$1(element),
    y: y
  };
}

// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect$1(element) {
  var _element$ownerDocumen;

  var html = getDocumentElement$2(element);
  var winScroll = getWindowScroll$2(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max$3(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max$3(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX$1(element);
  var y = -winScroll.scrollTop;

  if (getComputedStyle$2(body || html).direction === 'rtl') {
    x += max$3(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = getComputedStyle$2(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf(getNodeName$1(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }

  if (isHTMLElement$1(node) && isScrollParent(node)) {
    return node;
  }

  return getScrollParent(getParentNode$1(node));
}

/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

function listScrollParents(element, list) {
  var _element$ownerDocumen;

  if (list === void 0) {
    list = [];
  }

  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow$1(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents(getParentNode$1(target)));
}

function rectToClientRect$1(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

function getInnerBoundingClientRect$1(element, strategy) {
  var rect = getBoundingClientRect$1(element, false, strategy === 'fixed');
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent, strategy) {
  return clippingParent === viewport ? rectToClientRect$1(getViewportRect$1(element, strategy)) : isElement$2(clippingParent) ? getInnerBoundingClientRect$1(clippingParent, strategy) : rectToClientRect$1(getDocumentRect$1(getDocumentElement$2(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = listScrollParents(getParentNode$1(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle$2(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement$1(element) ? getOffsetParent$1(element) : element;

  if (!isElement$2(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return isElement$2(clippingParent) && contains(clippingParent, clipperElement) && getNodeName$1(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect$1(element, boundary, rootBoundary, strategy) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent, strategy);
    accRect.top = max$3(rect.top, accRect.top);
    accRect.right = min$4(rect.right, accRect.right);
    accRect.bottom = min$4(rect.bottom, accRect.bottom);
    accRect.left = max$3(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent, strategy));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? getMainAxisFromPlacement$1(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case start$1:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;

      case end$1:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;
    }
  }

  return offsets;
}

function detectOverflow$1(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$strategy = _options.strategy,
      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect$1(isElement$2(element) ? element : element.contextElement || getDocumentElement$2(state.elements.popper), boundary, rootBoundary, strategy);
  var referenceClientRect = getBoundingClientRect$1(state.elements.reference);
  var popperOffsets = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = rectToClientRect$1(Object.assign({}, popperRect, popperOffsets));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}

function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {
    return getVariation(placement) === variation;
  }) : basePlacements;
  var allowedPlacements = placements$1.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements$1;
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = detectOverflow$1(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[getBasePlacement(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}

function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }

  var oppositePlacement = getOppositePlacement$1(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}

function flip$1(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement$1(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = getBasePlacement(placement);

    var isStartVariation = getVariation(placement) === start$1;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = detectOverflow$1(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement$1(mainVariationSide);
    }

    var altVariationSide = getOppositePlacement$1(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases – research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


var flip$2 = {
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip$1,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
};

function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow$1(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = detectOverflow$1(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


var hide$1 = {
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
};

function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset$2(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var offset$3 = {
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset$2
};

function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name;
  // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var popperOffsets$1 = {
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
};

function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}

function preventOverflow(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow$1(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement$1(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis) {
    var _offsetModifierState$;

    var mainSide = mainAxis === 'y' ? top : left;
    var altSide = mainAxis === 'y' ? bottom : right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min = offset + overflow[mainSide];
    var max = offset - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start$1 ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start$1 ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = within$1(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent$1(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset + maxOffset - offsetModifierValue;
    var preventedOffset = within$1(tether ? min$4(min, tetherMin) : min, offset, tether ? max$3(max, tetherMax) : max);
    popperOffsets[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset;
  }

  if (checkAltAxis) {
    var _offsetModifierState$2;

    var _mainSide = mainAxis === 'x' ? top : left;

    var _altSide = mainAxis === 'x' ? bottom : right;

    var _offset = popperOffsets[altAxis];

    var _len = altAxis === 'y' ? 'height' : 'width';

    var _min = _offset + overflow[_mainSide];

    var _max = _offset - overflow[_altSide];

    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;

    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;

    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;

    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;

    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within$1(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);

    popperOffsets[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var preventOverflow$1 = {
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
};

function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

function getNodeScroll$1(node) {
  if (node === getWindow$1(node) || !isHTMLElement$1(node)) {
    return getWindowScroll$2(node);
  } else {
    return getHTMLElementScroll(node);
  }
}

function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round$1(rect.width) / element.offsetWidth || 1;
  var scaleY = round$1(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
} // Returns the composite rect of an element relative to its offsetParent.
// Composite means it takes into account transforms as well as layout.


function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var isOffsetParentAnElement = isHTMLElement$1(offsetParent);
  var offsetParentIsScaled = isHTMLElement$1(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement$2(offsetParent);
  var rect = getBoundingClientRect$1(elementOrVirtualElement, offsetParentIsScaled, isFixed);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName$1(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll$1(offsetParent);
    }

    if (isHTMLElement$1(offsetParent)) {
      offsets = getBoundingClientRect$1(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX$1(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

function debounce(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}

function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}

var DEFAULT_OPTIONS$1 = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS$1 : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS$1, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(setOptionsAction) {
        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options);
        state.scrollParents = {
          reference: isElement$2(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],
          popper: listScrollParents(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        });
        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: getCompositeRect(reference, getOffsetParent$1(popper), state.options.strategy === 'fixed'),
          popper: getLayoutRect(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });

        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {
      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref) {
        var name = _ref.name,
            _ref$options = _ref.options,
            options = _ref$options === void 0 ? {} : _ref$options,
            effect = _ref.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}

var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$3, flip$2, preventOverflow$1, arrow$1, hide$1];
var createPopper = /*#__PURE__*/popperGenerator({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */

var hasElementType = typeof Element !== 'undefined';
var hasMap = typeof Map === 'function';
var hasSet = typeof Set === 'function';
var hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;

// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js

function equal(a, b) {
  // START: fast-deep-equal es6/index.js 3.1.3
  if (a === b) return true;

  if (a && b && typeof a == 'object' && typeof b == 'object') {
    if (a.constructor !== b.constructor) return false;

    var length, i, keys;
    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (!equal(a[i], b[i])) return false;
      return true;
    }

    // START: Modifications:
    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code
    //    to co-exist with es5.
    // 2. Replace `for of` with es5 compliant iteration using `for`.
    //    Basically, take:
    //
    //    ```js
    //    for (i of a.entries())
    //      if (!b.has(i[0])) return false;
    //    ```
    //
    //    ... and convert to:
    //
    //    ```js
    //    it = a.entries();
    //    while (!(i = it.next()).done)
    //      if (!b.has(i.value[0])) return false;
    //    ```
    //
    //    **Note**: `i` access switches to `i.value`.
    var it;
    if (hasMap && (a instanceof Map) && (b instanceof Map)) {
      if (a.size !== b.size) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!b.has(i.value[0])) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!equal(i.value[1], b.get(i.value[0]))) return false;
      return true;
    }

    if (hasSet && (a instanceof Set) && (b instanceof Set)) {
      if (a.size !== b.size) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!b.has(i.value[0])) return false;
      return true;
    }
    // END: Modifications

    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (a[i] !== b[i]) return false;
      return true;
    }

    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
    // START: Modifications:
    // Apply guards for `Object.create(null)` handling. See:
    // - https://github.com/FormidableLabs/react-fast-compare/issues/64
    // - https://github.com/epoberezkin/fast-deep-equal/issues/49
    if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === 'function' && typeof b.valueOf === 'function') return a.valueOf() === b.valueOf();
    if (a.toString !== Object.prototype.toString && typeof a.toString === 'function' && typeof b.toString === 'function') return a.toString() === b.toString();
    // END: Modifications

    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) return false;

    for (i = length; i-- !== 0;)
      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
    // END: fast-deep-equal

    // START: react-fast-compare
    // custom handling for DOM elements
    if (hasElementType && a instanceof Element) return false;

    // custom handling for React/Preact
    for (i = length; i-- !== 0;) {
      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {
        // React-specific: avoid traversing React elements' _owner
        // Preact-specific: avoid traversing Preact elements' __v and __o
        //    __v = $_original / $_vnode
        //    __o = $_owner
        // These properties contain circular references and are not needed when
        // comparing the actual elements (and not their owners)
        // .$$typeof and ._store on just reasonable markers of elements

        continue;
      }

      // all other properties should be traversed as usual
      if (!equal(a[keys[i]], b[keys[i]])) return false;
    }
    // END: react-fast-compare

    // START: fast-deep-equal
    return true;
  }

  return a !== a && b !== b;
}
// end fast-deep-equal

var reactFastCompare = function isEqual(a, b) {
  try {
    return equal(a, b);
  } catch (error) {
    if (((error.message || '').match(/stack|recursion/i))) {
      // warn on circular references, don't crash
      // browsers give this different errors name and messages:
      // chrome/safari: "RangeError", "Maximum call stack size exceeded"
      // firefox: "InternalError", too much recursion"
      // edge: "Error", "Out of stack space"
      console.warn('react-fast-compare cannot handle circular refs');
      return false;
    }
    // some other error. we should definitely know about these
    throw error;
  }
};

var EMPTY_MODIFIERS$1 = [];
var usePopper = function usePopper(referenceElement, popperElement, options) {
  if (options === void 0) {
    options = {};
  }

  var prevOptions = React.useRef(null);
  var optionsWithDefaults = {
    onFirstUpdate: options.onFirstUpdate,
    placement: options.placement || 'bottom',
    strategy: options.strategy || 'absolute',
    modifiers: options.modifiers || EMPTY_MODIFIERS$1
  };

  var _React$useState = React.useState({
    styles: {
      popper: {
        position: optionsWithDefaults.strategy,
        left: '0',
        top: '0'
      },
      arrow: {
        position: 'absolute'
      }
    },
    attributes: {}
  }),
      state = _React$useState[0],
      setState = _React$useState[1];

  var updateStateModifier = React.useMemo(function () {
    return {
      name: 'updateState',
      enabled: true,
      phase: 'write',
      fn: function fn(_ref) {
        var state = _ref.state;
        var elements = Object.keys(state.elements);
        ReactDOM.flushSync(function () {
          setState({
            styles: fromEntries(elements.map(function (element) {
              return [element, state.styles[element] || {}];
            })),
            attributes: fromEntries(elements.map(function (element) {
              return [element, state.attributes[element]];
            }))
          });
        });
      },
      requires: ['computeStyles']
    };
  }, []);
  var popperOptions = React.useMemo(function () {
    var newOptions = {
      onFirstUpdate: optionsWithDefaults.onFirstUpdate,
      placement: optionsWithDefaults.placement,
      strategy: optionsWithDefaults.strategy,
      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {
        name: 'applyStyles',
        enabled: false
      }])
    };

    if (reactFastCompare(prevOptions.current, newOptions)) {
      return prevOptions.current || newOptions;
    } else {
      prevOptions.current = newOptions;
      return newOptions;
    }
  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);
  var popperInstanceRef = React.useRef();
  useIsomorphicLayoutEffect$2(function () {
    if (popperInstanceRef.current) {
      popperInstanceRef.current.setOptions(popperOptions);
    }
  }, [popperOptions]);
  useIsomorphicLayoutEffect$2(function () {
    if (referenceElement == null || popperElement == null) {
      return;
    }

    var createPopper$1 = options.createPopper || createPopper;
    var popperInstance = createPopper$1(referenceElement, popperElement, popperOptions);
    popperInstanceRef.current = popperInstance;
    return function () {
      popperInstance.destroy();
      popperInstanceRef.current = null;
    };
  }, [referenceElement, popperElement, options.createPopper]);
  return {
    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,
    styles: state.styles,
    attributes: state.attributes,
    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,
    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null
  };
};

var NOOP = function NOOP() {
  return void 0;
};

var NOOP_PROMISE = function NOOP_PROMISE() {
  return Promise.resolve(null);
};

var EMPTY_MODIFIERS = [];
function Popper(_ref) {
  var _ref$placement = _ref.placement,
      placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,
      _ref$strategy = _ref.strategy,
      strategy = _ref$strategy === void 0 ? 'absolute' : _ref$strategy,
      _ref$modifiers = _ref.modifiers,
      modifiers = _ref$modifiers === void 0 ? EMPTY_MODIFIERS : _ref$modifiers,
      referenceElement = _ref.referenceElement,
      onFirstUpdate = _ref.onFirstUpdate,
      innerRef = _ref.innerRef,
      children = _ref.children;
  var referenceNode = React.useContext(ManagerReferenceNodeContext);

  var _React$useState = React.useState(null),
      popperElement = _React$useState[0],
      setPopperElement = _React$useState[1];

  var _React$useState2 = React.useState(null),
      arrowElement = _React$useState2[0],
      setArrowElement = _React$useState2[1];

  React.useEffect(function () {
    setRef(innerRef, popperElement);
  }, [innerRef, popperElement]);
  var options = React.useMemo(function () {
    return {
      placement: placement,
      strategy: strategy,
      onFirstUpdate: onFirstUpdate,
      modifiers: [].concat(modifiers, [{
        name: 'arrow',
        enabled: arrowElement != null,
        options: {
          element: arrowElement
        }
      }])
    };
  }, [placement, strategy, onFirstUpdate, modifiers, arrowElement]);

  var _usePopper = usePopper(referenceElement || referenceNode, popperElement, options),
      state = _usePopper.state,
      styles = _usePopper.styles,
      forceUpdate = _usePopper.forceUpdate,
      update = _usePopper.update;

  var childrenProps = React.useMemo(function () {
    return {
      ref: setPopperElement,
      style: styles.popper,
      placement: state ? state.placement : placement,
      hasPopperEscaped: state && state.modifiersData.hide ? state.modifiersData.hide.hasPopperEscaped : null,
      isReferenceHidden: state && state.modifiersData.hide ? state.modifiersData.hide.isReferenceHidden : null,
      arrowProps: {
        style: styles.arrow,
        ref: setArrowElement
      },
      forceUpdate: forceUpdate || NOOP,
      update: update || NOOP_PROMISE
    };
  }, [setPopperElement, setArrowElement, placement, state, styles, update, forceUpdate]);
  return unwrapArray(children)(childrenProps);
}

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var __DEV__ = process.env.NODE_ENV !== 'production';

var warning$2 = function() {};

if (__DEV__) {
  var printWarning = function printWarning(format, args) {
    var len = arguments.length;
    args = new Array(len > 1 ? len - 1 : 0);
    for (var key = 1; key < len; key++) {
      args[key - 1] = arguments[key];
    }
    var argIndex = 0;
    var message = 'Warning: ' +
      format.replace(/%s/g, function() {
        return args[argIndex++];
      });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning$2 = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
          '`warning(condition, format, ...args)` requires a warning ' +
          'message argument'
      );
    }
    if (!condition) {
      printWarning.apply(null, [format].concat(args));
    }
  };
}

var warning_1 = warning$2;

function Reference(_ref) {
  var children = _ref.children,
      innerRef = _ref.innerRef;
  var setReferenceNode = React.useContext(ManagerReferenceNodeSetterContext);
  var refHandler = React.useCallback(function (node) {
    setRef(innerRef, node);
    safeInvoke(setReferenceNode, node);
  }, [innerRef, setReferenceNode]); // ran on unmount
  // eslint-disable-next-line react-hooks/exhaustive-deps

  React.useEffect(function () {
    return function () {
      return setRef(innerRef, null);
    };
  }, []);
  React.useEffect(function () {
    warning_1(Boolean(setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');
  }, [setReferenceNode]);
  return unwrapArray(children)({
    ref: refHandler
  });
}

/**
 * @name set
 * @category Common Helpers
 * @summary Set date values to a given date.
 *
 * @description
 * Set date values to a given date.
 *
 * Sets time values to date from object `values`.
 * A value is not set if it is undefined or null or doesn't exist in `values`.
 *
 * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts
 * to use native `Date#setX` methods. If you use this function, you may not want to include the
 * other `setX` functions that date-fns provides if you are concerned about the bundle size.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Object} values - an object with options
 * @param {Number} [values.year] - the number of years to be set
 * @param {Number} [values.month] - the number of months to be set
 * @param {Number} [values.date] - the number of days to be set
 * @param {Number} [values.hours] - the number of hours to be set
 * @param {Number} [values.minutes] - the number of minutes to be set
 * @param {Number} [values.seconds] - the number of seconds to be set
 * @param {Number} [values.milliseconds] - the number of milliseconds to be set
 * @returns {Date} the new date with options set
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `values` must be an object
 *
 * @example
 * // Transform 1 September 2014 into 20 October 2015 in a single line:
 * const result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })
 * //=> Tue Oct 20 2015 00:00:00
 *
 * @example
 * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:
 * const result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })
 * //=> Mon Sep 01 2014 12:23:45
 */
function set(dirtyDate, values) {
  requiredArgs(2, arguments);
  if (_typeof$4(values) !== 'object' || values === null) {
    throw new RangeError('values parameter must be an object');
  }
  var date = toDate(dirtyDate);

  // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date
  if (isNaN(date.getTime())) {
    return new Date(NaN);
  }
  if (values.year != null) {
    date.setFullYear(values.year);
  }
  if (values.month != null) {
    date = setMonth(date, values.month);
  }
  if (values.date != null) {
    date.setDate(toInteger(values.date));
  }
  if (values.hours != null) {
    date.setHours(toInteger(values.hours));
  }
  if (values.minutes != null) {
    date.setMinutes(toInteger(values.minutes));
  }
  if (values.seconds != null) {
    date.setSeconds(toInteger(values.seconds));
  }
  if (values.milliseconds != null) {
    date.setMilliseconds(toInteger(values.milliseconds));
  }
  return date;
}

function le(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n);}return r}function de(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?le(Object(r),!0).forEach((function(t){ve(e,t,r[t]);})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):le(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t));}));}return e}function ue(e){return (ue="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function he(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function me(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,Me(n.key),n);}}function fe(e,t,r){return t&&me(e.prototype,t),r&&me(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function ve(e,t,r){return (t=Me(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function ye(){return (ye=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n]);}return e}).apply(this,arguments)}function De(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&we(e,t);}function ge(e){return (ge=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function we(e,t){return (we=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function ke(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function be(e,t){if(t&&("object"==typeof t||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return ke(e)}function Se(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return !1;if(Reflect.construct.sham)return !1;if("function"==typeof Proxy)return !0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return !1}}();return function(){var r,n=ge(e);if(t){var o=ge(this).constructor;r=Reflect.construct(n,arguments,o);}else r=n.apply(this,arguments);return be(this,r)}}function Ce(e){return function(e){if(Array.isArray(e))return _e(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return _e(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return _e(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _e(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function Me(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return ("string"===t?String:Number)(e)}(e,"string");return "symbol"==typeof t?t:String(t)}function Ee(e,t){switch(e){case"P":return t.date({width:"short"});case"PP":return t.date({width:"medium"});case"PPP":return t.date({width:"long"});case"PPPP":default:return t.date({width:"full"})}}function Pe(e,t){switch(e){case"p":return t.time({width:"short"});case"pp":return t.time({width:"medium"});case"ppp":return t.time({width:"long"});case"pppp":default:return t.time({width:"full"})}}var Ne={p:Pe,P:function(e,t){var r,n=e.match(/(P+)(p+)?/)||[],o=n[1],a=n[2];if(!a)return Ee(e,t);switch(o){case"P":r=t.dateTime({width:"short"});break;case"PP":r=t.dateTime({width:"medium"});break;case"PPP":r=t.dateTime({width:"long"});break;case"PPPP":default:r=t.dateTime({width:"full"});}return r.replace("{{date}}",Ee(o,t)).replace("{{time}}",Pe(a,t))}},xe=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;function Ye(e){var t=e?"string"==typeof e||e instanceof String?parseISO(e):toDate(e):new Date;return Oe(t)?t:null}function Ie(e,t,r,n,o){var a=null,s=et(r)||et(Ze()),i=!0;return Array.isArray(t)?(t.forEach((function(t){var p=parse$2(e,t,new Date,{locale:s});n&&(i=Oe(p,o)&&e===Te(p,t,r)),Oe(p,o)&&i&&(a=p);})),a):(a=parse$2(e,t,new Date,{locale:s}),n?i=Oe(a)&&e===Te(a,t,r):Oe(a)||(t=t.match(xe).map((function(e){var t=e[0];return "p"===t||"P"===t?s?(0, Ne[t])(e,s.formatLong):t:e})).join(""),e.length>0&&(a=parse$2(e,t.slice(0,e.length),new Date)),Oe(a)||(a=new Date(e))),Oe(a)&&i?a:null)}function Oe(e,t){return t=t||new Date("1/1/1000"),isValid(e)&&!isBefore(e,t)}function Te(e,t,r){if("en"===r)return format(e,t,{awareOfUnicodeTokens:!0});var n=et(r);return r&&!n&&console.warn('A locale object was not found for the provided string ["'.concat(r,'"].')),!n&&Ze()&&et(Ze())&&(n=et(Ze())),format(e,t,{locale:n||null,awareOfUnicodeTokens:!0})}function Re(e,t){var r=t.dateFormat,n=t.locale;return e&&Te(e,Array.isArray(r)?r[0]:r,n)||""}function Le(e,t){var r=t.hour,n=void 0===r?0:r,o=t.minute,a=void 0===o?0:o,s=t.second;return setHours(setMinutes(setSeconds(e,void 0===s?0:s),a),n)}function Fe(e,t){var r=t&&et(t)||Ze()&&et(Ze());return getISOWeek(e,r?{locale:r}:null)}function Ae(e,t){return Te(e,"ddd",t)}function Ke(e){return startOfDay(e)}function Be(e,t,r){var n=et(t||Ze());return startOfWeek(e,{locale:n,weekStartsOn:r})}function We(e){return startOfMonth(e)}function He(e){return startOfYear(e)}function Qe(e){return startOfQuarter(e)}function je(){return startOfDay(Ye())}function Ve(e,t){return e&&t?isSameYear(e,t):!e&&!t}function qe(e,t){return e&&t?isSameMonth(e,t):!e&&!t}function Ue(e,t){return e&&t?isSameQuarter(e,t):!e&&!t}function ze(e,t){return e&&t?isSameDay(e,t):!e&&!t}function $e(e,t){return e&&t?isEqual$3(e,t):!e&&!t}function Ge(e,t,r){var n,o=startOfDay(t),a=endOfDay(r);try{n=isWithinInterval(e,{start:o,end:a});}catch(e){n=!1;}return n}function Ze(){return ("undefined"!=typeof window?window:globalThis).__localeId__}function et(e){if("string"==typeof e){var t="undefined"!=typeof window?window:globalThis;return t.__localeData__?t.__localeData__[e]:null}return e}function tt(e,t){return Te(setMonth(Ye(),e),"LLLL",t)}function rt(e,t){return Te(setMonth(Ye(),e),"LLL",t)}function nt(e,t){return Te(setQuarter(Ye(),e),"QQQ",t)}function ot(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minDate,n=t.maxDate,o=t.excludeDates,a=t.excludeDateIntervals,s=t.includeDates,i=t.includeDateIntervals,p=t.filterDate;return ut(e,{minDate:r,maxDate:n})||o&&o.some((function(t){return ze(e,t)}))||a&&a.some((function(t){var r=t.start,n=t.end;return isWithinInterval(e,{start:r,end:n})}))||s&&!s.some((function(t){return ze(e,t)}))||i&&!i.some((function(t){var r=t.start,n=t.end;return isWithinInterval(e,{start:r,end:n})}))||p&&!p(Ye(e))||!1}function at(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.excludeDates,n=t.excludeDateIntervals;return n&&n.length>0?n.some((function(t){var r=t.start,n=t.end;return isWithinInterval(e,{start:r,end:n})})):r&&r.some((function(t){return ze(e,t)}))||!1}function st(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minDate,n=t.maxDate,o=t.excludeDates,a=t.includeDates,s=t.filterDate;return ut(e,{minDate:startOfMonth(r),maxDate:endOfMonth(n)})||o&&o.some((function(t){return qe(e,t)}))||a&&!a.some((function(t){return qe(e,t)}))||s&&!s(Ye(e))||!1}function it(e,t,r,n){var o=getYear(e),a=getMonth(e),s=getYear(t),i=getMonth(t),p=getYear(n);return o===s&&o===p?a<=r&&r<=i:o<s?p===o&&a<=r||p===s&&i>=r||p<s&&p>o:void 0}function pt(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minDate,n=t.maxDate,o=t.excludeDates,a=t.includeDates,s=t.filterDate;return ut(e,{minDate:r,maxDate:n})||o&&o.some((function(t){return Ue(e,t)}))||a&&!a.some((function(t){return Ue(e,t)}))||s&&!s(Ye(e))||!1}function ct(e,t,r){if(!isValid(t)||!isValid(r))return !1;var n=getYear(t),a=getYear(r);return n<=e&&a>=e}function lt(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minDate,n=t.maxDate,o=t.excludeDates,a=t.includeDates,s=t.filterDate,i=new Date(e,0,1);return ut(i,{minDate:startOfYear(r),maxDate:endOfYear(n)})||o&&o.some((function(e){return Ve(i,e)}))||a&&!a.some((function(e){return Ve(i,e)}))||s&&!s(Ye(i))||!1}function dt(e,t,r,n){var o=getYear(e),a=getQuarter(e),s=getYear(t),i=getQuarter(t),p=getYear(n);return o===s&&o===p?a<=r&&r<=i:o<s?p===o&&a<=r||p===s&&i>=r||p<s&&p>o:void 0}function ut(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minDate,n=t.maxDate;return r&&differenceInCalendarDays(e,r)<0||n&&differenceInCalendarDays(e,n)>0}function ht(e,t){return t.some((function(t){return getHours(t)===getHours(e)&&getMinutes(t)===getMinutes(e)}))}function mt(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.excludeTimes,n=t.includeTimes,o=t.filterTime;return r&&ht(e,r)||n&&!ht(e,n)||o&&!o(e)||!1}function ft(e,t){var r=t.minTime,n=t.maxTime;if(!r||!n)throw new Error("Both minTime and maxTime props required");var o,a=Ye(),s=setHours(setMinutes(a,getMinutes(e)),getHours(e)),i=setHours(setMinutes(a,getMinutes(r)),getHours(r)),p=setHours(setMinutes(a,getMinutes(n)),getHours(n));try{o=!isWithinInterval(s,{start:i,end:p});}catch(e){o=!1;}return o}function vt(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minDate,n=t.includeDates,o=subMonths(e,1);return r&&differenceInCalendarMonths(r,o)>0||n&&n.every((function(e){return differenceInCalendarMonths(e,o)>0}))||!1}function yt(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.maxDate,n=t.includeDates,o=addMonths(e,1);return r&&differenceInCalendarMonths(o,r)>0||n&&n.every((function(e){return differenceInCalendarMonths(o,e)>0}))||!1}function Dt(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minDate,n=t.includeDates,o=subYears(e,1);return r&&differenceInCalendarYears(r,o)>0||n&&n.every((function(e){return differenceInCalendarYears(e,o)>0}))||!1}function gt(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.maxDate,n=t.includeDates,o=addYears(e,1);return r&&differenceInCalendarYears(o,r)>0||n&&n.every((function(e){return differenceInCalendarYears(o,e)>0}))||!1}function wt(e){var t=e.minDate,r=e.includeDates;if(r&&t){var n=r.filter((function(e){return differenceInCalendarDays(e,t)>=0}));return min$5(n)}return r?min$5(r):t}function kt(e){var t=e.maxDate,r=e.includeDates;if(r&&t){var n=r.filter((function(e){return differenceInCalendarDays(e,t)<=0}));return max$4(n)}return r?max$4(r):t}function bt(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"react-datepicker__day--highlighted",r=new Map,o=0,a=e.length;o<a;o++){var s=e[o];if(isDate$1(s)){var i=Te(s,"MM.dd.yyyy"),p=r.get(i)||[];p.includes(t)||(p.push(t),r.set(i,p));}else if("object"===ue(s)){var c=Object.keys(s),l=c[0],d=s[c[0]];if("string"==typeof l&&d.constructor===Array)for(var u=0,h=d.length;u<h;u++){var m=Te(d[u],"MM.dd.yyyy"),f=r.get(m)||[];f.includes(l)||(f.push(l),r.set(m,f));}}}return r}function St(e,t,r,n,o){for(var a=o.length,p=[],c=0;c<a;c++){var l=addMinutes(addHours(e,getHours(o[c])),getMinutes(o[c])),d=addMinutes(e,(r+1)*n);isAfter(l,t)&&isBefore(l,d)&&p.push(o[c]);}return p}function Ct(e){return e<10?"0".concat(e):"".concat(e)}function _t(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:12,r=Math.ceil(getYear(e)/t)*t,n=r-(t-1);return {startPeriod:n,endPeriod:r}}function Mt(e,t,r,n){for(var o=[],a=0;a<2*t+1;a++){var s=e+t-a,i=!0;r&&(i=getYear(r)<=s),n&&i&&(i=getYear(n)>=s),i&&o.push(s);}return o}var Et=onClickOutsideHOC(function(n){De(a,React__default.Component);var o=Se(a);function a(r){var n;he(this,a),ve(ke(n=o.call(this,r)),"renderOptions",(function(){var t=n.props.year,r=n.state.yearsList.map((function(r){return React__default.createElement("div",{className:t===r?"react-datepicker__year-option react-datepicker__year-option--selected_year":"react-datepicker__year-option",key:r,onClick:n.onChange.bind(ke(n),r),"aria-selected":t===r?"true":void 0},t===r?React__default.createElement("span",{className:"react-datepicker__year-option--selected"},"✓"):"",r)})),o=n.props.minDate?getYear(n.props.minDate):null,a=n.props.maxDate?getYear(n.props.maxDate):null;return a&&n.state.yearsList.find((function(e){return e===a}))||r.unshift(React__default.createElement("div",{className:"react-datepicker__year-option",key:"upcoming",onClick:n.incrementYears},React__default.createElement("a",{className:"react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-upcoming"}))),o&&n.state.yearsList.find((function(e){return e===o}))||r.push(React__default.createElement("div",{className:"react-datepicker__year-option",key:"previous",onClick:n.decrementYears},React__default.createElement("a",{className:"react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-previous"}))),r})),ve(ke(n),"onChange",(function(e){n.props.onChange(e);})),ve(ke(n),"handleClickOutside",(function(){n.props.onCancel();})),ve(ke(n),"shiftYears",(function(e){var t=n.state.yearsList.map((function(t){return t+e}));n.setState({yearsList:t});})),ve(ke(n),"incrementYears",(function(){return n.shiftYears(1)})),ve(ke(n),"decrementYears",(function(){return n.shiftYears(-1)}));var s=r.yearDropdownItemNumber,i=r.scrollableYearDropdown,p=s||(i?10:5);return n.state={yearsList:Mt(n.props.year,p,n.props.minDate,n.props.maxDate)},n.dropdownRef=createRef(),n}return fe(a,[{key:"componentDidMount",value:function(){var e=this.dropdownRef.current;if(e){var t=e.children?Array.from(e.children):null,r=t?t.find((function(e){return e.ariaSelected})):null;e.scrollTop=r?r.offsetTop+(r.clientHeight-e.clientHeight)/2:(e.scrollHeight-e.clientHeight)/2;}}},{key:"render",value:function(){var t=r({"react-datepicker__year-dropdown":!0,"react-datepicker__year-dropdown--scrollable":this.props.scrollableYearDropdown});return React__default.createElement("div",{className:t,ref:this.dropdownRef},this.renderOptions())}}]),a}()),Pt=function(t){De(n,React__default.Component);var r=Se(n);function n(){var t;he(this,n);for(var o=arguments.length,a=new Array(o),s=0;s<o;s++)a[s]=arguments[s];return ve(ke(t=r.call.apply(r,[this].concat(a))),"state",{dropdownVisible:!1}),ve(ke(t),"renderSelectOptions",(function(){for(var r=t.props.minDate?getYear(t.props.minDate):1900,n=t.props.maxDate?getYear(t.props.maxDate):2100,o=[],a=r;a<=n;a++)o.push(React__default.createElement("option",{key:a,value:a},a));return o})),ve(ke(t),"onSelectChange",(function(e){t.onChange(e.target.value);})),ve(ke(t),"renderSelectMode",(function(){return React__default.createElement("select",{value:t.props.year,className:"react-datepicker__year-select",onChange:t.onSelectChange},t.renderSelectOptions())})),ve(ke(t),"renderReadView",(function(r){return React__default.createElement("div",{key:"read",style:{visibility:r?"visible":"hidden"},className:"react-datepicker__year-read-view",onClick:function(e){return t.toggleDropdown(e)}},React__default.createElement("span",{className:"react-datepicker__year-read-view--down-arrow"}),React__default.createElement("span",{className:"react-datepicker__year-read-view--selected-year"},t.props.year))})),ve(ke(t),"renderDropdown",(function(){return React__default.createElement(Et,{key:"dropdown",year:t.props.year,onChange:t.onChange,onCancel:t.toggleDropdown,minDate:t.props.minDate,maxDate:t.props.maxDate,scrollableYearDropdown:t.props.scrollableYearDropdown,yearDropdownItemNumber:t.props.yearDropdownItemNumber})})),ve(ke(t),"renderScrollMode",(function(){var e=t.state.dropdownVisible,r=[t.renderReadView(!e)];return e&&r.unshift(t.renderDropdown()),r})),ve(ke(t),"onChange",(function(e){t.toggleDropdown(),e!==t.props.year&&t.props.onChange(e);})),ve(ke(t),"toggleDropdown",(function(e){t.setState({dropdownVisible:!t.state.dropdownVisible},(function(){t.props.adjustDateOnChange&&t.handleYearChange(t.props.date,e);}));})),ve(ke(t),"handleYearChange",(function(e,r){t.onSelect(e,r),t.setOpen();})),ve(ke(t),"onSelect",(function(e,r){t.props.onSelect&&t.props.onSelect(e,r);})),ve(ke(t),"setOpen",(function(){t.props.setOpen&&t.props.setOpen(!0);})),t}return fe(n,[{key:"render",value:function(){var t;switch(this.props.dropdownMode){case"scroll":t=this.renderScrollMode();break;case"select":t=this.renderSelectMode();}return React__default.createElement("div",{className:"react-datepicker__year-dropdown-container react-datepicker__year-dropdown-container--".concat(this.props.dropdownMode)},t)}}]),n}(),Nt=onClickOutsideHOC(function(t){De(n,React__default.Component);var r=Se(n);function n(){var t;he(this,n);for(var o=arguments.length,a=new Array(o),s=0;s<o;s++)a[s]=arguments[s];return ve(ke(t=r.call.apply(r,[this].concat(a))),"isSelectedMonth",(function(e){return t.props.month===e})),ve(ke(t),"renderOptions",(function(){return t.props.monthNames.map((function(r,n){return React__default.createElement("div",{className:t.isSelectedMonth(n)?"react-datepicker__month-option react-datepicker__month-option--selected_month":"react-datepicker__month-option",key:r,onClick:t.onChange.bind(ke(t),n),"aria-selected":t.isSelectedMonth(n)?"true":void 0},t.isSelectedMonth(n)?React__default.createElement("span",{className:"react-datepicker__month-option--selected"},"✓"):"",r)}))})),ve(ke(t),"onChange",(function(e){return t.props.onChange(e)})),ve(ke(t),"handleClickOutside",(function(){return t.props.onCancel()})),t}return fe(n,[{key:"render",value:function(){return React__default.createElement("div",{className:"react-datepicker__month-dropdown"},this.renderOptions())}}]),n}()),xt=function(t){De(n,React__default.Component);var r=Se(n);function n(){var t;he(this,n);for(var o=arguments.length,a=new Array(o),s=0;s<o;s++)a[s]=arguments[s];return ve(ke(t=r.call.apply(r,[this].concat(a))),"state",{dropdownVisible:!1}),ve(ke(t),"renderSelectOptions",(function(t){return t.map((function(t,r){return React__default.createElement("option",{key:r,value:r},t)}))})),ve(ke(t),"renderSelectMode",(function(r){return React__default.createElement("select",{value:t.props.month,className:"react-datepicker__month-select",onChange:function(e){return t.onChange(e.target.value)}},t.renderSelectOptions(r))})),ve(ke(t),"renderReadView",(function(r,n){return React__default.createElement("div",{key:"read",style:{visibility:r?"visible":"hidden"},className:"react-datepicker__month-read-view",onClick:t.toggleDropdown},React__default.createElement("span",{className:"react-datepicker__month-read-view--down-arrow"}),React__default.createElement("span",{className:"react-datepicker__month-read-view--selected-month"},n[t.props.month]))})),ve(ke(t),"renderDropdown",(function(r){return React__default.createElement(Nt,{key:"dropdown",month:t.props.month,monthNames:r,onChange:t.onChange,onCancel:t.toggleDropdown})})),ve(ke(t),"renderScrollMode",(function(e){var r=t.state.dropdownVisible,n=[t.renderReadView(!r,e)];return r&&n.unshift(t.renderDropdown(e)),n})),ve(ke(t),"onChange",(function(e){t.toggleDropdown(),e!==t.props.month&&t.props.onChange(e);})),ve(ke(t),"toggleDropdown",(function(){return t.setState({dropdownVisible:!t.state.dropdownVisible})})),t}return fe(n,[{key:"render",value:function(){var t,r=this,n=[0,1,2,3,4,5,6,7,8,9,10,11].map(this.props.useShortMonthInDropdown?function(e){return rt(e,r.props.locale)}:function(e){return tt(e,r.props.locale)});switch(this.props.dropdownMode){case"scroll":t=this.renderScrollMode(n);break;case"select":t=this.renderSelectMode(n);}return React__default.createElement("div",{className:"react-datepicker__month-dropdown-container react-datepicker__month-dropdown-container--".concat(this.props.dropdownMode)},t)}}]),n}();function Yt(e,t){for(var r=[],n=We(e),o=We(t);!isAfter(n,o);)r.push(Ye(n)),n=addMonths(n,1);return r}var It,Ot=onClickOutsideHOC(function(t){De(o,React__default.Component);var n=Se(o);function o(t){var r;return he(this,o),ve(ke(r=n.call(this,t)),"renderOptions",(function(){return r.state.monthYearsList.map((function(t){var n=getTime(t),o=Ve(r.props.date,t)&&qe(r.props.date,t);return React__default.createElement("div",{className:o?"react-datepicker__month-year-option--selected_month-year":"react-datepicker__month-year-option",key:n,onClick:r.onChange.bind(ke(r),n),"aria-selected":o?"true":void 0},o?React__default.createElement("span",{className:"react-datepicker__month-year-option--selected"},"✓"):"",Te(t,r.props.dateFormat,r.props.locale))}))})),ve(ke(r),"onChange",(function(e){return r.props.onChange(e)})),ve(ke(r),"handleClickOutside",(function(){r.props.onCancel();})),r.state={monthYearsList:Yt(r.props.minDate,r.props.maxDate)},r}return fe(o,[{key:"render",value:function(){var t=r({"react-datepicker__month-year-dropdown":!0,"react-datepicker__month-year-dropdown--scrollable":this.props.scrollableMonthYearDropdown});return React__default.createElement("div",{className:t},this.renderOptions())}}]),o}()),Tt=function(t){De(n,React__default.Component);var r=Se(n);function n(){var t;he(this,n);for(var o=arguments.length,a=new Array(o),s=0;s<o;s++)a[s]=arguments[s];return ve(ke(t=r.call.apply(r,[this].concat(a))),"state",{dropdownVisible:!1}),ve(ke(t),"renderSelectOptions",(function(){for(var r=We(t.props.minDate),n=We(t.props.maxDate),o=[];!isAfter(r,n);){var a=getTime(r);o.push(React__default.createElement("option",{key:a,value:a},Te(r,t.props.dateFormat,t.props.locale))),r=addMonths(r,1);}return o})),ve(ke(t),"onSelectChange",(function(e){t.onChange(e.target.value);})),ve(ke(t),"renderSelectMode",(function(){return React__default.createElement("select",{value:getTime(We(t.props.date)),className:"react-datepicker__month-year-select",onChange:t.onSelectChange},t.renderSelectOptions())})),ve(ke(t),"renderReadView",(function(r){var n=Te(t.props.date,t.props.dateFormat,t.props.locale);return React__default.createElement("div",{key:"read",style:{visibility:r?"visible":"hidden"},className:"react-datepicker__month-year-read-view",onClick:function(e){return t.toggleDropdown(e)}},React__default.createElement("span",{className:"react-datepicker__month-year-read-view--down-arrow"}),React__default.createElement("span",{className:"react-datepicker__month-year-read-view--selected-month-year"},n))})),ve(ke(t),"renderDropdown",(function(){return React__default.createElement(Ot,{key:"dropdown",date:t.props.date,dateFormat:t.props.dateFormat,onChange:t.onChange,onCancel:t.toggleDropdown,minDate:t.props.minDate,maxDate:t.props.maxDate,scrollableMonthYearDropdown:t.props.scrollableMonthYearDropdown,locale:t.props.locale})})),ve(ke(t),"renderScrollMode",(function(){var e=t.state.dropdownVisible,r=[t.renderReadView(!e)];return e&&r.unshift(t.renderDropdown()),r})),ve(ke(t),"onChange",(function(e){t.toggleDropdown();var r=Ye(parseInt(e));Ve(t.props.date,r)&&qe(t.props.date,r)||t.props.onChange(r);})),ve(ke(t),"toggleDropdown",(function(){return t.setState({dropdownVisible:!t.state.dropdownVisible})})),t}return fe(n,[{key:"render",value:function(){var t;switch(this.props.dropdownMode){case"scroll":t=this.renderScrollMode();break;case"select":t=this.renderSelectMode();}return React__default.createElement("div",{className:"react-datepicker__month-year-dropdown-container react-datepicker__month-year-dropdown-container--".concat(this.props.dropdownMode)},t)}}]),n}(),Rt=function(t){De(o,React__default.Component);var n=Se(o);function o(){var t;he(this,o);for(var a=arguments.length,s=new Array(a),i=0;i<a;i++)s[i]=arguments[i];return ve(ke(t=n.call.apply(n,[this].concat(s))),"dayEl",React__default.createRef()),ve(ke(t),"handleClick",(function(e){!t.isDisabled()&&t.props.onClick&&t.props.onClick(e);})),ve(ke(t),"handleMouseEnter",(function(e){!t.isDisabled()&&t.props.onMouseEnter&&t.props.onMouseEnter(e);})),ve(ke(t),"handleOnKeyDown",(function(e){" "===e.key&&(e.preventDefault(),e.key="Enter"),t.props.handleOnKeyDown(e);})),ve(ke(t),"isSameDay",(function(e){return ze(t.props.day,e)})),ve(ke(t),"isKeyboardSelected",(function(){return !t.props.disabledKeyboardNavigation&&!t.isSameDay(t.props.selected)&&t.isSameDay(t.props.preSelection)})),ve(ke(t),"isDisabled",(function(){return ot(t.props.day,t.props)})),ve(ke(t),"isExcluded",(function(){return at(t.props.day,t.props)})),ve(ke(t),"getHighLightedClass",(function(e){var r=t.props,n=r.day,o=r.highlightDates;if(!o)return !1;var a=Te(n,"MM.dd.yyyy");return o.get(a)})),ve(ke(t),"isInRange",(function(){var e=t.props,r=e.day,n=e.startDate,o=e.endDate;return !(!n||!o)&&Ge(r,n,o)})),ve(ke(t),"isInSelectingRange",(function(){var e,r=t.props,n=r.day,o=r.selectsStart,a=r.selectsEnd,s=r.selectsRange,i=r.selectsDisabledDaysInRange,p=r.startDate,c=r.endDate,l=null!==(e=t.props.selectingDate)&&void 0!==e?e:t.props.preSelection;return !(!(o||a||s)||!l||!i&&t.isDisabled())&&(o&&c&&(isBefore(l,c)||$e(l,c))?Ge(n,l,c):(a&&p&&(isAfter(l,p)||$e(l,p))||!(!s||!p||c||!isAfter(l,p)&&!$e(l,p)))&&Ge(n,p,l))})),ve(ke(t),"isSelectingRangeStart",(function(){var e;if(!t.isInSelectingRange())return !1;var r=t.props,n=r.day,o=r.startDate,a=r.selectsStart,s=null!==(e=t.props.selectingDate)&&void 0!==e?e:t.props.preSelection;return ze(n,a?s:o)})),ve(ke(t),"isSelectingRangeEnd",(function(){var e;if(!t.isInSelectingRange())return !1;var r=t.props,n=r.day,o=r.endDate,a=r.selectsEnd,s=r.selectsRange,i=null!==(e=t.props.selectingDate)&&void 0!==e?e:t.props.preSelection;return ze(n,a||s?i:o)})),ve(ke(t),"isRangeStart",(function(){var e=t.props,r=e.day,n=e.startDate,o=e.endDate;return !(!n||!o)&&ze(n,r)})),ve(ke(t),"isRangeEnd",(function(){var e=t.props,r=e.day,n=e.startDate,o=e.endDate;return !(!n||!o)&&ze(o,r)})),ve(ke(t),"isWeekend",(function(){var e=getDay(t.props.day);return 0===e||6===e})),ve(ke(t),"isAfterMonth",(function(){return void 0!==t.props.month&&(t.props.month+1)%12===getMonth(t.props.day)})),ve(ke(t),"isBeforeMonth",(function(){return void 0!==t.props.month&&(getMonth(t.props.day)+1)%12===t.props.month})),ve(ke(t),"isCurrentDay",(function(){return t.isSameDay(Ye())})),ve(ke(t),"isSelected",(function(){return t.isSameDay(t.props.selected)})),ve(ke(t),"getClassNames",(function(e){var n=t.props.dayClassName?t.props.dayClassName(e):void 0;return r("react-datepicker__day",n,"react-datepicker__day--"+Ae(t.props.day),{"react-datepicker__day--disabled":t.isDisabled(),"react-datepicker__day--excluded":t.isExcluded(),"react-datepicker__day--selected":t.isSelected(),"react-datepicker__day--keyboard-selected":t.isKeyboardSelected(),"react-datepicker__day--range-start":t.isRangeStart(),"react-datepicker__day--range-end":t.isRangeEnd(),"react-datepicker__day--in-range":t.isInRange(),"react-datepicker__day--in-selecting-range":t.isInSelectingRange(),"react-datepicker__day--selecting-range-start":t.isSelectingRangeStart(),"react-datepicker__day--selecting-range-end":t.isSelectingRangeEnd(),"react-datepicker__day--today":t.isCurrentDay(),"react-datepicker__day--weekend":t.isWeekend(),"react-datepicker__day--outside-month":t.isAfterMonth()||t.isBeforeMonth()},t.getHighLightedClass("react-datepicker__day--highlighted"))})),ve(ke(t),"getAriaLabel",(function(){var e=t.props,r=e.day,n=e.ariaLabelPrefixWhenEnabled,o=void 0===n?"Choose":n,a=e.ariaLabelPrefixWhenDisabled,s=void 0===a?"Not available":a,i=t.isDisabled()||t.isExcluded()?s:o;return "".concat(i," ").concat(Te(r,"PPPP",t.props.locale))})),ve(ke(t),"getTabIndex",(function(e,r){var n=e||t.props.selected,o=r||t.props.preSelection;return t.isKeyboardSelected()||t.isSameDay(n)&&ze(o,n)?0:-1})),ve(ke(t),"handleFocusDay",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=!1;0===t.getTabIndex()&&!e.isInputFocused&&t.isSameDay(t.props.preSelection)&&(document.activeElement&&document.activeElement!==document.body||(r=!0),t.props.inline&&!t.props.shouldFocusDayInline&&(r=!1),t.props.containerRef&&t.props.containerRef.current&&t.props.containerRef.current.contains(document.activeElement)&&document.activeElement.classList.contains("react-datepicker__day")&&(r=!0),t.props.monthShowsDuplicateDaysEnd&&t.isAfterMonth()&&(r=!1),t.props.monthShowsDuplicateDaysStart&&t.isBeforeMonth()&&(r=!1)),r&&t.dayEl.current.focus({preventScroll:!0});})),ve(ke(t),"renderDayContents",(function(){return t.props.monthShowsDuplicateDaysEnd&&t.isAfterMonth()||t.props.monthShowsDuplicateDaysStart&&t.isBeforeMonth()?null:t.props.renderDayContents?t.props.renderDayContents(getDate(t.props.day),t.props.day):getDate(t.props.day)})),ve(ke(t),"render",(function(){return React__default.createElement("div",{ref:t.dayEl,className:t.getClassNames(t.props.day),onKeyDown:t.handleOnKeyDown,onClick:t.handleClick,onMouseEnter:t.handleMouseEnter,tabIndex:t.getTabIndex(),"aria-label":t.getAriaLabel(),role:"option","aria-disabled":t.isDisabled(),"aria-current":t.isCurrentDay()?"date":void 0,"aria-selected":t.isSelected()||t.isInRange()},t.renderDayContents())})),t}return fe(o,[{key:"componentDidMount",value:function(){this.handleFocusDay();}},{key:"componentDidUpdate",value:function(e){this.handleFocusDay(e);}}]),o}(),Lt=function(t){De(o,React__default.Component);var n=Se(o);function o(){var e;he(this,o);for(var t=arguments.length,r=new Array(t),a=0;a<t;a++)r[a]=arguments[a];return ve(ke(e=n.call.apply(n,[this].concat(r))),"handleClick",(function(t){e.props.onClick&&e.props.onClick(t);})),e}return fe(o,[{key:"render",value:function(){var t=this.props,n=t.weekNumber,o=t.ariaLabelPrefix,a=void 0===o?"week ":o,s={"react-datepicker__week-number":!0,"react-datepicker__week-number--clickable":!!t.onClick};return React__default.createElement("div",{className:r(s),"aria-label":"".concat(a," ").concat(this.props.weekNumber),onClick:this.handleClick},n)}}]),o}(),Ft=function(t){De(n,React__default.Component);var r=Se(n);function n(){var t;he(this,n);for(var o=arguments.length,a=new Array(o),s=0;s<o;s++)a[s]=arguments[s];return ve(ke(t=r.call.apply(r,[this].concat(a))),"handleDayClick",(function(e,r){t.props.onDayClick&&t.props.onDayClick(e,r);})),ve(ke(t),"handleDayMouseEnter",(function(e){t.props.onDayMouseEnter&&t.props.onDayMouseEnter(e);})),ve(ke(t),"handleWeekClick",(function(e,r,n){"function"==typeof t.props.onWeekSelect&&t.props.onWeekSelect(e,r,n),t.props.shouldCloseOnSelect&&t.props.setOpen(!1);})),ve(ke(t),"formatWeekNumber",(function(e){return t.props.formatWeekNumber?t.props.formatWeekNumber(e):Fe(e)})),ve(ke(t),"renderDays",(function(){var r=Be(t.props.day,t.props.locale,t.props.calendarStartDay),n=[],o=t.formatWeekNumber(r);if(t.props.showWeekNumber){var a=t.props.onWeekSelect?t.handleWeekClick.bind(ke(t),r,o):void 0;n.push(React__default.createElement(Lt,{key:"W",weekNumber:o,onClick:a,ariaLabelPrefix:t.props.ariaLabelPrefix}));}return n.concat([0,1,2,3,4,5,6].map((function(n){var o=addDays(r,n);return React__default.createElement(Rt,{ariaLabelPrefixWhenEnabled:t.props.chooseDayAriaLabelPrefix,ariaLabelPrefixWhenDisabled:t.props.disabledDayAriaLabelPrefix,key:o.valueOf(),day:o,month:t.props.month,onClick:t.handleDayClick.bind(ke(t),o),onMouseEnter:t.handleDayMouseEnter.bind(ke(t),o),minDate:t.props.minDate,maxDate:t.props.maxDate,excludeDates:t.props.excludeDates,excludeDateIntervals:t.props.excludeDateIntervals,includeDates:t.props.includeDates,includeDateIntervals:t.props.includeDateIntervals,highlightDates:t.props.highlightDates,selectingDate:t.props.selectingDate,filterDate:t.props.filterDate,preSelection:t.props.preSelection,selected:t.props.selected,selectsStart:t.props.selectsStart,selectsEnd:t.props.selectsEnd,selectsRange:t.props.selectsRange,selectsDisabledDaysInRange:t.props.selectsDisabledDaysInRange,startDate:t.props.startDate,endDate:t.props.endDate,dayClassName:t.props.dayClassName,renderDayContents:t.props.renderDayContents,disabledKeyboardNavigation:t.props.disabledKeyboardNavigation,handleOnKeyDown:t.props.handleOnKeyDown,isInputFocused:t.props.isInputFocused,containerRef:t.props.containerRef,inline:t.props.inline,shouldFocusDayInline:t.props.shouldFocusDayInline,monthShowsDuplicateDaysEnd:t.props.monthShowsDuplicateDaysEnd,monthShowsDuplicateDaysStart:t.props.monthShowsDuplicateDaysStart,locale:t.props.locale})})))})),t}return fe(n,[{key:"render",value:function(){return React__default.createElement("div",{className:"react-datepicker__week"},this.renderDays())}}],[{key:"defaultProps",get:function(){return {shouldCloseOnSelect:!0}}}]),n}(),At="two_columns",Kt="three_columns",Bt="four_columns",Wt=(ve(It={},At,{grid:[[0,1],[2,3],[4,5],[6,7],[8,9],[10,11]],verticalNavigationOffset:2}),ve(It,Kt,{grid:[[0,1,2],[3,4,5],[6,7,8],[9,10,11]],verticalNavigationOffset:3}),ve(It,Bt,{grid:[[0,1,2,3],[4,5,6,7],[8,9,10,11]],verticalNavigationOffset:4}),It);function Ht(e,t){return e?Bt:t?At:Kt}var Qt=function(t){De(o,React__default.Component);var n=Se(o);function o(){var t;he(this,o);for(var a=arguments.length,s=new Array(a),i=0;i<a;i++)s[i]=arguments[i];return ve(ke(t=n.call.apply(n,[this].concat(s))),"MONTH_REFS",Ce(Array(12)).map((function(){return React__default.createRef()}))),ve(ke(t),"QUARTER_REFS",Ce(Array(4)).map((function(){return React__default.createRef()}))),ve(ke(t),"isDisabled",(function(e){return ot(e,t.props)})),ve(ke(t),"isExcluded",(function(e){return at(e,t.props)})),ve(ke(t),"handleDayClick",(function(e,r){t.props.onDayClick&&t.props.onDayClick(e,r,t.props.orderInDisplay);})),ve(ke(t),"handleDayMouseEnter",(function(e){t.props.onDayMouseEnter&&t.props.onDayMouseEnter(e);})),ve(ke(t),"handleMouseLeave",(function(){t.props.onMouseLeave&&t.props.onMouseLeave();})),ve(ke(t),"isRangeStartMonth",(function(e){var r=t.props,n=r.day,o=r.startDate,a=r.endDate;return !(!o||!a)&&qe(setMonth(n,e),o)})),ve(ke(t),"isRangeStartQuarter",(function(e){var r=t.props,n=r.day,o=r.startDate,a=r.endDate;return !(!o||!a)&&Ue(setQuarter(n,e),o)})),ve(ke(t),"isRangeEndMonth",(function(e){var r=t.props,n=r.day,o=r.startDate,a=r.endDate;return !(!o||!a)&&qe(setMonth(n,e),a)})),ve(ke(t),"isRangeEndQuarter",(function(e){var r=t.props,n=r.day,o=r.startDate,a=r.endDate;return !(!o||!a)&&Ue(setQuarter(n,e),a)})),ve(ke(t),"isInSelectingRangeMonth",(function(e){var r,n=t.props,o=n.day,a=n.selectsStart,s=n.selectsEnd,i=n.selectsRange,p=n.startDate,c=n.endDate,l=null!==(r=t.props.selectingDate)&&void 0!==r?r:t.props.preSelection;return !(!(a||s||i)||!l)&&(a&&c?it(l,c,e,o):(s&&p||!(!i||!p||c))&&it(p,l,e,o))})),ve(ke(t),"isSelectingMonthRangeStart",(function(e){var r;if(!t.isInSelectingRangeMonth(e))return !1;var n=t.props,o=n.day,a=n.startDate,s=n.selectsStart,i=setMonth(o,e),p=null!==(r=t.props.selectingDate)&&void 0!==r?r:t.props.preSelection;return qe(i,s?p:a)})),ve(ke(t),"isSelectingMonthRangeEnd",(function(e){var r;if(!t.isInSelectingRangeMonth(e))return !1;var n=t.props,o=n.day,a=n.endDate,s=n.selectsEnd,i=n.selectsRange,p=setMonth(o,e),c=null!==(r=t.props.selectingDate)&&void 0!==r?r:t.props.preSelection;return qe(p,s||i?c:a)})),ve(ke(t),"isInSelectingRangeQuarter",(function(e){var r,n=t.props,o=n.day,a=n.selectsStart,s=n.selectsEnd,i=n.selectsRange,p=n.startDate,c=n.endDate,l=null!==(r=t.props.selectingDate)&&void 0!==r?r:t.props.preSelection;return !(!(a||s||i)||!l)&&(a&&c?dt(l,c,e,o):(s&&p||!(!i||!p||c))&&dt(p,l,e,o))})),ve(ke(t),"isWeekInMonth",(function(e){var r=t.props.day,n=addDays(e,6);return qe(e,r)||qe(n,r)})),ve(ke(t),"isCurrentMonth",(function(e,t){return getYear(e)===getYear(Ye())&&t===getMonth(Ye())})),ve(ke(t),"isCurrentQuarter",(function(e,t){return getYear(e)===getYear(Ye())&&t===getQuarter(Ye())})),ve(ke(t),"isSelectedMonth",(function(e,t,r){return getMonth(e)===t&&getYear(e)===getYear(r)})),ve(ke(t),"isSelectedQuarter",(function(e,t,r){return getQuarter(e)===t&&getYear(e)===getYear(r)})),ve(ke(t),"renderWeeks",(function(){for(var r=[],n=t.props.fixedHeight,o=0,a=!1,s=Be(We(t.props.day),t.props.locale,t.props.calendarStartDay);r.push(React__default.createElement(Ft,{ariaLabelPrefix:t.props.weekAriaLabelPrefix,chooseDayAriaLabelPrefix:t.props.chooseDayAriaLabelPrefix,disabledDayAriaLabelPrefix:t.props.disabledDayAriaLabelPrefix,key:o,day:s,month:getMonth(t.props.day),onDayClick:t.handleDayClick,onDayMouseEnter:t.handleDayMouseEnter,onWeekSelect:t.props.onWeekSelect,formatWeekNumber:t.props.formatWeekNumber,locale:t.props.locale,minDate:t.props.minDate,maxDate:t.props.maxDate,excludeDates:t.props.excludeDates,excludeDateIntervals:t.props.excludeDateIntervals,includeDates:t.props.includeDates,includeDateIntervals:t.props.includeDateIntervals,inline:t.props.inline,shouldFocusDayInline:t.props.shouldFocusDayInline,highlightDates:t.props.highlightDates,selectingDate:t.props.selectingDate,filterDate:t.props.filterDate,preSelection:t.props.preSelection,selected:t.props.selected,selectsStart:t.props.selectsStart,selectsEnd:t.props.selectsEnd,selectsRange:t.props.selectsRange,selectsDisabledDaysInRange:t.props.selectsDisabledDaysInRange,showWeekNumber:t.props.showWeekNumbers,startDate:t.props.startDate,endDate:t.props.endDate,dayClassName:t.props.dayClassName,setOpen:t.props.setOpen,shouldCloseOnSelect:t.props.shouldCloseOnSelect,disabledKeyboardNavigation:t.props.disabledKeyboardNavigation,renderDayContents:t.props.renderDayContents,handleOnKeyDown:t.props.handleOnKeyDown,isInputFocused:t.props.isInputFocused,containerRef:t.props.containerRef,calendarStartDay:t.props.calendarStartDay,monthShowsDuplicateDaysEnd:t.props.monthShowsDuplicateDaysEnd,monthShowsDuplicateDaysStart:t.props.monthShowsDuplicateDaysStart})),!a;){o++,s=addWeeks(s,1);var i=n&&o>=6,p=!n&&!t.isWeekInMonth(s);if(i||p){if(!t.props.peekNextMonth)break;a=!0;}}return r})),ve(ke(t),"onMonthClick",(function(e,r){t.handleDayClick(We(setMonth(t.props.day,r)),e);})),ve(ke(t),"onMonthMouseEnter",(function(e){t.handleDayMouseEnter(We(setMonth(t.props.day,e)));})),ve(ke(t),"handleMonthNavigation",(function(e,r){t.isDisabled(r)||t.isExcluded(r)||(t.props.setPreSelection(r),t.MONTH_REFS[e].current&&t.MONTH_REFS[e].current.focus());})),ve(ke(t),"onMonthKeyDown",(function(e,r){var n=t.props,o=n.selected,a=n.preSelection,s=n.disabledKeyboardNavigation,i=n.showTwoColumnMonthYearPicker,p=n.showFourColumnMonthYearPicker,c=n.setPreSelection,d=e.key;if("Tab"!==d&&e.preventDefault(),!s){var u=Ht(p,i),h=Wt[u].verticalNavigationOffset,m=Wt[u].grid;switch(d){case"Enter":t.onMonthClick(e,r),c(o);break;case"ArrowRight":t.handleMonthNavigation(11===r?0:r+1,addMonths(a,1));break;case"ArrowLeft":t.handleMonthNavigation(0===r?11:r-1,subMonths(a,1));break;case"ArrowUp":t.handleMonthNavigation(m[0].includes(r)?r+12-h:r-h,subMonths(a,h));break;case"ArrowDown":t.handleMonthNavigation(m[m.length-1].includes(r)?r-12+h:r+h,addMonths(a,h));}}})),ve(ke(t),"onQuarterClick",(function(e,r){t.handleDayClick(Qe(setQuarter(t.props.day,r)),e);})),ve(ke(t),"onQuarterMouseEnter",(function(e){t.handleDayMouseEnter(Qe(setQuarter(t.props.day,e)));})),ve(ke(t),"handleQuarterNavigation",(function(e,r){t.isDisabled(r)||t.isExcluded(r)||(t.props.setPreSelection(r),t.QUARTER_REFS[e-1].current&&t.QUARTER_REFS[e-1].current.focus());})),ve(ke(t),"onQuarterKeyDown",(function(e,r){var n=e.key;if(!t.props.disabledKeyboardNavigation)switch(n){case"Enter":t.onQuarterClick(e,r),t.props.setPreSelection(t.props.selected);break;case"ArrowRight":t.handleQuarterNavigation(4===r?1:r+1,addQuarters(t.props.preSelection,1));break;case"ArrowLeft":t.handleQuarterNavigation(1===r?4:r-1,subQuarters(t.props.preSelection,1));}})),ve(ke(t),"getMonthClassNames",(function(e){var n=t.props,o=n.day,a=n.startDate,s=n.endDate,i=n.selected,p=n.minDate,c=n.maxDate,l=n.preSelection,d=n.monthClassName,u=n.excludeDates,h=n.includeDates,m=d?d(setMonth(o,e)):void 0,f=setMonth(o,e);return r("react-datepicker__month-text","react-datepicker__month-".concat(e),m,{"react-datepicker__month-text--disabled":(p||c||u||h)&&st(f,t.props),"react-datepicker__month-text--selected":t.isSelectedMonth(o,e,i),"react-datepicker__month-text--keyboard-selected":!t.props.disabledKeyboardNavigation&&getMonth(l)===e,"react-datepicker__month-text--in-selecting-range":t.isInSelectingRangeMonth(e),"react-datepicker__month-text--in-range":it(a,s,e,o),"react-datepicker__month-text--range-start":t.isRangeStartMonth(e),"react-datepicker__month-text--range-end":t.isRangeEndMonth(e),"react-datepicker__month-text--selecting-range-start":t.isSelectingMonthRangeStart(e),"react-datepicker__month-text--selecting-range-end":t.isSelectingMonthRangeEnd(e),"react-datepicker__month-text--today":t.isCurrentMonth(o,e)})})),ve(ke(t),"getTabIndex",(function(e){var r=getMonth(t.props.preSelection);return t.props.disabledKeyboardNavigation||e!==r?"-1":"0"})),ve(ke(t),"getQuarterTabIndex",(function(e){var r=getQuarter(t.props.preSelection);return t.props.disabledKeyboardNavigation||e!==r?"-1":"0"})),ve(ke(t),"getAriaLabel",(function(e){var r=t.props,n=r.chooseDayAriaLabelPrefix,o=void 0===n?"Choose":n,a=r.disabledDayAriaLabelPrefix,s=void 0===a?"Not available":a,i=r.day,p=setMonth(i,e),c=t.isDisabled(p)||t.isExcluded(p)?s:o;return "".concat(c," ").concat(Te(p,"MMMM yyyy"))})),ve(ke(t),"getQuarterClassNames",(function(e){var n=t.props,o=n.day,a=n.startDate,s=n.endDate,i=n.selected,p=n.minDate,c=n.maxDate,l=n.preSelection;return r("react-datepicker__quarter-text","react-datepicker__quarter-".concat(e),{"react-datepicker__quarter-text--disabled":(p||c)&&pt(setQuarter(o,e),t.props),"react-datepicker__quarter-text--selected":t.isSelectedQuarter(o,e,i),"react-datepicker__quarter-text--keyboard-selected":getQuarter(l)===e,"react-datepicker__quarter-text--in-selecting-range":t.isInSelectingRangeQuarter(e),"react-datepicker__quarter-text--in-range":dt(a,s,e,o),"react-datepicker__quarter-text--range-start":t.isRangeStartQuarter(e),"react-datepicker__quarter-text--range-end":t.isRangeEndQuarter(e)})})),ve(ke(t),"renderMonths",(function(){var r=t.props,n=r.showFullMonthYearPicker,o=r.showTwoColumnMonthYearPicker,a=r.showFourColumnMonthYearPicker,s=r.locale,i=r.day,p=r.selected;return Wt[Ht(a,o)].grid.map((function(r,o){return React__default.createElement("div",{className:"react-datepicker__month-wrapper",key:o},r.map((function(r,o){return React__default.createElement("div",{ref:t.MONTH_REFS[r],key:o,onClick:function(e){t.onMonthClick(e,r);},onKeyDown:function(e){t.onMonthKeyDown(e,r);},onMouseEnter:function(){return t.onMonthMouseEnter(r)},tabIndex:t.getTabIndex(r),className:t.getMonthClassNames(r),role:"option","aria-label":t.getAriaLabel(r),"aria-current":t.isCurrentMonth(i,r)?"date":void 0,"aria-selected":t.isSelectedMonth(i,r,p)},n?tt(r,s):rt(r,s))})))}))})),ve(ke(t),"renderQuarters",(function(){var r=t.props,n=r.day,o=r.selected;return React__default.createElement("div",{className:"react-datepicker__quarter-wrapper"},[1,2,3,4].map((function(r,a){return React__default.createElement("div",{key:a,ref:t.QUARTER_REFS[a],role:"option",onClick:function(e){t.onQuarterClick(e,r);},onKeyDown:function(e){t.onQuarterKeyDown(e,r);},onMouseEnter:function(){return t.onQuarterMouseEnter(r)},className:t.getQuarterClassNames(r),"aria-selected":t.isSelectedQuarter(n,r,o),tabIndex:t.getQuarterTabIndex(r),"aria-current":t.isCurrentQuarter(n,r)?"date":void 0},nt(r,t.props.locale))})))})),ve(ke(t),"getClassNames",(function(){var e=t.props;e.day;var n=e.selectingDate,o=e.selectsStart,a=e.selectsEnd,s=e.showMonthYearPicker,i=e.showQuarterYearPicker;return r("react-datepicker__month",{"react-datepicker__month--selecting-range":n&&(o||a)},{"react-datepicker__monthPicker":s},{"react-datepicker__quarterPicker":i})})),t}return fe(o,[{key:"render",value:function(){var t=this.props,r=t.showMonthYearPicker,n=t.showQuarterYearPicker,o=t.day,a=t.ariaLabelPrefix,s=void 0===a?"month ":a;return React__default.createElement("div",{className:this.getClassNames(),onMouseLeave:this.handleMouseLeave,"aria-label":"".concat(s," ").concat(Te(o,"yyyy-MM")),role:"listbox"},r?this.renderMonths():n?this.renderQuarters():this.renderWeeks())}}]),o}(),jt=function(t){De(n,React__default.Component);var r=Se(n);function n(){var t;he(this,n);for(var o=arguments.length,a=new Array(o),i=0;i<o;i++)a[i]=arguments[i];return ve(ke(t=r.call.apply(r,[this].concat(a))),"state",{height:null}),ve(ke(t),"handleClick",(function(e){(t.props.minTime||t.props.maxTime)&&ft(e,t.props)||(t.props.excludeTimes||t.props.includeTimes||t.props.filterTime)&&mt(e,t.props)||t.props.onChange(e);})),ve(ke(t),"isSelectedTime",(function(e,r,n){return t.props.selected&&r===getHours(e)&&n===getMinutes(e)})),ve(ke(t),"liClasses",(function(e,r,n){var o=["react-datepicker__time-list-item",t.props.timeClassName?t.props.timeClassName(e,r,n):void 0];return t.isSelectedTime(e,r,n)&&o.push("react-datepicker__time-list-item--selected"),((t.props.minTime||t.props.maxTime)&&ft(e,t.props)||(t.props.excludeTimes||t.props.includeTimes||t.props.filterTime)&&mt(e,t.props))&&o.push("react-datepicker__time-list-item--disabled"),t.props.injectTimes&&(60*getHours(e)+getMinutes(e))%t.props.intervals!=0&&o.push("react-datepicker__time-list-item--injected"),o.join(" ")})),ve(ke(t),"handleOnKeyDown",(function(e,r){" "===e.key&&(e.preventDefault(),e.key="Enter"),"Enter"===e.key&&t.handleClick(r),t.props.handleOnKeyDown(e);})),ve(ke(t),"renderTimes",(function(){for(var r=[],n=t.props.format?t.props.format:"p",o=t.props.intervals,a=Ke(Ye(t.props.selected)),i=1440/o,p=t.props.injectTimes&&t.props.injectTimes.sort((function(e,t){return e-t})),c=t.props.selected||t.props.openToDate||Ye(),l=getHours(c),d=getMinutes(c),u=setHours(setMinutes(a,d),l),h=0;h<i;h++){var m=addMinutes(a,h*o);if(r.push(m),p){var f=St(a,m,h,o,p);r=r.concat(f);}}return r.map((function(r,o){return React__default.createElement("li",{key:o,onClick:t.handleClick.bind(ke(t),r),className:t.liClasses(r,l,d),ref:function(e){(isBefore(r,u)||$e(r,u))&&(t.centerLi=e);},onKeyDown:function(e){t.handleOnKeyDown(e,r);},tabIndex:"0","aria-selected":t.isSelectedTime(r,l,d)?"true":void 0},Te(r,n,t.props.locale))}))})),t}return fe(n,[{key:"componentDidMount",value:function(){this.list.scrollTop=this.centerLi&&n.calcCenterPosition(this.props.monthRef?this.props.monthRef.clientHeight-this.header.clientHeight:this.list.clientHeight,this.centerLi),this.props.monthRef&&this.header&&this.setState({height:this.props.monthRef.clientHeight-this.header.clientHeight});}},{key:"render",value:function(){var t=this,r=this.state.height;return React__default.createElement("div",{className:"react-datepicker__time-container ".concat(this.props.todayButton?"react-datepicker__time-container--with-today-button":"")},React__default.createElement("div",{className:"react-datepicker__header react-datepicker__header--time ".concat(this.props.showTimeSelectOnly?"react-datepicker__header--time--only":""),ref:function(e){t.header=e;}},React__default.createElement("div",{className:"react-datepicker-time__header"},this.props.timeCaption)),React__default.createElement("div",{className:"react-datepicker__time"},React__default.createElement("div",{className:"react-datepicker__time-box"},React__default.createElement("ul",{className:"react-datepicker__time-list",ref:function(e){t.list=e;},style:r?{height:r}:{},tabIndex:"0"},this.renderTimes()))))}}],[{key:"defaultProps",get:function(){return {intervals:30,onTimeChange:function(){},todayButton:null,timeCaption:"Time"}}}]),n}();ve(jt,"calcCenterPosition",(function(e,t){return t.offsetTop-(e/2-t.clientHeight/2)}));var Vt=function(t){De(o,React__default.Component);var n=Se(o);function o(t){var a;return he(this,o),ve(ke(a=n.call(this,t)),"YEAR_REFS",Ce(Array(a.props.yearItemNumber)).map((function(){return React__default.createRef()}))),ve(ke(a),"isDisabled",(function(e){return ot(e,a.props)})),ve(ke(a),"isExcluded",(function(e){return at(e,a.props)})),ve(ke(a),"selectingDate",(function(){var e;return null!==(e=a.props.selectingDate)&&void 0!==e?e:a.props.preSelection})),ve(ke(a),"updateFocusOnPaginate",(function(e){var t=function(){this.YEAR_REFS[e].current.focus();}.bind(ke(a));window.requestAnimationFrame(t);})),ve(ke(a),"handleYearClick",(function(e,t){a.props.onDayClick&&a.props.onDayClick(e,t);})),ve(ke(a),"handleYearNavigation",(function(e,t){var r=a.props,n=r.date,o=r.yearItemNumber,s=_t(n,o).startPeriod;a.isDisabled(t)||a.isExcluded(t)||(a.props.setPreSelection(t),e-s==-1?a.updateFocusOnPaginate(o-1):e-s===o?a.updateFocusOnPaginate(0):a.YEAR_REFS[e-s].current.focus());})),ve(ke(a),"isSameDay",(function(e,t){return ze(e,t)})),ve(ke(a),"isCurrentYear",(function(e){return e===getYear(Ye())})),ve(ke(a),"isRangeStart",(function(e){return a.props.startDate&&a.props.endDate&&Ve(setYear(Ye(),e),a.props.startDate)})),ve(ke(a),"isRangeEnd",(function(e){return a.props.startDate&&a.props.endDate&&Ve(setYear(Ye(),e),a.props.endDate)})),ve(ke(a),"isInRange",(function(e){return ct(e,a.props.startDate,a.props.endDate)})),ve(ke(a),"isInSelectingRange",(function(e){var t=a.props,r=t.selectsStart,n=t.selectsEnd,o=t.selectsRange,s=t.startDate,i=t.endDate;return !(!(r||n||o)||!a.selectingDate())&&(r&&i?ct(e,a.selectingDate(),i):(n&&s||!(!o||!s||i))&&ct(e,s,a.selectingDate()))})),ve(ke(a),"isSelectingRangeStart",(function(e){if(!a.isInSelectingRange(e))return !1;var t=a.props,r=t.startDate,n=t.selectsStart,o=setYear(Ye(),e);return Ve(o,n?a.selectingDate():r)})),ve(ke(a),"isSelectingRangeEnd",(function(e){if(!a.isInSelectingRange(e))return !1;var t=a.props,r=t.endDate,n=t.selectsEnd,o=t.selectsRange,s=setYear(Ye(),e);return Ve(s,n||o?a.selectingDate():r)})),ve(ke(a),"isKeyboardSelected",(function(e){var t=He(setYear(a.props.date,e));return !a.props.disabledKeyboardNavigation&&!a.props.inline&&!ze(t,He(a.props.selected))&&ze(t,He(a.props.preSelection))})),ve(ke(a),"onYearClick",(function(e,t){var r=a.props.date;a.handleYearClick(He(setYear(r,t)),e);})),ve(ke(a),"onYearKeyDown",(function(e,t){var r=e.key;if(!a.props.disabledKeyboardNavigation)switch(r){case"Enter":a.onYearClick(e,t),a.props.setPreSelection(a.props.selected);break;case"ArrowRight":a.handleYearNavigation(t+1,addYears(a.props.preSelection,1));break;case"ArrowLeft":a.handleYearNavigation(t-1,subYears(a.props.preSelection,1));}})),ve(ke(a),"getYearClassNames",(function(e){var t=a.props,n=t.minDate,o=t.maxDate,s=t.selected,i=t.excludeDates,p=t.includeDates,c=t.filterDate;return r("react-datepicker__year-text",{"react-datepicker__year-text--selected":e===getYear(s),"react-datepicker__year-text--disabled":(n||o||i||p||c)&&lt(e,a.props),"react-datepicker__year-text--keyboard-selected":a.isKeyboardSelected(e),"react-datepicker__year-text--range-start":a.isRangeStart(e),"react-datepicker__year-text--range-end":a.isRangeEnd(e),"react-datepicker__year-text--in-range":a.isInRange(e),"react-datepicker__year-text--in-selecting-range":a.isInSelectingRange(e),"react-datepicker__year-text--selecting-range-start":a.isSelectingRangeStart(e),"react-datepicker__year-text--selecting-range-end":a.isSelectingRangeEnd(e),"react-datepicker__year-text--today":a.isCurrentYear(e)})})),ve(ke(a),"getYearTabIndex",(function(e){return a.props.disabledKeyboardNavigation?"-1":e===getYear(a.props.preSelection)?"0":"-1"})),ve(ke(a),"getYearContainerClassNames",(function(){var e=a.props,t=e.selectingDate,n=e.selectsStart,o=e.selectsEnd,s=e.selectsRange;return r("react-datepicker__year",{"react-datepicker__year--selecting-range":t&&(n||o||s)})})),a}return fe(o,[{key:"render",value:function(){for(var t=this,r=[],n=this.props,o=n.date,a=n.yearItemNumber,s=n.onYearMouseEnter,i=n.onYearMouseLeave,p=_t(o,a),c=p.startPeriod,l=p.endPeriod,d=function(n){r.push(React__default.createElement("div",{ref:t.YEAR_REFS[n-c],onClick:function(e){t.onYearClick(e,n);},onKeyDown:function(e){t.onYearKeyDown(e,n);},tabIndex:t.getYearTabIndex(n),className:t.getYearClassNames(n),onMouseEnter:function(e){return s(e,n)},onMouseLeave:function(e){return i(e,n)},key:n,"aria-current":t.isCurrentYear(n)?"date":void 0},n));},u=c;u<=l;u++)d(u);return React__default.createElement("div",{className:this.getYearContainerClassNames()},React__default.createElement("div",{className:"react-datepicker__year-wrapper",onMouseLeave:this.props.clearSelectingDate},r))}}]),o}(),qt=function(t){De(n,React__default.Component);var r=Se(n);function n(t){var o;return he(this,n),ve(ke(o=r.call(this,t)),"onTimeChange",(function(e){o.setState({time:e});var t=new Date;t.setHours(e.split(":")[0]),t.setMinutes(e.split(":")[1]),o.props.onChange(t);})),ve(ke(o),"renderTimeInput",(function(){var t=o.state.time,r=o.props,n=r.date,a=r.timeString,s=r.customTimeInput;return s?React__default.cloneElement(s,{date:n,value:t,onChange:o.onTimeChange}):React__default.createElement("input",{type:"time",className:"react-datepicker-time__input",placeholder:"Time",name:"time-input",required:!0,value:t,onChange:function(e){o.onTimeChange(e.target.value||a);}})})),o.state={time:o.props.timeString},o}return fe(n,[{key:"render",value:function(){return React__default.createElement("div",{className:"react-datepicker__input-time-container"},React__default.createElement("div",{className:"react-datepicker-time__caption"},this.props.timeInputLabel),React__default.createElement("div",{className:"react-datepicker-time__input-container"},React__default.createElement("div",{className:"react-datepicker-time__input"},this.renderTimeInput())))}}],[{key:"getDerivedStateFromProps",value:function(e,t){return e.timeString!==t.time?{time:e.timeString}:null}}]),n}();function Ut(t){var r=t.className,n=t.children,o=t.showPopperArrow,a=t.arrowProps,s=void 0===a?{}:a;return React__default.createElement("div",{className:r},o&&React__default.createElement("div",ye({className:"react-datepicker__triangle"},s)),n)}var zt=["react-datepicker__year-select","react-datepicker__month-select","react-datepicker__month-year-select"],$t=function(t){De(o,React__default.Component);var n=Se(o);function o(t){var a;return he(this,o),ve(ke(a=n.call(this,t)),"handleClickOutside",(function(e){a.props.onClickOutside(e);})),ve(ke(a),"setClickOutsideRef",(function(){return a.containerRef.current})),ve(ke(a),"handleDropdownFocus",(function(e){(function(){var e=((arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).className||"").split(/\s+/);return zt.some((function(t){return e.indexOf(t)>=0}))})(e.target)&&a.props.onDropdownFocus();})),ve(ke(a),"getDateInView",(function(){var e=a.props,t=e.preSelection,r=e.selected,n=e.openToDate,o=wt(a.props),s=kt(a.props),i=Ye(),p=n||r||t;return p||(o&&isBefore(i,o)?o:s&&isAfter(i,s)?s:i)})),ve(ke(a),"increaseMonth",(function(){a.setState((function(e){var t=e.date;return {date:addMonths(t,1)}}),(function(){return a.handleMonthChange(a.state.date)}));})),ve(ke(a),"decreaseMonth",(function(){a.setState((function(e){var t=e.date;return {date:subMonths(t,1)}}),(function(){return a.handleMonthChange(a.state.date)}));})),ve(ke(a),"handleDayClick",(function(e,t,r){a.props.onSelect(e,t,r),a.props.setPreSelection&&a.props.setPreSelection(e);})),ve(ke(a),"handleDayMouseEnter",(function(e){a.setState({selectingDate:e}),a.props.onDayMouseEnter&&a.props.onDayMouseEnter(e);})),ve(ke(a),"handleMonthMouseLeave",(function(){a.setState({selectingDate:null}),a.props.onMonthMouseLeave&&a.props.onMonthMouseLeave();})),ve(ke(a),"handleYearMouseEnter",(function(e,t){a.setState({selectingDate:setYear(Ye(),t)}),a.props.onYearMouseEnter&&a.props.onYearMouseEnter(e,t);})),ve(ke(a),"handleYearMouseLeave",(function(e,t){a.props.onYearMouseLeave&&a.props.onYearMouseLeave(e,t);})),ve(ke(a),"handleYearChange",(function(e){a.props.onYearChange&&(a.props.onYearChange(e),a.setState({isRenderAriaLiveMessage:!0})),a.props.adjustDateOnChange&&(a.props.onSelect&&a.props.onSelect(e),a.props.setOpen&&a.props.setOpen(!0)),a.props.setPreSelection&&a.props.setPreSelection(e);})),ve(ke(a),"handleMonthChange",(function(e){a.handleCustomMonthChange(e),a.props.adjustDateOnChange&&(a.props.onSelect&&a.props.onSelect(e),a.props.setOpen&&a.props.setOpen(!0)),a.props.setPreSelection&&a.props.setPreSelection(e);})),ve(ke(a),"handleCustomMonthChange",(function(e){a.props.onMonthChange&&(a.props.onMonthChange(e),a.setState({isRenderAriaLiveMessage:!0}));})),ve(ke(a),"handleMonthYearChange",(function(e){a.handleYearChange(e),a.handleMonthChange(e);})),ve(ke(a),"changeYear",(function(e){a.setState((function(t){var r=t.date;return {date:setYear(r,e)}}),(function(){return a.handleYearChange(a.state.date)}));})),ve(ke(a),"changeMonth",(function(e){a.setState((function(t){var r=t.date;return {date:setMonth(r,e)}}),(function(){return a.handleMonthChange(a.state.date)}));})),ve(ke(a),"changeMonthYear",(function(e){a.setState((function(t){var r=t.date;return {date:setYear(setMonth(r,getMonth(e)),getYear(e))}}),(function(){return a.handleMonthYearChange(a.state.date)}));})),ve(ke(a),"header",(function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a.state.date,n=Be(t,a.props.locale,a.props.calendarStartDay),o=[];return a.props.showWeekNumbers&&o.push(React__default.createElement("div",{key:"W",className:"react-datepicker__day-name"},a.props.weekLabel||"#")),o.concat([0,1,2,3,4,5,6].map((function(t){var o=addDays(n,t),s=a.formatWeekday(o,a.props.locale),i=a.props.weekDayClassName?a.props.weekDayClassName(o):void 0;return React__default.createElement("div",{key:t,className:r("react-datepicker__day-name",i)},s)})))})),ve(ke(a),"formatWeekday",(function(e,t){return a.props.formatWeekDay?function(e,t,r){return t(Te(e,"EEEE",r))}(e,a.props.formatWeekDay,t):a.props.useWeekdaysShort?function(e,t){return Te(e,"EEE",t)}(e,t):function(e,t){return Te(e,"EEEEEE",t)}(e,t)})),ve(ke(a),"decreaseYear",(function(){a.setState((function(e){var t=e.date;return {date:subYears(t,a.props.showYearPicker?a.props.yearItemNumber:1)}}),(function(){return a.handleYearChange(a.state.date)}));})),ve(ke(a),"clearSelectingDate",(function(){a.setState({selectingDate:null});})),ve(ke(a),"renderPreviousButton",(function(){if(!a.props.renderCustomHeader){var t;switch(!0){case a.props.showMonthYearPicker:t=Dt(a.state.date,a.props);break;case a.props.showYearPicker:t=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minDate,n=t.yearItemNumber,o=void 0===n?12:n,a=_t(He(subYears(e,o)),o).endPeriod,s=r&&getYear(r);return s&&s>a||!1}(a.state.date,a.props);break;default:t=vt(a.state.date,a.props);}if((a.props.forceShowMonthNavigation||a.props.showDisabledMonthNavigation||!t)&&!a.props.showTimeSelectOnly){var r=["react-datepicker__navigation","react-datepicker__navigation--previous"],n=a.decreaseMonth;(a.props.showMonthYearPicker||a.props.showQuarterYearPicker||a.props.showYearPicker)&&(n=a.decreaseYear),t&&a.props.showDisabledMonthNavigation&&(r.push("react-datepicker__navigation--previous--disabled"),n=null);var o=a.props.showMonthYearPicker||a.props.showQuarterYearPicker||a.props.showYearPicker,s=a.props,i=s.previousMonthButtonLabel,p=s.previousYearButtonLabel,c=a.props,l=c.previousMonthAriaLabel,d=void 0===l?"string"==typeof i?i:"Previous Month":l,u=c.previousYearAriaLabel,h=void 0===u?"string"==typeof p?p:"Previous Year":u;return React__default.createElement("button",{type:"button",className:r.join(" "),onClick:n,onKeyDown:a.props.handleOnKeyDown,"aria-label":o?h:d},React__default.createElement("span",{className:["react-datepicker__navigation-icon","react-datepicker__navigation-icon--previous"].join(" ")},o?a.props.previousYearButtonLabel:a.props.previousMonthButtonLabel))}}})),ve(ke(a),"increaseYear",(function(){a.setState((function(e){var t=e.date;return {date:addYears(t,a.props.showYearPicker?a.props.yearItemNumber:1)}}),(function(){return a.handleYearChange(a.state.date)}));})),ve(ke(a),"renderNextButton",(function(){if(!a.props.renderCustomHeader){var t;switch(!0){case a.props.showMonthYearPicker:t=gt(a.state.date,a.props);break;case a.props.showYearPicker:t=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.maxDate,n=t.yearItemNumber,o=void 0===n?12:n,a=_t(addYears(e,o),o).startPeriod,s=r&&getYear(r);return s&&s<a||!1}(a.state.date,a.props);break;default:t=yt(a.state.date,a.props);}if((a.props.forceShowMonthNavigation||a.props.showDisabledMonthNavigation||!t)&&!a.props.showTimeSelectOnly){var r=["react-datepicker__navigation","react-datepicker__navigation--next"];a.props.showTimeSelect&&r.push("react-datepicker__navigation--next--with-time"),a.props.todayButton&&r.push("react-datepicker__navigation--next--with-today-button");var n=a.increaseMonth;(a.props.showMonthYearPicker||a.props.showQuarterYearPicker||a.props.showYearPicker)&&(n=a.increaseYear),t&&a.props.showDisabledMonthNavigation&&(r.push("react-datepicker__navigation--next--disabled"),n=null);var o=a.props.showMonthYearPicker||a.props.showQuarterYearPicker||a.props.showYearPicker,s=a.props,i=s.nextMonthButtonLabel,p=s.nextYearButtonLabel,c=a.props,l=c.nextMonthAriaLabel,d=void 0===l?"string"==typeof i?i:"Next Month":l,h=c.nextYearAriaLabel,m=void 0===h?"string"==typeof p?p:"Next Year":h;return React__default.createElement("button",{type:"button",className:r.join(" "),onClick:n,onKeyDown:a.props.handleOnKeyDown,"aria-label":o?m:d},React__default.createElement("span",{className:["react-datepicker__navigation-icon","react-datepicker__navigation-icon--next"].join(" ")},o?a.props.nextYearButtonLabel:a.props.nextMonthButtonLabel))}}})),ve(ke(a),"renderCurrentMonth",(function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a.state.date,r=["react-datepicker__current-month"];return a.props.showYearDropdown&&r.push("react-datepicker__current-month--hasYearDropdown"),a.props.showMonthDropdown&&r.push("react-datepicker__current-month--hasMonthDropdown"),a.props.showMonthYearDropdown&&r.push("react-datepicker__current-month--hasMonthYearDropdown"),React__default.createElement("div",{className:r.join(" ")},Te(t,a.props.dateFormat,a.props.locale))})),ve(ke(a),"renderYearDropdown",(function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(a.props.showYearDropdown&&!t)return React__default.createElement(Pt,{adjustDateOnChange:a.props.adjustDateOnChange,date:a.state.date,onSelect:a.props.onSelect,setOpen:a.props.setOpen,dropdownMode:a.props.dropdownMode,onChange:a.changeYear,minDate:a.props.minDate,maxDate:a.props.maxDate,year:getYear(a.state.date),scrollableYearDropdown:a.props.scrollableYearDropdown,yearDropdownItemNumber:a.props.yearDropdownItemNumber})})),ve(ke(a),"renderMonthDropdown",(function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(a.props.showMonthDropdown&&!t)return React__default.createElement(xt,{dropdownMode:a.props.dropdownMode,locale:a.props.locale,onChange:a.changeMonth,month:getMonth(a.state.date),useShortMonthInDropdown:a.props.useShortMonthInDropdown})})),ve(ke(a),"renderMonthYearDropdown",(function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(a.props.showMonthYearDropdown&&!t)return React__default.createElement(Tt,{dropdownMode:a.props.dropdownMode,locale:a.props.locale,dateFormat:a.props.dateFormat,onChange:a.changeMonthYear,minDate:a.props.minDate,maxDate:a.props.maxDate,date:a.state.date,scrollableMonthYearDropdown:a.props.scrollableMonthYearDropdown})})),ve(ke(a),"handleTodayButtonClick",(function(e){a.props.onSelect(je(),e),a.props.setPreSelection&&a.props.setPreSelection(je());})),ve(ke(a),"renderTodayButton",(function(){if(a.props.todayButton&&!a.props.showTimeSelectOnly)return React__default.createElement("div",{className:"react-datepicker__today-button",onClick:function(e){return a.handleTodayButtonClick(e)}},a.props.todayButton)})),ve(ke(a),"renderDefaultHeader",(function(t){var r=t.monthDate,n=t.i;return React__default.createElement("div",{className:"react-datepicker__header ".concat(a.props.showTimeSelect?"react-datepicker__header--has-time-select":"")},a.renderCurrentMonth(r),React__default.createElement("div",{className:"react-datepicker__header__dropdown react-datepicker__header__dropdown--".concat(a.props.dropdownMode),onFocus:a.handleDropdownFocus},a.renderMonthDropdown(0!==n),a.renderMonthYearDropdown(0!==n),a.renderYearDropdown(0!==n)),React__default.createElement("div",{className:"react-datepicker__day-names"},a.header(r)))})),ve(ke(a),"renderCustomHeader",(function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=t.monthDate,n=t.i;if(a.props.showTimeSelect&&!a.state.monthContainer||a.props.showTimeSelectOnly)return null;var o=vt(a.state.date,a.props),s=yt(a.state.date,a.props),i=Dt(a.state.date,a.props),p=gt(a.state.date,a.props),c=!a.props.showMonthYearPicker&&!a.props.showQuarterYearPicker&&!a.props.showYearPicker;return React__default.createElement("div",{className:"react-datepicker__header react-datepicker__header--custom",onFocus:a.props.onDropdownFocus},a.props.renderCustomHeader(de(de({},a.state),{},{customHeaderCount:n,monthDate:r,changeMonth:a.changeMonth,changeYear:a.changeYear,decreaseMonth:a.decreaseMonth,increaseMonth:a.increaseMonth,decreaseYear:a.decreaseYear,increaseYear:a.increaseYear,prevMonthButtonDisabled:o,nextMonthButtonDisabled:s,prevYearButtonDisabled:i,nextYearButtonDisabled:p})),c&&React__default.createElement("div",{className:"react-datepicker__day-names"},a.header(r)))})),ve(ke(a),"renderYearHeader",(function(){var t=a.state.date,r=a.props,n=r.showYearPicker,o=_t(t,r.yearItemNumber),s=o.startPeriod,i=o.endPeriod;return React__default.createElement("div",{className:"react-datepicker__header react-datepicker-year-header"},n?"".concat(s," - ").concat(i):getYear(t))})),ve(ke(a),"renderHeader",(function(e){switch(!0){case void 0!==a.props.renderCustomHeader:return a.renderCustomHeader(e);case a.props.showMonthYearPicker||a.props.showQuarterYearPicker||a.props.showYearPicker:return a.renderYearHeader(e);default:return a.renderDefaultHeader(e)}})),ve(ke(a),"renderMonths",(function(){if(!a.props.showTimeSelectOnly&&!a.props.showYearPicker){for(var t=[],r=a.props.showPreviousMonths?a.props.monthsShown-1:0,n=subMonths(a.state.date,r),o=0;o<a.props.monthsShown;++o){var s=o-a.props.monthSelectedIn,i=addMonths(n,s),p="month-".concat(o),c=o<a.props.monthsShown-1,d=o>0;t.push(React__default.createElement("div",{key:p,ref:function(e){a.monthContainer=e;},className:"react-datepicker__month-container"},a.renderHeader({monthDate:i,i:o}),React__default.createElement(Qt,{chooseDayAriaLabelPrefix:a.props.chooseDayAriaLabelPrefix,disabledDayAriaLabelPrefix:a.props.disabledDayAriaLabelPrefix,weekAriaLabelPrefix:a.props.weekAriaLabelPrefix,ariaLabelPrefix:a.props.monthAriaLabelPrefix,onChange:a.changeMonthYear,day:i,dayClassName:a.props.dayClassName,calendarStartDay:a.props.calendarStartDay,monthClassName:a.props.monthClassName,onDayClick:a.handleDayClick,handleOnKeyDown:a.props.handleOnDayKeyDown,onDayMouseEnter:a.handleDayMouseEnter,onMouseLeave:a.handleMonthMouseLeave,onWeekSelect:a.props.onWeekSelect,orderInDisplay:o,formatWeekNumber:a.props.formatWeekNumber,locale:a.props.locale,minDate:a.props.minDate,maxDate:a.props.maxDate,excludeDates:a.props.excludeDates,excludeDateIntervals:a.props.excludeDateIntervals,highlightDates:a.props.highlightDates,selectingDate:a.state.selectingDate,includeDates:a.props.includeDates,includeDateIntervals:a.props.includeDateIntervals,inline:a.props.inline,shouldFocusDayInline:a.props.shouldFocusDayInline,fixedHeight:a.props.fixedHeight,filterDate:a.props.filterDate,preSelection:a.props.preSelection,setPreSelection:a.props.setPreSelection,selected:a.props.selected,selectsStart:a.props.selectsStart,selectsEnd:a.props.selectsEnd,selectsRange:a.props.selectsRange,selectsDisabledDaysInRange:a.props.selectsDisabledDaysInRange,showWeekNumbers:a.props.showWeekNumbers,startDate:a.props.startDate,endDate:a.props.endDate,peekNextMonth:a.props.peekNextMonth,setOpen:a.props.setOpen,shouldCloseOnSelect:a.props.shouldCloseOnSelect,renderDayContents:a.props.renderDayContents,disabledKeyboardNavigation:a.props.disabledKeyboardNavigation,showMonthYearPicker:a.props.showMonthYearPicker,showFullMonthYearPicker:a.props.showFullMonthYearPicker,showTwoColumnMonthYearPicker:a.props.showTwoColumnMonthYearPicker,showFourColumnMonthYearPicker:a.props.showFourColumnMonthYearPicker,showYearPicker:a.props.showYearPicker,showQuarterYearPicker:a.props.showQuarterYearPicker,isInputFocused:a.props.isInputFocused,containerRef:a.containerRef,monthShowsDuplicateDaysEnd:c,monthShowsDuplicateDaysStart:d})));}return t}})),ve(ke(a),"renderYears",(function(){if(!a.props.showTimeSelectOnly)return a.props.showYearPicker?React__default.createElement("div",{className:"react-datepicker__year--container"},a.renderHeader(),React__default.createElement(Vt,ye({onDayClick:a.handleDayClick,selectingDate:a.state.selectingDate,clearSelectingDate:a.clearSelectingDate,date:a.state.date},a.props,{onYearMouseEnter:a.handleYearMouseEnter,onYearMouseLeave:a.handleYearMouseLeave}))):void 0})),ve(ke(a),"renderTimeSection",(function(){if(a.props.showTimeSelect&&(a.state.monthContainer||a.props.showTimeSelectOnly))return React__default.createElement(jt,{selected:a.props.selected,openToDate:a.props.openToDate,onChange:a.props.onTimeChange,timeClassName:a.props.timeClassName,format:a.props.timeFormat,includeTimes:a.props.includeTimes,intervals:a.props.timeIntervals,minTime:a.props.minTime,maxTime:a.props.maxTime,excludeTimes:a.props.excludeTimes,filterTime:a.props.filterTime,timeCaption:a.props.timeCaption,todayButton:a.props.todayButton,showMonthDropdown:a.props.showMonthDropdown,showMonthYearDropdown:a.props.showMonthYearDropdown,showYearDropdown:a.props.showYearDropdown,withPortal:a.props.withPortal,monthRef:a.state.monthContainer,injectTimes:a.props.injectTimes,locale:a.props.locale,handleOnKeyDown:a.props.handleOnKeyDown,showTimeSelectOnly:a.props.showTimeSelectOnly})})),ve(ke(a),"renderInputTimeSection",(function(){var t=new Date(a.props.selected),r=Oe(t)&&Boolean(a.props.selected)?"".concat(Ct(t.getHours()),":").concat(Ct(t.getMinutes())):"";if(a.props.showTimeInput)return React__default.createElement(qt,{date:t,timeString:r,timeInputLabel:a.props.timeInputLabel,onChange:a.props.onTimeChange,customTimeInput:a.props.customTimeInput})})),ve(ke(a),"renderAriaLiveRegion",(function(){var t,r=_t(a.state.date,a.props.yearItemNumber),n=r.startPeriod,o=r.endPeriod;return t=a.props.showYearPicker?"".concat(n," - ").concat(o):a.props.showMonthYearPicker||a.props.showQuarterYearPicker?getYear(a.state.date):"".concat(tt(getMonth(a.state.date),a.props.locale)," ").concat(getYear(a.state.date)),React__default.createElement("span",{role:"alert","aria-live":"polite",className:"react-datepicker__aria-live"},a.state.isRenderAriaLiveMessage&&t)})),ve(ke(a),"renderChildren",(function(){if(a.props.children)return React__default.createElement("div",{className:"react-datepicker__children-container"},a.props.children)})),a.containerRef=React__default.createRef(),a.state={date:a.getDateInView(),selectingDate:null,monthContainer:null,isRenderAriaLiveMessage:!1},a}return fe(o,[{key:"componentDidMount",value:function(){var e=this;this.props.showTimeSelect&&(this.assignMonthContainer=void e.setState({monthContainer:e.monthContainer}));}},{key:"componentDidUpdate",value:function(e){var t=this;if(!this.props.preSelection||ze(this.props.preSelection,e.preSelection)&&this.props.monthSelectedIn===e.monthSelectedIn)this.props.openToDate&&!ze(this.props.openToDate,e.openToDate)&&this.setState({date:this.props.openToDate});else {var r=!qe(this.state.date,this.props.preSelection);this.setState({date:this.props.preSelection},(function(){return r&&t.handleCustomMonthChange(t.state.date)}));}}},{key:"render",value:function(){var t=this.props.container||Ut;return React__default.createElement("div",{ref:this.containerRef},React__default.createElement(t,{className:r("react-datepicker",this.props.className,{"react-datepicker--time-only":this.props.showTimeSelectOnly}),showPopperArrow:this.props.showPopperArrow,arrowProps:this.props.arrowProps},this.renderAriaLiveRegion(),this.renderPreviousButton(),this.renderNextButton(),this.renderMonths(),this.renderYears(),this.renderTodayButton(),this.renderTimeSection(),this.renderInputTimeSection(),this.renderChildren()))}}],[{key:"defaultProps",get:function(){return {onDropdownFocus:function(){},monthsShown:1,monthSelectedIn:0,forceShowMonthNavigation:!1,timeCaption:"Time",previousYearButtonLabel:"Previous Year",nextYearButtonLabel:"Next Year",previousMonthButtonLabel:"Previous Month",nextMonthButtonLabel:"Next Month",customTimeInput:null,yearItemNumber:12}}}]),o}(),Gt=function(t){De(n,React__default.Component);var r=Se(n);function n(e){var t;return he(this,n),(t=r.call(this,e)).el=document.createElement("div"),t}return fe(n,[{key:"componentDidMount",value:function(){this.portalRoot=(this.props.portalHost||document).getElementById(this.props.portalId),this.portalRoot||(this.portalRoot=document.createElement("div"),this.portalRoot.setAttribute("id",this.props.portalId),(this.props.portalHost||document.body).appendChild(this.portalRoot)),this.portalRoot.appendChild(this.el);}},{key:"componentWillUnmount",value:function(){this.portalRoot.removeChild(this.el);}},{key:"render",value:function(){return ReactDOM__default.createPortal(this.props.children,this.el)}}]),n}(),Jt=function(e){return !e.disabled&&-1!==e.tabIndex},Xt=function(t){De(n,React__default.Component);var r=Se(n);function n(t){var o;return he(this,n),ve(ke(o=r.call(this,t)),"getTabChildren",(function(){return Array.prototype.slice.call(o.tabLoopRef.current.querySelectorAll("[tabindex], a, button, input, select, textarea"),1,-1).filter(Jt)})),ve(ke(o),"handleFocusStart",(function(e){var t=o.getTabChildren();t&&t.length>1&&t[t.length-1].focus();})),ve(ke(o),"handleFocusEnd",(function(e){var t=o.getTabChildren();t&&t.length>1&&t[0].focus();})),o.tabLoopRef=React__default.createRef(),o}return fe(n,[{key:"render",value:function(){return this.props.enableTabLoop?React__default.createElement("div",{className:"react-datepicker__tab-loop",ref:this.tabLoopRef},React__default.createElement("div",{className:"react-datepicker__tab-loop__start",tabIndex:"0",onFocus:this.handleFocusStart}),this.props.children,React__default.createElement("div",{className:"react-datepicker__tab-loop__end",tabIndex:"0",onFocus:this.handleFocusEnd})):this.props.children}}],[{key:"defaultProps",get:function(){return {enableTabLoop:!0}}}]),n}(),Zt=function(t){De(o,React__default.Component);var n=Se(o);function o(){return he(this,o),n.apply(this,arguments)}return fe(o,[{key:"render",value:function(){var t,n=this.props,o=n.className,a=n.wrapperClassName,s=n.hidePopper,i=n.popperComponent,p=n.popperModifiers,c=n.popperPlacement,l=n.popperProps,d=n.targetComponent,u=n.enableTabLoop,h=n.popperOnKeyDown,m=n.portalId,f=n.portalHost;if(!s){var v=r("react-datepicker-popper",o);t=React__default.createElement(Popper,ye({modifiers:p,placement:c},l),(function(t){var r=t.ref,n=t.style,o=t.placement,a=t.arrowProps;return React__default.createElement(Xt,{enableTabLoop:u},React__default.createElement("div",{ref:r,style:n,className:v,"data-placement":o,onKeyDown:h},React__default.cloneElement(i,{arrowProps:a})))}));}this.props.popperContainer&&(t=React__default.createElement(this.props.popperContainer,{},t)),m&&!s&&(t=React__default.createElement(Gt,{portalId:m,portalHost:f},t));var y=r("react-datepicker-wrapper",a);return React__default.createElement(Manager,{className:"react-datepicker-manager"},React__default.createElement(Reference,null,(function(t){var r=t.ref;return React__default.createElement("div",{ref:r,className:y},d)})),t)}}],[{key:"defaultProps",get:function(){return {hidePopper:!0,popperModifiers:[],popperProps:{},popperPlacement:"bottom-start"}}}]),o}(),er=onClickOutsideHOC($t);var tr=function(t){De(a,React__default.Component);var o=Se(a);function a(t){var s;return he(this,a),ve(ke(s=o.call(this,t)),"getPreSelection",(function(){return s.props.openToDate?s.props.openToDate:s.props.selectsEnd&&s.props.startDate?s.props.startDate:s.props.selectsStart&&s.props.endDate?s.props.endDate:Ye()})),ve(ke(s),"calcInitialState",(function(){var e,t=s.getPreSelection(),r=wt(s.props),n=kt(s.props),o=r&&isBefore(t,startOfDay(r))?r:n&&isAfter(t,endOfDay(n))?n:t;return {open:s.props.startOpen||!1,preventFocus:!1,preSelection:null!==(e=s.props.selectsRange?s.props.startDate:s.props.selected)&&void 0!==e?e:o,highlightDates:bt(s.props.highlightDates),focused:!1,shouldFocusDayInline:!1,isRenderAriaLiveMessage:!1}})),ve(ke(s),"clearPreventFocusTimeout",(function(){s.preventFocusTimeout&&clearTimeout(s.preventFocusTimeout);})),ve(ke(s),"setFocus",(function(){s.input&&s.input.focus&&s.input.focus({preventScroll:!0});})),ve(ke(s),"setBlur",(function(){s.input&&s.input.blur&&s.input.blur(),s.cancelFocusInput();})),ve(ke(s),"setOpen",(function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];s.setState({open:e,preSelection:e&&s.state.open?s.state.preSelection:s.calcInitialState().preSelection,lastPreSelectChange:nr},(function(){e||s.setState((function(e){return {focused:!!t&&e.focused}}),(function(){!t&&s.setBlur(),s.setState({inputValue:null});}));}));})),ve(ke(s),"inputOk",(function(){return isDate$1(s.state.preSelection)})),ve(ke(s),"isCalendarOpen",(function(){return void 0===s.props.open?s.state.open&&!s.props.disabled&&!s.props.readOnly:s.props.open})),ve(ke(s),"handleFocus",(function(e){s.state.preventFocus||(s.props.onFocus(e),s.props.preventOpenOnFocus||s.props.readOnly||s.setOpen(!0)),s.setState({focused:!0});})),ve(ke(s),"cancelFocusInput",(function(){clearTimeout(s.inputFocusTimeout),s.inputFocusTimeout=null;})),ve(ke(s),"deferFocusInput",(function(){s.cancelFocusInput(),s.inputFocusTimeout=setTimeout((function(){return s.setFocus()}),1);})),ve(ke(s),"handleDropdownFocus",(function(){s.cancelFocusInput();})),ve(ke(s),"handleBlur",(function(e){(!s.state.open||s.props.withPortal||s.props.showTimeInput)&&s.props.onBlur(e),s.setState({focused:!1});})),ve(ke(s),"handleCalendarClickOutside",(function(e){s.props.inline||s.setOpen(!1),s.props.onClickOutside(e),s.props.withPortal&&e.preventDefault();})),ve(ke(s),"handleChange",(function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n=t[0];if(!s.props.onChangeRaw||(s.props.onChangeRaw.apply(ke(s),t),"function"==typeof n.isDefaultPrevented&&!n.isDefaultPrevented())){s.setState({inputValue:n.target.value,lastPreSelectChange:rr});var o=Ie(n.target.value,s.props.dateFormat,s.props.locale,s.props.strictParsing,s.props.minDate);s.props.showTimeSelectOnly&&s.props.selected&&!ze(o,s.props.selected)&&(o=set(s.props.selected,null==o?{hours:getHours(s.props.selected),minutes:getMinutes(s.props.selected),seconds:getSeconds(s.props.selected)}:{hours:getHours(o),minutes:getMinutes(o),seconds:getSeconds(o)})),!o&&n.target.value||s.setSelected(o,n,!0);}})),ve(ke(s),"handleSelect",(function(e,t,r){if(s.setState({preventFocus:!0},(function(){return s.preventFocusTimeout=setTimeout((function(){return s.setState({preventFocus:!1})}),50),s.preventFocusTimeout})),s.props.onChangeRaw&&s.props.onChangeRaw(t),s.setSelected(e,t,!1,r),s.setState({isRenderAriaLiveMessage:!0}),!s.props.shouldCloseOnSelect||s.props.showTimeSelect)s.setPreSelection(e);else if(!s.props.inline){s.props.selectsRange||s.setOpen(!1);var n=s.props,o=n.startDate,a=n.endDate;!o||a||isBefore(e,o)||s.setOpen(!1);}})),ve(ke(s),"setSelected",(function(e,t,r,n){var o=e;if(s.props.showYearPicker){if(null!==o&&lt(getYear(o),s.props))return}else if(s.props.showMonthYearPicker){if(null!==o&&st(o,s.props))return}else if(null!==o&&ot(o,s.props))return;var a=s.props,i=a.onChange,p=a.selectsRange,c=a.startDate,l=a.endDate;if(!$e(s.props.selected,o)||s.props.allowSameDay||p)if(null!==o&&(!s.props.selected||r&&(s.props.showTimeSelect||s.props.showTimeSelectOnly||s.props.showTimeInput)||(o=Le(o,{hour:getHours(s.props.selected),minute:getMinutes(s.props.selected),second:getSeconds(s.props.selected)})),s.props.inline||s.setState({preSelection:o}),s.props.focusSelectedMonth||s.setState({monthSelectedIn:n})),p){var d=c&&!l,u=c&&l;!c&&!l?i([o,null],t):d&&(isBefore(o,c)?i([o,null],t):i([c,o],t)),u&&i([o,null],t);}else i(o,t);r||(s.props.onSelect(o,t),s.setState({inputValue:null}));})),ve(ke(s),"setPreSelection",(function(e){var t=void 0!==s.props.minDate,r=void 0!==s.props.maxDate,n=!0;if(e){var o=startOfDay(e);if(t&&r)n=Ge(e,s.props.minDate,s.props.maxDate);else if(t){var a=startOfDay(s.props.minDate);n=isAfter(e,a)||$e(o,a);}else if(r){var i=endOfDay(s.props.maxDate);n=isBefore(e,i)||$e(o,i);}}n&&s.setState({preSelection:e});})),ve(ke(s),"handleTimeChange",(function(e){var t=Le(s.props.selected?s.props.selected:s.getPreSelection(),{hour:getHours(e),minute:getMinutes(e)});s.setState({preSelection:t}),s.props.onChange(t),s.props.shouldCloseOnSelect&&s.setOpen(!1),s.props.showTimeInput&&s.setOpen(!0),(s.props.showTimeSelectOnly||s.props.showTimeSelect)&&s.setState({isRenderAriaLiveMessage:!0}),s.setState({inputValue:null});})),ve(ke(s),"onInputClick",(function(){s.props.disabled||s.props.readOnly||s.setOpen(!0),s.props.onInputClick();})),ve(ke(s),"onInputKeyDown",(function(e){s.props.onKeyDown(e);var t=e.key;if(s.state.open||s.props.inline||s.props.preventOpenOnFocus){if(s.state.open){if("ArrowDown"===t||"ArrowUp"===t){e.preventDefault();var r=s.calendar.componentNode&&s.calendar.componentNode.querySelector('.react-datepicker__day[tabindex="0"]');return void(r&&r.focus({preventScroll:!0}))}var n=Ye(s.state.preSelection);"Enter"===t?(e.preventDefault(),s.inputOk()&&s.state.lastPreSelectChange===nr?(s.handleSelect(n,e),!s.props.shouldCloseOnSelect&&s.setPreSelection(n)):s.setOpen(!1)):"Escape"===t?(e.preventDefault(),s.setOpen(!1)):"Tab"===t&&e.shiftKey&&s.setOpen(!1),s.inputOk()||s.props.onInputError({code:1,msg:"Date input not valid."});}}else "ArrowDown"!==t&&"ArrowUp"!==t&&"Enter"!==t||s.onInputClick();})),ve(ke(s),"onPortalKeyDown",(function(e){"Escape"===e.key&&(e.preventDefault(),s.setState({preventFocus:!0},(function(){s.setOpen(!1),setTimeout((function(){s.setFocus(),s.setState({preventFocus:!1});}));})));})),ve(ke(s),"onDayKeyDown",(function(e){s.props.onKeyDown(e);var t=e.key,r=Ye(s.state.preSelection);if("Enter"===t)e.preventDefault(),s.handleSelect(r,e),!s.props.shouldCloseOnSelect&&s.setPreSelection(r);else if("Escape"===t)e.preventDefault(),s.setOpen(!1),s.inputOk()||s.props.onInputError({code:1,msg:"Date input not valid."});else if(!s.props.disabledKeyboardNavigation){var n;switch(t){case"ArrowLeft":n=subDays(r,1);break;case"ArrowRight":n=addDays(r,1);break;case"ArrowUp":n=subWeeks(r,1);break;case"ArrowDown":n=addWeeks(r,1);break;case"PageUp":n=subMonths(r,1);break;case"PageDown":n=addMonths(r,1);break;case"Home":n=subYears(r,1);break;case"End":n=addYears(r,1);}if(!n)return void(s.props.onInputError&&s.props.onInputError({code:1,msg:"Date input not valid."}));if(e.preventDefault(),s.setState({lastPreSelectChange:nr}),s.props.adjustDateOnChange&&s.setSelected(n),s.setPreSelection(n),s.props.inline){var o=getMonth(r),a=getMonth(n),i=getYear(r),d=getYear(n);o!==a||i!==d?s.setState({shouldFocusDayInline:!0}):s.setState({shouldFocusDayInline:!1});}}})),ve(ke(s),"onPopperKeyDown",(function(e){"Escape"===e.key&&(e.preventDefault(),s.setState({preventFocus:!0},(function(){s.setOpen(!1),setTimeout((function(){s.setFocus(),s.setState({preventFocus:!1});}));})));})),ve(ke(s),"onClearClick",(function(e){e&&e.preventDefault&&e.preventDefault(),s.props.selectsRange?s.props.onChange([null,null],e):s.props.onChange(null,e),s.setState({inputValue:null});})),ve(ke(s),"clear",(function(){s.onClearClick();})),ve(ke(s),"onScroll",(function(e){"boolean"==typeof s.props.closeOnScroll&&s.props.closeOnScroll?e.target!==document&&e.target!==document.documentElement&&e.target!==document.body||s.setOpen(!1):"function"==typeof s.props.closeOnScroll&&s.props.closeOnScroll(e)&&s.setOpen(!1);})),ve(ke(s),"renderCalendar",(function(){return s.props.inline||s.isCalendarOpen()?React__default.createElement(er,{ref:function(e){s.calendar=e;},locale:s.props.locale,calendarStartDay:s.props.calendarStartDay,chooseDayAriaLabelPrefix:s.props.chooseDayAriaLabelPrefix,disabledDayAriaLabelPrefix:s.props.disabledDayAriaLabelPrefix,weekAriaLabelPrefix:s.props.weekAriaLabelPrefix,monthAriaLabelPrefix:s.props.monthAriaLabelPrefix,adjustDateOnChange:s.props.adjustDateOnChange,setOpen:s.setOpen,shouldCloseOnSelect:s.props.shouldCloseOnSelect,dateFormat:s.props.dateFormatCalendar,useWeekdaysShort:s.props.useWeekdaysShort,formatWeekDay:s.props.formatWeekDay,dropdownMode:s.props.dropdownMode,selected:s.props.selected,preSelection:s.state.preSelection,onSelect:s.handleSelect,onWeekSelect:s.props.onWeekSelect,openToDate:s.props.openToDate,minDate:s.props.minDate,maxDate:s.props.maxDate,selectsStart:s.props.selectsStart,selectsEnd:s.props.selectsEnd,selectsRange:s.props.selectsRange,startDate:s.props.startDate,endDate:s.props.endDate,excludeDates:s.props.excludeDates,excludeDateIntervals:s.props.excludeDateIntervals,filterDate:s.props.filterDate,onClickOutside:s.handleCalendarClickOutside,formatWeekNumber:s.props.formatWeekNumber,highlightDates:s.state.highlightDates,includeDates:s.props.includeDates,includeDateIntervals:s.props.includeDateIntervals,includeTimes:s.props.includeTimes,injectTimes:s.props.injectTimes,inline:s.props.inline,shouldFocusDayInline:s.state.shouldFocusDayInline,peekNextMonth:s.props.peekNextMonth,showMonthDropdown:s.props.showMonthDropdown,showPreviousMonths:s.props.showPreviousMonths,useShortMonthInDropdown:s.props.useShortMonthInDropdown,showMonthYearDropdown:s.props.showMonthYearDropdown,showWeekNumbers:s.props.showWeekNumbers,showYearDropdown:s.props.showYearDropdown,withPortal:s.props.withPortal,forceShowMonthNavigation:s.props.forceShowMonthNavigation,showDisabledMonthNavigation:s.props.showDisabledMonthNavigation,scrollableYearDropdown:s.props.scrollableYearDropdown,scrollableMonthYearDropdown:s.props.scrollableMonthYearDropdown,todayButton:s.props.todayButton,weekLabel:s.props.weekLabel,outsideClickIgnoreClass:"react-datepicker-ignore-onclickoutside",fixedHeight:s.props.fixedHeight,monthsShown:s.props.monthsShown,monthSelectedIn:s.state.monthSelectedIn,onDropdownFocus:s.handleDropdownFocus,onMonthChange:s.props.onMonthChange,onYearChange:s.props.onYearChange,dayClassName:s.props.dayClassName,weekDayClassName:s.props.weekDayClassName,monthClassName:s.props.monthClassName,timeClassName:s.props.timeClassName,showTimeSelect:s.props.showTimeSelect,showTimeSelectOnly:s.props.showTimeSelectOnly,onTimeChange:s.handleTimeChange,timeFormat:s.props.timeFormat,timeIntervals:s.props.timeIntervals,minTime:s.props.minTime,maxTime:s.props.maxTime,excludeTimes:s.props.excludeTimes,filterTime:s.props.filterTime,timeCaption:s.props.timeCaption,className:s.props.calendarClassName,container:s.props.calendarContainer,yearItemNumber:s.props.yearItemNumber,yearDropdownItemNumber:s.props.yearDropdownItemNumber,previousMonthAriaLabel:s.props.previousMonthAriaLabel,previousMonthButtonLabel:s.props.previousMonthButtonLabel,nextMonthAriaLabel:s.props.nextMonthAriaLabel,nextMonthButtonLabel:s.props.nextMonthButtonLabel,previousYearAriaLabel:s.props.previousYearAriaLabel,previousYearButtonLabel:s.props.previousYearButtonLabel,nextYearAriaLabel:s.props.nextYearAriaLabel,nextYearButtonLabel:s.props.nextYearButtonLabel,timeInputLabel:s.props.timeInputLabel,disabledKeyboardNavigation:s.props.disabledKeyboardNavigation,renderCustomHeader:s.props.renderCustomHeader,popperProps:s.props.popperProps,renderDayContents:s.props.renderDayContents,onDayMouseEnter:s.props.onDayMouseEnter,onMonthMouseLeave:s.props.onMonthMouseLeave,onYearMouseEnter:s.props.onYearMouseEnter,onYearMouseLeave:s.props.onYearMouseLeave,selectsDisabledDaysInRange:s.props.selectsDisabledDaysInRange,showTimeInput:s.props.showTimeInput,showMonthYearPicker:s.props.showMonthYearPicker,showFullMonthYearPicker:s.props.showFullMonthYearPicker,showTwoColumnMonthYearPicker:s.props.showTwoColumnMonthYearPicker,showFourColumnMonthYearPicker:s.props.showFourColumnMonthYearPicker,showYearPicker:s.props.showYearPicker,showQuarterYearPicker:s.props.showQuarterYearPicker,showPopperArrow:s.props.showPopperArrow,excludeScrollbar:s.props.excludeScrollbar,handleOnKeyDown:s.props.onKeyDown,handleOnDayKeyDown:s.onDayKeyDown,isInputFocused:s.state.focused,customTimeInput:s.props.customTimeInput,setPreSelection:s.setPreSelection},s.props.children):null})),ve(ke(s),"renderAriaLiveRegion",(function(){var t,r=s.props,n=r.dateFormat,o=r.locale,a=s.props.showTimeInput||s.props.showTimeSelect?"PPPPp":"PPPP";return t=s.props.selectsRange?"Selected start date: ".concat(Re(s.props.startDate,{dateFormat:a,locale:o}),". ").concat(s.props.endDate?"End date: "+Re(s.props.endDate,{dateFormat:a,locale:o}):""):s.props.showTimeSelectOnly?"Selected time: ".concat(Re(s.props.selected,{dateFormat:n,locale:o})):s.props.showYearPicker?"Selected year: ".concat(Re(s.props.selected,{dateFormat:"yyyy",locale:o})):s.props.showMonthYearPicker?"Selected month: ".concat(Re(s.props.selected,{dateFormat:"MMMM yyyy",locale:o})):s.props.showQuarterYearPicker?"Selected quarter: ".concat(Re(s.props.selected,{dateFormat:"yyyy, QQQ",locale:o})):"Selected date: ".concat(Re(s.props.selected,{dateFormat:a,locale:o})),React__default.createElement("span",{role:"alert","aria-live":"polite",className:"react-datepicker__aria-live"},s.state.isRenderAriaLiveMessage&&t)})),ve(ke(s),"renderDateInput",(function(){var t,n=r(s.props.className,ve({},"react-datepicker-ignore-onclickoutside",s.state.open)),o=s.props.customInput||React__default.createElement("input",{type:"text"}),a=s.props.customInputRef||"ref",i="string"==typeof s.props.value?s.props.value:"string"==typeof s.state.inputValue?s.state.inputValue:s.props.selectsRange?function(e,t,r){if(!e)return "";var n=Re(e,r),o=t?Re(t,r):"";return "".concat(n," - ").concat(o)}(s.props.startDate,s.props.endDate,s.props):Re(s.props.selected,s.props);return React__default.cloneElement(o,(ve(t={},a,(function(e){s.input=e;})),ve(t,"value",i),ve(t,"onBlur",s.handleBlur),ve(t,"onChange",s.handleChange),ve(t,"onClick",s.onInputClick),ve(t,"onFocus",s.handleFocus),ve(t,"onKeyDown",s.onInputKeyDown),ve(t,"id",s.props.id),ve(t,"name",s.props.name),ve(t,"form",s.props.form),ve(t,"autoFocus",s.props.autoFocus),ve(t,"placeholder",s.props.placeholderText),ve(t,"disabled",s.props.disabled),ve(t,"autoComplete",s.props.autoComplete),ve(t,"className",r(o.props.className,n)),ve(t,"title",s.props.title),ve(t,"readOnly",s.props.readOnly),ve(t,"required",s.props.required),ve(t,"tabIndex",s.props.tabIndex),ve(t,"aria-describedby",s.props.ariaDescribedBy),ve(t,"aria-invalid",s.props.ariaInvalid),ve(t,"aria-labelledby",s.props.ariaLabelledBy),ve(t,"aria-required",s.props.ariaRequired),t))})),ve(ke(s),"renderClearButton",(function(){var t=s.props,r=t.isClearable,n=t.selected,o=t.startDate,a=t.endDate,i=t.clearButtonTitle,p=t.clearButtonClassName,c=void 0===p?"":p,l=t.ariaLabelClose,d=void 0===l?"Close":l;return !r||null==n&&null==o&&null==a?null:React__default.createElement("button",{type:"button",className:"react-datepicker__close-icon ".concat(c).trim(),"aria-label":d,onClick:s.onClearClick,title:i,tabIndex:-1})})),s.state=s.calcInitialState(),s}return fe(a,[{key:"componentDidMount",value:function(){window.addEventListener("scroll",this.onScroll,!0);}},{key:"componentDidUpdate",value:function(e,t){var r,n;e.inline&&(r=e.selected,n=this.props.selected,r&&n?getMonth(r)!==getMonth(n)||getYear(r)!==getYear(n):r!==n)&&this.setPreSelection(this.props.selected),void 0!==this.state.monthSelectedIn&&e.monthsShown!==this.props.monthsShown&&this.setState({monthSelectedIn:0}),e.highlightDates!==this.props.highlightDates&&this.setState({highlightDates:bt(this.props.highlightDates)}),t.focused||$e(e.selected,this.props.selected)||this.setState({inputValue:null}),t.open!==this.state.open&&(!1===t.open&&!0===this.state.open&&this.props.onCalendarOpen(),!0===t.open&&!1===this.state.open&&this.props.onCalendarClose());}},{key:"componentWillUnmount",value:function(){this.clearPreventFocusTimeout(),window.removeEventListener("scroll",this.onScroll,!0);}},{key:"renderInputContainer",value:function(){var t=this.props.showIcon;return React__default.createElement("div",{className:"react-datepicker__input-container ".concat(t?"react-datepicker__view-calendar-icon":"")},t&&React__default.createElement("svg",{className:"react-datepicker__calendar-icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 448 512"},React__default.createElement("path",{d:"M96 32V64H48C21.5 64 0 85.5 0 112v48H448V112c0-26.5-21.5-48-48-48H352V32c0-17.7-14.3-32-32-32s-32 14.3-32 32V64H160V32c0-17.7-14.3-32-32-32S96 14.3 96 32zM448 192H0V464c0 26.5 21.5 48 48 48H400c26.5 0 48-21.5 48-48V192z"})),this.renderAriaLiveRegion(),this.renderDateInput(),this.renderClearButton())}},{key:"render",value:function(){var t=this.renderCalendar();if(this.props.inline)return t;if(this.props.withPortal){var r=this.state.open?React__default.createElement(Xt,{enableTabLoop:this.props.enableTabLoop},React__default.createElement("div",{className:"react-datepicker__portal",tabIndex:-1,onKeyDown:this.onPortalKeyDown},t)):null;return this.state.open&&this.props.portalId&&(r=React__default.createElement(Gt,{portalId:this.props.portalId,portalHost:this.props.portalHost},r)),React__default.createElement("div",null,this.renderInputContainer(),r)}return React__default.createElement(Zt,{className:this.props.popperClassName,wrapperClassName:this.props.wrapperClassName,hidePopper:!this.isCalendarOpen(),portalId:this.props.portalId,portalHost:this.props.portalHost,popperModifiers:this.props.popperModifiers,targetComponent:this.renderInputContainer(),popperContainer:this.props.popperContainer,popperComponent:t,popperPlacement:this.props.popperPlacement,popperProps:this.props.popperProps,popperOnKeyDown:this.onPopperKeyDown,enableTabLoop:this.props.enableTabLoop})}}],[{key:"defaultProps",get:function(){return {allowSameDay:!1,dateFormat:"MM/dd/yyyy",dateFormatCalendar:"LLLL yyyy",onChange:function(){},disabled:!1,disabledKeyboardNavigation:!1,dropdownMode:"scroll",onFocus:function(){},onBlur:function(){},onKeyDown:function(){},onInputClick:function(){},onSelect:function(){},onClickOutside:function(){},onMonthChange:function(){},onCalendarOpen:function(){},onCalendarClose:function(){},preventOpenOnFocus:!1,onYearChange:function(){},onInputError:function(){},monthsShown:1,readOnly:!1,withPortal:!1,selectsDisabledDaysInRange:!1,shouldCloseOnSelect:!0,showTimeSelect:!1,showTimeInput:!1,showPreviousMonths:!1,showMonthYearPicker:!1,showFullMonthYearPicker:!1,showTwoColumnMonthYearPicker:!1,showFourColumnMonthYearPicker:!1,showYearPicker:!1,showQuarterYearPicker:!1,strictParsing:!1,timeIntervals:30,timeCaption:"Time",previousMonthAriaLabel:"Previous Month",previousMonthButtonLabel:"Previous Month",nextMonthAriaLabel:"Next Month",nextMonthButtonLabel:"Next Month",previousYearAriaLabel:"Previous Year",previousYearButtonLabel:"Previous Year",nextYearAriaLabel:"Next Year",nextYearButtonLabel:"Next Year",timeInputLabel:"Time",enableTabLoop:!0,yearItemNumber:12,renderDayContents:function(e){return e},focusSelectedMonth:!1,showPopperArrow:!0,excludeScrollbar:!0,customTimeInput:null,calendarStartDay:void 0}}}]),a}(),rr="input",nr="navigate";

var _excluded$u = ["label", "leftIcon", "size", "dropDown", "rightIcon", "errorMessage", "inputClassName", "className", "dateFormat", "range", "noCalendarIcon", "onChange"];
var DatePickerField = function DatePickerField(_ref) {
  var label = _ref.label,
    leftIcon = _ref.leftIcon,
    size = _ref.size,
    dropDown = _ref.dropDown,
    rightIcon = _ref.rightIcon,
    errorMessage = _ref.errorMessage,
    inputClassName = _ref.inputClassName,
    className = _ref.className,
    dateFormat = _ref.dateFormat,
    range = _ref.range,
    noCalendarIcon = _ref.noCalendarIcon,
    onChange = _ref.onChange,
    props = _objectWithoutProperties(_ref, _excluded$u);
  var _useState = useState([null, null]),
    _useState2 = _slicedToArray$4(_useState, 2),
    dateRange = _useState2[0],
    setDateRange = _useState2[1];
  var _dateRange = _slicedToArray$4(dateRange, 2),
    startDate = _dateRange[0],
    endDate = _dateRange[1];
  var _useState3 = useState(new Date()),
    _useState4 = _slicedToArray$4(_useState3, 2),
    date = _useState4[0],
    setDate = _useState4[1];
  useEffect(function () {
    if (onChange && typeof onChange === "function") {
      onChange(dateRange);
    }
  }, [dateRange]);
  useEffect(function () {
    if (onChange && typeof onChange === "function") {
      onChange(date);
    }
  }, [date]);
  var generateInputFieldClasses = classNames({
    "ui-text-field__input": true,
    "has-error": errorMessage,
    "has-left-icon": leftIcon,
    "has-right-icon": dropDown || rightIcon,
    "ui-date-picker": true
  }, inputClassName);
  var wrapperClasses = classNames(["size__".concat(size), "ui-text-field__wrapper"], className);
  return /*#__PURE__*/React__default.createElement(Box, {
    className: wrapperClasses
  }, label && /*#__PURE__*/React__default.createElement(Box, {
    is: "label"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-text-field__label",
    scale: "subhead"
  }, label)), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-text-field__input-wrapper"
  }, leftIcon && /*#__PURE__*/React__default.createElement(Icon, {
    icon: leftIcon,
    className: "ui-text-field__left-icon"
  }), range ? /*#__PURE__*/React__default.createElement(tr, _extends$1({
    customInput: /*#__PURE__*/React__default.createElement(Box, {
      is: "input",
      className: generateInputFieldClasses
    }),
    selectsRange: true,
    startDate: startDate,
    endDate: endDate,
    onChange: function onChange(update) {
      setDateRange(update);
    },
    dateFormat: dateFormat
  }, props)) : /*#__PURE__*/React__default.createElement(tr, _extends$1({
    customInput: /*#__PURE__*/React__default.createElement(Box, {
      is: "input",
      className: generateInputFieldClasses
    }),
    selected: date,
    onChange: function onChange(date) {
      return setDate(date);
    },
    dateFormat: dateFormat
  }, props)), !noCalendarIcon && /*#__PURE__*/React__default.createElement(Icon, {
    icon: Calendar,
    className: "ui-text-field__right-icon"
  })), errorMessage && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-text-field__error"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: Error$1,
    className: "ui-text-field__error-icon"
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-text-field__error-text",
    scale: "subhead",
    fontFace: "circularSTD"
  }, errorMessage)));
};
DatePickerField.propTypes = {
  label: propTypes.exports.string,
  dropDown: propTypes.exports.bool,
  size: propTypes.exports.oneOf(["small", "medium", "large", "xlarge", "huge", "massive"]),
  errorMessage: propTypes.exports.string,
  dateFormat: propTypes.exports.string,
  noCalendarIcon: propTypes.exports.bool,
  range: propTypes.exports.bool,
  onChange: propTypes.exports.func
};
DatePickerField.defaultProps = {
  size: "huge",
  dateFormat: "MM-dd-yyyy"
};

var BRAND_ALIAS = {
  AMEX: 0,
  DISCOVER: 1,
  MASTERCARD: 2,
  VISACARD: 3,
  NOCARD: -1
};
var formatCardNo = function formatCardNo(e) {
  var value = e.replace(/\s/g, "");
  var parse = function parse(type) {
    var pseudoValue = "";
    for (var i = 0; i < value.length; i++) {
      pseudoValue += value.charAt(i);
      var strippedPseudoValue = pseudoValue.replace(/\s/g, "");
      if (type === BRAND_ALIAS.AMEX) {
        if (strippedPseudoValue.length === 4) {
          pseudoValue += " ";
        }
        if (strippedPseudoValue.length === 10) {
          pseudoValue += " ";
        }
      } else {
        if (strippedPseudoValue.length % 4 === 0) {
          pseudoValue += " ";
        }
      }
    }
    return pseudoValue.trim();
  };
  switch (value.charAt(0)) {
    case "5":
      return parse(BRAND_ALIAS.MASTERCARD);
    case "3":
      if (value.length >= 2) {
        if (value.charAt(1) == "4" || value.charAt(1) == "7") {
          return parse(BRAND_ALIAS.AMEX);
        } else {
          return parse(BRAND_ALIAS.NOCARD);
        }
      } else {
        return parse(BRAND_ALIAS.AMEX);
      }
    case "6":
      return parse(BRAND_ALIAS.DISCOVER);
    case "4":
      return parse(BRAND_ALIAS.VISACARD);
    default:
      return parse(BRAND_ALIAS.NOCARD);
  }
};
var asteriskCardNo = function asteriskCardNo(cardNo) {
  var middle = cardNo.slice(4, -4).replace(/./g, "*");
  var first = cardNo.substring(0, 4);
  var last = cardNo.substring(cardNo.length - 4);
  return first + middle + last;
};
var asteriskCvv = function asteriskCvv(cvv) {
  return cvv.replace(/./g, "*");
};
var asteriskExp = function asteriskExp(exp) {
  return exp.split("/").map(function (item) {
    return item.replace(/./g, "*");
  }).join("/");
};
var CardBrands = ["mastercard", "visa", "amex", "discover", "verve", "jcb"];

var useDebitCard = function useDebitCard(props) {
  var _useState = useState(true),
    _useState2 = _slicedToArray$4(_useState, 2),
    hidden = _useState2[0],
    setHidden = _useState2[1];
  useEffect(function () {
    if (!props.enableHiding) {
      setHidden(false);
    }
  }, [props.enableHiding]);
  var computedCardNo = hidden ? formatCardNo(asteriskCardNo(props.cardNo)) : formatCardNo(props.cardNo);
  var computedExp = hidden ? asteriskExp(props.exp) : props.exp;
  var computedCVV = hidden ? asteriskCvv(props.cvv) : props.cvv;
  var cardBrand = "https://assets.ondeposits.com/img/debit-card-brands/svg/".concat(props.brand, "_light.svg");
  var toggleHidden = function toggleHidden() {
    if (props.enableHiding) {
      setHidden(!hidden);
    }
  };
  return {
    computedCardNo: computedCardNo,
    computedExp: computedExp,
    computedCVV: computedCVV,
    toggleHidden: toggleHidden,
    cardBrand: cardBrand
  };
};

function rfid() {
  return (new DOMParser().parseFromString("<svg width=\"45\" height=\"40\" viewBox=\"0 0 45 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect x=\"45\" y=\"40\" width=\"44.2975\" height=\"40\" rx=\"9.06992\" transform=\"rotate(-180 45 40)\" fill=\"#EED186\"/>\n<path d=\"M22.686 39.8337L22.686 32.3957M44.8347 32.2304L1.03307 32.2304M22.686 7.93292L22.686 0.164325\" stroke=\"#394C9B\" stroke-width=\"0.431901\"/>\n<path d=\"M44.8347 8.09897L1.03307 8.09896\" stroke=\"#394C9B\" stroke-width=\"0.431901\"/>\n<path d=\"M15.0826 16.0337L1.03306 16.0337\" stroke=\"#394C9B\" stroke-width=\"0.431901\"/>\n<path d=\"M44.8347 16.1987L30.4546 16.1987M44.8347 24.1326L29.7934 24.1326M16.0744 24.1326L1.19836 24.1326\" stroke=\"#394C9B\" stroke-width=\"0.431901\"/>\n<path d=\"M28.3058 32.2316C30.124 30.0828 31.7769 24.9588 27.6447 21.6531C28.4711 20.8267 30.4546 18.6779 30.4546 16.1985C30.4546 12.8927 27.9753 8.26463 22.8513 8.26463C17.7273 8.26463 15.0827 11.4051 15.0827 16.0332C15.0827 19.6696 17.7273 21.6531 17.7273 21.6531C17.7273 21.6531 16.405 22.6448 15.9091 24.1324\" stroke=\"#394C9B\" stroke-width=\"0.431901\"/>\n</svg>\n", 'image/svg+xml')).firstChild;
}

var _excluded$t = ["logo", "name", "width", "className"];
var DebitCard = function DebitCard(_ref) {
  var logo = _ref.logo,
    name = _ref.name,
    width = _ref.width,
    className = _ref.className,
    props = _objectWithoutProperties(_ref, _excluded$t);
  var _useDebitCard = useDebitCard(props),
    computedCardNo = _useDebitCard.computedCardNo,
    computedExp = _useDebitCard.computedExp,
    computedCVV = _useDebitCard.computedCVV,
    cardBrand = _useDebitCard.cardBrand,
    toggleHidden = _useDebitCard.toggleHidden;
  return /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-d-debitcard__wrapper ".concat(className !== null && className !== void 0 ? className : className)
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-d-debitcard",
    style: {
      "--width": width
    },
    onClick: toggleHidden
  }, /*#__PURE__*/React__default.createElement(Box, {
    height: "100%",
    display: "flex",
    justifyContent: "space-between"
  }, /*#__PURE__*/React__default.createElement(Box, {
    display: "flex",
    flexDirection: "column",
    justifyContent: "space-between"
  }, /*#__PURE__*/React__default.createElement(Box, null, /*#__PURE__*/React__default.createElement(Box, {
    is: "img",
    className: "ui-d-debitcard__logo",
    src: logo,
    alt: ""
  })), /*#__PURE__*/React__default.createElement(Box, null, /*#__PURE__*/React__default.createElement(Box, {
    is: "img",
    className: "ui-d-debitcard__rfid",
    src: rfid,
    alt: ""
  })), /*#__PURE__*/React__default.createElement(Box, null, /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-d-debitcard__cardno ocrb",
    marginY: 0
  }, computedCardNo), /*#__PURE__*/React__default.createElement(Box, {
    className: "card__row",
    display: "flex"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-d-debitcard__exp ocrb",
    marginY: 0
  }, "EXP: ", computedExp), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-d-debitcard__cvv ocrb",
    marginY: 0
  }, "CVV: ", computedCVV)), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-d-debitcard__name ocrb",
    uppercase: true,
    marginY: 0
  }, name))), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-d-debitcard__column"
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-d-debitcard__brand",
    is: "img",
    src: cardBrand
  })))));
};
DebitCard.propTypes = {
  logo: propTypes.exports.string,
  cardNo: propTypes.exports.string,
  exp: propTypes.exports.string,
  cvv: propTypes.exports.string,
  brand: propTypes.exports.oneOfType([propTypes.exports.string, propTypes.exports.oneOf(CardBrands)]),
  width: propTypes.exports.string
};
DebitCard.defaultProps = {
  cardNo: "5399415874124589",
  exp: "10/25",
  cvv: "123",
  name: "Eric Aprioku",
  brand: "mastercard",
  width: "336px",
  logo: "https://assets.ondeposits.com/img/logo/renapay/svg/logo_all_white.svg"
};

var _excluded$s = ["logo", "theme", "name", "balance", "className", "width"];
var DebitBalance = function DebitBalance(_ref) {
  _ref.logo;
    var theme = _ref.theme,
    name = _ref.name,
    balance = _ref.balance,
    className = _ref.className,
    width = _ref.width,
    props = _objectWithoutProperties(_ref, _excluded$s);
  var computedLogo = props.logo ? props.logo : "https://assets.ondeposits.com/img/logo/renapay/svg/logo_all_".concat(theme === "light" ? "dark" : "white", ".svg");
  var _useDebitCard = useDebitCard(props),
    computedCardNo = _useDebitCard.computedCardNo,
    computedExp = _useDebitCard.computedExp,
    computedCVV = _useDebitCard.computedCVV,
    cardBrand = _useDebitCard.cardBrand,
    toggleHidden = _useDebitCard.toggleHidden;
  var computedBalance = "$".concat(number_format(balance, 2));
  return /*#__PURE__*/React__default.createElement(Box, {
    className: classNames(["d-debit-card-balance", "theme__".concat(theme), className]),
    style: {
      "--width": width
    },
    onClick: toggleHidden
  }, /*#__PURE__*/React__default.createElement(Box, {
    paddingY: "20px",
    paddingX: "24px",
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    marginY: 0,
    uppercase: true,
    fontSize: "14px",
    className: "d-debit-card-balance__name ocrb"
  }, name), /*#__PURE__*/React__default.createElement(Box, {
    className: "d-debit-card-balance__logo",
    is: "img",
    src: computedLogo,
    alt: ""
  })), /*#__PURE__*/React__default.createElement(Box, {
    paddingX: "24px"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    fontFace: "circularSTD",
    fontWeight: "600",
    className: "d-debit-card-balance__balance",
    marginY: 0
  }, computedBalance), /*#__PURE__*/React__default.createElement(Text$1, {
    marginY: 0,
    fontSize: "11px",
    letterSpacing: "0.5px",
    fontFace: "circularSTD",
    className: "d-debit-card-balance__available-balance",
    fontWeight: "400"
  }, "Available Balance")), /*#__PURE__*/React__default.createElement(Box, {
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    paddingX: "24px",
    borderTop: "1px solid",
    borderColor: theme === "light" ? "#F1F5F9" : "#202B3C"
  }, /*#__PURE__*/React__default.createElement(Box, null, /*#__PURE__*/React__default.createElement(Text$1, {
    className: "d-debit-card-balance__detail"
  }, "Card number"), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "d-debit-card-balance__detail-value"
  }, computedCardNo)), /*#__PURE__*/React__default.createElement(Box, null, /*#__PURE__*/React__default.createElement(Text$1, {
    className: "d-debit-card-balance__detail"
  }, "Exp"), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "d-debit-card-balance__detail-value"
  }, computedExp)), /*#__PURE__*/React__default.createElement(Box, null, /*#__PURE__*/React__default.createElement(Text$1, {
    className: "d-debit-card-balance__detail"
  }, "CVV"), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "d-debit-card-balance__detail-value"
  }, computedCVV)), /*#__PURE__*/React__default.createElement(Box, null, /*#__PURE__*/React__default.createElement(Box, {
    className: "d-debit-card-balance__card-brand",
    is: "img",
    src: cardBrand,
    alt: ""
  }))));
};
DebitBalance.propTypes = {
  logo: propTypes.exports.string,
  cardNo: propTypes.exports.string,
  exp: propTypes.exports.string,
  cvv: propTypes.exports.string,
  brand: propTypes.exports.oneOfType([propTypes.exports.string, propTypes.exports.oneOf(CardBrands)]),
  width: propTypes.exports.string,
  theme: propTypes.exports.oneOf(["light", "dark"]),
  balance: propTypes.exports.oneOfType([propTypes.exports.string, propTypes.exports.number]),
  enableHiding: propTypes.exports.bool
};
DebitBalance.defaultProps = {
  cardNo: "5399415874124589",
  exp: "10/25",
  cvv: "123",
  name: "Eric Aprioku",
  brand: "mastercard",
  width: "336px",
  logo: "https://assets.ondeposits.com/img/logo/renapay/svg/logo_all_white.svg",
  theme: "light",
  balance: "12568",
  enableHiding: true
};

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
var domIterables = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};

// in old WebKit versions, `element.classList` is not an instance of global `DOMTokenList`
var documentCreateElement = documentCreateElement$2;

var classList = documentCreateElement('span').classList;
var DOMTokenListPrototype$1 = classList && classList.constructor && classList.constructor.prototype;

var domTokenListPrototype = DOMTokenListPrototype$1 === Object.prototype ? undefined : DOMTokenListPrototype$1;

var iterators = {};

var fails$2 = fails$o;

var correctPrototypeGetter = !fails$2(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});

var hasOwn$1 = hasOwnProperty_1;
var isCallable$2 = isCallable$l;
var toObject$1 = toObject$6;
var sharedKey = sharedKey$3;
var CORRECT_PROTOTYPE_GETTER = correctPrototypeGetter;

var IE_PROTO = sharedKey('IE_PROTO');
var $Object = Object;
var ObjectPrototype = $Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
// eslint-disable-next-line es/no-object-getprototypeof -- safe
var objectGetPrototypeOf = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {
  var object = toObject$1(O);
  if (hasOwn$1(object, IE_PROTO)) return object[IE_PROTO];
  var constructor = object.constructor;
  if (isCallable$2(constructor) && object instanceof constructor) {
    return constructor.prototype;
  } return object instanceof $Object ? ObjectPrototype : null;
};

var fails$1 = fails$o;
var isCallable$1 = isCallable$l;
var isObject$1 = isObject$9;
var getPrototypeOf$2 = objectGetPrototypeOf;
var defineBuiltIn$1 = defineBuiltIn$6;
var wellKnownSymbol$3 = wellKnownSymbol$f;

var ITERATOR$2 = wellKnownSymbol$3('iterator');
var BUGGY_SAFARI_ITERATORS$1 = false;

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype$2, PrototypeOfArrayIteratorPrototype, arrayIterator;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS$1 = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf$2(getPrototypeOf$2(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype$2 = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = !isObject$1(IteratorPrototype$2) || fails$1(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype$2[ITERATOR$2].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype$2 = {};

// `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
if (!isCallable$1(IteratorPrototype$2[ITERATOR$2])) {
  defineBuiltIn$1(IteratorPrototype$2, ITERATOR$2, function () {
    return this;
  });
}

var iteratorsCore = {
  IteratorPrototype: IteratorPrototype$2,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1
};

var defineProperty$2 = objectDefineProperty.f;
var hasOwn = hasOwnProperty_1;
var wellKnownSymbol$2 = wellKnownSymbol$f;

var TO_STRING_TAG$1 = wellKnownSymbol$2('toStringTag');

var setToStringTag$2 = function (target, TAG, STATIC) {
  if (target && !STATIC) target = target.prototype;
  if (target && !hasOwn(target, TO_STRING_TAG$1)) {
    defineProperty$2(target, TO_STRING_TAG$1, { configurable: true, value: TAG });
  }
};

var IteratorPrototype$1 = iteratorsCore.IteratorPrototype;
var create$1 = objectCreate;
var createPropertyDescriptor$1 = createPropertyDescriptor$4;
var setToStringTag$1 = setToStringTag$2;
var Iterators$2 = iterators;

var returnThis$1 = function () { return this; };

var iteratorCreateConstructor = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create$1(IteratorPrototype$1, { next: createPropertyDescriptor$1(+!ENUMERABLE_NEXT, next) });
  setToStringTag$1(IteratorConstructor, TO_STRING_TAG, false);
  Iterators$2[TO_STRING_TAG] = returnThis$1;
  return IteratorConstructor;
};

var $$3 = _export;
var call$1 = functionCall;
var FunctionName = functionName;
var isCallable = isCallable$l;
var createIteratorConstructor = iteratorCreateConstructor;
var getPrototypeOf$1 = objectGetPrototypeOf;
var setPrototypeOf = objectSetPrototypeOf;
var setToStringTag = setToStringTag$2;
var createNonEnumerableProperty$1 = createNonEnumerableProperty$6;
var defineBuiltIn = defineBuiltIn$6;
var wellKnownSymbol$1 = wellKnownSymbol$f;
var Iterators$1 = iterators;
var IteratorsCore = iteratorsCore;

var PROPER_FUNCTION_NAME = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR$1 = wellKnownSymbol$1('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

var iteratorDefine = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR$1]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf$1(anyNativeIterator.call(new Iterable()));
    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (getPrototypeOf$1(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR$1])) {
          defineBuiltIn(CurrentIteratorPrototype, ITERATOR$1, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true);
    }
  }

  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    if (CONFIGURABLE_FUNCTION_NAME) {
      createNonEnumerableProperty$1(IterablePrototype, 'name', VALUES);
    } else {
      INCORRECT_VALUES_NAME = true;
      defaultIterator = function values() { return call$1(nativeIterator, this); };
    }
  }

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        defineBuiltIn(IterablePrototype, KEY, methods[KEY]);
      }
    } else $$3({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  // define iterator
  if (IterablePrototype[ITERATOR$1] !== defaultIterator) {
    defineBuiltIn(IterablePrototype, ITERATOR$1, defaultIterator, { name: DEFAULT });
  }
  Iterators$1[NAME] = defaultIterator;

  return methods;
};

// `CreateIterResultObject` abstract operation
// https://tc39.es/ecma262/#sec-createiterresultobject
var createIterResultObject$1 = function (value, done) {
  return { value: value, done: done };
};

var toIndexedObject = toIndexedObject$5;
var addToUnscopables = addToUnscopables$2;
var Iterators = iterators;
var InternalStateModule = internalState;
var defineProperty$1 = objectDefineProperty.f;
var defineIterator = iteratorDefine;
var createIterResultObject = createIterResultObject$1;
var DESCRIPTORS = descriptors;

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
var es_array_iterator = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return createIterResultObject(undefined, true);
  }
  if (kind == 'keys') return createIterResultObject(index, false);
  if (kind == 'values') return createIterResultObject(target[index], false);
  return createIterResultObject([index, target[index]], false);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
var values$1 = Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

// V8 ~ Chrome 45- bug
if (DESCRIPTORS && values$1.name !== 'values') try {
  defineProperty$1(values$1, 'name', { value: 'values' });
} catch (error) { /* empty */ }

var global$1 = global$j;
var DOMIterables = domIterables;
var DOMTokenListPrototype = domTokenListPrototype;
var ArrayIteratorMethods = es_array_iterator;
var createNonEnumerableProperty = createNonEnumerableProperty$6;
var wellKnownSymbol = wellKnownSymbol$f;

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

var handlePrototype = function (CollectionPrototype, COLLECTION_NAME) {
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
};

for (var COLLECTION_NAME in DOMIterables) {
  handlePrototype(global$1[COLLECTION_NAME] && global$1[COLLECTION_NAME].prototype, COLLECTION_NAME);
}

handlePrototype(DOMTokenListPrototype, 'DOMTokenList');

var CloudUploadIconFilledComponent = function CloudUploadIconFilledComponent(_ref) {
  var fill = _ref.fill,
    smartColor = _ref.smartColor;
    _ref.props;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("path", {
    d: "M23.441 21.9149H17V15.4149H19.127C19.2495 15.4149 19.3695 15.381 19.4739 15.3171C19.5783 15.2532 19.663 15.1617 19.7188 15.0527C19.7745 14.9437 19.7991 14.8215 19.7898 14.6994C19.7805 14.5773 19.7376 14.4602 19.666 14.3609L15.533 8.63593C15.4721 8.55048 15.3916 8.48083 15.2983 8.43276C15.205 8.3847 15.1015 8.35962 14.9965 8.35962C14.8916 8.35962 14.7881 8.3847 14.6948 8.43276C14.6015 8.48083 14.521 8.55048 14.46 8.63593L10.322 14.3609C10.2501 14.4601 10.2069 14.5773 10.1974 14.6995C10.1879 14.8217 10.2125 14.9441 10.2683 15.0533C10.3241 15.1624 10.409 15.2539 10.5136 15.3178C10.6182 15.3816 10.7385 15.4152 10.861 15.4149H12.988V21.9149H5.78104C4.18875 21.7496 2.71493 20.9978 1.64638 19.8057C0.577829 18.6137 -0.00901646 17.0668 4.22965e-05 15.4659C0.00039384 14.3993 0.280118 13.3513 0.81137 12.4264C1.34262 11.5014 2.10687 10.7317 3.02804 10.1939C2.86008 9.73667 2.77508 9.25308 2.77704 8.76594C2.77652 8.22002 2.88366 7.67935 3.09233 7.17488C3.301 6.67042 3.60711 6.21205 3.99313 5.82603C4.37916 5.44 4.83752 5.1339 5.34199 4.92523C5.84645 4.71655 6.38712 4.60942 6.93304 4.60994C7.41819 4.6085 7.89971 4.6935 8.35504 4.86094C9.13143 3.21198 10.4278 1.86358 12.045 1.02294C13.6621 0.182295 15.5106 -0.104078 17.3063 0.207834C19.102 0.519746 20.7456 1.41268 21.9845 2.74942C23.2235 4.08616 23.9892 5.79275 24.164 7.60694C25.8702 7.9438 27.3981 8.88374 28.4681 10.2548C29.538 11.6258 30.0786 13.3362 29.9908 15.0732C29.903 16.8101 29.1928 18.4573 27.9901 19.7135C26.7873 20.9697 25.1725 21.7508 23.441 21.9139V21.9149Z",
    fill: smartColor || fill
  }));
};
var CloudUploadFilledIcon = {
  component: CloudUploadIconFilledComponent,
  viewBox: "0 0 30 22",
  fill: "none"
};
CloudUploadIconFilledComponent.propTypes = {
  fill: propTypes.exports.string,
  stroke: propTypes.exports.string,
  strokeWidth: propTypes.exports.string,
  strokeLineCap: propTypes.exports.string,
  strokeLineJoin: propTypes.exports.string,
  smartColor: propTypes.exports.string
};
CloudUploadIconFilledComponent.defaultProps = {
  stroke: "black",
  strokeWidth: "1.5",
  strokeLineCap: "round",
  strokeLineJoin: "round"
};

var useFilePicker = function useFilePicker(props, file) {
  var _useState = useState(""),
    _useState2 = _slicedToArray$4(_useState, 2),
    computedAccepts = _useState2[0],
    setComputedAccepts = _useState2[1];
  var _useState3 = useState(""),
    _useState4 = _slicedToArray$4(_useState3, 2),
    internalError = _useState4[0],
    setInternalError = _useState4[1];
  var _useState5 = useState(""),
    _useState6 = _slicedToArray$4(_useState5, 2),
    selectedFileName = _useState6[0],
    setSelectedFileName = _useState6[1];
  var _useState7 = useState(""),
    _useState8 = _slicedToArray$4(_useState7, 2),
    computedErrorMessage = _useState8[0],
    setComputedErrorMessage = _useState8[1];
  useEffect(function () {
    if (Array.isArray(props.accepts)) setComputedAccepts(props.accepts.join(", "));else {
      switch (props.accepts) {
        case "image":
          setComputedAccepts(".png, .jpg, .jpeg, .svg, .bmp, .gif");
          break;
        case "document":
          setComputedAccepts(".csv, .xls, .xlsx, .pdf, .doc, .docx");
          break;
        case "csv":
          setComputedAccepts(".csv");
          break;
        default:
          setComputedAccepts(undefined);
      }
    }
  }, [props.accepts]);
  useEffect(function () {
    setComputedErrorMessage(internalError ? internalError : props.errorMessage ? props.errorMessage : undefined);
  }, [internalError, props.errorMessage]);
  var updateName = function updateName(e) {
    var files = e.target.files || e.dataTransfer.files;
    setSelectedFileName(!files ? "" : files[0].name);
    if (files.length > props.maxFiles) {
      setInternalError("You cannot upload more than ".concat(props.maxFiles, " file(s) at once"));
    } else {
      setInternalError("");
    }
    var _iterator = _createForOfIteratorHelper$1(files),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var currentFile = _step.value;
        if (currentFile.size > props.fileMaxSize * 1000000) {
          setInternalError("You cannot upload a file larger than ".concat(props.fileMaxSize, "MB"));
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    if (internalError.value) {
      var input = file.current.$el;
      input.setAttribute("type", "text");
      input.setAttribute("type", "file");
      setSelectedFileName("");
    } else {
      if (typeof props.onChange === "function") {
        props.onChange(files.length > 1 ? files : files[0]);
      }
    }
  };
  var emptyFile = function emptyFile() {
    setSelectedFileName("");
    var input = file.current;
    input.setAttribute("type", "text");
    input.setAttribute("type", "file");
    if (typeof props.onCleared === "function") props.onCleared();
  };
  return {
    computedAccepts: computedAccepts,
    computedErrorMessage: computedErrorMessage,
    emptyFile: emptyFile,
    updateName: updateName,
    selectedFileName: selectedFileName
  };
};

var _excluded$r = ["label", "disabled", "labelClass", "accepts", "errorMessage", "onChange", "onCleared", "maxFiles", "fileMaxSize", "children", "btnText", "title", "primaryColorScheme", "description"];
var FilePicker = function FilePicker(_ref) {
  var label = _ref.label,
    disabled = _ref.disabled,
    labelClass = _ref.labelClass,
    accepts = _ref.accepts,
    errorMessage = _ref.errorMessage,
    onChange = _ref.onChange,
    onCleared = _ref.onCleared,
    maxFiles = _ref.maxFiles,
    fileMaxSize = _ref.fileMaxSize,
    children = _ref.children;
    _ref.btnText;
    var title = _ref.title,
    primaryColorScheme = _ref.primaryColorScheme,
    description = _ref.description,
    props = _objectWithoutProperties(_ref, _excluded$r);
  var file = useRef(null);
  var _useFilePicker = useFilePicker({
      accepts: accepts,
      errorMessage: errorMessage,
      onChange: onChange,
      onCleared: onCleared,
      maxFiles: maxFiles,
      fileMaxSize: fileMaxSize
    }, file),
    emptyFile = _useFilePicker.emptyFile,
    updateName = _useFilePicker.updateName,
    computedErrorMessage = _useFilePicker.computedErrorMessage,
    computedAccepts = _useFilePicker.computedAccepts,
    selectedFileName = _useFilePicker.selectedFileName;
  return /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-file-picker-box__wrapper"
  }, label && /*#__PURE__*/React__default.createElement(Box, {
    is: "label"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    marginTop: "0px",
    className: classNames({
      labelClass: labelClass
    }, "ui-text-field__label"),
    scale: "subhead",
    fontFace: "labelFontFace"
  }, label)), /*#__PURE__*/React__default.createElement(Box, {
    className: classNames({
      "ui-file-picker-box": true,
      primaryColorScheme: primaryColorScheme
    })
  }, /*#__PURE__*/React__default.createElement(Box, _extends$1({
    type: "file",
    className: "ui-file-picker-input",
    is: "input",
    ref: file
  }, props, {
    disabled: disabled,
    onChange: updateName,
    accept: computedAccepts
  })), selectedFileName && /*#__PURE__*/React__default.createElement(Box, {
    className: "close-btn",
    onClick: emptyFile
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: Close
  })), /*#__PURE__*/React__default.createElement(Box, {
    className: classNames({
      "file-picker__icon-wrapper": true,
      primaryColorScheme: primaryColorScheme
    })
  }, /*#__PURE__*/React__default.createElement(Icon, {
    height: "32px",
    width: "32px",
    icon: CloudUploadFilledIcon
  })), selectedFileName ? "" : children ? children : /*#__PURE__*/React__default.createElement(AutoLayout, {
    className: "placeholder",
    marginTop: "16px",
    alignment: "center",
    direction: "vertical"
  }, title && /*#__PURE__*/React__default.createElement(Heading, {
    center: true,
    marginTop: "0px",
    scale: "h5",
    color: "#1B1E21",
    fontFace: "circularSTD"
  }, title), description ? description : /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Text$1, {
    center: true,
    marginY: "0",
    fontFace: "circularSTD"
  }, "Drag & Drop to upload or", " ", /*#__PURE__*/React__default.createElement(Box, {
    is: "span",
    className: "blue"
  }, "browse"), " ", "to choose files"), /*#__PURE__*/React__default.createElement(Text$1, {
    center: true,
    marginY: "0",
    fontFace: "circularSTD"
  }, computedAccepts ? /*#__PURE__*/React__default.createElement(Box, {
    is: "span"
  }, "Supported file types (", computedAccepts, ").") : /*#__PURE__*/React__default.createElement(Box, {
    is: "span"
  }, "("), "Max upload size: (MB)"))), selectedFileName && /*#__PURE__*/React__default.createElement(Text$1, {
    fontFace: "circularSTD",
    marginTop: "16px"
  }, selectedFileName)), computedErrorMessage && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-text-field__error"
  }, /*#__PURE__*/React__default.createElement(Error$1, {
    className: "ui-text-field__error-icon"
  }), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-text-field__error-text",
    scale: "subhead",
    fontFace: "circularSTD"
  }, computedErrorMessage)));
};
FilePicker.propTypes = {
  btnText: propTypes.exports.string,
  fileMaxSize: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.string]),
  accepts: function accepts(props, propName) {
    var value = props[propName];
    if (typeof value === "string" || Array.isArray(value)) {
      if (typeof value === "string") {
        if (value === "image" && value === "document" && value === "csv") {
          throw new Error("The only allowed string values for `accepts` are: 'image', 'document' and 'csv");
        }
      } else {
        if (_toConsumableArray(new Set(value)).length !== value.length) {
          throw new Error("`accepts` prop can only accept an array of unique mimetypes");
        }
      }
    } else {
      throw new Error("`accepts` prop must be either a string or an array");
    }
  },
  label: propTypes.exports.string,
  errorMessage: propTypes.exports.string,
  disabled: propTypes.exports.bool,
  labelFontFace: propTypes.exports.string,
  labelClass: propTypes.exports.string,
  maxFiles: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.string]),
  title: propTypes.exports.string,
  primaryColorScheme: propTypes.exports.bool,
  description: propTypes.exports.string
};
FilePicker.defaultProps = {
  btnText: "Choose File",
  fileMaxSize: 100,
  maxFiles: 1,
  accepts: [".csv", ".xls", ".xlsx", ".pdf"]
};

var _excluded$q = ["size", "labelFontFace", "labelClass", "variant", "label", "disabled", "fontFace", "btnText", "placeholder", "onChange", "onCleared", "accepts", "errorMessage", "maxFiles", "fileMaxSize"];
var FilePickerInline = function FilePickerInline(_ref) {
  var size = _ref.size,
    labelFontFace = _ref.labelFontFace,
    labelClass = _ref.labelClass,
    variant = _ref.variant,
    label = _ref.label,
    disabled = _ref.disabled,
    fontFace = _ref.fontFace,
    btnText = _ref.btnText,
    placeholder = _ref.placeholder,
    onChange = _ref.onChange,
    onCleared = _ref.onCleared,
    accepts = _ref.accepts,
    errorMessage = _ref.errorMessage,
    maxFiles = _ref.maxFiles,
    fileMaxSize = _ref.fileMaxSize,
    props = _objectWithoutProperties(_ref, _excluded$q);
  var file = useRef(null);
  var _useState = useState(false),
    _useState2 = _slicedToArray$4(_useState, 2),
    inputIsHovered = _useState2[0],
    setInputIsHovered = _useState2[1];
  var _useFilePicker = useFilePicker({
      accepts: accepts,
      errorMessage: errorMessage,
      onChange: onChange,
      onCleared: onCleared,
      maxFiles: maxFiles,
      fileMaxSize: fileMaxSize
    }, file),
    updateName = _useFilePicker.updateName,
    computedErrorMessage = _useFilePicker.computedErrorMessage,
    computedAccepts = _useFilePicker.computedAccepts,
    selectedFileName = _useFilePicker.selectedFileName;
  return variant === "inline" ? /*#__PURE__*/React__default.createElement(Box, {
    className: classNames(["ui-text-field__wrapper d-file-picker-inline", "size__".concat(size), "variant__".concat(variant)])
  }, !!label && variant !== "button" && /*#__PURE__*/React__default.createElement(Box, {
    is: "label"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    marginTop: 0,
    scale: "subhead",
    fontFace: labelFontFace,
    className: classNames(["ui-text-field__label", labelClass])
  }, label)), /*#__PURE__*/React__default.createElement(Box, {
    display: "inline-flex",
    className: "pseudo-input ".concat(disabled)
  }, /*#__PURE__*/React__default.createElement(Box, _extends$1({
    is: "input",
    ref: file
  }, props, {
    disabled: disabled,
    onChange: updateName,
    accept: computedAccepts,
    type: "file"
  })), /*#__PURE__*/React__default.createElement(Box, {
    display: "flex",
    alignItems: "center",
    className: classNames({
      "ui-text-field__input": true,
      "has-error": computedErrorMessage
    })
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    marginY: 0,
    scale: "subhead",
    fontFace: fontFace,
    className: classNames({
      placeholder: selectedFileName === placeholder
    })
  }, selectedFileName)), /*#__PURE__*/React__default.createElement(Box, {
    className: "pseudo-button"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    scale: "subhead",
    fontFace: "hero-new",
    marginY: 0
  }, btnText))), computedErrorMessage && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-text-field__error"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: Error$1,
    className: "ui-text-area__error-icon"
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-text-field__error-text",
    scale: "subhead",
    fontFace: "circularSTD"
  }, computedErrorMessage))) : /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-text-field__wrapper d-file-picker-inline-btn"
  }, /*#__PURE__*/React__default.createElement(Box, {
    is: "input",
    ref: file,
    disabled: disabled,
    onChange: updateName,
    accept: computedAccepts,
    onMouseEnter: function onMouseEnter() {
      return setInputIsHovered(true);
    },
    onMouseLeave: function onMouseLeave() {
      return setInputIsHovered(false);
    },
    type: "file"
  }), /*#__PURE__*/React__default.createElement(Button, _extends$1({
    className: classNames({
      hover: inputIsHovered
    })
  }, props), btnText));
};
FilePickerInline.propTypes = _objectSpread2$1(_objectSpread2$1({}, inputPropTypes), {}, {
  placeholder: propTypes.exports.string,
  btnText: propTypes.exports.string,
  fileMaxSize: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.string]),
  accepts: propTypes.exports.oneOfType([propTypes.exports.array, propTypes.exports.oneOf(["image", "document", "csv"])]),
  variant: propTypes.exports.oneOf(["inline", "button"]),
  onChange: propTypes.exports.func,
  onCleared: propTypes.exports.func
});
FilePickerInline.defaultProps = _objectSpread2$1(_objectSpread2$1({}, defaultProps$1), {}, {
  placeholder: "No file selected...",
  btnText: "Choose File",
  fileMaxSize: 100,
  accepts: [".csv", ".xls", ".xlsx", ".pdf"],
  variant: "inline"
});

var _excluded$p = ["className", "children", "gridWidth", "gridHeight", "colGutter", "rowGutter", "width"];
var GridLayout = function GridLayout(_ref) {
  var className = _ref.className,
    children = _ref.children,
    gridWidth = _ref.gridWidth,
    gridHeight = _ref.gridHeight,
    colGutter = _ref.colGutter,
    rowGutter = _ref.rowGutter,
    width = _ref.width,
    props = _objectWithoutProperties(_ref, _excluded$p);
  return /*#__PURE__*/React__default.createElement(Box, _extends$1({
    className: classNames(["ui-grid"], className),
    style: {
      "--min-grid-width": gridWidth,
      "--min-grid-height": gridHeight,
      "--col-gutter": colGutter,
      "--row-gutter": rowGutter
    },
    width: width
  }, props), children);
};
GridLayout.propTypes = {
  gridWidth: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.string]),
  gridHeight: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.string]),
  colGutter: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.string]),
  rowGutter: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.string]),
  width: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.string])
};
GridLayout.defaultProps = {
  gridWidth: "350px",
  gridHeight: "150px",
  colGutter: "30px",
  rowGutter: "30px",
  width: "100%"
};

var _excluded$o = ["fullPage", "loading", "loader", "loaderSize", "smartColor", "translucent", "ringThickness", "customLoader", "children", "size"];
var Loader = function Loader(_ref) {
  var fullPage = _ref.fullPage,
    loading = _ref.loading,
    loader = _ref.loader,
    loaderSize = _ref.loaderSize,
    smartColor = _ref.smartColor,
    translucent = _ref.translucent,
    ringThickness = _ref.ringThickness;
    _ref.customLoader;
    var children = _ref.children;
    _ref.size;
    _objectWithoutProperties(_ref, _excluded$o);
  var _useContext = useContext(ThemeContext),
    theme = _useContext.theme;
  var _useContext2 = useContext(DarkModeContext),
    darkMode = _useContext2.darkMode;
  var computedColor = smartColor ? smartColor : darkMode ? theme["--dark-primary-color"] : theme["--light-primary-color"];
  return /*#__PURE__*/React__default.createElement(Box, {
    style: {
      "--smart-color": computedColor,
      "--loader-size": loaderSize,
      "--ring-thickness": ringThickness
    },
    className: classNames({
      "ui-d-loader": true,
      fullPage: fullPage,
      loading: loading,
      translucent: translucent
    })
  }, loading ? /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-d-loader__wrapper"
  }, loader === "ring" && /*#__PURE__*/React__default.createElement(Box, {
    className: "ring-loader"
  }, /*#__PURE__*/React__default.createElement(Box, null), /*#__PURE__*/React__default.createElement(Box, null), /*#__PURE__*/React__default.createElement(Box, null), /*#__PURE__*/React__default.createElement(Box, null)), loader === "equalizer" && /*#__PURE__*/React__default.createElement(Box, {
    className: "equalizer-loader"
  }), loader === "ringed-circle" && /*#__PURE__*/React__default.createElement(Box, {
    className: "ringed-circle-loader"
  })) : children);
};
Loader.propTypes = {
  fullPage: propTypes.exports.bool,
  loading: propTypes.exports.bool,
  loader: propTypes.exports.oneOf(["ring", "equalizer", "ringed-circle"]),
  size: propTypes.exports.string,
  thickness: propTypes.exports.string,
  customLoader: propTypes.exports.oneOf([propTypes.exports.element, propTypes.exports.node]),
  color: propTypes.exports.string
};
Loader.defaultProps = {
  loading: true,
  loader: "ring",
  loaderSize: "80px",
  ringThickness: "8px"
};

var Portal = function Portal(_ref) {
  var children = _ref.children,
    _ref$className = _ref.className,
    className = _ref$className === void 0 ? "root-portal" : _ref$className,
    _ref$el = _ref.el,
    el = _ref$el === void 0 ? "div" : _ref$el;
  var _React$useState = React__default.useState(function () {
      // This will be executed only on the initial render
      // https://reactjs.org/docs/hooks-reference.html#lazy-initial-state
      return document.createElement(el);
    }),
    _React$useState2 = _slicedToArray$4(_React$useState, 1),
    container = _React$useState2[0];
  React__default.useEffect(function () {
    container.classList.add(className);
    document.body.appendChild(container);
    document.body.insertAdjacentElement("beforeend", container);
    return function () {
      document.body.removeChild(container);
    };
  }, []);
  return /*#__PURE__*/ReactDOM__default.createPortal(children, container);
};

var _excluded$n = ["show", "greyContent", "roundedBorders", "minModalWidth", "greyHeader", "overlayBg", "alignment", "onCloseModal", "modalWidth", "title", "maxModalWidth", "heading", "contentClass", "bodyClass"];
var Modal = function Modal(_ref) {
  var _classNames;
  var show = _ref.show,
    greyContent = _ref.greyContent,
    roundedBorders = _ref.roundedBorders,
    minModalWidth = _ref.minModalWidth,
    greyHeader = _ref.greyHeader,
    overlayBg = _ref.overlayBg,
    alignment = _ref.alignment,
    onCloseModal = _ref.onCloseModal,
    modalWidth = _ref.modalWidth;
    _ref.title;
    var maxModalWidth = _ref.maxModalWidth,
    heading = _ref.heading;
    _ref.contentClass;
    var bodyClass = _ref.bodyClass,
    props = _objectWithoutProperties(_ref, _excluded$n);
  var generatedClassNames = classNames((_classNames = {
    greyContent: greyContent,
    roundedBorders: roundedBorders,
    greyHeader: greyHeader,
    overlayBg: overlayBg
  }, _defineProperty$6(_classNames, "modal__".concat(alignment), alignment), _defineProperty$6(_classNames, "ui-modal", true), _defineProperty$6(_classNames, "ui-modal__closerr", true), _classNames));
  var handleCloseClicks = function handleCloseClicks(e) {
    if (e.target.classList.contains("ui-modal__closerr")) {
      onCloseModal();
    }
  };
  return show ? /*#__PURE__*/React__default.createElement(Portal, null, /*#__PURE__*/React__default.createElement(Box, {
    onClick: handleCloseClicks,
    className: generatedClassNames,
    style: {
      "--overlay-bg": overlayBg
    }
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: classNames({
      "ui-modal__content": true,
      "--modal-width": modalWidth,
      "--min-modal-width": minModalWidth,
      "--max-modal-width": maxModalWidth
    })
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-modal__heading"
  }, typeof heading === "string" ? /*#__PURE__*/React__default.createElement(Heading, {
    marginTop: 0,
    marginBottom: 0,
    is: "h5"
  }, heading) : heading, /*#__PURE__*/React__default.createElement(Icon, {
    height: "20px",
    width: "20px",
    smartColor: "#8895A7",
    icon: Close,
    className: "ui-modal__closerr",
    onClick: handleCloseClicks,
    cursor: "pointer"
  })), /*#__PURE__*/React__default.createElement(Box, {
    className: classNames(_defineProperty$6({
      "ui-modal__body": true
    }, bodyClass, bodyClass))
  }, props.children)))) : /*#__PURE__*/React__default.createElement(React__default.Fragment, null);
};
Modal.defaultProps = {
  alignment: "top"
};
Modal.propTypes = {
  show: propTypes.exports.bool,
  greyContent: propTypes.exports.bool,
  roundedBorders: propTypes.exports.bool,
  minModalWidth: propTypes.exports.string,
  maxModalWidth: propTypes.exports.string,
  greyHeader: propTypes.exports.bool,
  overlayBg: propTypes.exports.string,
  alignment: propTypes.exports.oneOf(["top", "bottom", "center"]),
  onCloseModal: propTypes.exports.func,
  modalWidth: propTypes.exports.string,
  title: propTypes.exports.string,
  contentClass: propTypes.exports.string,
  heading: propTypes.exports.string,
  bodyClass: propTypes.exports.string
};

var rangedArray = function rangedArray(min, max) {
  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  if (!inclusive) {
    min += 1;
    max -= 1;
  }
  return Array.from({
    length: max - min + 1
  }, function (v, i) {
    return min + i;
  });
};

var dots = "...";
var usePagination = function usePagination(_ref) {
  var totalPages = _ref.totalPages,
    currentPage = _ref.currentPage,
    onPageChange = _ref.onPageChange,
    currentPageSiblings = _ref.currentPageSiblings;
  var _useState = useState([]),
    _useState2 = _slicedToArray$4(_useState, 2),
    renderedPages = _useState2[0],
    setRenderedPages = _useState2[1];
  var _useState3 = useState(1),
    _useState4 = _slicedToArray$4(_useState3, 2),
    initializedCurrentPage = _useState4[0],
    setInitializedCurrentPage = _useState4[1];
  var _useState5 = useState(false),
    _useState6 = _slicedToArray$4(_useState5, 2),
    disablePrev = _useState6[0],
    setDisablePrev = _useState6[1];
  var _useState7 = useState(false),
    _useState8 = _slicedToArray$4(_useState7, 2),
    disableNext = _useState8[0],
    setDisableNext = _useState8[1];
  var updatePage = function updatePage(page) {
    if (page > totalPages || page < 1 || page === "...") {
      return;
    }
    setInitializedCurrentPage(page);
    if (onPageChange && typeof onPageChange === "function") {
      onPageChange(page);
    }
  };
  useEffect(function () {
    setInitializedCurrentPage(currentPage);
  }, []);
  useEffect(function () {
    setDisablePrev(initializedCurrentPage === 1);
    setDisableNext(initializedCurrentPage === totalPages);
    var doubleVisibleSiblings = currentPageSiblings * 2;
    var middleMin = initializedCurrentPage - currentPageSiblings;
    var middleMax = initializedCurrentPage + currentPageSiblings;
    if (totalPages <= doubleVisibleSiblings + 2) {
      setRenderedPages(rangedArray(1, totalPages));
    } else {
      if (initializedCurrentPage < doubleVisibleSiblings) {
        setRenderedPages([].concat(_toConsumableArray(rangedArray(1, doubleVisibleSiblings)), [dots, totalPages]));
      } else {
        if (initializedCurrentPage < totalPages - doubleVisibleSiblings) {
          var rangedArrayHolder = rangedArray(middleMin, middleMax);
          var sub = rangedArrayHolder.includes(1) ? [].concat(_toConsumableArray(rangedArrayHolder), [dots]) : [1, dots].concat(_toConsumableArray(rangedArrayHolder), [dots]);
          setRenderedPages([].concat(_toConsumableArray(sub), [totalPages]));
        } else {
          setRenderedPages([1, dots].concat(_toConsumableArray(rangedArray(totalPages - doubleVisibleSiblings, totalPages))));
        }
      }
    }
  }, [initializedCurrentPage, totalPages]);
  return {
    renderedPages: renderedPages,
    disableNext: disableNext,
    disablePrev: disablePrev,
    initializedCurrentPage: initializedCurrentPage,
    updatePage: updatePage
  };
};

var _excluded$m = ["currentPage", "totalPages", "currentPageSiblings", "onPageChange", "className", "smartColor"];
var Pagination = function Pagination(_ref) {
  var _classNames;
  var currentPage = _ref.currentPage,
    totalPages = _ref.totalPages,
    currentPageSiblings = _ref.currentPageSiblings,
    onPageChange = _ref.onPageChange,
    className = _ref.className,
    smartColor = _ref.smartColor,
    props = _objectWithoutProperties(_ref, _excluded$m);
  var _usePagination = usePagination({
      totalPages: totalPages,
      currentPage: currentPage,
      currentPageSiblings: currentPageSiblings,
      onPageChange: onPageChange
    }),
    renderedPages = _usePagination.renderedPages,
    disableNext = _usePagination.disableNext,
    disablePrev = _usePagination.disablePrev,
    initializedCurrentPage = _usePagination.initializedCurrentPage,
    updatePage = _usePagination.updatePage;
  var generatedPageNumberClassName = function generatedPageNumberClassName(pageNumber) {
    return classNames({
      "ui-pagination__page-number__active": pageNumber === initializedCurrentPage
    }, "ui-pagination__page-number");
  };
  var leftControlClasses = classNames({
    disabled: disablePrev
  }, "ui-pagination__control");
  var rightControlClasses = classNames({
    disabled: disableNext
  }, "ui-pagination__control");
  var generatedPageNumbers = renderedPages === null || renderedPages === void 0 ? void 0 : renderedPages.map(function (pageNumber, index) {
    return /*#__PURE__*/React__default.createElement(Box, {
      className: generatedPageNumberClassName(pageNumber),
      key: index,
      onClick: function onClick() {
        return updatePage(pageNumber);
      }
    }, /*#__PURE__*/React__default.createElement(Text$1, {
      scale: "subhead",
      fontFace: "circularSTD"
    }, pageNumber));
  });
  return /*#__PURE__*/React__default.createElement(Box, _extends$1({
    is: "div"
  }, props, {
    className: classNames((_classNames = {
      "ui-pagination": true
    }, _defineProperty$6(_classNames, className, className), _defineProperty$6(_classNames, "smartColor", smartColor), _classNames)),
    style: {
      "--smart-color": smartColor,
      "--smart-text-color": getTextColor(smartColor)
    }
  }), /*#__PURE__*/React__default.createElement(Box, {
    className: leftControlClasses,
    onClick: function onClick() {
      return updatePage(initializedCurrentPage - 1);
    }
  }, /*#__PURE__*/React__default.createElement(Icon, {
    className: "ui-pagination__left-arrow",
    icon: ChevronArrowLeft
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-pagination__text-previous ui-pagination__text",
    scale: "subhead",
    fontFace: "circularSTD"
  }, "Previous")), generatedPageNumbers, /*#__PURE__*/React__default.createElement(Box, {
    className: rightControlClasses,
    onClick: function onClick() {
      return updatePage(initializedCurrentPage + 1);
    }
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-pagination__text-next ui-pagination__text",
    scale: "subhead",
    fontFace: "circularSTD"
  }, "Next"), /*#__PURE__*/React__default.createElement(Icon, {
    className: "ui-pagination__right-arrow",
    icon: ChevronArrowRight
  })));
};
Pagination.propTypes = {
  currentPage: propTypes.exports.number,
  totalPages: propTypes.exports.number,
  currentPageSiblings: propTypes.exports.number,
  onPageChange: propTypes.exports.func,
  smartColor: propTypes.exports.string
};
Pagination.defaultProps = {
  currentPage: 1,
  totalPages: 30,
  currentPageSiblings: 3
};

// This file is a workaround for a bug in web browsers' "native"
// ES6 importing system which is uncapable of importing "*.json" files.
// https://github.com/catamphetamine/libphonenumber-js/issues/239
var metadata = {"version":4,"country_calling_codes":{},"countries":{"AC":["247","00","(?:[01589]\\d|[46])\\d{4}",[5,6]],"AD":["376","00","(?:1|6\\d)\\d{7}|[135-9]\\d{5}",[6,8,9],[["(\\d{3})(\\d{3})","$1 $2",["[135-9]"]],["(\\d{4})(\\d{4})","$1 $2",["1"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6"]]]],"AE":["971","00","(?:[4-7]\\d|9[0-689])\\d{7}|800\\d{2,9}|[2-4679]\\d{7}",[5,6,7,8,9,10,11,12],[["(\\d{3})(\\d{2,9})","$1 $2",["60|8"]],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[236]|[479][2-8]"],"0$1"],["(\\d{3})(\\d)(\\d{5})","$1 $2 $3",["[479]"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["5"],"0$1"]],"0"],"AF":["93","00","[2-7]\\d{8}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[2-7]"],"0$1"]],"0"],"AG":["1","011","(?:268|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([457]\\d{6})$|1","268$1",0,"268"],"AI":["1","011","(?:264|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2457]\\d{6})$|1","264$1",0,"264"],"AL":["355","00","(?:700\\d\\d|900)\\d{3}|8\\d{5,7}|(?:[2-5]|6\\d)\\d{7}",[6,7,8,9],[["(\\d{3})(\\d{3,4})","$1 $2",["80|9"],"0$1"],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["4[2-6]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2358][2-5]|4"],"0$1"],["(\\d{3})(\\d{5})","$1 $2",["[23578]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["6"],"0$1"]],"0"],"AM":["374","00","(?:[1-489]\\d|55|60|77)\\d{6}",[8],[["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["[89]0"],"0 $1"],["(\\d{3})(\\d{5})","$1 $2",["2|3[12]"],"(0$1)"],["(\\d{2})(\\d{6})","$1 $2",["1|47"],"(0$1)"],["(\\d{2})(\\d{6})","$1 $2",["[3-9]"],"0$1"]],"0"],"AO":["244","00","[29]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[29]"]]]],"AR":["54","00","(?:11|[89]\\d\\d)\\d{8}|[2368]\\d{9}",[10,11],[["(\\d{4})(\\d{2})(\\d{4})","$1 $2-$3",["2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])","2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)","2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]","2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"],"0$1",1],["(\\d{2})(\\d{4})(\\d{4})","$1 $2-$3",["1"],"0$1",1],["(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["[68]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2-$3",["[23]"],"0$1",1],["(\\d)(\\d{4})(\\d{2})(\\d{4})","$2 15-$3-$4",["9(?:2[2-469]|3[3-578])","9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))","9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)","9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]","9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"],"0$1",0,"$1 $2 $3-$4"],["(\\d)(\\d{2})(\\d{4})(\\d{4})","$2 15-$3-$4",["91"],"0$1",0,"$1 $2 $3-$4"],["(\\d{3})(\\d{3})(\\d{5})","$1-$2-$3",["8"],"0$1"],["(\\d)(\\d{3})(\\d{3})(\\d{4})","$2 15-$3-$4",["9"],"0$1",0,"$1 $2 $3-$4"]],"0",0,"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?","9$1"],"AS":["1","011","(?:[58]\\d\\d|684|900)\\d{7}",[10],0,"1",0,"([267]\\d{6})$|1","684$1",0,"684"],"AT":["43","00","1\\d{3,12}|2\\d{6,12}|43(?:(?:0\\d|5[02-9])\\d{3,9}|2\\d{4,5}|[3467]\\d{4}|8\\d{4,6}|9\\d{4,7})|5\\d{4,12}|8\\d{7,12}|9\\d{8,12}|(?:[367]\\d|4[0-24-9])\\d{4,11}",[4,5,6,7,8,9,10,11,12,13],[["(\\d)(\\d{3,12})","$1 $2",["1(?:11|[2-9])"],"0$1"],["(\\d{3})(\\d{2})","$1 $2",["517"],"0$1"],["(\\d{2})(\\d{3,5})","$1 $2",["5[079]"],"0$1"],["(\\d{3})(\\d{3,10})","$1 $2",["(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]"],"0$1"],["(\\d{4})(\\d{3,9})","$1 $2",["[2-467]|5[2-6]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["5"],"0$1"],["(\\d{2})(\\d{4})(\\d{4,7})","$1 $2 $3",["5"],"0$1"]],"0"],"AU":["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\d{7}(?:\\d(?:\\d{2})?)?|8[0-24-9]\\d{7})|[2-478]\\d{8}|1\\d{4,7}",[5,6,7,8,9,10,12],[["(\\d{2})(\\d{3,4})","$1 $2",["16"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,4})","$1 $2 $3",["16"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["14|4"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["[2378]"],"(0$1)"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1(?:30|[89])"]]],"0",0,"(183[12])|0",0,0,0,[["(?:(?:2(?:[0-26-9]\\d|3[0-8]|4[02-9]|5[0135-9])|3(?:[0-3589]\\d|4[0-578]|6[1-9]|7[0-35-9])|7(?:[013-57-9]\\d|2[0-8]))\\d{3}|8(?:51(?:0(?:0[03-9]|[12479]\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\d|7[89]|9[0-4]))|(?:6[0-8]|[78]\\d)\\d{3}|9(?:[02-9]\\d{3}|1(?:(?:[0-58]\\d|6[0135-9])\\d|7(?:0[0-24-9]|[1-9]\\d)|9(?:[0-46-9]\\d|5[0-79])))))\\d{3}",[9]],["4(?:(?:79|94)[01]|83[0-389])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\d{6}",[9]],["180(?:0\\d{3}|2)\\d{3}",[7,10]],["190[0-26]\\d{6}",[10]],0,0,0,["163\\d{2,6}",[5,6,7,8,9]],["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}",[9]],["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}",[6,8,10,12]]],"0011"],"AW":["297","00","(?:[25-79]\\d\\d|800)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[25-9]"]]]],"AX":["358","00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))","2\\d{4,9}|35\\d{4,5}|(?:60\\d\\d|800)\\d{4,6}|7\\d{5,11}|(?:[14]\\d|3[0-46-9]|50)\\d{4,8}",[5,6,7,8,9,10,11,12],0,"0",0,0,0,0,"18",0,"00"],"AZ":["994","00","365\\d{6}|(?:[124579]\\d|60|88)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["90"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[28]|2|365|46","1[28]|2|365[45]|46","1[28]|2|365(?:4|5[02])|46"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[13-9]"],"0$1"]],"0"],"BA":["387","00","6\\d{8}|(?:[35689]\\d|49|70)\\d{6}",[8,9],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["6[1-3]|[7-9]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2-$3",["[3-5]|6[56]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["6"],"0$1"]],"0"],"BB":["1","011","(?:246|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","246$1",0,"246"],"BD":["880","00","[1-469]\\d{9}|8[0-79]\\d{7,8}|[2-79]\\d{8}|[2-9]\\d{7}|[3-9]\\d{6}|[57-9]\\d{5}",[6,7,8,9,10],[["(\\d{2})(\\d{4,6})","$1-$2",["31[5-8]|[459]1"],"0$1"],["(\\d{3})(\\d{3,7})","$1-$2",["3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:[15]|28|4[14])|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]"],"0$1"],["(\\d{4})(\\d{3,6})","$1-$2",["[13-9]|22"],"0$1"],["(\\d)(\\d{7,8})","$1-$2",["2"],"0$1"]],"0"],"BE":["32","00","4\\d{8}|[1-9]\\d{7}",[8,9],[["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["(?:80|9)0"],"0$1"],["(\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[239]|4[23]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[15-8]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["4"],"0$1"]],"0"],"BF":["226","00","[025-7]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[025-7]"]]]],"BG":["359","00","00800\\d{7}|[2-7]\\d{6,7}|[89]\\d{6,8}|2\\d{5}",[6,7,8,9,12],[["(\\d)(\\d)(\\d{2})(\\d{2})","$1 $2 $3 $4",["2"],"0$1"],["(\\d{3})(\\d{4})","$1 $2",["43[1-6]|70[1-9]"],"0$1"],["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,3})","$1 $2 $3",["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"],"0$1"],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["(?:70|8)0"],"0$1"],["(\\d{3})(\\d{3})(\\d{2})","$1 $2 $3",["43[1-7]|7"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[48]|9[08]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["9"],"0$1"]],"0"],"BH":["973","00","[136-9]\\d{7}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[13679]|8[047]"]]]],"BI":["257","00","(?:[267]\\d|31)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2367]"]]]],"BJ":["229","00","[24-689]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[24-689]"]]]],"BL":["590","00","590\\d{6}|(?:69|80|9\\d)\\d{7}",[9],0,"0",0,0,0,0,0,[["590(?:2[7-9]|5[12]|87)\\d{4}"],["69(?:0\\d\\d|1(?:2[2-9]|3[0-5]))\\d{4}"],["80[0-5]\\d{6}"],0,0,0,0,0,["9(?:(?:395|76[018])\\d|475[0-2])\\d{4}"]]],"BM":["1","011","(?:441|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","441$1",0,"441"],"BN":["673","00","[2-578]\\d{6}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-578]"]]]],"BO":["591","00(?:1\\d)?","(?:[2-467]\\d\\d|8001)\\d{5}",[8,9],[["(\\d)(\\d{7})","$1 $2",["[23]|4[46]"]],["(\\d{8})","$1",["[67]"]],["(\\d{3})(\\d{2})(\\d{4})","$1 $2 $3",["8"]]],"0",0,"0(1\\d)?"],"BQ":["599","00","(?:[34]1|7\\d)\\d{5}",[7],0,0,0,0,0,0,"[347]"],"BR":["55","00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)","(?:[1-46-9]\\d\\d|5(?:[0-46-9]\\d|5[0-46-9]))\\d{8}|[1-9]\\d{9}|[3589]\\d{8}|[34]\\d{7}",[8,9,10,11],[["(\\d{4})(\\d{4})","$1-$2",["300|4(?:0[02]|37)","4(?:02|37)0|[34]00"]],["(\\d{3})(\\d{2,3})(\\d{4})","$1 $2 $3",["(?:[358]|90)0"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1 $2-$3",["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]"],"($1)"],["(\\d{2})(\\d{5})(\\d{4})","$1 $2-$3",["[16][1-9]|[2-57-9]"],"($1)"]],"0",0,"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\d{10,11}))?","$2"],"BS":["1","011","(?:242|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([3-8]\\d{6})$|1","242$1",0,"242"],"BT":["975","00","[17]\\d{7}|[2-8]\\d{6}",[7,8],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[2-68]|7[246]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[67]|7"]]]],"BW":["267","00","(?:0800|(?:[37]|800)\\d)\\d{6}|(?:[2-6]\\d|90)\\d{5}",[7,8,10],[["(\\d{2})(\\d{5})","$1 $2",["90"]],["(\\d{3})(\\d{4})","$1 $2",["[24-6]|3[15-79]"]],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[37]"]],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["0"]],["(\\d{3})(\\d{4})(\\d{3})","$1 $2 $3",["8"]]]],"BY":["375","810","(?:[12]\\d|33|44|902)\\d{7}|8(?:0[0-79]\\d{5,7}|[1-7]\\d{9})|8(?:1[0-489]|[5-79]\\d)\\d{7}|8[1-79]\\d{6,7}|8[0-79]\\d{5}|8\\d{5}",[6,7,8,9,10,11],[["(\\d{3})(\\d{3})","$1 $2",["800"],"8 $1"],["(\\d{3})(\\d{2})(\\d{2,4})","$1 $2 $3",["800"],"8 $1"],["(\\d{4})(\\d{2})(\\d{3})","$1 $2-$3",["1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])","1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])"],"8 0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2-$3-$4",["1(?:[56]|7[467])|2[1-3]"],"8 0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2-$3-$4",["[1-4]"],"8 0$1"],["(\\d{3})(\\d{3,4})(\\d{4})","$1 $2 $3",["[89]"],"8 $1"]],"8",0,"0|80?",0,0,0,0,"8~10"],"BZ":["501","00","(?:0800\\d|[2-8])\\d{6}",[7,11],[["(\\d{3})(\\d{4})","$1-$2",["[2-8]"]],["(\\d)(\\d{3})(\\d{4})(\\d{3})","$1-$2-$3-$4",["0"]]]],"CA":["1","011","(?:[2-8]\\d|90)\\d{8}|3\\d{6}",[7,10],0,"1",0,0,0,0,0,[["(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\d{6}",[10]],["",[10]],["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",[10]],["900[2-9]\\d{6}",[10]],["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|(?:5(?:00|2[125-9]|33|44|66|77|88)|622)[2-9]\\d{6}",[10]],0,["310\\d{4}",[7]],0,["600[2-9]\\d{6}",[10]]]],"CC":["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}",[6,7,8,9,10,12],0,"0",0,"([59]\\d{7})$|0","8$1",0,0,[["8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\d|70[23]|959))\\d{3}",[9]],["4(?:(?:79|94)[01]|83[0-389])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\d{6}",[9]],["180(?:0\\d{3}|2)\\d{3}",[7,10]],["190[0-26]\\d{6}",[10]],0,0,0,0,["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}",[9]],["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}",[6,8,10,12]]],"0011"],"CD":["243","00","[189]\\d{8}|[1-68]\\d{6}",[7,9],[["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["88"],"0$1"],["(\\d{2})(\\d{5})","$1 $2",["[1-6]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[89]"],"0$1"]],"0"],"CF":["236","00","(?:[27]\\d{3}|8776)\\d{4}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[278]"]]]],"CG":["242","00","222\\d{6}|(?:0\\d|80)\\d{7}",[9],[["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["8"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[02]"]]]],"CH":["41","00","8\\d{11}|[2-9]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8[047]|90"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-79]|81"],"0$1"],["(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["8"],"0$1"]],"0"],"CI":["225","00","[02]\\d{9}",[10],[["(\\d{2})(\\d{2})(\\d)(\\d{5})","$1 $2 $3 $4",["2"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3 $4",["0"]]]],"CK":["682","00","[2-578]\\d{4}",[5],[["(\\d{2})(\\d{3})","$1 $2",["[2-578]"]]]],"CL":["56","(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0","12300\\d{6}|6\\d{9,10}|[2-9]\\d{8}",[9,10,11],[["(\\d{5})(\\d{4})","$1 $2",["219","2196"],"($1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["44"]],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2[1-36]"],"($1)"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["9[2-9]"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])"],"($1)"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["60|8"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]],["(\\d{3})(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3 $4",["60"]]]],"CM":["237","00","[26]\\d{8}|88\\d{6,7}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["88"]],["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["[26]|88"]]]],"CN":["86","00|1(?:[12]\\d|79)\\d\\d00","1[127]\\d{8,9}|2\\d{9}(?:\\d{2})?|[12]\\d{6,7}|86\\d{6}|(?:1[03-689]\\d|6)\\d{7,9}|(?:[3-579]\\d|8[0-57-9])\\d{6,9}",[7,8,9,10,11,12],[["(\\d{2})(\\d{5,6})","$1 $2",["(?:10|2[0-57-9])[19]","(?:10|2[0-57-9])(?:10|9[56])","10(?:10|9[56])|2[0-57-9](?:100|9[56])"],"0$1"],["(\\d{3})(\\d{5,6})","$1 $2",["3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]","(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))[19]","85[23](?:10|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:10|9[56])","85[23](?:100|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:100|9[56])"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["(?:4|80)0"]],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["10|2(?:[02-57-9]|1[1-9])","10|2(?:[02-57-9]|1[1-9])","10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])"],"0$1",1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]"],"0$1",1],["(\\d{3})(\\d{7,8})","$1 $2",["9"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["80"],"0$1",1],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["[3-578]"],"0$1",1],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["1[3-9]"]],["(\\d{2})(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3 $4",["[12]"],"0$1",1]],"0",0,"(1(?:[12]\\d|79)\\d\\d)|0",0,0,0,0,"00"],"CO":["57","00(?:4(?:[14]4|56)|[579])","(?:60\\d\\d|9101)\\d{6}|(?:1\\d|3)\\d{9}",[10,11],[["(\\d{3})(\\d{7})","$1 $2",["6"],"($1)"],["(\\d{3})(\\d{7})","$1 $2",["3[0-357]|91"]],["(\\d)(\\d{3})(\\d{7})","$1-$2-$3",["1"],"0$1",0,"$1 $2 $3"]],"0",0,"0(4(?:[14]4|56)|[579])?"],"CR":["506","00","(?:8\\d|90)\\d{8}|(?:[24-8]\\d{3}|3005)\\d{4}",[8,10],[["(\\d{4})(\\d{4})","$1 $2",["[2-7]|8[3-9]"]],["(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["[89]"]]],0,0,"(19(?:0[0-2468]|1[09]|20|66|77|99))"],"CU":["53","119","[27]\\d{6,7}|[34]\\d{5,7}|(?:5|8\\d\\d)\\d{7}",[6,7,8,10],[["(\\d{2})(\\d{4,6})","$1 $2",["2[1-4]|[34]"],"(0$1)"],["(\\d)(\\d{6,7})","$1 $2",["7"],"(0$1)"],["(\\d)(\\d{7})","$1 $2",["5"],"0$1"],["(\\d{3})(\\d{7})","$1 $2",["8"],"0$1"]],"0"],"CV":["238","0","(?:[2-59]\\d\\d|800)\\d{4}",[7],[["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["[2-589]"]]]],"CW":["599","00","(?:[34]1|60|(?:7|9\\d)\\d)\\d{5}",[7,8],[["(\\d{3})(\\d{4})","$1 $2",["[3467]"]],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["9[4-8]"]]],0,0,0,0,0,"[69]"],"CX":["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}",[6,7,8,9,10,12],0,"0",0,"([59]\\d{7})$|0","8$1",0,0,[["8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\d|7(?:0[01]|1[0-2])|958))\\d{3}",[9]],["4(?:(?:79|94)[01]|83[0-389])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\d{6}",[9]],["180(?:0\\d{3}|2)\\d{3}",[7,10]],["190[0-26]\\d{6}",[10]],0,0,0,0,["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}",[9]],["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}",[6,8,10,12]]],"0011"],"CY":["357","00","(?:[279]\\d|[58]0)\\d{6}",[8],[["(\\d{2})(\\d{6})","$1 $2",["[257-9]"]]]],"CZ":["420","00","(?:[2-578]\\d|60)\\d{7}|9\\d{8,11}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[2-8]|9[015-7]"]],["(\\d{2})(\\d{3})(\\d{3})(\\d{2})","$1 $2 $3 $4",["96"]],["(\\d{2})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9"]],["(\\d{3})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9"]]]],"DE":["49","00","[2579]\\d{5,14}|49(?:[34]0|69|8\\d)\\d\\d?|49(?:37|49|60|7[089]|9\\d)\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\d{1,8}|(?:1|[368]\\d|4[0-8])\\d{3,13}|49(?:[015]\\d|2[13]|31|[46][1-8])\\d{1,9}",[4,5,6,7,8,9,10,11,12,13,14,15],[["(\\d{2})(\\d{3,13})","$1 $2",["3[02]|40|[68]9"],"0$1"],["(\\d{3})(\\d{3,12})","$1 $2",["2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1","2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1"],"0$1"],["(\\d{4})(\\d{2,11})","$1 $2",["[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]","[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]"],"0$1"],["(\\d{3})(\\d{4})","$1 $2",["138"],"0$1"],["(\\d{5})(\\d{2,10})","$1 $2",["3"],"0$1"],["(\\d{3})(\\d{5,11})","$1 $2",["181"],"0$1"],["(\\d{3})(\\d)(\\d{4,10})","$1 $2 $3",["1(?:3|80)|9"],"0$1"],["(\\d{3})(\\d{7,8})","$1 $2",["1[67]"],"0$1"],["(\\d{3})(\\d{7,12})","$1 $2",["8"],"0$1"],["(\\d{5})(\\d{6})","$1 $2",["185","1850","18500"],"0$1"],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\d{4})(\\d{7})","$1 $2",["18[68]"],"0$1"],["(\\d{5})(\\d{6})","$1 $2",["15[0568]"],"0$1"],["(\\d{4})(\\d{7})","$1 $2",["15[1279]"],"0$1"],["(\\d{3})(\\d{8})","$1 $2",["18"],"0$1"],["(\\d{3})(\\d{2})(\\d{7,8})","$1 $2 $3",["1(?:6[023]|7)"],"0$1"],["(\\d{4})(\\d{2})(\\d{7})","$1 $2 $3",["15[279]"],"0$1"],["(\\d{3})(\\d{2})(\\d{8})","$1 $2 $3",["15"],"0$1"]],"0"],"DJ":["253","00","(?:2\\d|77)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[27]"]]]],"DK":["45","00","[2-9]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-9]"]]]],"DM":["1","011","(?:[58]\\d\\d|767|900)\\d{7}",[10],0,"1",0,"([2-7]\\d{6})$|1","767$1",0,"767"],"DO":["1","011","(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,0,0,0,"8001|8[024]9"],"DZ":["213","00","(?:[1-4]|[5-79]\\d|80)\\d{7}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[1-4]"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["9"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-8]"],"0$1"]],"0"],"EC":["593","00","1\\d{9,10}|(?:[2-7]|9\\d)\\d{7}",[8,9,10,11],[["(\\d)(\\d{3})(\\d{4})","$1 $2-$3",["[2-7]"],"(0$1)",0,"$1-$2-$3"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["9"],"0$1"],["(\\d{4})(\\d{3})(\\d{3,4})","$1 $2 $3",["1"]]],"0"],"EE":["372","00","8\\d{9}|[4578]\\d{7}|(?:[3-8]\\d|90)\\d{5}",[7,8,10],[["(\\d{3})(\\d{4})","$1 $2",["[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88","[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88"]],["(\\d{4})(\\d{3,4})","$1 $2",["[45]|8(?:00|[1-49])","[45]|8(?:00[1-9]|[1-49])"]],["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["7"]],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["8"]]]],"EG":["20","00","[189]\\d{8,9}|[24-6]\\d{8}|[135]\\d{7}",[8,9,10],[["(\\d)(\\d{7,8})","$1 $2",["[23]"],"0$1"],["(\\d{2})(\\d{6,7})","$1 $2",["1[35]|[4-6]|8[2468]|9[235-7]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[189]"],"0$1"]],"0"],"EH":["212","00","[5-8]\\d{8}",[9],0,"0",0,0,0,0,"528[89]"],"ER":["291","00","[178]\\d{6}",[7],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[178]"],"0$1"]],"0"],"ES":["34","00","[5-9]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[89]00"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-9]"]]]],"ET":["251","00","(?:11|[2-579]\\d)\\d{7}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[1-579]"],"0$1"]],"0"],"FI":["358","00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))","[1-35689]\\d{4}|7\\d{10,11}|(?:[124-7]\\d|3[0-46-9])\\d{8}|[1-9]\\d{5,8}",[5,6,7,8,9,10,11,12],[["(\\d)(\\d{4,9})","$1 $2",["[2568][1-8]|3(?:0[1-9]|[1-9])|9"],"0$1"],["(\\d{3})(\\d{3,7})","$1 $2",["[12]00|[368]|70[07-9]"],"0$1"],["(\\d{2})(\\d{4,8})","$1 $2",["[1245]|7[135]"],"0$1"],["(\\d{2})(\\d{6,10})","$1 $2",["7"],"0$1"]],"0",0,0,0,0,"1[03-79]|[2-9]",0,"00"],"FJ":["679","0(?:0|52)","45\\d{5}|(?:0800\\d|[235-9])\\d{6}",[7,11],[["(\\d{3})(\\d{4})","$1 $2",["[235-9]|45"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["0"]]],0,0,0,0,0,0,0,"00"],"FK":["500","00","[2-7]\\d{4}",[5]],"FM":["691","00","(?:[39]\\d\\d|820)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[389]"]]]],"FO":["298","00","[2-9]\\d{5}",[6],[["(\\d{6})","$1",["[2-9]"]]],0,0,"(10(?:01|[12]0|88))"],"FR":["33","00","[1-9]\\d{8}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0 $1"],["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["[1-79]"],"0$1"]],"0"],"GA":["241","00","(?:[067]\\d|11)\\d{6}|[2-7]\\d{6}",[7,8],[["(\\d)(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-7]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["0"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["11|[67]"],"0$1"]],0,0,"0(11\\d{6}|60\\d{6}|61\\d{6}|6[256]\\d{6}|7[467]\\d{6})","$1"],"GB":["44","00","[1-357-9]\\d{9}|[18]\\d{8}|8\\d{6}",[7,9,10],[["(\\d{3})(\\d{4})","$1 $2",["800","8001","80011","800111","8001111"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["845","8454","84546","845464"],"0$1"],["(\\d{3})(\\d{6})","$1 $2",["800"],"0$1"],["(\\d{5})(\\d{4,5})","$1 $2",["1(?:38|5[23]|69|76|94)","1(?:(?:38|69)7|5(?:24|39)|768|946)","1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"],"0$1"],["(\\d{4})(\\d{5,6})","$1 $2",["1(?:[2-69][02-9]|[78])"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["[25]|7(?:0|6[02-9])","[25]|7(?:0|6(?:[03-9]|2[356]))"],"0$1"],["(\\d{4})(\\d{6})","$1 $2",["7"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[1389]"],"0$1"]],"0",0,0,0,0,0,[["(?:1(?:1(?:3(?:[0-58]\\d\\d|73[0235])|4(?:[0-5]\\d\\d|69[7-9]|70[0-579])|(?:(?:5[0-26-9]|[78][0-49])\\d|6(?:[0-4]\\d|50))\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\d)\\d|1(?:[0-7]\\d|8[0-2]))|(?:3(?:0\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\d)\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\d{3})\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\d)|76\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\d|7[4-79])|295[5-7]|35[34]\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\d{3}",[9,10]],["7(?:457[0-57-9]|700[01]|911[028])\\d{5}|7(?:[1-3]\\d\\d|4(?:[0-46-9]\\d|5[0-689])|5(?:0[0-8]|[13-9]\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\d|8[02-9]|9[0-689])|8(?:[014-9]\\d|[23][0-8])|9(?:[024-9]\\d|1[02-9]|3[0-689]))\\d{6}",[10]],["80[08]\\d{7}|800\\d{6}|8001111"],["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[2-49]))\\d{7}|845464\\d",[7,10]],["70\\d{8}",[10]],0,["(?:3[0347]|55)\\d{8}",[10]],["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}",[10]],["56\\d{8}",[10]]],0," x"],"GD":["1","011","(?:473|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","473$1",0,"473"],"GE":["995","00","(?:[3-57]\\d\\d|800)\\d{6}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["70"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["32"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[57]"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[348]"],"0$1"]],"0"],"GF":["594","00","[56]94\\d{6}|(?:80|9\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[56]|9[47]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[89]"],"0$1"]],"0"],"GG":["44","00","(?:1481|[357-9]\\d{3})\\d{6}|8\\d{6}(?:\\d{2})?",[7,9,10],0,"0",0,"([25-9]\\d{5})$|0","1481$1",0,0,[["1481[25-9]\\d{5}",[10]],["7(?:(?:781|839)\\d|911[17])\\d{5}",[10]],["80[08]\\d{7}|800\\d{6}|8001111"],["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[0-3]))\\d{7}|845464\\d",[7,10]],["70\\d{8}",[10]],0,["(?:3[0347]|55)\\d{8}",[10]],["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}",[10]],["56\\d{8}",[10]]]],"GH":["233","00","(?:[235]\\d{3}|800)\\d{5}",[8,9],[["(\\d{3})(\\d{5})","$1 $2",["8"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[235]"],"0$1"]],"0"],"GI":["350","00","(?:[25]\\d|60)\\d{6}",[8],[["(\\d{3})(\\d{5})","$1 $2",["2"]]]],"GL":["299","00","(?:19|[2-689]\\d|70)\\d{4}",[6],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["19|[2-9]"]]]],"GM":["220","00","[2-9]\\d{6}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-9]"]]]],"GN":["224","00","722\\d{6}|(?:3|6\\d)\\d{7}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["3"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[67]"]]]],"GP":["590","00","590\\d{6}|(?:69|80|9\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[569]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0$1"]],"0",0,0,0,0,0,[["590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1289]|5[3-579]|[68][0-689]|7[08]|9\\d)\\d{4}"],["69(?:0\\d\\d|1(?:2[2-9]|3[0-5]))\\d{4}"],["80[0-5]\\d{6}"],0,0,0,0,0,["9(?:(?:395|76[018])\\d|475[0-2])\\d{4}"]]],"GQ":["240","00","222\\d{6}|(?:3\\d|55|[89]0)\\d{7}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[235]"]],["(\\d{3})(\\d{6})","$1 $2",["[89]"]]]],"GR":["30","00","5005000\\d{3}|8\\d{9,11}|(?:[269]\\d|70)\\d{8}",[10,11,12],[["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["21|7"]],["(\\d{4})(\\d{6})","$1 $2",["2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[2689]"]],["(\\d{3})(\\d{3,4})(\\d{5})","$1 $2 $3",["8"]]]],"GT":["502","00","(?:1\\d{3}|[2-7])\\d{7}",[8,11],[["(\\d{4})(\\d{4})","$1 $2",["[2-7]"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]]]],"GU":["1","011","(?:[58]\\d\\d|671|900)\\d{7}",[10],0,"1",0,"([3-9]\\d{6})$|1","671$1",0,"671"],"GW":["245","00","[49]\\d{8}|4\\d{6}",[7,9],[["(\\d{3})(\\d{4})","$1 $2",["40"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[49]"]]]],"GY":["592","001","9008\\d{3}|(?:[2-467]\\d\\d|862)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-46-9]"]]]],"HK":["852","00(?:30|5[09]|[126-9]?)","8[0-46-9]\\d{6,7}|9\\d{4,7}|(?:[2-7]|9\\d{3})\\d{7}",[5,6,7,8,9,11],[["(\\d{3})(\\d{2,5})","$1 $2",["900","9003"]],["(\\d{4})(\\d{4})","$1 $2",["[2-7]|8[1-4]|9(?:0[1-9]|[1-8])"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"]],["(\\d{3})(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9"]]],0,0,0,0,0,0,0,"00"],"HN":["504","00","8\\d{10}|[237-9]\\d{7}",[8,11],[["(\\d{4})(\\d{4})","$1-$2",["[237-9]"]]]],"HR":["385","00","(?:[24-69]\\d|3[0-79])\\d{7}|80\\d{5,7}|[1-79]\\d{7}|6\\d{5,6}",[6,7,8,9],[["(\\d{2})(\\d{2})(\\d{2,3})","$1 $2 $3",["6[01]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["8"],"0$1"],["(\\d)(\\d{4})(\\d{3})","$1 $2 $3",["1"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[67]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["9"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-5]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"],"0$1"]],"0"],"HT":["509","00","(?:[2-489]\\d|55)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["[2-589]"]]]],"HU":["36","00","[235-7]\\d{8}|[1-9]\\d{7}",[8,9],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["1"],"(06 $1)"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]"],"(06 $1)"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-9]"],"06 $1"]],"06"],"ID":["62","00[89]","(?:(?:00[1-9]|8\\d)\\d{4}|[1-36])\\d{6}|00\\d{10}|[1-9]\\d{8,10}|[2-9]\\d{7}",[7,8,9,10,11,12,13],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["15"]],["(\\d{2})(\\d{5,9})","$1 $2",["2[124]|[36]1"],"(0$1)"],["(\\d{3})(\\d{5,7})","$1 $2",["800"],"0$1"],["(\\d{3})(\\d{5,8})","$1 $2",["[2-79]"],"(0$1)"],["(\\d{3})(\\d{3,4})(\\d{3})","$1-$2-$3",["8[1-35-9]"],"0$1"],["(\\d{3})(\\d{6,8})","$1 $2",["1"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["804"],"0$1"],["(\\d{3})(\\d)(\\d{3})(\\d{3})","$1 $2 $3 $4",["80"],"0$1"],["(\\d{3})(\\d{4})(\\d{4,5})","$1-$2-$3",["8"],"0$1"]],"0"],"IE":["353","00","(?:1\\d|[2569])\\d{6,8}|4\\d{6,9}|7\\d{8}|8\\d{8,9}",[7,8,9,10],[["(\\d{2})(\\d{5})","$1 $2",["2[24-9]|47|58|6[237-9]|9[35-9]"],"(0$1)"],["(\\d{3})(\\d{5})","$1 $2",["[45]0"],"(0$1)"],["(\\d)(\\d{3,4})(\\d{4})","$1 $2 $3",["1"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2569]|4[1-69]|7[14]"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["70"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["81"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[78]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["4"],"(0$1)"],["(\\d{2})(\\d)(\\d{3})(\\d{4})","$1 $2 $3 $4",["8"],"0$1"]],"0"],"IL":["972","0(?:0|1[2-9])","1\\d{6}(?:\\d{3,5})?|[57]\\d{8}|[1-489]\\d{7}",[7,8,9,10,11,12],[["(\\d{4})(\\d{3})","$1-$2",["125"]],["(\\d{4})(\\d{2})(\\d{2})","$1-$2-$3",["121"]],["(\\d)(\\d{3})(\\d{4})","$1-$2-$3",["[2-489]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["[57]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1-$2-$3",["12"]],["(\\d{4})(\\d{6})","$1-$2",["159"]],["(\\d)(\\d{3})(\\d{3})(\\d{3})","$1-$2-$3-$4",["1[7-9]"]],["(\\d{3})(\\d{1,2})(\\d{3})(\\d{4})","$1-$2 $3-$4",["15"]]],"0"],"IM":["44","00","1624\\d{6}|(?:[3578]\\d|90)\\d{8}",[10],0,"0",0,"([25-8]\\d{5})$|0","1624$1",0,"74576|(?:16|7[56])24"],"IN":["91","00","(?:000800|[2-9]\\d\\d)\\d{7}|1\\d{7,12}",[8,9,10,11,12,13],[["(\\d{8})","$1",["5(?:0|2[23]|3[03]|[67]1|88)","5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)","5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)"],0,1],["(\\d{4})(\\d{4,5})","$1 $2",["180","1800"],0,1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["140"],0,1],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["11|2[02]|33|4[04]|79[1-7]|80[2-46]","11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])","11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])"],"0$1",1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]","1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]","1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]"],"0$1",1],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807","1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]","1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\d|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]))[2-7]"],"0$1",1],["(\\d{5})(\\d{5})","$1 $2",["[6-9]"],"0$1",1],["(\\d{4})(\\d{2,4})(\\d{4})","$1 $2 $3",["1(?:6|8[06])","1(?:6|8[06]0)"],0,1],["(\\d{4})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["18"],0,1]],"0"],"IO":["246","00","3\\d{6}",[7],[["(\\d{3})(\\d{4})","$1 $2",["3"]]]],"IQ":["964","00","(?:1|7\\d\\d)\\d{7}|[2-6]\\d{7,8}",[8,9,10],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-6]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"]],"0"],"IR":["98","00","[1-9]\\d{9}|(?:[1-8]\\d\\d|9)\\d{3,4}",[4,5,6,7,10],[["(\\d{4,5})","$1",["96"],"0$1"],["(\\d{2})(\\d{4,5})","$1 $2",["(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["9"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["[1-8]"],"0$1"]],"0"],"IS":["354","00|1(?:0(?:01|[12]0)|100)","(?:38\\d|[4-9])\\d{6}",[7,9],[["(\\d{3})(\\d{4})","$1 $2",["[4-9]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["3"]]],0,0,0,0,0,0,0,"00"],"IT":["39","00","0\\d{5,10}|1\\d{8,10}|3(?:[0-8]\\d{7,10}|9\\d{7,8})|(?:55|70)\\d{8}|8\\d{5}(?:\\d{2,4})?",[6,7,8,9,10,11],[["(\\d{2})(\\d{4,6})","$1 $2",["0[26]"]],["(\\d{3})(\\d{3,6})","$1 $2",["0[13-57-9][0159]|8(?:03|4[17]|9[2-5])","0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))"]],["(\\d{4})(\\d{2,6})","$1 $2",["0(?:[13-579][2-46-8]|8[236-8])"]],["(\\d{4})(\\d{4})","$1 $2",["894"]],["(\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["0[26]|5"]],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["1(?:44|[679])|[378]"]],["(\\d{3})(\\d{3,4})(\\d{4})","$1 $2 $3",["0[13-57-9][0159]|14"]],["(\\d{2})(\\d{4})(\\d{5})","$1 $2 $3",["0[26]"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["0"]],["(\\d{3})(\\d{4})(\\d{4,5})","$1 $2 $3",["3"]]],0,0,0,0,0,0,[["0669[0-79]\\d{1,6}|0(?:1(?:[0159]\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\d\\d|3(?:[0159]\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\d|6[0-8])|7(?:[0159]\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\d{2,7}"],["3[1-9]\\d{8}|3[2-9]\\d{7}",[9,10]],["80(?:0\\d{3}|3)\\d{3}",[6,9]],["(?:0878\\d{3}|89(?:2\\d|3[04]|4(?:[0-4]|[5-9]\\d\\d)|5[0-4]))\\d\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\d{6}",[6,8,9,10]],["1(?:78\\d|99)\\d{6}",[9,10]],0,0,0,["55\\d{8}",[10]],["84(?:[08]\\d{3}|[17])\\d{3}",[6,9]]]],"JE":["44","00","1534\\d{6}|(?:[3578]\\d|90)\\d{8}",[10],0,"0",0,"([0-24-8]\\d{5})$|0","1534$1",0,0,[["1534[0-24-8]\\d{5}"],["7(?:(?:(?:50|82)9|937)\\d|7(?:00[378]|97[7-9]))\\d{5}"],["80(?:07(?:35|81)|8901)\\d{4}"],["(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\d{4}"],["701511\\d{4}"],0,["(?:3(?:0(?:07(?:35|81)|8901)|3\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\d{4})\\d{4}"],["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}"],["56\\d{8}"]]],"JM":["1","011","(?:[58]\\d\\d|658|900)\\d{7}",[10],0,"1",0,0,0,0,"658|876"],"JO":["962","00","(?:(?:[2689]|7\\d)\\d|32|53)\\d{6}",[8,9],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2356]|87"],"(0$1)"],["(\\d{3})(\\d{5,6})","$1 $2",["[89]"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["70"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["7"],"0$1"]],"0"],"JP":["81","010","00[1-9]\\d{6,14}|[257-9]\\d{9}|(?:00|[1-9]\\d\\d)\\d{6}",[8,9,10,11,12,13,14,15,16,17],[["(\\d{3})(\\d{3})(\\d{3})","$1-$2-$3",["(?:12|57|99)0"],"0$1"],["(\\d{4})(\\d)(\\d{4})","$1-$2-$3",["1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:80|9[16])","1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9]|636)|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]","1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9]|636[457-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["60"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1-$2-$3",["[36]|4(?:2[09]|7[01])","[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[27-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])","1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9])|5(?:2|3[045]|4[0-369]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|49|51|6(?:[0-24]|36|5[0-3589]|72|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:49|55|83)[29]|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]","1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]","1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|7[015-9]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17|3[015-9]))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9(?:[019]|4[1-3]|6(?:[0-47-9]|5[01346-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|829(?:2|66)|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]"],"0$1"],["(\\d{3})(\\d{2})(\\d{4})","$1-$2-$3",["[14]|[289][2-9]|5[3-9]|7[2-4679]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["800"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1-$2-$3",["[257-9]"],"0$1"]],"0"],"KE":["254","000","(?:[17]\\d\\d|900)\\d{6}|(?:2|80)0\\d{6,7}|[4-6]\\d{6,8}",[7,8,9,10],[["(\\d{2})(\\d{5,7})","$1 $2",["[24-6]"],"0$1"],["(\\d{3})(\\d{6})","$1 $2",["[17]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[89]"],"0$1"]],"0"],"KG":["996","00","8\\d{9}|(?:[235-8]\\d|99)\\d{7}",[9,10],[["(\\d{4})(\\d{5})","$1 $2",["3(?:1[346]|[24-79])"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[235-79]|88"],"0$1"],["(\\d{3})(\\d{3})(\\d)(\\d{2,3})","$1 $2 $3 $4",["8"],"0$1"]],"0"],"KH":["855","00[14-9]","1\\d{9}|[1-9]\\d{7,8}",[8,9,10],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-9]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]]],"0"],"KI":["686","00","(?:[37]\\d|6[0-79])\\d{6}|(?:[2-48]\\d|50)\\d{3}",[5,8],0,"0"],"KM":["269","00","[3478]\\d{6}",[7],[["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["[3478]"]]]],"KN":["1","011","(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-7]\\d{6})$|1","869$1",0,"869"],"KP":["850","00|99","85\\d{6}|(?:19\\d|[2-7])\\d{7}",[8,10],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["8"],"0$1"],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2-7]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"]],"0"],"KR":["82","00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))","00[1-9]\\d{8,11}|(?:[12]|5\\d{3})\\d{7}|[13-6]\\d{9}|(?:[1-6]\\d|80)\\d{7}|[3-6]\\d{4,5}|(?:00|7)0\\d{8}",[5,6,8,9,10,11,12,13,14],[["(\\d{2})(\\d{3,4})","$1-$2",["(?:3[1-3]|[46][1-4]|5[1-5])1"],"0$1"],["(\\d{4})(\\d{4})","$1-$2",["1"]],["(\\d)(\\d{3,4})(\\d{4})","$1-$2-$3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["60|8"],"0$1"],["(\\d{2})(\\d{3,4})(\\d{4})","$1-$2-$3",["[1346]|5[1-5]"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1-$2-$3",["[57]"],"0$1"],["(\\d{2})(\\d{5})(\\d{4})","$1-$2-$3",["5"],"0$1"]],"0",0,"0(8(?:[1-46-8]|5\\d\\d))?"],"KW":["965","00","18\\d{5}|(?:[2569]\\d|41)\\d{6}",[7,8],[["(\\d{4})(\\d{3,4})","$1 $2",["[169]|2(?:[235]|4[1-35-9])|52"]],["(\\d{3})(\\d{5})","$1 $2",["[245]"]]]],"KY":["1","011","(?:345|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","345$1",0,"345"],"KZ":["7","810","(?:33622|8\\d{8})\\d{5}|[78]\\d{9}",[10,14],0,"8",0,0,0,0,"33|7",0,"8~10"],"LA":["856","00","[23]\\d{9}|3\\d{8}|(?:[235-8]\\d|41)\\d{6}",[8,9,10],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["2[13]|3[14]|[4-8]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["30[013-9]"],"0$1"],["(\\d{2})(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3 $4",["[23]"],"0$1"]],"0"],"LB":["961","00","[27-9]\\d{7}|[13-9]\\d{6}",[7,8],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[27-9]"]]],"0"],"LC":["1","011","(?:[58]\\d\\d|758|900)\\d{7}",[10],0,"1",0,"([2-8]\\d{6})$|1","758$1",0,"758"],"LI":["423","00","[68]\\d{8}|(?:[2378]\\d|90)\\d{5}",[7,9],[["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["[2379]|8(?:0[09]|7)","[2379]|8(?:0(?:02|9)|7)"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["69"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6"]]],"0",0,"(1001)|0"],"LK":["94","00","[1-9]\\d{8}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[1-689]"],"0$1"]],"0"],"LR":["231","00","(?:[25]\\d|33|77|88)\\d{7}|(?:2\\d|[4-6])\\d{6}",[7,8,9],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[4-6]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[23578]"],"0$1"]],"0"],"LS":["266","00","(?:[256]\\d\\d|800)\\d{5}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[2568]"]]]],"LT":["370","00","(?:[3469]\\d|52|[78]0)\\d{6}",[8],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["52[0-7]"],"(8-$1)",1],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["[7-9]"],"8 $1",1],["(\\d{2})(\\d{6})","$1 $2",["37|4(?:[15]|6[1-8])"],"(8-$1)",1],["(\\d{3})(\\d{5})","$1 $2",["[3-6]"],"(8-$1)",1]],"8",0,"[08]"],"LU":["352","00","35[013-9]\\d{4,8}|6\\d{8}|35\\d{2,4}|(?:[2457-9]\\d|3[0-46-9])\\d{2,9}",[4,5,6,7,8,9,10,11],[["(\\d{2})(\\d{3})","$1 $2",["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]],["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]],["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["20[2-689]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})","$1 $2 $3 $4",["2(?:[0367]|4[3-8])"]],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["80[01]|90[015]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["20"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})","$1 $2 $3 $4 $5",["2(?:[0367]|4[3-8])"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{1,5})","$1 $2 $3 $4",["[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]"]]],0,0,"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\d)"],"LV":["371","00","(?:[268]\\d|90)\\d{6}",[8],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[269]|8[01]"]]]],"LY":["218","00","[2-9]\\d{8}",[9],[["(\\d{2})(\\d{7})","$1-$2",["[2-9]"],"0$1"]],"0"],"MA":["212","00","[5-8]\\d{8}",[9],[["(\\d{5})(\\d{4})","$1-$2",["5(?:29|38)","5(?:29[1289]|389)","529(?:1[1-46-9]|2[013-8]|90)|5(?:298|389)[0-46-9]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["5[45]"],"0$1"],["(\\d{4})(\\d{5})","$1-$2",["5(?:2[2-489]|3[5-9]|9)|892","5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|892"],"0$1"],["(\\d{2})(\\d{7})","$1-$2",["8"],"0$1"],["(\\d{3})(\\d{6})","$1-$2",["[5-7]"],"0$1"]],"0",0,0,0,0,0,[["5293[01]\\d{4}|5(?:2(?:[0-25-7]\\d|3[1-578]|4[02-46-8]|8[0235-7]|9[0-289])|3(?:[0-47]\\d|5[02-9]|6[02-8]|8[0189]|9[3-9])|(?:4[067]|5[03])\\d)\\d{5}"],["(?:6(?:[0-79]\\d|8[0-247-9])|7(?:[017]\\d|2[0-2]|6[0-8]|8[0-3]))\\d{6}"],["80\\d{7}"],["89\\d{7}"],0,0,0,0,["592(?:4[0-2]|93)\\d{4}"]]],"MC":["377","00","(?:[3489]|6\\d)\\d{7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["4"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[389]"]],["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["6"],"0$1"]],"0"],"MD":["373","00","(?:[235-7]\\d|[89]0)\\d{6}",[8],[["(\\d{3})(\\d{5})","$1 $2",["[89]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["22|3"],"0$1"],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["[25-7]"],"0$1"]],"0"],"ME":["382","00","(?:20|[3-79]\\d)\\d{6}|80\\d{6,7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-9]"],"0$1"]],"0"],"MF":["590","00","590\\d{6}|(?:69|80|9\\d)\\d{7}",[9],0,"0",0,0,0,0,0,[["590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\d{4}"],["69(?:0\\d\\d|1(?:2[2-9]|3[0-5]))\\d{4}"],["80[0-5]\\d{6}"],0,0,0,0,0,["9(?:(?:395|76[018])\\d|475[0-2])\\d{4}"]]],"MG":["261","00","[23]\\d{8}",[9],[["(\\d{2})(\\d{2})(\\d{3})(\\d{2})","$1 $2 $3 $4",["[23]"],"0$1"]],"0",0,"([24-9]\\d{6})$|0","20$1"],"MH":["692","011","329\\d{4}|(?:[256]\\d|45)\\d{5}",[7],[["(\\d{3})(\\d{4})","$1-$2",["[2-6]"]]],"1"],"MK":["389","00","[2-578]\\d{7}",[8],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["2|34[47]|4(?:[37]7|5[47]|64)"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[347]"],"0$1"],["(\\d{3})(\\d)(\\d{2})(\\d{2})","$1 $2 $3 $4",["[58]"],"0$1"]],"0"],"ML":["223","00","[24-9]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[24-9]"]]]],"MM":["95","00","1\\d{5,7}|95\\d{6}|(?:[4-7]|9[0-46-9])\\d{6,8}|(?:2|8\\d)\\d{5,8}",[6,7,8,9,10],[["(\\d)(\\d{2})(\\d{3})","$1 $2 $3",["16|2"],"0$1"],["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]"],"0$1"],["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[12]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[4-7]|8[1-35]"],"0$1"],["(\\d)(\\d{3})(\\d{4,6})","$1 $2 $3",["9(?:2[0-4]|[35-9]|4[137-9])"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"],"0$1"],["(\\d)(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["92"],"0$1"],["(\\d)(\\d{5})(\\d{4})","$1 $2 $3",["9"],"0$1"]],"0"],"MN":["976","001","[12]\\d{7,9}|[5-9]\\d{7}",[8,9,10],[["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["[12]1"],"0$1"],["(\\d{4})(\\d{4})","$1 $2",["[5-9]"]],["(\\d{3})(\\d{5,6})","$1 $2",["[12]2[1-3]"],"0$1"],["(\\d{4})(\\d{5,6})","$1 $2",["[12](?:27|3[2-8]|4[2-68]|5[1-4689])","[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]"],"0$1"],["(\\d{5})(\\d{4,5})","$1 $2",["[12]"],"0$1"]],"0"],"MO":["853","00","0800\\d{3}|(?:28|[68]\\d)\\d{6}",[7,8],[["(\\d{4})(\\d{3})","$1 $2",["0"]],["(\\d{4})(\\d{4})","$1 $2",["[268]"]]]],"MP":["1","011","[58]\\d{9}|(?:67|90)0\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","670$1",0,"670"],"MQ":["596","00","596\\d{6}|(?:69|80|9\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[569]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0$1"]],"0"],"MR":["222","00","(?:[2-4]\\d\\d|800)\\d{5}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-48]"]]]],"MS":["1","011","(?:[58]\\d\\d|664|900)\\d{7}",[10],0,"1",0,"([34]\\d{6})$|1","664$1",0,"664"],"MT":["356","00","3550\\d{4}|(?:[2579]\\d\\d|800)\\d{5}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[2357-9]"]]]],"MU":["230","0(?:0|[24-7]0|3[03])","(?:[57]|8\\d\\d)\\d{7}|[2-468]\\d{6}",[7,8,10],[["(\\d{3})(\\d{4})","$1 $2",["[2-46]|8[013]"]],["(\\d{4})(\\d{4})","$1 $2",["[57]"]],["(\\d{5})(\\d{5})","$1 $2",["8"]]],0,0,0,0,0,0,0,"020"],"MV":["960","0(?:0|19)","(?:800|9[0-57-9]\\d)\\d{7}|[34679]\\d{6}",[7,10],[["(\\d{3})(\\d{4})","$1-$2",["[34679]"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[89]"]]],0,0,0,0,0,0,0,"00"],"MW":["265","00","(?:[1289]\\d|31|77)\\d{7}|1\\d{6}",[7,9],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["1[2-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["2"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[137-9]"],"0$1"]],"0"],"MX":["52","0[09]","1(?:(?:[27]2|44|99)[1-9]|65[0-689])\\d{7}|(?:1(?:[01]\\d|2[13-9]|[35][1-9]|4[0-35-9]|6[0-46-9]|7[013-9]|8[1-79]|9[1-8])|[2-9]\\d)\\d{8}",[10,11],[["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["33|5[56]|81"],0,1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[2-9]"],0,1],["(\\d)(\\d{2})(\\d{4})(\\d{4})","$2 $3 $4",["1(?:33|5[56]|81)"],0,1],["(\\d)(\\d{3})(\\d{3})(\\d{4})","$2 $3 $4",["1"],0,1]],"01",0,"0(?:[12]|4[45])|1",0,0,0,0,"00"],"MY":["60","00","1\\d{8,9}|(?:3\\d|[4-9])\\d{7}",[8,9,10],[["(\\d)(\\d{3})(\\d{4})","$1-$2 $3",["[4-79]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1-$2 $3",["1(?:[02469]|[378][1-9]|53)|8","1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1-$2 $3",["3"],"0$1"],["(\\d)(\\d{3})(\\d{2})(\\d{4})","$1-$2-$3-$4",["1(?:[367]|80)"]],["(\\d{3})(\\d{3})(\\d{4})","$1-$2 $3",["15"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1-$2 $3",["1"],"0$1"]],"0"],"MZ":["258","00","(?:2|8\\d)\\d{7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["2|8[2-79]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"]]]],"NA":["264","00","[68]\\d{7,8}",[8,9],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["88"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["6"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["87"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["8"],"0$1"]],"0"],"NC":["687","00","(?:050|[2-57-9]\\d\\d)\\d{3}",[6],[["(\\d{2})(\\d{2})(\\d{2})","$1.$2.$3",["[02-57-9]"]]]],"NE":["227","00","[027-9]\\d{7}",[8],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["08"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[089]|2[013]|7[04]"]]]],"NF":["672","00","[13]\\d{5}",[6],[["(\\d{2})(\\d{4})","$1 $2",["1[0-3]"]],["(\\d)(\\d{5})","$1 $2",["[13]"]]],0,0,"([0-258]\\d{4})$","3$1"],"NG":["234","009","(?:[124-7]|9\\d{3})\\d{6}|[1-9]\\d{7}|[78]\\d{9,13}",[7,8,10,11,12,13,14],[["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["78"],"0$1"],["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[12]|9(?:0[3-9]|[1-9])"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,3})","$1 $2 $3",["[3-7]|8[2-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[7-9]"],"0$1"],["(\\d{3})(\\d{4})(\\d{4,5})","$1 $2 $3",["[78]"],"0$1"],["(\\d{3})(\\d{5})(\\d{5,6})","$1 $2 $3",["[78]"],"0$1"]],"0"],"NI":["505","00","(?:1800|[25-8]\\d{3})\\d{4}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[125-8]"]]]],"NL":["31","00","(?:[124-7]\\d\\d|3(?:[02-9]\\d|1[0-8]))\\d{6}|8\\d{6,9}|9\\d{6,10}|1\\d{4,5}",[5,6,7,8,9,10,11],[["(\\d{3})(\\d{4,7})","$1 $2",["[89]0"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["66"],"0$1"],["(\\d)(\\d{8})","$1 $2",["6"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[1-578]|91"],"0$1"],["(\\d{3})(\\d{3})(\\d{5})","$1 $2 $3",["9"],"0$1"]],"0"],"NO":["47","00","(?:0|[2-9]\\d{3})\\d{4}",[5,8],[["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["8"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-79]"]]],0,0,0,0,0,"[02-689]|7[0-8]"],"NP":["977","00","(?:1\\d|9)\\d{9}|[1-9]\\d{7}",[8,10,11],[["(\\d)(\\d{7})","$1-$2",["1[2-6]"],"0$1"],["(\\d{2})(\\d{6})","$1-$2",["1[01]|[2-8]|9(?:[1-59]|[67][2-6])"],"0$1"],["(\\d{3})(\\d{7})","$1-$2",["9"]]],"0"],"NR":["674","00","(?:444|(?:55|8\\d)\\d|666)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[4-68]"]]]],"NU":["683","00","(?:[47]|888\\d)\\d{3}",[4,7],[["(\\d{3})(\\d{4})","$1 $2",["8"]]]],"NZ":["64","0(?:0|161)","[29]\\d{7,9}|50\\d{5}(?:\\d{2,3})?|6[0-35-9]\\d{6}|7\\d{7,8}|8\\d{4,9}|(?:11\\d|[34])\\d{7}",[5,6,7,8,9,10],[["(\\d{2})(\\d{3,8})","$1 $2",["8[1-579]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["50[036-8]|[89]0","50(?:[0367]|88)|[89]0"],"0$1"],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["24|[346]|7[2-57-9]|9[2-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["2(?:10|74)|[59]|80"],"0$1"],["(\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["1|2[028]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,5})","$1 $2 $3",["2(?:[169]|7[0-35-9])|7|86"],"0$1"]],"0",0,0,0,0,0,0,"00"],"OM":["968","00","(?:1505|[279]\\d{3}|500)\\d{4}|800\\d{5,6}",[7,8,9],[["(\\d{3})(\\d{4,6})","$1 $2",["[58]"]],["(\\d{2})(\\d{6})","$1 $2",["2"]],["(\\d{4})(\\d{4})","$1 $2",["[179]"]]]],"PA":["507","00","(?:00800|8\\d{3})\\d{6}|[68]\\d{7}|[1-57-9]\\d{6}",[7,8,10,11],[["(\\d{3})(\\d{4})","$1-$2",["[1-57-9]"]],["(\\d{4})(\\d{4})","$1-$2",["[68]"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"]]]],"PE":["51","00|19(?:1[124]|77|90)00","(?:[14-8]|9\\d)\\d{7}",[8,9],[["(\\d{3})(\\d{5})","$1 $2",["80"],"(0$1)"],["(\\d)(\\d{7})","$1 $2",["1"],"(0$1)"],["(\\d{2})(\\d{6})","$1 $2",["[4-8]"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["9"]]],"0",0,0,0,0,0,0,"00"," Anexo "],"PF":["689","00","4\\d{5}(?:\\d{2})?|8\\d{7,8}",[6,8,9],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["44"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["4|8[7-9]"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"]]]],"PG":["675","00|140[1-3]","(?:180|[78]\\d{3})\\d{4}|(?:[2-589]\\d|64)\\d{5}",[7,8],[["(\\d{3})(\\d{4})","$1 $2",["18|[2-69]|85"]],["(\\d{4})(\\d{4})","$1 $2",["[78]"]]],0,0,0,0,0,0,0,"00"],"PH":["63","00","(?:[2-7]|9\\d)\\d{8}|2\\d{5}|(?:1800|8)\\d{7,9}",[6,8,9,10,11,12,13],[["(\\d)(\\d{5})","$1 $2",["2"],"(0$1)"],["(\\d{4})(\\d{4,6})","$1 $2",["3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2","3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))"],"(0$1)"],["(\\d{5})(\\d{4})","$1 $2",["346|4(?:27|9[35])|883","3469|4(?:279|9(?:30|56))|8834"],"(0$1)"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[3-7]|8[2-8]"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[89]"],"0$1"],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]],["(\\d{4})(\\d{1,2})(\\d{3})(\\d{4})","$1 $2 $3 $4",["1"]]],"0"],"PK":["92","00","122\\d{6}|[24-8]\\d{10,11}|9(?:[013-9]\\d{8,10}|2(?:[01]\\d\\d|2(?:[06-8]\\d|1[01]))\\d{7})|(?:[2-8]\\d{3}|92(?:[0-7]\\d|8[1-9]))\\d{6}|[24-9]\\d{8}|[89]\\d{7}",[8,9,10,11,12],[["(\\d{3})(\\d{3})(\\d{2,7})","$1 $2 $3",["[89]0"],"0$1"],["(\\d{4})(\\d{5})","$1 $2",["1"]],["(\\d{3})(\\d{6,7})","$1 $2",["2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])","9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]"],"(0$1)"],["(\\d{2})(\\d{7,8})","$1 $2",["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]"],"(0$1)"],["(\\d{5})(\\d{5})","$1 $2",["58"],"(0$1)"],["(\\d{3})(\\d{7})","$1 $2",["3"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["[24-9]"],"(0$1)"]],"0"],"PL":["48","00","(?:6|8\\d\\d)\\d{7}|[1-9]\\d{6}(?:\\d{2})?|[26]\\d{5}",[6,7,8,9,10],[["(\\d{5})","$1",["19"]],["(\\d{3})(\\d{3})","$1 $2",["11|20|64"]],["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1","(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19"]],["(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["64"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)"]],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[2-8]|[2-7]|8[1-79]|9[145]"]],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["8"]]]],"PM":["508","00","[45]\\d{5}|(?:708|80\\d)\\d{6}",[6,9],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["[45]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["7"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0$1"]],"0"],"PR":["1","011","(?:[589]\\d\\d|787)\\d{7}",[10],0,"1",0,0,0,0,"787|939"],"PS":["970","00","[2489]2\\d{6}|(?:1\\d|5)\\d{8}",[8,9,10],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2489]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["5"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]]],"0"],"PT":["351","00","1693\\d{5}|(?:[26-9]\\d|30)\\d{7}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["2[12]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["16|[236-9]"]]]],"PW":["680","01[12]","(?:[24-8]\\d\\d|345|900)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-9]"]]]],"PY":["595","00","59\\d{4,6}|9\\d{5,10}|(?:[2-46-8]\\d|5[0-8])\\d{4,7}",[6,7,8,9,10,11],[["(\\d{3})(\\d{3,6})","$1 $2",["[2-9]0"],"0$1"],["(\\d{2})(\\d{5})","$1 $2",["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"],"(0$1)"],["(\\d{3})(\\d{4,5})","$1 $2",["2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["87"]],["(\\d{3})(\\d{6})","$1 $2",["9(?:[5-79]|8[1-6])"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[2-8]"],"0$1"],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["9"]]],"0"],"QA":["974","00","800\\d{4}|(?:2|800)\\d{6}|(?:0080|[3-7])\\d{7}",[7,8,9,11],[["(\\d{3})(\\d{4})","$1 $2",["2[16]|8"]],["(\\d{4})(\\d{4})","$1 $2",["[3-7]"]]]],"RE":["262","00","(?:26|[689]\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2689]"],"0$1"]],"0",0,0,0,0,0,[["26(?:2\\d\\d|3(?:0\\d|1[0-3]))\\d{4}"],["(?:69(?:2\\d\\d|3(?:0[0-46]|1[013]|2[0-2]|3[0-39]|4\\d|5[0-5]|6[0-6]|7[0-27]|8[0-8]|9[0-479]))|9(?:399[0-3]|479[0-2]|76(?:2[27]|3[0-37]|9\\d)))\\d{4}"],["80\\d{7}"],["89[1-37-9]\\d{6}"],0,0,0,0,0,["8(?:1[019]|2[0156]|84|90)\\d{6}"]]],"RO":["40","00","(?:[2378]\\d|90)\\d{7}|[23]\\d{5}",[6,9],[["(\\d{3})(\\d{3})","$1 $2",["2[3-6]","2[3-6]\\d9"],"0$1"],["(\\d{2})(\\d{4})","$1 $2",["219|31"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[23]1"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[237-9]"],"0$1"]],"0",0,0,0,0,0,0,0," int "],"RS":["381","00","38[02-9]\\d{6,9}|6\\d{7,9}|90\\d{4,8}|38\\d{5,6}|(?:7\\d\\d|800)\\d{3,9}|(?:[12]\\d|3[0-79])\\d{5,10}",[6,7,8,9,10,11,12],[["(\\d{3})(\\d{3,9})","$1 $2",["(?:2[389]|39)0|[7-9]"],"0$1"],["(\\d{2})(\\d{5,10})","$1 $2",["[1-36]"],"0$1"]],"0"],"RU":["7","810","8\\d{13}|[347-9]\\d{9}",[10,14],[["(\\d{4})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["7(?:1[0-8]|2[1-9])","7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))","7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2"],"8 ($1)",1],["(\\d{5})(\\d)(\\d{2})(\\d{2})","$1 $2 $3 $4",["7(?:1[0-68]|2[1-9])","7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))","7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]"],"8 ($1)",1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"8 ($1)",1],["(\\d{3})(\\d{3})(\\d{2})(\\d{2})","$1 $2-$3-$4",["[349]|8(?:[02-7]|1[1-8])"],"8 ($1)",1],["(\\d{4})(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3 $4",["8"],"8 ($1)"]],"8",0,0,0,0,"3[04-689]|[489]",0,"8~10"],"RW":["250","00","(?:06|[27]\\d\\d|[89]00)\\d{6}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["0"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[7-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["2"]]],"0"],"SA":["966","00","92\\d{7}|(?:[15]|8\\d)\\d{8}",[9,10],[["(\\d{4})(\\d{5})","$1 $2",["9"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["5"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["81"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"]]],"0"],"SB":["677","0[01]","(?:[1-6]|[7-9]\\d\\d)\\d{4}",[5,7],[["(\\d{2})(\\d{5})","$1 $2",["7|8[4-9]|9(?:[1-8]|9[0-8])"]]]],"SC":["248","010|0[0-2]","800\\d{4}|(?:[249]\\d|64)\\d{5}",[7],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[246]|9[57]"]]],0,0,0,0,0,0,0,"00"],"SD":["249","00","[19]\\d{8}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[19]"],"0$1"]],"0"],"SE":["46","00","(?:[26]\\d\\d|9)\\d{9}|[1-9]\\d{8}|[1-689]\\d{7}|[1-4689]\\d{6}|2\\d{5}",[6,7,8,9,10],[["(\\d{2})(\\d{2,3})(\\d{2})","$1-$2 $3",["20"],"0$1",0,"$1 $2 $3"],["(\\d{3})(\\d{4})","$1-$2",["9(?:00|39|44|9)"],"0$1",0,"$1 $2"],["(\\d{2})(\\d{3})(\\d{2})","$1-$2 $3",["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"],"0$1",0,"$1 $2 $3"],["(\\d)(\\d{2,3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["8"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2,3})(\\d{2})","$1-$2 $3",["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"],"0$1",0,"$1 $2 $3"],["(\\d{3})(\\d{2,3})(\\d{3})","$1-$2 $3",["9(?:00|39|44)"],"0$1",0,"$1 $2 $3"],["(\\d{2})(\\d{2,3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]"],"0$1",0,"$1 $2 $3 $4"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["10|7"],"0$1",0,"$1 $2 $3 $4"],["(\\d)(\\d{3})(\\d{3})(\\d{2})","$1-$2 $3 $4",["8"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1-$2 $3 $4",["[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2})(\\d{2})(\\d{3})","$1-$2 $3 $4",["9"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1-$2 $3 $4 $5",["[26]"],"0$1",0,"$1 $2 $3 $4 $5"]],"0"],"SG":["65","0[0-3]\\d","(?:(?:1\\d|8)\\d\\d|7000)\\d{7}|[3689]\\d{7}",[8,10,11],[["(\\d{4})(\\d{4})","$1 $2",["[369]|8(?:0[1-6]|[1-9])"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"]],["(\\d{4})(\\d{4})(\\d{3})","$1 $2 $3",["7"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]]]],"SH":["290","00","(?:[256]\\d|8)\\d{3}",[4,5],0,0,0,0,0,0,"[256]"],"SI":["386","00|10(?:22|66|88|99)","[1-7]\\d{7}|8\\d{4,7}|90\\d{4,6}",[5,6,7,8],[["(\\d{2})(\\d{3,6})","$1 $2",["8[09]|9"],"0$1"],["(\\d{3})(\\d{5})","$1 $2",["59|8"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[37][01]|4[0139]|51|6"],"0$1"],["(\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[1-57]"],"(0$1)"]],"0",0,0,0,0,0,0,"00"],"SJ":["47","00","0\\d{4}|(?:[489]\\d|[57]9)\\d{6}",[5,8],0,0,0,0,0,0,"79"],"SK":["421","00","[2-689]\\d{8}|[2-59]\\d{6}|[2-5]\\d{5}",[6,7,9],[["(\\d)(\\d{2})(\\d{3,4})","$1 $2 $3",["21"],"0$1"],["(\\d{2})(\\d{2})(\\d{2,3})","$1 $2 $3",["[3-5][1-8]1","[3-5][1-8]1[67]"],"0$1"],["(\\d)(\\d{3})(\\d{3})(\\d{2})","$1/$2 $3 $4",["2"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[689]"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1/$2 $3 $4",["[3-5]"],"0$1"]],"0"],"SL":["232","00","(?:[237-9]\\d|66)\\d{6}",[8],[["(\\d{2})(\\d{6})","$1 $2",["[236-9]"],"(0$1)"]],"0"],"SM":["378","00","(?:0549|[5-7]\\d)\\d{6}",[8,10],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-7]"]],["(\\d{4})(\\d{6})","$1 $2",["0"]]],0,0,"([89]\\d{5})$","0549$1"],"SN":["221","00","(?:[378]\\d|93)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"]],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[379]"]]]],"SO":["252","00","[346-9]\\d{8}|[12679]\\d{7}|[1-5]\\d{6}|[1348]\\d{5}",[6,7,8,9],[["(\\d{2})(\\d{4})","$1 $2",["8[125]"]],["(\\d{6})","$1",["[134]"]],["(\\d)(\\d{6})","$1 $2",["[15]|2[0-79]|3[0-46-8]|4[0-7]"]],["(\\d)(\\d{7})","$1 $2",["(?:2|90)4|[67]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[3478]|64|90"]],["(\\d{2})(\\d{5,7})","$1 $2",["1|28|6(?:0[5-7]|[1-35-9])|9[2-9]"]]],"0"],"SR":["597","00","(?:[2-5]|68|[78]\\d)\\d{5}",[6,7],[["(\\d{2})(\\d{2})(\\d{2})","$1-$2-$3",["56"]],["(\\d{3})(\\d{3})","$1-$2",["[2-5]"]],["(\\d{3})(\\d{4})","$1-$2",["[6-8]"]]]],"SS":["211","00","[19]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[19]"],"0$1"]],"0"],"ST":["239","00","(?:22|9\\d)\\d{5}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[29]"]]]],"SV":["503","00","[267]\\d{7}|[89]00\\d{4}(?:\\d{4})?",[7,8,11],[["(\\d{3})(\\d{4})","$1 $2",["[89]"]],["(\\d{4})(\\d{4})","$1 $2",["[267]"]],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["[89]"]]]],"SX":["1","011","7215\\d{6}|(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"(5\\d{6})$|1","721$1",0,"721"],"SY":["963","00","[1-39]\\d{8}|[1-5]\\d{7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-5]"],"0$1",1],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["9"],"0$1",1]],"0"],"SZ":["268","00","0800\\d{4}|(?:[237]\\d|900)\\d{6}",[8,9],[["(\\d{4})(\\d{4})","$1 $2",["[0237]"]],["(\\d{5})(\\d{4})","$1 $2",["9"]]]],"TA":["290","00","8\\d{3}",[4],0,0,0,0,0,0,"8"],"TC":["1","011","(?:[58]\\d\\d|649|900)\\d{7}",[10],0,"1",0,"([2-479]\\d{6})$|1","649$1",0,"649"],"TD":["235","00|16","(?:22|[69]\\d|77)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2679]"]]],0,0,0,0,0,0,0,"00"],"TG":["228","00","[279]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[279]"]]]],"TH":["66","00[1-9]","(?:001800|[2-57]|[689]\\d)\\d{7}|1\\d{7,9}",[8,9,10,13],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[13-9]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]]],"0"],"TJ":["992","810","[0-57-9]\\d{8}",[9],[["(\\d{6})(\\d)(\\d{2})","$1 $2 $3",["331","3317"]],["(\\d{3})(\\d{2})(\\d{4})","$1 $2 $3",["[34]7|91[78]"]],["(\\d{4})(\\d)(\\d{4})","$1 $2 $3",["3[1-5]"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[0-57-9]"]]],0,0,0,0,0,0,0,"8~10"],"TK":["690","00","[2-47]\\d{3,6}",[4,5,6,7]],"TL":["670","00","7\\d{7}|(?:[2-47]\\d|[89]0)\\d{5}",[7,8],[["(\\d{3})(\\d{4})","$1 $2",["[2-489]|70"]],["(\\d{4})(\\d{4})","$1 $2",["7"]]]],"TM":["993","810","[1-6]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2-$3-$4",["12"],"(8 $1)"],["(\\d{3})(\\d)(\\d{2})(\\d{2})","$1 $2-$3-$4",["[1-5]"],"(8 $1)"],["(\\d{2})(\\d{6})","$1 $2",["6"],"8 $1"]],"8",0,0,0,0,0,0,"8~10"],"TN":["216","00","[2-57-9]\\d{7}",[8],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2-57-9]"]]]],"TO":["676","00","(?:0800|(?:[5-8]\\d\\d|999)\\d)\\d{3}|[2-8]\\d{4}",[5,7],[["(\\d{2})(\\d{3})","$1-$2",["[2-4]|50|6[09]|7[0-24-69]|8[05]"]],["(\\d{4})(\\d{3})","$1 $2",["0"]],["(\\d{3})(\\d{4})","$1 $2",["[5-9]"]]]],"TR":["90","00","4\\d{6}|8\\d{11,12}|(?:[2-58]\\d\\d|900)\\d{7}",[7,10,12,13],[["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["512|8[01589]|90"],"0$1",1],["(\\d{3})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["5(?:[0-59]|61)","5(?:[0-59]|616)","5(?:[0-59]|6161)"],"0$1",1],["(\\d{3})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[24][1-8]|3[1-9]"],"(0$1)",1],["(\\d{3})(\\d{3})(\\d{6,7})","$1 $2 $3",["80"],"0$1",1]],"0"],"TT":["1","011","(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-46-8]\\d{6})$|1","868$1",0,"868"],"TV":["688","00","(?:2|7\\d\\d|90)\\d{4}",[5,6,7],[["(\\d{2})(\\d{3})","$1 $2",["2"]],["(\\d{2})(\\d{4})","$1 $2",["90"]],["(\\d{2})(\\d{5})","$1 $2",["7"]]]],"TW":["886","0(?:0[25-79]|19)","[2-689]\\d{8}|7\\d{9,10}|[2-8]\\d{7}|2\\d{6}",[7,8,9,10,11],[["(\\d{2})(\\d)(\\d{4})","$1 $2 $3",["202"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[258]0"],"0$1"],["(\\d)(\\d{3,4})(\\d{4})","$1 $2 $3",["[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]","[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[49]"],"0$1"],["(\\d{2})(\\d{4})(\\d{4,5})","$1 $2 $3",["7"],"0$1"]],"0",0,0,0,0,0,0,0,"#"],"TZ":["255","00[056]","(?:[25-8]\\d|41|90)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{4})","$1 $2 $3",["[89]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[24]"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["5"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[67]"],"0$1"]],"0"],"UA":["380","00","[89]\\d{9}|[3-9]\\d{8}",[9,10],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]","6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]"],"0$1"],["(\\d{4})(\\d{5})","$1 $2",["3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])","3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[3-7]|89|9[1-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[89]"],"0$1"]],"0",0,0,0,0,0,0,"0~0"],"UG":["256","00[057]","800\\d{6}|(?:[29]0|[347]\\d)\\d{7}",[9],[["(\\d{4})(\\d{5})","$1 $2",["202","2024"],"0$1"],["(\\d{3})(\\d{6})","$1 $2",["[27-9]|4(?:6[45]|[7-9])"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["[34]"],"0$1"]],"0"],"US":["1","011","[2-9]\\d{9}|3\\d{6}",[10],[["(\\d{3})(\\d{4})","$1-$2",["310"],0,1],["(\\d{3})(\\d{3})(\\d{4})","($1) $2-$3",["[2-9]"],0,1,"$1-$2-$3"]],"1",0,0,0,0,0,[["5056(?:[0-35-9]\\d|4[46])\\d{4}|(?:4722|505[2-57-9])\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[0-2]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}"],[""],["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],["900[2-9]\\d{6}"],["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]]],"UY":["598","0(?:0|1[3-9]\\d)","(?:0004|4)\\d{9}|[1249]\\d{7}|(?:[49]\\d|80)\\d{5}",[7,8,10,13],[["(\\d{3})(\\d{4})","$1 $2",["405|8|90"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["9"],"0$1"],["(\\d{4})(\\d{4})","$1 $2",["[124]"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["4"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3 $4",["0"]]],"0",0,0,0,0,0,0,"00"," int. "],"UZ":["998","810","(?:33|[5-79]\\d|88)\\d{7}",[9],[["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[35-9]"],"8 $1"]],"8",0,0,0,0,0,0,"8~10"],"VA":["39","00","0\\d{5,10}|3[0-8]\\d{7,10}|55\\d{8}|8\\d{5}(?:\\d{2,4})?|(?:1\\d|39)\\d{7,8}",[6,7,8,9,10,11],0,0,0,0,0,0,"06698"],"VC":["1","011","(?:[58]\\d\\d|784|900)\\d{7}",[10],0,"1",0,"([2-7]\\d{6})$|1","784$1",0,"784"],"VE":["58","00","[68]00\\d{7}|(?:[24]\\d|[59]0)\\d{8}",[10],[["(\\d{3})(\\d{7})","$1-$2",["[24-689]"],"0$1"]],"0"],"VG":["1","011","(?:284|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-578]\\d{6})$|1","284$1",0,"284"],"VI":["1","011","[58]\\d{9}|(?:34|90)0\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","340$1",0,"340"],"VN":["84","00","[12]\\d{9}|[135-9]\\d{8}|[16]\\d{7}|[16-8]\\d{6}",[7,8,9,10],[["(\\d{2})(\\d{5})","$1 $2",["80"],"0$1",1],["(\\d{4})(\\d{4,6})","$1 $2",["1"],0,1],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[69]"],"0$1",1],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[3578]"],"0$1",1],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["2[48]"],"0$1",1],["(\\d{3})(\\d{4})(\\d{3})","$1 $2 $3",["2"],"0$1",1]],"0"],"VU":["678","00","[57-9]\\d{6}|(?:[238]\\d|48)\\d{3}",[5,7],[["(\\d{3})(\\d{4})","$1 $2",["[57-9]"]]]],"WF":["681","00","(?:40|72)\\d{4}|8\\d{5}(?:\\d{3})?",[6,9],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["[478]"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"]]]],"WS":["685","0","(?:[2-6]|8\\d{5})\\d{4}|[78]\\d{6}|[68]\\d{5}",[5,6,7,10],[["(\\d{5})","$1",["[2-5]|6[1-9]"]],["(\\d{3})(\\d{3,7})","$1 $2",["[68]"]],["(\\d{2})(\\d{5})","$1 $2",["7"]]]],"XK":["383","00","[23]\\d{7,8}|(?:4\\d\\d|[89]00)\\d{5}",[8,9],[["(\\d{3})(\\d{5})","$1 $2",["[89]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2-4]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[23]"],"0$1"]],"0"],"YE":["967","00","(?:1|7\\d)\\d{7}|[1-7]\\d{6}",[7,8,9],[["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-6]|7(?:[24-6]|8[0-7])"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["7"],"0$1"]],"0"],"YT":["262","00","(?:(?:(?:26|63)9|80\\d)\\d|9398)\\d{5}",[9],0,"0",0,0,0,0,"269|63|9398"],"ZA":["27","00","[1-79]\\d{8}|8\\d{4,9}",[5,6,7,8,9,10],[["(\\d{2})(\\d{3,4})","$1 $2",["8[1-4]"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,3})","$1 $2 $3",["8[1-4]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["860"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[1-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"],"0$1"]],"0"],"ZM":["260","00","800\\d{6}|(?:21|63|[79]\\d)\\d{7}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[28]"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["[79]"],"0$1"]],"0"],"ZW":["263","00","2(?:[0-57-9]\\d{6,8}|6[0-24-9]\\d{6,7})|[38]\\d{9}|[35-8]\\d{8}|[3-6]\\d{7}|[1-689]\\d{6}|[1-3569]\\d{5}|[1356]\\d{4}",[5,6,7,8,9,10],[["(\\d{3})(\\d{3,5})","$1 $2",["2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]"],"0$1"],["(\\d)(\\d{3})(\\d{2,4})","$1 $2 $3",["[49]"],"0$1"],["(\\d{3})(\\d{4})","$1 $2",["80"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2","2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)","2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)"],"0$1"],["(\\d{4})(\\d{6})","$1 $2",["8"],"0$1"],["(\\d{2})(\\d{3,5})","$1 $2",["1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["29[013-9]|39|54"],"0$1"],["(\\d{4})(\\d{3,5})","$1 $2",["(?:25|54)8","258|5483"],"0$1"]],"0"]},"nonGeographic":{"800":["800",0,"(?:00|[1-9]\\d)\\d{6}",[8],[["(\\d{4})(\\d{4})","$1 $2",["\\d"]]],0,0,0,0,0,0,[0,0,["(?:00|[1-9]\\d)\\d{6}"]]],"808":["808",0,"[1-9]\\d{7}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[1-9]"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,0,["[1-9]\\d{7}"]]],"870":["870",0,"7\\d{11}|[35-7]\\d{8}",[9,12],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[35-7]"]]],0,0,0,0,0,0,[0,["(?:[356]|774[45])\\d{8}|7[6-8]\\d{7}"]]],"878":["878",0,"10\\d{10}",[12],[["(\\d{2})(\\d{5})(\\d{5})","$1 $2 $3",["1"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,["10\\d{10}"]]],"881":["881",0,"[0-36-9]\\d{8}",[9],[["(\\d)(\\d{3})(\\d{5})","$1 $2 $3",["[0-36-9]"]]],0,0,0,0,0,0,[0,["[0-36-9]\\d{8}"]]],"882":["882",0,"[13]\\d{6}(?:\\d{2,5})?|[19]\\d{7}|(?:[25]\\d\\d|4)\\d{7}(?:\\d{2})?",[7,8,9,10,11,12],[["(\\d{2})(\\d{5})","$1 $2",["16|342"]],["(\\d{2})(\\d{6})","$1 $2",["49"]],["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["1[36]|9"]],["(\\d{2})(\\d{4})(\\d{3})","$1 $2 $3",["3[23]"]],["(\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["16"]],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["10|23|3(?:[15]|4[57])|4|51"]],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["34"]],["(\\d{2})(\\d{4,5})(\\d{5})","$1 $2 $3",["[1-35]"]]],0,0,0,0,0,0,[0,["342\\d{4}|(?:337|49)\\d{6}|(?:3(?:2|47|7\\d{3})|50\\d{3})\\d{7}",[7,8,9,10,12]],0,0,0,0,0,0,["1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\d{4}|6\\d{5,10})|(?:345\\d|9[89])\\d{6}|(?:10|2(?:3|85\\d)|3(?:[15]|[69]\\d\\d)|4[15-8]|51)\\d{8}"]]],"883":["883",0,"(?:[1-4]\\d|51)\\d{6,10}",[8,9,10,11,12],[["(\\d{3})(\\d{3})(\\d{2,8})","$1 $2 $3",["[14]|2[24-689]|3[02-689]|51[24-9]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["510"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["21"]],["(\\d{4})(\\d{4})(\\d{4})","$1 $2 $3",["51[13]"]],["(\\d{3})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["[235]"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,["(?:2(?:00\\d\\d|10)|(?:370[1-9]|51\\d0)\\d)\\d{7}|51(?:00\\d{5}|[24-9]0\\d{4,7})|(?:1[013-79]|2[24-689]|3[02-689]|4[0-4])0\\d{5,9}"]]],"888":["888",0,"\\d{11}",[11],[["(\\d{3})(\\d{3})(\\d{5})","$1 $2 $3"]],0,0,0,0,0,0,[0,0,0,0,0,0,["\\d{11}"]]],"979":["979",0,"[1359]\\d{8}",[9],[["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["[1359]"]]],0,0,0,0,0,0,[0,0,0,["[1359]\\d{8}"]]]}};

// Importing from a ".js" file is a workaround for Node.js "ES Modules"

function withMetadataArgument(func, _arguments) {
	var args = Array.prototype.slice.call(_arguments);
	args.push(metadata);
	return func.apply(this, args)
}

function _typeof$3(obj) { "@babel/helpers - typeof"; return _typeof$3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof$3(obj); }

function _defineProperties$c(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass$c(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$c(Constructor.prototype, protoProps); if (staticProps) _defineProperties$c(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck$c(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof$3(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

// https://stackoverflow.com/a/46971044/970769
// "Breaking changes in Typescript 2.1"
// "Extending built-ins like Error, Array, and Map may no longer work."
// "As a recommendation, you can manually adjust the prototype immediately after any super(...) calls."
// https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
var ParseError = /*#__PURE__*/function (_Error) {
  _inherits(ParseError, _Error);

  var _super = _createSuper(ParseError);

  function ParseError(code) {
    var _this;

    _classCallCheck$c(this, ParseError);

    _this = _super.call(this, code); // Set the prototype explicitly.
    // Any subclass of FooError will have to manually set the prototype as well.

    Object.setPrototypeOf(_assertThisInitialized(_this), ParseError.prototype);
    _this.name = _this.constructor.name;
    return _this;
  }

  return _createClass$c(ParseError);
}( /*#__PURE__*/_wrapNativeSuper(Error));

// The minimum length of the national significant number.
var MIN_LENGTH_FOR_NSN = 2; // The ITU says the maximum length should be 15,
// but one can find longer numbers in Germany.

var MAX_LENGTH_FOR_NSN = 17; // The maximum length of the country calling code.

var MAX_LENGTH_COUNTRY_CODE = 3; // Digits accepted in phone numbers
// (ascii, fullwidth, arabic-indic, and eastern arabic digits).

var VALID_DIGITS = "0-9\uFF10-\uFF19\u0660-\u0669\u06F0-\u06F9"; // `DASHES` will be right after the opening square bracket of the "character class"

var DASHES = "-\u2010-\u2015\u2212\u30FC\uFF0D";
var SLASHES = "\uFF0F/";
var DOTS = "\uFF0E.";
var WHITESPACE = " \xA0\xAD\u200B\u2060\u3000";
var BRACKETS = "()\uFF08\uFF09\uFF3B\uFF3D\\[\\]"; // export const OPENING_BRACKETS = '(\uFF08\uFF3B\\\['

var TILDES = "~\u2053\u223C\uFF5E"; // Regular expression of acceptable punctuation found in phone numbers. This
// excludes punctuation found as a leading character only. This consists of dash
// characters, white space characters, full stops, slashes, square brackets,
// parentheses and tildes. Full-width variants are also present.

var VALID_PUNCTUATION = "".concat(DASHES).concat(SLASHES).concat(DOTS).concat(WHITESPACE).concat(BRACKETS).concat(TILDES);
var PLUS_CHARS = "+\uFF0B"; // const LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+')

// Copy-pasted from:
// https://github.com/substack/semver-compare/blob/master/index.js
//
// Inlining this function because some users reported issues with
// importing from `semver-compare` in a browser with ES6 "native" modules.
//
// Fixes `semver-compare` not being able to compare versions with alpha/beta/etc "tags".
// https://github.com/catamphetamine/libphonenumber-js/issues/381
function compare (a, b) {
  a = a.split('-');
  b = b.split('-');
  var pa = a[0].split('.');
  var pb = b[0].split('.');

  for (var i = 0; i < 3; i++) {
    var na = Number(pa[i]);
    var nb = Number(pb[i]);
    if (na > nb) return 1;
    if (nb > na) return -1;
    if (!isNaN(na) && isNaN(nb)) return 1;
    if (isNaN(na) && !isNaN(nb)) return -1;
  }

  if (a[1] && b[1]) {
    return a[1] > b[1] ? 1 : a[1] < b[1] ? -1 : 0;
  }

  return !a[1] && b[1] ? 1 : a[1] && !b[1] ? -1 : 0;
}

function _typeof$2(obj) { "@babel/helpers - typeof"; return _typeof$2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof$2(obj); }

function _classCallCheck$b(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties$b(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass$b(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$b(Constructor.prototype, protoProps); if (staticProps) _defineProperties$b(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var V3 = '1.2.0'; // Moved `001` country code to "nonGeographic" section of metadata.

var V4 = '1.7.35';
var DEFAULT_EXT_PREFIX = ' ext. ';
var CALLING_CODE_REG_EXP = /^\d+$/;
/**
 * See: https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md
 */

var Metadata$1 = /*#__PURE__*/function () {
  function Metadata(metadata) {
    _classCallCheck$b(this, Metadata);

    validateMetadata(metadata);
    this.metadata = metadata;
    setVersion.call(this, metadata);
  }

  _createClass$b(Metadata, [{
    key: "getCountries",
    value: function getCountries() {
      return Object.keys(this.metadata.countries).filter(function (_) {
        return _ !== '001';
      });
    }
  }, {
    key: "getCountryMetadata",
    value: function getCountryMetadata(countryCode) {
      return this.metadata.countries[countryCode];
    }
  }, {
    key: "nonGeographic",
    value: function nonGeographic() {
      if (this.v1 || this.v2 || this.v3) return; // `nonGeographical` was a typo.
      // It's present in metadata generated from `1.7.35` to `1.7.37`.
      // The test case could be found by searching for "nonGeographical".

      return this.metadata.nonGeographic || this.metadata.nonGeographical;
    }
  }, {
    key: "hasCountry",
    value: function hasCountry(country) {
      return this.getCountryMetadata(country) !== undefined;
    }
  }, {
    key: "hasCallingCode",
    value: function hasCallingCode(callingCode) {
      if (this.getCountryCodesForCallingCode(callingCode)) {
        return true;
      }

      if (this.nonGeographic()) {
        if (this.nonGeographic()[callingCode]) {
          return true;
        }
      } else {
        // A hacky workaround for old custom metadata (generated before V4).
        var countryCodes = this.countryCallingCodes()[callingCode];

        if (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {
          return true;
        }
      }
    }
  }, {
    key: "isNonGeographicCallingCode",
    value: function isNonGeographicCallingCode(callingCode) {
      if (this.nonGeographic()) {
        return this.nonGeographic()[callingCode] ? true : false;
      } else {
        return this.getCountryCodesForCallingCode(callingCode) ? false : true;
      }
    } // Deprecated.

  }, {
    key: "country",
    value: function country(countryCode) {
      return this.selectNumberingPlan(countryCode);
    }
  }, {
    key: "selectNumberingPlan",
    value: function selectNumberingPlan(countryCode, callingCode) {
      // Supports just passing `callingCode` as the first argument.
      if (countryCode && CALLING_CODE_REG_EXP.test(countryCode)) {
        callingCode = countryCode;
        countryCode = null;
      }

      if (countryCode && countryCode !== '001') {
        if (!this.hasCountry(countryCode)) {
          throw new Error("Unknown country: ".concat(countryCode));
        }

        this.numberingPlan = new NumberingPlan(this.getCountryMetadata(countryCode), this);
      } else if (callingCode) {
        if (!this.hasCallingCode(callingCode)) {
          throw new Error("Unknown calling code: ".concat(callingCode));
        }

        this.numberingPlan = new NumberingPlan(this.getNumberingPlanMetadata(callingCode), this);
      } else {
        this.numberingPlan = undefined;
      }

      return this;
    }
  }, {
    key: "getCountryCodesForCallingCode",
    value: function getCountryCodesForCallingCode(callingCode) {
      var countryCodes = this.countryCallingCodes()[callingCode];

      if (countryCodes) {
        // Metadata before V4 included "non-geographic entity" calling codes
        // inside `country_calling_codes` (for example, `"881":["001"]`).
        // Now the semantics of `country_calling_codes` has changed:
        // it's specifically for "countries" now.
        // Older versions of custom metadata will simply skip parsing
        // "non-geographic entity" phone numbers with new versions
        // of this library: it's not considered a bug,
        // because such numbers are extremely rare,
        // and developers extremely rarely use custom metadata.
        if (countryCodes.length === 1 && countryCodes[0].length === 3) {
          return;
        }

        return countryCodes;
      }
    }
  }, {
    key: "getCountryCodeForCallingCode",
    value: function getCountryCodeForCallingCode(callingCode) {
      var countryCodes = this.getCountryCodesForCallingCode(callingCode);

      if (countryCodes) {
        return countryCodes[0];
      }
    }
  }, {
    key: "getNumberingPlanMetadata",
    value: function getNumberingPlanMetadata(callingCode) {
      var countryCode = this.getCountryCodeForCallingCode(callingCode);

      if (countryCode) {
        return this.getCountryMetadata(countryCode);
      }

      if (this.nonGeographic()) {
        var metadata = this.nonGeographic()[callingCode];

        if (metadata) {
          return metadata;
        }
      } else {
        // A hacky workaround for old custom metadata (generated before V4).
        // In that metadata, there was no concept of "non-geographic" metadata
        // so metadata for `001` country code was stored along with other countries.
        // The test case can be found by searching for:
        // "should work around `nonGeographic` metadata not existing".
        var countryCodes = this.countryCallingCodes()[callingCode];

        if (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {
          return this.metadata.countries['001'];
        }
      }
    } // Deprecated.

  }, {
    key: "countryCallingCode",
    value: function countryCallingCode() {
      return this.numberingPlan.callingCode();
    } // Deprecated.

  }, {
    key: "IDDPrefix",
    value: function IDDPrefix() {
      return this.numberingPlan.IDDPrefix();
    } // Deprecated.

  }, {
    key: "defaultIDDPrefix",
    value: function defaultIDDPrefix() {
      return this.numberingPlan.defaultIDDPrefix();
    } // Deprecated.

  }, {
    key: "nationalNumberPattern",
    value: function nationalNumberPattern() {
      return this.numberingPlan.nationalNumberPattern();
    } // Deprecated.

  }, {
    key: "possibleLengths",
    value: function possibleLengths() {
      return this.numberingPlan.possibleLengths();
    } // Deprecated.

  }, {
    key: "formats",
    value: function formats() {
      return this.numberingPlan.formats();
    } // Deprecated.

  }, {
    key: "nationalPrefixForParsing",
    value: function nationalPrefixForParsing() {
      return this.numberingPlan.nationalPrefixForParsing();
    } // Deprecated.

  }, {
    key: "nationalPrefixTransformRule",
    value: function nationalPrefixTransformRule() {
      return this.numberingPlan.nationalPrefixTransformRule();
    } // Deprecated.

  }, {
    key: "leadingDigits",
    value: function leadingDigits() {
      return this.numberingPlan.leadingDigits();
    } // Deprecated.

  }, {
    key: "hasTypes",
    value: function hasTypes() {
      return this.numberingPlan.hasTypes();
    } // Deprecated.

  }, {
    key: "type",
    value: function type(_type) {
      return this.numberingPlan.type(_type);
    } // Deprecated.

  }, {
    key: "ext",
    value: function ext() {
      return this.numberingPlan.ext();
    }
  }, {
    key: "countryCallingCodes",
    value: function countryCallingCodes() {
      if (this.v1) return this.metadata.country_phone_code_to_countries;
      return this.metadata.country_calling_codes;
    } // Deprecated.

  }, {
    key: "chooseCountryByCountryCallingCode",
    value: function chooseCountryByCountryCallingCode(callingCode) {
      return this.selectNumberingPlan(callingCode);
    }
  }, {
    key: "hasSelectedNumberingPlan",
    value: function hasSelectedNumberingPlan() {
      return this.numberingPlan !== undefined;
    }
  }]);

  return Metadata;
}();

var NumberingPlan = /*#__PURE__*/function () {
  function NumberingPlan(metadata, globalMetadataObject) {
    _classCallCheck$b(this, NumberingPlan);

    this.globalMetadataObject = globalMetadataObject;
    this.metadata = metadata;
    setVersion.call(this, globalMetadataObject.metadata);
  }

  _createClass$b(NumberingPlan, [{
    key: "callingCode",
    value: function callingCode() {
      return this.metadata[0];
    } // Formatting information for regions which share
    // a country calling code is contained by only one region
    // for performance reasons. For example, for NANPA region
    // ("North American Numbering Plan Administration",
    //  which includes USA, Canada, Cayman Islands, Bahamas, etc)
    // it will be contained in the metadata for `US`.

  }, {
    key: "getDefaultCountryMetadataForRegion",
    value: function getDefaultCountryMetadataForRegion() {
      return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode());
    } // Is always present.

  }, {
    key: "IDDPrefix",
    value: function IDDPrefix() {
      if (this.v1 || this.v2) return;
      return this.metadata[1];
    } // Is only present when a country supports multiple IDD prefixes.

  }, {
    key: "defaultIDDPrefix",
    value: function defaultIDDPrefix() {
      if (this.v1 || this.v2) return;
      return this.metadata[12];
    }
  }, {
    key: "nationalNumberPattern",
    value: function nationalNumberPattern() {
      if (this.v1 || this.v2) return this.metadata[1];
      return this.metadata[2];
    } // "possible length" data is always present in Google's metadata.

  }, {
    key: "possibleLengths",
    value: function possibleLengths() {
      if (this.v1) return;
      return this.metadata[this.v2 ? 2 : 3];
    }
  }, {
    key: "_getFormats",
    value: function _getFormats(metadata) {
      return metadata[this.v1 ? 2 : this.v2 ? 3 : 4];
    } // For countries of the same region (e.g. NANPA)
    // formats are all stored in the "main" country for that region.
    // E.g. "RU" and "KZ", "US" and "CA".

  }, {
    key: "formats",
    value: function formats() {
      var _this = this;

      var formats = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || [];
      return formats.map(function (_) {
        return new Format(_, _this);
      });
    }
  }, {
    key: "nationalPrefix",
    value: function nationalPrefix() {
      return this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5];
    }
  }, {
    key: "_getNationalPrefixFormattingRule",
    value: function _getNationalPrefixFormattingRule(metadata) {
      return metadata[this.v1 ? 4 : this.v2 ? 5 : 6];
    } // For countries of the same region (e.g. NANPA)
    // national prefix formatting rule is stored in the "main" country for that region.
    // E.g. "RU" and "KZ", "US" and "CA".

  }, {
    key: "nationalPrefixFormattingRule",
    value: function nationalPrefixFormattingRule() {
      return this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion());
    }
  }, {
    key: "_nationalPrefixForParsing",
    value: function _nationalPrefixForParsing() {
      return this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7];
    }
  }, {
    key: "nationalPrefixForParsing",
    value: function nationalPrefixForParsing() {
      // If `national_prefix_for_parsing` is not set explicitly,
      // then infer it from `national_prefix` (if any)
      return this._nationalPrefixForParsing() || this.nationalPrefix();
    }
  }, {
    key: "nationalPrefixTransformRule",
    value: function nationalPrefixTransformRule() {
      return this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8];
    }
  }, {
    key: "_getNationalPrefixIsOptionalWhenFormatting",
    value: function _getNationalPrefixIsOptionalWhenFormatting() {
      return !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9];
    } // For countries of the same region (e.g. NANPA)
    // "national prefix is optional when formatting" flag is
    // stored in the "main" country for that region.
    // E.g. "RU" and "KZ", "US" and "CA".

  }, {
    key: "nationalPrefixIsOptionalWhenFormattingInNationalFormat",
    value: function nationalPrefixIsOptionalWhenFormattingInNationalFormat() {
      return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) || this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion());
    }
  }, {
    key: "leadingDigits",
    value: function leadingDigits() {
      return this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10];
    }
  }, {
    key: "types",
    value: function types() {
      return this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11];
    }
  }, {
    key: "hasTypes",
    value: function hasTypes() {
      // Versions 1.2.0 - 1.2.4: can be `[]`.

      /* istanbul ignore next */
      if (this.types() && this.types().length === 0) {
        return false;
      } // Versions <= 1.2.4: can be `undefined`.
      // Version >= 1.2.5: can be `0`.


      return !!this.types();
    }
  }, {
    key: "type",
    value: function type(_type2) {
      if (this.hasTypes() && getType(this.types(), _type2)) {
        return new Type(getType(this.types(), _type2), this);
      }
    }
  }, {
    key: "ext",
    value: function ext() {
      if (this.v1 || this.v2) return DEFAULT_EXT_PREFIX;
      return this.metadata[13] || DEFAULT_EXT_PREFIX;
    }
  }]);

  return NumberingPlan;
}();

var Format = /*#__PURE__*/function () {
  function Format(format, metadata) {
    _classCallCheck$b(this, Format);

    this._format = format;
    this.metadata = metadata;
  }

  _createClass$b(Format, [{
    key: "pattern",
    value: function pattern() {
      return this._format[0];
    }
  }, {
    key: "format",
    value: function format() {
      return this._format[1];
    }
  }, {
    key: "leadingDigitsPatterns",
    value: function leadingDigitsPatterns() {
      return this._format[2] || [];
    }
  }, {
    key: "nationalPrefixFormattingRule",
    value: function nationalPrefixFormattingRule() {
      return this._format[3] || this.metadata.nationalPrefixFormattingRule();
    }
  }, {
    key: "nationalPrefixIsOptionalWhenFormattingInNationalFormat",
    value: function nationalPrefixIsOptionalWhenFormattingInNationalFormat() {
      return !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat();
    }
  }, {
    key: "nationalPrefixIsMandatoryWhenFormattingInNationalFormat",
    value: function nationalPrefixIsMandatoryWhenFormattingInNationalFormat() {
      // National prefix is omitted if there's no national prefix formatting rule
      // set for this country, or when the national prefix formatting rule
      // contains no national prefix itself, or when this rule is set but
      // national prefix is optional for this phone number format
      // (and it is not enforced explicitly)
      return this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat();
    } // Checks whether national prefix formatting rule contains national prefix.

  }, {
    key: "usesNationalPrefix",
    value: function usesNationalPrefix() {
      return this.nationalPrefixFormattingRule() && // Check that national prefix formatting rule is not a "dummy" one.
      !FIRST_GROUP_ONLY_PREFIX_PATTERN.test(this.nationalPrefixFormattingRule()) // In compressed metadata, `this.nationalPrefixFormattingRule()` is `0`
      // when `national_prefix_formatting_rule` is not present.
      // So, `true` or `false` are returned explicitly here, so that
      // `0` number isn't returned.
      ? true : false;
    }
  }, {
    key: "internationalFormat",
    value: function internationalFormat() {
      return this._format[5] || this.format();
    }
  }]);

  return Format;
}();
/**
 * A pattern that is used to determine if the national prefix formatting rule
 * has the first group only, i.e., does not start with the national prefix.
 * Note that the pattern explicitly allows for unbalanced parentheses.
 */


var FIRST_GROUP_ONLY_PREFIX_PATTERN = /^\(?\$1\)?$/;

var Type = /*#__PURE__*/function () {
  function Type(type, metadata) {
    _classCallCheck$b(this, Type);

    this.type = type;
    this.metadata = metadata;
  }

  _createClass$b(Type, [{
    key: "pattern",
    value: function pattern() {
      if (this.metadata.v1) return this.type;
      return this.type[0];
    }
  }, {
    key: "possibleLengths",
    value: function possibleLengths() {
      if (this.metadata.v1) return;
      return this.type[1] || this.metadata.possibleLengths();
    }
  }]);

  return Type;
}();

function getType(types, type) {
  switch (type) {
    case 'FIXED_LINE':
      return types[0];

    case 'MOBILE':
      return types[1];

    case 'TOLL_FREE':
      return types[2];

    case 'PREMIUM_RATE':
      return types[3];

    case 'PERSONAL_NUMBER':
      return types[4];

    case 'VOICEMAIL':
      return types[5];

    case 'UAN':
      return types[6];

    case 'PAGER':
      return types[7];

    case 'VOIP':
      return types[8];

    case 'SHARED_COST':
      return types[9];
  }
}

function validateMetadata(metadata) {
  if (!metadata) {
    throw new Error('[libphonenumber-js] `metadata` argument not passed. Check your arguments.');
  } // `country_phone_code_to_countries` was renamed to
  // `country_calling_codes` in `1.0.18`.


  if (!is_object(metadata) || !is_object(metadata.countries)) {
    throw new Error("[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got ".concat(is_object(metadata) ? 'an object of shape: { ' + Object.keys(metadata).join(', ') + ' }' : 'a ' + type_of(metadata) + ': ' + metadata, "."));
  }
} // Babel transforms `typeof` into some "branches"
// so istanbul will show this as "branch not covered".

/* istanbul ignore next */

var is_object = function is_object(_) {
  return _typeof$2(_) === 'object';
}; // Babel transforms `typeof` into some "branches"
// so istanbul will show this as "branch not covered".

/* istanbul ignore next */


var type_of = function type_of(_) {
  return _typeof$2(_);
};
/**
 * Returns "country calling code" for a country.
 * Throws an error if the country doesn't exist or isn't supported by this library.
 * @param  {string} country
 * @param  {object} metadata
 * @return {string}
 * @example
 * // Returns "44"
 * getCountryCallingCode("GB")
 */

function getCountryCallingCode(country, metadata) {
  metadata = new Metadata$1(metadata);

  if (metadata.hasCountry(country)) {
    return metadata.country(country).countryCallingCode();
  }

  throw new Error("Unknown country: ".concat(country));
}
function isSupportedCountry(country, metadata) {
  // metadata = new Metadata(metadata)
  // return metadata.hasCountry(country)
  return metadata.countries[country] !== undefined;
}

function setVersion(metadata) {
  var version = metadata.version;

  if (typeof version === 'number') {
    this.v1 = version === 1;
    this.v2 = version === 2;
    this.v3 = version === 3;
    this.v4 = version === 4;
  } else {
    if (!version) {
      this.v1 = true;
    } else if (compare(version, V3) === -1) {
      this.v2 = true;
    } else if (compare(version, V4) === -1) {
      this.v3 = true;
    } else {
      this.v4 = true;
    }
  }
} // const ISO_COUNTRY_CODE = /^[A-Z]{2}$/
// function isCountryCode(countryCode) {
// 	return ISO_COUNTRY_CODE.test(countryCodeOrCountryCallingCode)
// }

var RFC3966_EXTN_PREFIX = ';ext=';
/**
 * Helper method for constructing regular expressions for parsing. Creates
 * an expression that captures up to max_length digits.
 * @return {string} RegEx pattern to capture extension digits.
 */

var getExtensionDigitsPattern = function getExtensionDigitsPattern(maxLength) {
  return "([".concat(VALID_DIGITS, "]{1,").concat(maxLength, "})");
};
/**
 * Helper initialiser method to create the regular-expression pattern to match
 * extensions.
 * Copy-pasted from Google's `libphonenumber`:
 * https://github.com/google/libphonenumber/blob/55b2646ec9393f4d3d6661b9c82ef9e258e8b829/javascript/i18n/phonenumbers/phonenumberutil.js#L759-L766
 * @return {string} RegEx pattern to capture extensions.
 */


function createExtensionPattern(purpose) {
  // We cap the maximum length of an extension based on the ambiguity of the way
  // the extension is prefixed. As per ITU, the officially allowed length for
  // extensions is actually 40, but we don't support this since we haven't seen real
  // examples and this introduces many false interpretations as the extension labels
  // are not standardized.

  /** @type {string} */
  var extLimitAfterExplicitLabel = '20';
  /** @type {string} */

  var extLimitAfterLikelyLabel = '15';
  /** @type {string} */

  var extLimitAfterAmbiguousChar = '9';
  /** @type {string} */

  var extLimitWhenNotSure = '6';
  /** @type {string} */

  var possibleSeparatorsBetweenNumberAndExtLabel = "[ \xA0\\t,]*"; // Optional full stop (.) or colon, followed by zero or more spaces/tabs/commas.

  /** @type {string} */

  var possibleCharsAfterExtLabel = "[:\\.\uFF0E]?[ \xA0\\t,-]*";
  /** @type {string} */

  var optionalExtnSuffix = "#?"; // Here the extension is called out in more explicit way, i.e mentioning it obvious
  // patterns like "ext.".

  /** @type {string} */

  var explicitExtLabels = "(?:e?xt(?:ensi(?:o\u0301?|\xF3))?n?|\uFF45?\uFF58\uFF54\uFF4E?|\u0434\u043E\u0431|anexo)"; // One-character symbols that can be used to indicate an extension, and less
  // commonly used or more ambiguous extension labels.

  /** @type {string} */

  var ambiguousExtLabels = "(?:[x\uFF58#\uFF03~\uFF5E]|int|\uFF49\uFF4E\uFF54)"; // When extension is not separated clearly.

  /** @type {string} */

  var ambiguousSeparator = "[- ]+"; // This is the same as possibleSeparatorsBetweenNumberAndExtLabel, but not matching
  // comma as extension label may have it.

  /** @type {string} */

  var possibleSeparatorsNumberExtLabelNoComma = "[ \xA0\\t]*"; // ",," is commonly used for auto dialling the extension when connected. First
  // comma is matched through possibleSeparatorsBetweenNumberAndExtLabel, so we do
  // not repeat it here. Semi-colon works in Iphone and Android also to pop up a
  // button with the extension number following.

  /** @type {string} */

  var autoDiallingAndExtLabelsFound = "(?:,{2}|;)";
  /** @type {string} */

  var rfcExtn = RFC3966_EXTN_PREFIX + getExtensionDigitsPattern(extLimitAfterExplicitLabel);
  /** @type {string} */

  var explicitExtn = possibleSeparatorsBetweenNumberAndExtLabel + explicitExtLabels + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterExplicitLabel) + optionalExtnSuffix;
  /** @type {string} */

  var ambiguousExtn = possibleSeparatorsBetweenNumberAndExtLabel + ambiguousExtLabels + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterAmbiguousChar) + optionalExtnSuffix;
  /** @type {string} */

  var americanStyleExtnWithSuffix = ambiguousSeparator + getExtensionDigitsPattern(extLimitWhenNotSure) + "#";
  /** @type {string} */

  var autoDiallingExtn = possibleSeparatorsNumberExtLabelNoComma + autoDiallingAndExtLabelsFound + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterLikelyLabel) + optionalExtnSuffix;
  /** @type {string} */

  var onlyCommasExtn = possibleSeparatorsNumberExtLabelNoComma + "(?:,)+" + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterAmbiguousChar) + optionalExtnSuffix; // The first regular expression covers RFC 3966 format, where the extension is added
  // using ";ext=". The second more generic where extension is mentioned with explicit
  // labels like "ext:". In both the above cases we allow more numbers in extension than
  // any other extension labels. The third one captures when single character extension
  // labels or less commonly used labels are used. In such cases we capture fewer
  // extension digits in order to reduce the chance of falsely interpreting two
  // numbers beside each other as a number + extension. The fourth one covers the
  // special case of American numbers where the extension is written with a hash
  // at the end, such as "- 503#". The fifth one is exclusively for extension
  // autodialling formats which are used when dialling and in this case we accept longer
  // extensions. The last one is more liberal on the number of commas that acts as
  // extension labels, so we have a strict cap on the number of digits in such extensions.

  return rfcExtn + "|" + explicitExtn + "|" + ambiguousExtn + "|" + americanStyleExtnWithSuffix + "|" + autoDiallingExtn + "|" + onlyCommasExtn;
}

//  Checks we have at least three leading digits, and only valid punctuation,
//  alpha characters and digits in the phone number. Does not include extension
//  data. The symbol 'x' is allowed here as valid punctuation since it is often
//  used as a placeholder for carrier codes, for example in Brazilian phone
//  numbers. We also allow multiple '+' characters at the start.
//
//  Corresponds to the following:
//  [digits]{minLengthNsn}|
//  plus_sign*
//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*
//
//  The first reg-ex is to allow short numbers (two digits long) to be parsed if
//  they are entered as "15" etc, but only if there is no punctuation in them.
//  The second expression restricts the number of digits to three or more, but
//  then allows them to be in international form, and to have alpha-characters
//  and punctuation. We split up the two reg-exes here and combine them when
//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it
//  with ^ and append $ to each branch.
//
//  "Note VALID_PUNCTUATION starts with a -,
//   so must be the first in the range" (c) Google devs.
//  (wtf did they mean by saying that; probably nothing)
//

var MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}'; //
// And this is the second reg-exp:
// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)
//

var VALID_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){3,}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*'; // This regular expression isn't present in Google's `libphonenumber`
// and is only used to determine whether the phone number being input
// is too short for it to even consider it a "valid" number.
// This is just a way to differentiate between a really invalid phone
// number like "abcde" and a valid phone number that a user has just
// started inputting, like "+1" or "1": both these cases would be
// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this
// library can provide a more detailed error message — whether it's
// really "not a number", or is it just a start of a valid phone number.

var VALID_PHONE_NUMBER_START_REG_EXP = new RegExp('^' + '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){1,2}' + '$', 'i');
var VALID_PHONE_NUMBER_WITH_EXTENSION = VALID_PHONE_NUMBER + // Phone number extensions
'(?:' + createExtensionPattern() + ')?'; // The combined regular expression for valid phone numbers:
//

var VALID_PHONE_NUMBER_PATTERN = new RegExp( // Either a short two-digit-only phone number
'^' + MIN_LENGTH_PHONE_NUMBER_PATTERN + '$' + '|' + // Or a longer fully parsed phone number (min 3 characters)
'^' + VALID_PHONE_NUMBER_WITH_EXTENSION + '$', 'i'); // Checks to see if the string of characters could possibly be a phone number at
// all. At the moment, checks to see that the string begins with at least 2
// digits, ignoring any punctuation commonly found in phone numbers. This method
// does not require the number to be normalized in advance - but does assume
// that leading non-number symbols have been removed, such as by the method
// `extract_possible_number`.
//

function isViablePhoneNumber(number) {
  return number.length >= MIN_LENGTH_FOR_NSN && VALID_PHONE_NUMBER_PATTERN.test(number);
} // This is just a way to differentiate between a really invalid phone
// number like "abcde" and a valid phone number that a user has just
// started inputting, like "+1" or "1": both these cases would be
// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this
// library can provide a more detailed error message — whether it's
// really "not a number", or is it just a start of a valid phone number.

function isViablePhoneNumberStart(number) {
  return VALID_PHONE_NUMBER_START_REG_EXP.test(number);
}

// 1 or more valid digits, for use when parsing.

var EXTN_PATTERN = new RegExp('(?:' + createExtensionPattern() + ')$', 'i'); // Strips any extension (as in, the part of the number dialled after the call is
// connected, usually indicated with extn, ext, x or similar) from the end of
// the number, and returns it.

function extractExtension(number) {
  var start = number.search(EXTN_PATTERN);

  if (start < 0) {
    return {};
  } // If we find a potential extension, and the number preceding this is a viable
  // number, we assume it is an extension.


  var numberWithoutExtension = number.slice(0, start);
  var matches = number.match(EXTN_PATTERN);
  var i = 1;

  while (i < matches.length) {
    if (matches[i]) {
      return {
        number: numberWithoutExtension,
        ext: matches[i]
      };
    }

    i++;
  }
}

function _createForOfIteratorHelperLoose$9(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray$c(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray$c(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$c(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$c(o, minLen); }

function _arrayLikeToArray$c(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// These mappings map a character (key) to a specific digit that should
// replace it for normalization purposes. Non-European digits that
// may be used in phone numbers are mapped to a European equivalent.
//
// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.
//
var DIGITS = {
  '0': '0',
  '1': '1',
  '2': '2',
  '3': '3',
  '4': '4',
  '5': '5',
  '6': '6',
  '7': '7',
  '8': '8',
  '9': '9',
  "\uFF10": '0',
  // Fullwidth digit 0
  "\uFF11": '1',
  // Fullwidth digit 1
  "\uFF12": '2',
  // Fullwidth digit 2
  "\uFF13": '3',
  // Fullwidth digit 3
  "\uFF14": '4',
  // Fullwidth digit 4
  "\uFF15": '5',
  // Fullwidth digit 5
  "\uFF16": '6',
  // Fullwidth digit 6
  "\uFF17": '7',
  // Fullwidth digit 7
  "\uFF18": '8',
  // Fullwidth digit 8
  "\uFF19": '9',
  // Fullwidth digit 9
  "\u0660": '0',
  // Arabic-indic digit 0
  "\u0661": '1',
  // Arabic-indic digit 1
  "\u0662": '2',
  // Arabic-indic digit 2
  "\u0663": '3',
  // Arabic-indic digit 3
  "\u0664": '4',
  // Arabic-indic digit 4
  "\u0665": '5',
  // Arabic-indic digit 5
  "\u0666": '6',
  // Arabic-indic digit 6
  "\u0667": '7',
  // Arabic-indic digit 7
  "\u0668": '8',
  // Arabic-indic digit 8
  "\u0669": '9',
  // Arabic-indic digit 9
  "\u06F0": '0',
  // Eastern-Arabic digit 0
  "\u06F1": '1',
  // Eastern-Arabic digit 1
  "\u06F2": '2',
  // Eastern-Arabic digit 2
  "\u06F3": '3',
  // Eastern-Arabic digit 3
  "\u06F4": '4',
  // Eastern-Arabic digit 4
  "\u06F5": '5',
  // Eastern-Arabic digit 5
  "\u06F6": '6',
  // Eastern-Arabic digit 6
  "\u06F7": '7',
  // Eastern-Arabic digit 7
  "\u06F8": '8',
  // Eastern-Arabic digit 8
  "\u06F9": '9' // Eastern-Arabic digit 9

};
function parseDigit(character) {
  return DIGITS[character];
}
/**
 * Parses phone number digits from a string.
 * Drops all punctuation leaving only digits.
 * Also converts wide-ascii and arabic-indic numerals to conventional numerals.
 * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.
 * @param  {string} string
 * @return {string}
 * @example
 * ```js
 * parseDigits('8 (800) 555')
 * // Outputs '8800555'.
 * ```
 */

function parseDigits(string) {
  var result = ''; // Using `.split('')` here instead of normal `for ... of`
  // because the importing application doesn't neccessarily include an ES6 polyfill.
  // The `.split('')` approach discards "exotic" UTF-8 characters
  // (the ones consisting of four bytes) but digits
  // (including non-European ones) don't fall into that range
  // so such "exotic" characters would be discarded anyway.

  for (var _iterator = _createForOfIteratorHelperLoose$9(string.split('')), _step; !(_step = _iterator()).done;) {
    var character = _step.value;
    var digit = parseDigit(character);

    if (digit) {
      result += digit;
    }
  }

  return result;
}

function _createForOfIteratorHelperLoose$8(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray$b(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray$b(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$b(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$b(o, minLen); }

function _arrayLikeToArray$b(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
/**
 * Parses phone number characters from a string.
 * Drops all punctuation leaving only digits and the leading `+` sign (if any).
 * Also converts wide-ascii and arabic-indic numerals to conventional numerals.
 * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.
 * @param  {string} string
 * @return {string}
 * @example
 * ```js
 * // Outputs '8800555'.
 * parseIncompletePhoneNumber('8 (800) 555')
 * // Outputs '+7800555'.
 * parseIncompletePhoneNumber('+7 800 555')
 * ```
 */

function parseIncompletePhoneNumber(string) {
  var result = ''; // Using `.split('')` here instead of normal `for ... of`
  // because the importing application doesn't neccessarily include an ES6 polyfill.
  // The `.split('')` approach discards "exotic" UTF-8 characters
  // (the ones consisting of four bytes) but digits
  // (including non-European ones) don't fall into that range
  // so such "exotic" characters would be discarded anyway.

  for (var _iterator = _createForOfIteratorHelperLoose$8(string.split('')), _step; !(_step = _iterator()).done;) {
    var character = _step.value;
    result += parsePhoneNumberCharacter(character, result) || '';
  }

  return result;
}
/**
 * Parses next character while parsing phone number digits (including a `+`)
 * from text: discards everything except `+` and digits, and `+` is only allowed
 * at the start of a phone number.
 * For example, is used in `react-phone-number-input` where it uses
 * [`input-format`](https://gitlab.com/catamphetamine/input-format).
 * @param  {string} character - Yet another character from raw input string.
 * @param  {string?} prevParsedCharacters - Previous parsed characters.
 * @param  {object} meta - Optional custom use-case-specific metadata.
 * @return {string?} The parsed character.
 */

function parsePhoneNumberCharacter(character, prevParsedCharacters) {
  // Only allow a leading `+`.
  if (character === '+') {
    // If this `+` is not the first parsed character
    // then discard it.
    if (prevParsedCharacters) {
      return;
    }

    return '+';
  } // Allow digits.


  return parseDigit(character);
}

function _createForOfIteratorHelperLoose$7(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray$a(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray$a(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$a(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$a(o, minLen); }

function _arrayLikeToArray$a(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/**
 * Merges two arrays.
 * @param  {*} a
 * @param  {*} b
 * @return {*}
 */
function mergeArrays(a, b) {
  var merged = a.slice();

  for (var _iterator = _createForOfIteratorHelperLoose$7(b), _step; !(_step = _iterator()).done;) {
    var element = _step.value;

    if (a.indexOf(element) < 0) {
      merged.push(element);
    }
  }

  return merged.sort(function (a, b) {
    return a - b;
  }); // ES6 version, requires Set polyfill.
  // let merged = new Set(a)
  // for (const element of b) {
  // 	merged.add(i)
  // }
  // return Array.from(merged).sort((a, b) => a - b)
}

function checkNumberLength(nationalNumber, metadata) {
  return checkNumberLengthForType(nationalNumber, undefined, metadata);
} // Checks whether a number is possible for the country based on its length.
// Should only be called for the "new" metadata which has "possible lengths".

function checkNumberLengthForType(nationalNumber, type, metadata) {
  var type_info = metadata.type(type); // There should always be "<possiblePengths/>" set for every type element.
  // This is declared in the XML schema.
  // For size efficiency, where a sub-description (e.g. fixed-line)
  // has the same "<possiblePengths/>" as the "general description", this is missing,
  // so we fall back to the "general description". Where no numbers of the type
  // exist at all, there is one possible length (-1) which is guaranteed
  // not to match the length of any real phone number.

  var possible_lengths = type_info && type_info.possibleLengths() || metadata.possibleLengths(); // let local_lengths    = type_info && type.possibleLengthsLocal() || metadata.possibleLengthsLocal()
  // Metadata before version `1.0.18` didn't contain `possible_lengths`.

  if (!possible_lengths) {
    return 'IS_POSSIBLE';
  }

  if (type === 'FIXED_LINE_OR_MOBILE') {
    // No such country in metadata.

    /* istanbul ignore next */
    if (!metadata.type('FIXED_LINE')) {
      // The rare case has been encountered where no fixedLine data is available
      // (true for some non-geographic entities), so we just check mobile.
      return checkNumberLengthForType(nationalNumber, 'MOBILE', metadata);
    }

    var mobile_type = metadata.type('MOBILE');

    if (mobile_type) {
      // Merge the mobile data in if there was any. "Concat" creates a new
      // array, it doesn't edit possible_lengths in place, so we don't need a copy.
      // Note that when adding the possible lengths from mobile, we have
      // to again check they aren't empty since if they are this indicates
      // they are the same as the general desc and should be obtained from there.
      possible_lengths = mergeArrays(possible_lengths, mobile_type.possibleLengths()); // The current list is sorted; we need to merge in the new list and
      // re-sort (duplicates are okay). Sorting isn't so expensive because
      // the lists are very small.
      // if (local_lengths) {
      // 	local_lengths = mergeArrays(local_lengths, mobile_type.possibleLengthsLocal())
      // } else {
      // 	local_lengths = mobile_type.possibleLengthsLocal()
      // }
    }
  } // If the type doesn't exist then return 'INVALID_LENGTH'.
  else if (type && !type_info) {
    return 'INVALID_LENGTH';
  }

  var actual_length = nationalNumber.length; // In `libphonenumber-js` all "local-only" formats are dropped for simplicity.
  // // This is safe because there is never an overlap beween the possible lengths
  // // and the local-only lengths; this is checked at build time.
  // if (local_lengths && local_lengths.indexOf(nationalNumber.length) >= 0)
  // {
  // 	return 'IS_POSSIBLE_LOCAL_ONLY'
  // }

  var minimum_length = possible_lengths[0];

  if (minimum_length === actual_length) {
    return 'IS_POSSIBLE';
  }

  if (minimum_length > actual_length) {
    return 'TOO_SHORT';
  }

  if (possible_lengths[possible_lengths.length - 1] < actual_length) {
    return 'TOO_LONG';
  } // We skip the first element since we've already checked it.


  return possible_lengths.indexOf(actual_length, 1) >= 0 ? 'IS_POSSIBLE' : 'INVALID_LENGTH';
}

/**
 * Checks if a phone number is "possible" (basically just checks its length).
 *
 * isPossible(phoneNumberInstance, { ..., v2: true }, metadata)
 *
 * isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)
 * isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)
 *
 * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.
 * @param  {object} [options]
 * @param  {object} metadata
 * @return {string}
 */

function isPossiblePhoneNumber(input, options, metadata) {
  /* istanbul ignore if */
  if (options === undefined) {
    options = {};
  }

  metadata = new Metadata$1(metadata);

  if (options.v2) {
    if (!input.countryCallingCode) {
      throw new Error('Invalid phone number object passed');
    }

    metadata.selectNumberingPlan(input.countryCallingCode);
  } else {
    if (!input.phone) {
      return false;
    }

    if (input.country) {
      if (!metadata.hasCountry(input.country)) {
        throw new Error("Unknown country: ".concat(input.country));
      }

      metadata.country(input.country);
    } else {
      if (!input.countryCallingCode) {
        throw new Error('Invalid phone number object passed');
      }

      metadata.selectNumberingPlan(input.countryCallingCode);
    }
  } // Old metadata (< 1.0.18) had no "possible length" data.


  if (metadata.possibleLengths()) {
    return isPossibleNumber(input.phone || input.nationalNumber, metadata);
  } else {
    // There was a bug between `1.7.35` and `1.7.37` where "possible_lengths"
    // were missing for "non-geographical" numbering plans.
    // Just assume the number is possible in such cases:
    // it's unlikely that anyone generated their custom metadata
    // in that short period of time (one day).
    // This code can be removed in some future major version update.
    if (input.countryCallingCode && metadata.isNonGeographicCallingCode(input.countryCallingCode)) {
      // "Non-geographic entities" did't have `possibleLengths`
      // due to a bug in metadata generation process.
      return true;
    } else {
      throw new Error('Missing "possibleLengths" in metadata. Perhaps the metadata has been generated before v1.0.18.');
    }
  }
}
function isPossibleNumber(nationalNumber, metadata) {
  //, isInternational) {
  switch (checkNumberLength(nationalNumber, metadata)) {
    case 'IS_POSSIBLE':
      return true;
    // This library ignores "local-only" phone numbers (for simplicity).
    // See the readme for more info on what are "local-only" phone numbers.
    // case 'IS_POSSIBLE_LOCAL_ONLY':
    // 	return !isInternational

    default:
      return false;
  }
}

/**
 * Checks whether the entire input sequence can be matched
 * against the regular expression.
 * @return {boolean}
 */
function matchesEntirely(text, regular_expression) {
  // If assigning the `''` default value is moved to the arguments above,
  // code coverage would decrease for some weird reason.
  text = text || '';
  return new RegExp('^(?:' + regular_expression + ')$').test(text);
}

function _createForOfIteratorHelperLoose$6(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray$9(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray$9(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$9(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$9(o, minLen); }

function _arrayLikeToArray$9(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
var NON_FIXED_LINE_PHONE_TYPES = ['MOBILE', 'PREMIUM_RATE', 'TOLL_FREE', 'SHARED_COST', 'VOIP', 'PERSONAL_NUMBER', 'PAGER', 'UAN', 'VOICEMAIL']; // Finds out national phone number type (fixed line, mobile, etc)

function getNumberType(input, options, metadata) {
  // If assigning the `{}` default value is moved to the arguments above,
  // code coverage would decrease for some weird reason.
  options = options || {}; // When `parse()` returned `{}`
  // meaning that the phone number is not a valid one.

  if (!input.country) {
    return;
  }

  metadata = new Metadata$1(metadata);
  metadata.selectNumberingPlan(input.country, input.countryCallingCode);
  var nationalNumber = options.v2 ? input.nationalNumber : input.phone; // The following is copy-pasted from the original function:
  // https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835
  // Is this national number even valid for this country

  if (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())) {
    return;
  } // Is it fixed line number


  if (isNumberTypeEqualTo(nationalNumber, 'FIXED_LINE', metadata)) {
    // Because duplicate regular expressions are removed
    // to reduce metadata size, if "mobile" pattern is ""
    // then it means it was removed due to being a duplicate of the fixed-line pattern.
    //
    if (metadata.type('MOBILE') && metadata.type('MOBILE').pattern() === '') {
      return 'FIXED_LINE_OR_MOBILE';
    } // `MOBILE` type pattern isn't included if it matched `FIXED_LINE` one.
    // For example, for "US" country.
    // Old metadata (< `1.0.18`) had a specific "types" data structure
    // that happened to be `undefined` for `MOBILE` in that case.
    // Newer metadata (>= `1.0.18`) has another data structure that is
    // not `undefined` for `MOBILE` in that case (it's just an empty array).
    // So this `if` is just for backwards compatibility with old metadata.


    if (!metadata.type('MOBILE')) {
      return 'FIXED_LINE_OR_MOBILE';
    } // Check if the number happens to qualify as both fixed line and mobile.
    // (no such country in the minimal metadata set)

    /* istanbul ignore if */


    if (isNumberTypeEqualTo(nationalNumber, 'MOBILE', metadata)) {
      return 'FIXED_LINE_OR_MOBILE';
    }

    return 'FIXED_LINE';
  }

  for (var _iterator = _createForOfIteratorHelperLoose$6(NON_FIXED_LINE_PHONE_TYPES), _step; !(_step = _iterator()).done;) {
    var type = _step.value;

    if (isNumberTypeEqualTo(nationalNumber, type, metadata)) {
      return type;
    }
  }
}
function isNumberTypeEqualTo(nationalNumber, type, metadata) {
  type = metadata.type(type);

  if (!type || !type.pattern()) {
    return false;
  } // Check if any possible number lengths are present;
  // if so, we use them to avoid checking
  // the validation pattern if they don't match.
  // If they are absent, this means they match
  // the general description, which we have
  // already checked before a specific number type.


  if (type.possibleLengths() && type.possibleLengths().indexOf(nationalNumber.length) < 0) {
    return false;
  }

  return matchesEntirely(nationalNumber, type.pattern());
}

/**
 * Checks if a given phone number is valid.
 *
 * isValid(phoneNumberInstance, { ..., v2: true }, metadata)
 *
 * isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)
 * isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)
 *
 * If the `number` is a string, it will be parsed to an object,
 * but only if it contains only valid phone number characters (including punctuation).
 * If the `number` is an object, it is used as is.
 *
 * The optional `defaultCountry` argument is the default country.
 * I.e. it does not restrict to just that country,
 * e.g. in those cases where several countries share
 * the same phone numbering rules (NANPA, Britain, etc).
 * For example, even though the number `07624 369230`
 * belongs to the Isle of Man ("IM" country code)
 * calling `isValidNumber('07624369230', 'GB', metadata)`
 * still returns `true` because the country is not restricted to `GB`,
 * it's just that `GB` is the default one for the phone numbering rules.
 * For restricting the country see `isValidNumberForRegion()`
 * though restricting a country might not be a good idea.
 * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion
 *
 * Examples:
 *
 * ```js
 * isValidNumber('+78005553535', metadata)
 * isValidNumber('8005553535', 'RU', metadata)
 * isValidNumber('88005553535', 'RU', metadata)
 * isValidNumber({ phone: '8005553535', country: 'RU' }, metadata)
 * ```
 */

function isValidNumber(input, options, metadata) {
  // If assigning the `{}` default value is moved to the arguments above,
  // code coverage would decrease for some weird reason.
  options = options || {};
  metadata = new Metadata$1(metadata);
  /**
   * Checks if a phone number is "possible" (basically just checks its length).
   *
   * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.
   * @param  {object} [options]
   * @param  {object} metadata
   * @return {string}
   */

  metadata.selectNumberingPlan(input.country, input.countryCallingCode); // By default, countries only have type regexps when it's required for
  // distinguishing different countries having the same `countryCallingCode`.

  if (metadata.hasTypes()) {
    return getNumberType(input, options, metadata.metadata) !== undefined;
  } // If there are no type regexps for this country in metadata then use
  // `nationalNumberPattern` as a "better than nothing" replacement.


  var nationalNumber = options.v2 ? input.nationalNumber : input.phone;
  return matchesEntirely(nationalNumber, metadata.nationalNumberPattern());
}

/**
 * Returns a list of countries that the phone number could potentially belong to.
 * @param  {string} callingCode — Calling code.
 * @param  {string} nationalNumber — National (significant) number.
 * @param  {object} metadata — Metadata.
 * @return {string[]} A list of possible countries.
 */

function getPossibleCountriesForNumber(callingCode, nationalNumber, metadata) {
  var _metadata = new Metadata$1(metadata);

  var possibleCountries = _metadata.getCountryCodesForCallingCode(callingCode);

  if (!possibleCountries) {
    return [];
  }

  return possibleCountries.filter(function (country) {
    return couldNationalNumberBelongToCountry(nationalNumber, country, metadata);
  });
}

function couldNationalNumberBelongToCountry(nationalNumber, country, metadata) {
  var _metadata = new Metadata$1(metadata);

  _metadata.selectNumberingPlan(country);

  if (_metadata.numberingPlan.possibleLengths().indexOf(nationalNumber.length) >= 0) {
    return true;
  }

  return false;
}

//
// E.g. "(999) 111-22-33" -> "999 111 22 33"
//
// For some reason Google's metadata contains `<intlFormat/>`s with brackets and dashes.
// Meanwhile, there's no single opinion about using punctuation in international phone numbers.
//
// For example, Google's `<intlFormat/>` for USA is `+1 213-373-4253`.
// And here's a quote from WikiPedia's "North American Numbering Plan" page:
// https://en.wikipedia.org/wiki/North_American_Numbering_Plan
//
// "The country calling code for all countries participating in the NANP is 1.
// In international format, an NANP number should be listed as +1 301 555 01 00,
// where 301 is an area code (Maryland)."
//
// I personally prefer the international format without any punctuation.
// For example, brackets are remnants of the old age, meaning that the
// phone number part in brackets (so called "area code") can be omitted
// if dialing within the same "area".
// And hyphens were clearly introduced for splitting local numbers into memorizable groups.
// For example, remembering "5553535" is difficult but "555-35-35" is much simpler.
// Imagine a man taking a bus from home to work and seeing an ad with a phone number.
// He has a couple of seconds to memorize that number until it passes by.
// If it were spaces instead of hyphens the man wouldn't necessarily get it,
// but with hyphens instead of spaces the grouping is more explicit.
// I personally think that hyphens introduce visual clutter,
// so I prefer replacing them with spaces in international numbers.
// In the modern age all output is done on displays where spaces are clearly distinguishable
// so hyphens can be safely replaced with spaces without losing any legibility.
//

function applyInternationalSeparatorStyle(formattedNumber) {
  return formattedNumber.replace(new RegExp("[".concat(VALID_PUNCTUATION, "]+"), 'g'), ' ').trim();
}

// first group is not used in the national pattern (e.g. Argentina) so the $1
// group does not match correctly. Therefore, we use `\d`, so that the first
// group actually used in the pattern will be matched.

var FIRST_GROUP_PATTERN = /(\$\d)/;
function formatNationalNumberUsingFormat(number, format, _ref) {
  var useInternationalFormat = _ref.useInternationalFormat,
      withNationalPrefix = _ref.withNationalPrefix;
      _ref.carrierCode;
      _ref.metadata;
  var formattedNumber = number.replace(new RegExp(format.pattern()), useInternationalFormat ? format.internationalFormat() : // This library doesn't use `domestic_carrier_code_formatting_rule`,
  // because that one is only used when formatting phone numbers
  // for dialing from a mobile phone, and this is not a dialing library.
  // carrierCode && format.domesticCarrierCodeFormattingRule()
  // 	// First, replace the $CC in the formatting rule with the desired carrier code.
  // 	// Then, replace the $FG in the formatting rule with the first group
  // 	// and the carrier code combined in the appropriate way.
  // 	? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))
  // 	: (
  // 		withNationalPrefix && format.nationalPrefixFormattingRule()
  // 			? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())
  // 			: format.format()
  // 	)
  withNationalPrefix && format.nationalPrefixFormattingRule() ? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule()) : format.format());

  if (useInternationalFormat) {
    return applyInternationalSeparatorStyle(formattedNumber);
  }

  return formattedNumber;
}

/**
 * Pattern that makes it easy to distinguish whether a region has a single
 * international dialing prefix or not. If a region has a single international
 * prefix (e.g. 011 in USA), it will be represented as a string that contains
 * a sequence of ASCII digits, and possibly a tilde, which signals waiting for
 * the tone. If there are multiple available international prefixes in a
 * region, they will be represented as a regex string that always contains one
 * or more characters that are not ASCII digits or a tilde.
 */

var SINGLE_IDD_PREFIX_REG_EXP = /^[\d]+(?:[~\u2053\u223C\uFF5E][\d]+)?$/; // For regions that have multiple IDD prefixes
// a preferred IDD prefix is returned.

function getIddPrefix(country, callingCode, metadata) {
  var countryMetadata = new Metadata$1(metadata);
  countryMetadata.selectNumberingPlan(country, callingCode);

  if (countryMetadata.defaultIDDPrefix()) {
    return countryMetadata.defaultIDDPrefix();
  }

  if (SINGLE_IDD_PREFIX_REG_EXP.test(countryMetadata.IDDPrefix())) {
    return countryMetadata.IDDPrefix();
  }
}

/**
 * @param  {object} - `{ ?number, ?extension }`.
 * @return {string} Phone URI (RFC 3966).
 */

function formatRFC3966(_ref) {
  var number = _ref.number,
      ext = _ref.ext;

  if (!number) {
    return '';
  }

  if (number[0] !== '+') {
    throw new Error("\"formatRFC3966()\" expects \"number\" to be in E.164 format.");
  }

  return "tel:".concat(number).concat(ext ? ';ext=' + ext : '');
}

function _createForOfIteratorHelperLoose$5(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray$8(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray$8(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$8(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$8(o, minLen); }

function _arrayLikeToArray$8(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys$5(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$5(Object(source), !0).forEach(function (key) { _defineProperty$4(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$5(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty$4(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
var DEFAULT_OPTIONS = {
  formatExtension: function formatExtension(formattedNumber, extension, metadata) {
    return "".concat(formattedNumber).concat(metadata.ext()).concat(extension);
  }
};
/**
 * Formats a phone number.
 *
 * format(phoneNumberInstance, 'INTERNATIONAL', { ..., v2: true }, metadata)
 * format(phoneNumberInstance, 'NATIONAL', { ..., v2: true }, metadata)
 *
 * format({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL', { ... }, metadata)
 * format({ phone: '8005553535', country: 'RU' }, 'NATIONAL', undefined, metadata)
 *
 * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.
 * @param  {string} format
 * @param  {object} [options]
 * @param  {object} metadata
 * @return {string}
 */

function formatNumber(input, format, options, metadata) {
  // Apply default options.
  if (options) {
    options = _objectSpread$4(_objectSpread$4({}, DEFAULT_OPTIONS), options);
  } else {
    options = DEFAULT_OPTIONS;
  }

  metadata = new Metadata$1(metadata);

  if (input.country && input.country !== '001') {
    // Validate `input.country`.
    if (!metadata.hasCountry(input.country)) {
      throw new Error("Unknown country: ".concat(input.country));
    }

    metadata.country(input.country);
  } else if (input.countryCallingCode) {
    metadata.selectNumberingPlan(input.countryCallingCode);
  } else return input.phone || '';

  var countryCallingCode = metadata.countryCallingCode();
  var nationalNumber = options.v2 ? input.nationalNumber : input.phone; // This variable should have been declared inside `case`s
  // but Babel has a bug and it says "duplicate variable declaration".

  var number;

  switch (format) {
    case 'NATIONAL':
      // Legacy argument support.
      // (`{ country: ..., phone: '' }`)
      if (!nationalNumber) {
        return '';
      }

      number = formatNationalNumber$1(nationalNumber, input.carrierCode, 'NATIONAL', metadata, options);
      return addExtension(number, input.ext, metadata, options.formatExtension);

    case 'INTERNATIONAL':
      // Legacy argument support.
      // (`{ country: ..., phone: '' }`)
      if (!nationalNumber) {
        return "+".concat(countryCallingCode);
      }

      number = formatNationalNumber$1(nationalNumber, null, 'INTERNATIONAL', metadata, options);
      number = "+".concat(countryCallingCode, " ").concat(number);
      return addExtension(number, input.ext, metadata, options.formatExtension);

    case 'E.164':
      // `E.164` doesn't define "phone number extensions".
      return "+".concat(countryCallingCode).concat(nationalNumber);

    case 'RFC3966':
      return formatRFC3966({
        number: "+".concat(countryCallingCode).concat(nationalNumber),
        ext: input.ext
      });
    // For reference, here's Google's IDD formatter:
    // https://github.com/google/libphonenumber/blob/32719cf74e68796788d1ca45abc85dcdc63ba5b9/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L1546
    // Not saying that this IDD formatter replicates it 1:1, but it seems to work.
    // Who would even need to format phone numbers in IDD format anyway?

    case 'IDD':
      if (!options.fromCountry) {
        return; // throw new Error('`fromCountry` option not passed for IDD-prefixed formatting.')
      }

      var formattedNumber = formatIDD(nationalNumber, input.carrierCode, countryCallingCode, options.fromCountry, metadata);
      return addExtension(formattedNumber, input.ext, metadata, options.formatExtension);

    default:
      throw new Error("Unknown \"format\" argument passed to \"formatNumber()\": \"".concat(format, "\""));
  }
}

function formatNationalNumber$1(number, carrierCode, formatAs, metadata, options) {
  var format = chooseFormatForNumber(metadata.formats(), number);

  if (!format) {
    return number;
  }

  return formatNationalNumberUsingFormat(number, format, {
    useInternationalFormat: formatAs === 'INTERNATIONAL',
    withNationalPrefix: format.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && options && options.nationalPrefix === false ? false : true,
    carrierCode: carrierCode,
    metadata: metadata
  });
}

function chooseFormatForNumber(availableFormats, nationalNnumber) {
  for (var _iterator = _createForOfIteratorHelperLoose$5(availableFormats), _step; !(_step = _iterator()).done;) {
    var format = _step.value;

    // Validate leading digits.
    // The test case for "else path" could be found by searching for
    // "format.leadingDigitsPatterns().length === 0".
    if (format.leadingDigitsPatterns().length > 0) {
      // The last leading_digits_pattern is used here, as it is the most detailed
      var lastLeadingDigitsPattern = format.leadingDigitsPatterns()[format.leadingDigitsPatterns().length - 1]; // If leading digits don't match then move on to the next phone number format

      if (nationalNnumber.search(lastLeadingDigitsPattern) !== 0) {
        continue;
      }
    } // Check that the national number matches the phone number format regular expression


    if (matchesEntirely(nationalNnumber, format.pattern())) {
      return format;
    }
  }
}

function addExtension(formattedNumber, ext, metadata, formatExtension) {
  return ext ? formatExtension(formattedNumber, ext, metadata) : formattedNumber;
}

function formatIDD(nationalNumber, carrierCode, countryCallingCode, fromCountry, metadata) {
  var fromCountryCallingCode = getCountryCallingCode(fromCountry, metadata.metadata); // When calling within the same country calling code.

  if (fromCountryCallingCode === countryCallingCode) {
    var formattedNumber = formatNationalNumber$1(nationalNumber, carrierCode, 'NATIONAL', metadata); // For NANPA regions, return the national format for these regions
    // but prefix it with the country calling code.

    if (countryCallingCode === '1') {
      return countryCallingCode + ' ' + formattedNumber;
    } // If regions share a country calling code, the country calling code need
    // not be dialled. This also applies when dialling within a region, so this
    // if clause covers both these cases. Technically this is the case for
    // dialling from La Reunion to other overseas departments of France (French
    // Guiana, Martinique, Guadeloupe), but not vice versa - so we don't cover
    // this edge case for now and for those cases return the version including
    // country calling code. Details here:
    // http://www.petitfute.com/voyage/225-info-pratiques-reunion
    //


    return formattedNumber;
  }

  var iddPrefix = getIddPrefix(fromCountry, undefined, metadata.metadata);

  if (iddPrefix) {
    return "".concat(iddPrefix, " ").concat(countryCallingCode, " ").concat(formatNationalNumber$1(nationalNumber, null, 'INTERNATIONAL', metadata));
  }
}

function ownKeys$4(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$4(Object(source), !0).forEach(function (key) { _defineProperty$3(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$4(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty$3(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck$a(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties$a(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass$a(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$a(Constructor.prototype, protoProps); if (staticProps) _defineProperties$a(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var PhoneNumber = /*#__PURE__*/function () {
  /**
   * @param  {string} countryOrCountryCallingCode
   * @param  {string} nationalNumber
   * @param  {object} metadata — Metadata JSON
   * @return {PhoneNumber}
   */
  function PhoneNumber(countryOrCountryCallingCode, nationalNumber, metadata) {
    _classCallCheck$a(this, PhoneNumber);

    if (!countryOrCountryCallingCode) {
      throw new TypeError('`country` or `countryCallingCode` not passed');
    }

    if (!nationalNumber) {
      throw new TypeError('`nationalNumber` not passed');
    }

    if (!metadata) {
      throw new TypeError('`metadata` not passed');
    }

    var _getCountryAndCountry = getCountryAndCountryCallingCode(countryOrCountryCallingCode, metadata),
        country = _getCountryAndCountry.country,
        countryCallingCode = _getCountryAndCountry.countryCallingCode;

    this.country = country;
    this.countryCallingCode = countryCallingCode;
    this.nationalNumber = nationalNumber;
    this.number = '+' + this.countryCallingCode + this.nationalNumber; // Exclude `metadata` property output from `PhoneNumber.toString()`
    // so that it doesn't clutter the console output of Node.js.
    // Previously, when Node.js did `console.log(new PhoneNumber(...))`,
    // it would output the whole internal structure of the `metadata` object.

    this.getMetadata = function () {
      return metadata;
    };
  }

  _createClass$a(PhoneNumber, [{
    key: "setExt",
    value: function setExt(ext) {
      this.ext = ext;
    }
  }, {
    key: "getPossibleCountries",
    value: function getPossibleCountries() {
      if (this.country) {
        return [this.country];
      }

      return getPossibleCountriesForNumber(this.countryCallingCode, this.nationalNumber, this.getMetadata());
    }
  }, {
    key: "isPossible",
    value: function isPossible() {
      return isPossiblePhoneNumber(this, {
        v2: true
      }, this.getMetadata());
    }
  }, {
    key: "isValid",
    value: function isValid() {
      return isValidNumber(this, {
        v2: true
      }, this.getMetadata());
    }
  }, {
    key: "isNonGeographic",
    value: function isNonGeographic() {
      var metadata = new Metadata$1(this.getMetadata());
      return metadata.isNonGeographicCallingCode(this.countryCallingCode);
    }
  }, {
    key: "isEqual",
    value: function isEqual(phoneNumber) {
      return this.number === phoneNumber.number && this.ext === phoneNumber.ext;
    } // This function was originally meant to be an equivalent for `validatePhoneNumberLength()`,
    // but later it was found out that it doesn't include the possible `TOO_SHORT` result
    // returned from `parsePhoneNumberWithError()` in the original `validatePhoneNumberLength()`,
    // so eventually I simply commented out this method from the `PhoneNumber` class
    // and just left the `validatePhoneNumberLength()` function, even though that one would require
    // and additional step to also validate the actual country / calling code of the phone number.
    // validateLength() {
    // 	const metadata = new Metadata(this.getMetadata())
    // 	metadata.selectNumberingPlan(this.countryCallingCode)
    // 	const result = checkNumberLength(this.nationalNumber, metadata)
    // 	if (result !== 'IS_POSSIBLE') {
    // 		return result
    // 	}
    // }

  }, {
    key: "getType",
    value: function getType() {
      return getNumberType(this, {
        v2: true
      }, this.getMetadata());
    }
  }, {
    key: "format",
    value: function format(_format, options) {
      return formatNumber(this, _format, options ? _objectSpread$3(_objectSpread$3({}, options), {}, {
        v2: true
      }) : {
        v2: true
      }, this.getMetadata());
    }
  }, {
    key: "formatNational",
    value: function formatNational(options) {
      return this.format('NATIONAL', options);
    }
  }, {
    key: "formatInternational",
    value: function formatInternational(options) {
      return this.format('INTERNATIONAL', options);
    }
  }, {
    key: "getURI",
    value: function getURI(options) {
      return this.format('RFC3966', options);
    }
  }]);

  return PhoneNumber;
}();

var isCountryCode = function isCountryCode(value) {
  return /^[A-Z]{2}$/.test(value);
};

function getCountryAndCountryCallingCode(countryOrCountryCallingCode, metadataJson) {
  var country;
  var countryCallingCode;
  var metadata = new Metadata$1(metadataJson); // If country code is passed then derive `countryCallingCode` from it.
  // Also store the country code as `.country`.

  if (isCountryCode(countryOrCountryCallingCode)) {
    country = countryOrCountryCallingCode;
    metadata.selectNumberingPlan(country);
    countryCallingCode = metadata.countryCallingCode();
  } else {
    countryCallingCode = countryOrCountryCallingCode;
  }

  return {
    country: country,
    countryCallingCode: countryCallingCode
  };
}

var CAPTURING_DIGIT_PATTERN = new RegExp('([' + VALID_DIGITS + '])');
function stripIddPrefix(number, country, callingCode, metadata) {
  if (!country) {
    return;
  } // Check if the number is IDD-prefixed.


  var countryMetadata = new Metadata$1(metadata);
  countryMetadata.selectNumberingPlan(country, callingCode);
  var IDDPrefixPattern = new RegExp(countryMetadata.IDDPrefix());

  if (number.search(IDDPrefixPattern) !== 0) {
    return;
  } // Strip IDD prefix.


  number = number.slice(number.match(IDDPrefixPattern)[0].length); // If there're any digits after an IDD prefix,
  // then those digits are a country calling code.
  // Since no country code starts with a `0`,
  // the code below validates that the next digit (if present) is not `0`.

  var matchedGroups = number.match(CAPTURING_DIGIT_PATTERN);

  if (matchedGroups && matchedGroups[1] != null && matchedGroups[1].length > 0) {
    if (matchedGroups[1] === '0') {
      return;
    }
  }

  return number;
}

/**
 * Strips any national prefix (such as 0, 1) present in a
 * (possibly incomplete) number provided.
 * "Carrier codes" are only used  in Colombia and Brazil,
 * and only when dialing within those countries from a mobile phone to a fixed line number.
 * Sometimes it won't actually strip national prefix
 * and will instead prepend some digits to the `number`:
 * for example, when number `2345678` is passed with `VI` country selected,
 * it will return `{ number: "3402345678" }`, because `340` area code is prepended.
 * @param {string} number — National number digits.
 * @param {object} metadata — Metadata with country selected.
 * @return {object} `{ nationalNumber: string, nationalPrefix: string? carrierCode: string? }`. Even if a national prefix was extracted, it's not necessarily present in the returned object, so don't rely on its presence in the returned object in order to find out whether a national prefix has been extracted or not.
 */
function extractNationalNumberFromPossiblyIncompleteNumber(number, metadata) {
  if (number && metadata.numberingPlan.nationalPrefixForParsing()) {
    // See METADATA.md for the description of
    // `national_prefix_for_parsing` and `national_prefix_transform_rule`.
    // Attempt to parse the first digits as a national prefix.
    var prefixPattern = new RegExp('^(?:' + metadata.numberingPlan.nationalPrefixForParsing() + ')');
    var prefixMatch = prefixPattern.exec(number);

    if (prefixMatch) {
      var nationalNumber;
      var carrierCode; // https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule
      // If a `national_prefix_for_parsing` has any "capturing groups"
      // then it means that the national (significant) number is equal to
      // those "capturing groups" transformed via `national_prefix_transform_rule`,
      // and nothing could be said about the actual national prefix:
      // what is it and was it even there.
      // If a `national_prefix_for_parsing` doesn't have any "capturing groups",
      // then everything it matches is a national prefix.
      // To determine whether `national_prefix_for_parsing` matched any
      // "capturing groups", the value of the result of calling `.exec()`
      // is looked at, and if it has non-undefined values where there're
      // "capturing groups" in the regular expression, then it means
      // that "capturing groups" have been matched.
      // It's not possible to tell whether there'll be any "capturing gropus"
      // before the matching process, because a `national_prefix_for_parsing`
      // could exhibit both behaviors.

      var capturedGroupsCount = prefixMatch.length - 1;
      var hasCapturedGroups = capturedGroupsCount > 0 && prefixMatch[capturedGroupsCount];

      if (metadata.nationalPrefixTransformRule() && hasCapturedGroups) {
        nationalNumber = number.replace(prefixPattern, metadata.nationalPrefixTransformRule()); // If there's more than one captured group,
        // then carrier code is the second one.

        if (capturedGroupsCount > 1) {
          carrierCode = prefixMatch[1];
        }
      } // If there're no "capturing groups",
      // or if there're "capturing groups" but no
      // `national_prefix_transform_rule`,
      // then just strip the national prefix from the number,
      // and possibly a carrier code.
      // Seems like there could be more.
      else {
        // `prefixBeforeNationalNumber` is the whole substring matched by
        // the `national_prefix_for_parsing` regular expression.
        // There seem to be no guarantees that it's just a national prefix.
        // For example, if there's a carrier code, it's gonna be a
        // part of `prefixBeforeNationalNumber` too.
        var prefixBeforeNationalNumber = prefixMatch[0];
        nationalNumber = number.slice(prefixBeforeNationalNumber.length); // If there's at least one captured group,
        // then carrier code is the first one.

        if (hasCapturedGroups) {
          carrierCode = prefixMatch[1];
        }
      } // Tries to guess whether a national prefix was present in the input.
      // This is not something copy-pasted from Google's library:
      // they don't seem to have an equivalent for that.
      // So this isn't an "officially approved" way of doing something like that.
      // But since there seems no other existing method, this library uses it.


      var nationalPrefix;

      if (hasCapturedGroups) {
        var possiblePositionOfTheFirstCapturedGroup = number.indexOf(prefixMatch[1]);
        var possibleNationalPrefix = number.slice(0, possiblePositionOfTheFirstCapturedGroup); // Example: an Argentinian (AR) phone number `0111523456789`.
        // `prefixMatch[0]` is `01115`, and `$1` is `11`,
        // and the rest of the phone number is `23456789`.
        // The national number is transformed via `9$1` to `91123456789`.
        // National prefix `0` is detected being present at the start.
        // if (possibleNationalPrefix.indexOf(metadata.numberingPlan.nationalPrefix()) === 0) {

        if (possibleNationalPrefix === metadata.numberingPlan.nationalPrefix()) {
          nationalPrefix = metadata.numberingPlan.nationalPrefix();
        }
      } else {
        nationalPrefix = prefixMatch[0];
      }

      return {
        nationalNumber: nationalNumber,
        nationalPrefix: nationalPrefix,
        carrierCode: carrierCode
      };
    }
  }

  return {
    nationalNumber: number
  };
}

/**
 * Strips national prefix and carrier code from a complete phone number.
 * The difference from the non-"FromCompleteNumber" function is that
 * it won't extract national prefix if the resultant number is too short
 * to be a complete number for the selected phone numbering plan.
 * @param  {string} number — Complete phone number digits.
 * @param  {Metadata} metadata — Metadata with a phone numbering plan selected.
 * @return {object} `{ nationalNumber: string, carrierCode: string? }`.
 */

function extractNationalNumber(number, metadata) {
  // Parsing national prefixes and carrier codes
  // is only required for local phone numbers
  // but some people don't understand that
  // and sometimes write international phone numbers
  // with national prefixes (or maybe even carrier codes).
  // http://ucken.blogspot.ru/2016/03/trunk-prefixes-in-skype4b.html
  // Google's original library forgives such mistakes
  // and so does this library, because it has been requested:
  // https://github.com/catamphetamine/libphonenumber-js/issues/127
  var _extractNationalNumbe = extractNationalNumberFromPossiblyIncompleteNumber(number, metadata),
      carrierCode = _extractNationalNumbe.carrierCode,
      nationalNumber = _extractNationalNumbe.nationalNumber;

  if (nationalNumber !== number) {
    if (!shouldHaveExtractedNationalPrefix(number, nationalNumber, metadata)) {
      // Don't strip the national prefix.
      return {
        nationalNumber: number
      };
    } // Check the national (significant) number length after extracting national prefix and carrier code.
    // Legacy generated metadata (before `1.0.18`) didn't support the "possible lengths" feature.


    if (metadata.possibleLengths()) {
      // The number remaining after stripping the national prefix and carrier code
      // should be long enough to have a possible length for the country.
      // Otherwise, don't strip the national prefix and carrier code,
      // since the original number could be a valid number.
      // This check has been copy-pasted "as is" from Google's original library:
      // https://github.com/google/libphonenumber/blob/876268eb1ad6cdc1b7b5bef17fc5e43052702d57/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L3236-L3250
      // It doesn't check for the "possibility" of the original `number`.
      // I guess it's fine not checking that one. It works as is anyway.
      if (!isPossibleIncompleteNationalNumber(nationalNumber, metadata)) {
        // Don't strip the national prefix.
        return {
          nationalNumber: number
        };
      }
    }
  }

  return {
    nationalNumber: nationalNumber,
    carrierCode: carrierCode
  };
} // In some countries, the same digit could be a national prefix
// or a leading digit of a valid phone number.
// For example, in Russia, national prefix is `8`,
// and also `800 555 35 35` is a valid number
// in which `8` is not a national prefix, but the first digit
// of a national (significant) number.
// Same's with Belarus:
// `82004910060` is a valid national (significant) number,
// but `2004910060` is not.
// To support such cases (to prevent the code from always stripping
// national prefix), a condition is imposed: a national prefix
// is not extracted when the original number is "viable" and the
// resultant number is not, a "viable" national number being the one
// that matches `national_number_pattern`.

function shouldHaveExtractedNationalPrefix(nationalNumberBefore, nationalNumberAfter, metadata) {
  // The equivalent in Google's code is:
  // https://github.com/google/libphonenumber/blob/e326fa1fc4283bb05eb35cb3c15c18f98a31af33/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L2969-L3004
  if (matchesEntirely(nationalNumberBefore, metadata.nationalNumberPattern()) && !matchesEntirely(nationalNumberAfter, metadata.nationalNumberPattern())) {
    return false;
  } // This "is possible" national number (length) check has been commented out
  // because it's superceded by the (effectively) same check done in the
  // `extractNationalNumber()` function after it calls `shouldHaveExtractedNationalPrefix()`.
  // In other words, why run the same check twice if it could only be run once.
  // // Check the national (significant) number length after extracting national prefix and carrier code.
  // // Fixes a minor "weird behavior" bug: https://gitlab.com/catamphetamine/libphonenumber-js/-/issues/57
  // // (Legacy generated metadata (before `1.0.18`) didn't support the "possible lengths" feature).
  // if (metadata.possibleLengths()) {
  // 	if (isPossibleIncompleteNationalNumber(nationalNumberBefore, metadata) &&
  // 		!isPossibleIncompleteNationalNumber(nationalNumberAfter, metadata)) {
  // 		return false
  // 	}
  // }


  return true;
}

function isPossibleIncompleteNationalNumber(nationalNumber, metadata) {
  switch (checkNumberLength(nationalNumber, metadata)) {
    case 'TOO_SHORT':
    case 'INVALID_LENGTH':
      // This library ignores "local-only" phone numbers (for simplicity).
      // See the readme for more info on what are "local-only" phone numbers.
      // case 'IS_POSSIBLE_LOCAL_ONLY':
      return false;

    default:
      return true;
  }
}

/**
 * Sometimes some people incorrectly input international phone numbers
 * without the leading `+`. This function corrects such input.
 * @param  {string} number — Phone number digits.
 * @param  {string?} country
 * @param  {string?} callingCode
 * @param  {object} metadata
 * @return {object} `{ countryCallingCode: string?, number: string }`.
 */

function extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(number, country, callingCode, metadata) {
  var countryCallingCode = country ? getCountryCallingCode(country, metadata) : callingCode;

  if (number.indexOf(countryCallingCode) === 0) {
    metadata = new Metadata$1(metadata);
    metadata.selectNumberingPlan(country, callingCode);
    var possibleShorterNumber = number.slice(countryCallingCode.length);

    var _extractNationalNumbe = extractNationalNumber(possibleShorterNumber, metadata),
        possibleShorterNationalNumber = _extractNationalNumbe.nationalNumber;

    var _extractNationalNumbe2 = extractNationalNumber(number, metadata),
        nationalNumber = _extractNationalNumbe2.nationalNumber; // If the number was not valid before but is valid now,
    // or if it was too long before, we consider the number
    // with the country calling code stripped to be a better result
    // and keep that instead.
    // For example, in Germany (+49), `49` is a valid area code,
    // so if a number starts with `49`, it could be both a valid
    // national German number or an international number without
    // a leading `+`.


    if (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern()) && matchesEntirely(possibleShorterNationalNumber, metadata.nationalNumberPattern()) || checkNumberLength(nationalNumber, metadata) === 'TOO_LONG') {
      return {
        countryCallingCode: countryCallingCode,
        number: possibleShorterNumber
      };
    }
  }

  return {
    number: number
  };
}

/**
 * Converts a phone number digits (possibly with a `+`)
 * into a calling code and the rest phone number digits.
 * The "rest phone number digits" could include
 * a national prefix, carrier code, and national
 * (significant) number.
 * @param  {string} number — Phone number digits (possibly with a `+`).
 * @param  {string} [country] — Default country.
 * @param  {string} [callingCode] — Default calling code (some phone numbering plans are non-geographic).
 * @param  {object} metadata
 * @return {object} `{ countryCallingCodeSource: string?, countryCallingCode: string?, number: string }`
 * @example
 * // Returns `{ countryCallingCode: "1", number: "2133734253" }`.
 * extractCountryCallingCode('2133734253', 'US', null, metadata)
 * extractCountryCallingCode('2133734253', null, '1', metadata)
 * extractCountryCallingCode('+12133734253', null, null, metadata)
 * extractCountryCallingCode('+12133734253', 'RU', null, metadata)
 */

function extractCountryCallingCode(number, country, callingCode, metadata) {
  if (!number) {
    return {};
  }

  var isNumberWithIddPrefix; // If this is not an international phone number,
  // then either extract an "IDD" prefix, or extract a
  // country calling code from a number by autocorrecting it
  // by prepending a leading `+` in cases when it starts
  // with the country calling code.
  // https://wikitravel.org/en/International_dialling_prefix
  // https://github.com/catamphetamine/libphonenumber-js/issues/376

  if (number[0] !== '+') {
    // Convert an "out-of-country" dialing phone number
    // to a proper international phone number.
    var numberWithoutIDD = stripIddPrefix(number, country, callingCode, metadata); // If an IDD prefix was stripped then
    // convert the number to international one
    // for subsequent parsing.

    if (numberWithoutIDD && numberWithoutIDD !== number) {
      isNumberWithIddPrefix = true;
      number = '+' + numberWithoutIDD;
    } else {
      // Check to see if the number starts with the country calling code
      // for the default country. If so, we remove the country calling code,
      // and do some checks on the validity of the number before and after.
      // https://github.com/catamphetamine/libphonenumber-js/issues/376
      if (country || callingCode) {
        var _extractCountryCallin = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(number, country, callingCode, metadata),
            countryCallingCode = _extractCountryCallin.countryCallingCode,
            shorterNumber = _extractCountryCallin.number;

        if (countryCallingCode) {
          return {
            countryCallingCodeSource: 'FROM_NUMBER_WITHOUT_PLUS_SIGN',
            countryCallingCode: countryCallingCode,
            number: shorterNumber
          };
        }
      }

      return {
        // No need to set it to `UNSPECIFIED`. It can be just `undefined`.
        // countryCallingCodeSource: 'UNSPECIFIED',
        number: number
      };
    }
  } // Fast abortion: country codes do not begin with a '0'


  if (number[1] === '0') {
    return {};
  }

  metadata = new Metadata$1(metadata); // The thing with country phone codes
  // is that they are orthogonal to each other
  // i.e. there's no such country phone code A
  // for which country phone code B exists
  // where B starts with A.
  // Therefore, while scanning digits,
  // if a valid country code is found,
  // that means that it is the country code.
  //

  var i = 2;

  while (i - 1 <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {
    var _countryCallingCode = number.slice(1, i);

    if (metadata.hasCallingCode(_countryCallingCode)) {
      metadata.selectNumberingPlan(_countryCallingCode);
      return {
        countryCallingCodeSource: isNumberWithIddPrefix ? 'FROM_NUMBER_WITH_IDD' : 'FROM_NUMBER_WITH_PLUS_SIGN',
        countryCallingCode: _countryCallingCode,
        number: number.slice(i)
      };
    }

    i++;
  }

  return {};
} // The possible values for the returned `countryCallingCodeSource` are:
//
// Copy-pasted from:
// https://github.com/google/libphonenumber/blob/master/resources/phonenumber.proto
//
// // The source from which the country_code is derived. This is not set in the
// // general parsing method, but in the method that parses and keeps raw_input.
// // New fields could be added upon request.
// enum CountryCodeSource {
//  // Default value returned if this is not set, because the phone number was
//  // created using parse, not parseAndKeepRawInput. hasCountryCodeSource will
//  // return false if this is the case.
//  UNSPECIFIED = 0;
//
//  // The country_code is derived based on a phone number with a leading "+",
//  // e.g. the French number "+33 1 42 68 53 00".
//  FROM_NUMBER_WITH_PLUS_SIGN = 1;
//
//  // The country_code is derived based on a phone number with a leading IDD,
//  // e.g. the French number "011 33 1 42 68 53 00", as it is dialled from US.
//  FROM_NUMBER_WITH_IDD = 5;
//
//  // The country_code is derived based on a phone number without a leading
//  // "+", e.g. the French number "33 1 42 68 53 00" when defaultCountry is
//  // supplied as France.
//  FROM_NUMBER_WITHOUT_PLUS_SIGN = 10;
//
//  // The country_code is derived NOT based on the phone number itself, but
//  // from the defaultCountry parameter provided in the parsing function by the
//  // clients. This happens mostly for numbers written in the national format
//  // (without country code). For example, this would be set when parsing the
//  // French number "01 42 68 53 00", when defaultCountry is supplied as
//  // France.
//  FROM_DEFAULT_COUNTRY = 20;
// }

function _createForOfIteratorHelperLoose$4(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray$7(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray$7(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$7(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$7(o, minLen); }

function _arrayLikeToArray$7(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function getCountryByNationalNumber(nationalPhoneNumber, _ref) {
  var countries = _ref.countries,
      defaultCountry = _ref.defaultCountry,
      metadata = _ref.metadata;
  // Re-create `metadata` because it will be selecting a `country`.
  metadata = new Metadata$1(metadata);
  var matchingCountries = [];

  for (var _iterator = _createForOfIteratorHelperLoose$4(countries), _step; !(_step = _iterator()).done;) {
    var country = _step.value;
    metadata.country(country); // "Leading digits" patterns are only defined for about 20% of all countries.
    // By definition, matching "leading digits" is a sufficient but not a necessary
    // condition for a phone number to belong to a country.
    // The point of "leading digits" check is that it's the fastest one to get a match.
    // https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md#leading_digits
    // I'd suppose that "leading digits" patterns are mutually exclusive for different countries
    // because of the intended use of that feature.

    if (metadata.leadingDigits()) {
      if (nationalPhoneNumber && nationalPhoneNumber.search(metadata.leadingDigits()) === 0) {
        return country;
      }
    } // Else perform full validation with all of those
    // fixed-line/mobile/etc regular expressions.
    else if (getNumberType({
      phone: nationalPhoneNumber,
      country: country
    }, undefined, metadata.metadata)) {
      // If the `defaultCountry` is among the `matchingCountries` then return it.
      if (defaultCountry) {
        if (country === defaultCountry) {
          return country;
        }

        matchingCountries.push(country);
      } else {
        return country;
      }
    }
  } // Return the first ("main") one of the `matchingCountries`.


  if (matchingCountries.length > 0) {
    return matchingCountries[0];
  }
}

function getCountryByCallingCode(callingCode, _ref) {
  var nationalPhoneNumber = _ref.nationalNumber,
      defaultCountry = _ref.defaultCountry,
      metadata = _ref.metadata;

  var possibleCountries = metadata.getCountryCodesForCallingCode(callingCode);

  if (!possibleCountries) {
    return;
  } // If there's just one country corresponding to the country code,
  // then just return it, without further phone number digits validation.


  if (possibleCountries.length === 1) {
    return possibleCountries[0];
  }

  return getCountryByNationalNumber(nationalPhoneNumber, {
    countries: possibleCountries,
    defaultCountry: defaultCountry,
    metadata: metadata.metadata
  });
}

// When phone numbers are written in `RFC3966` format — `"tel:+12133734253"` —
var PLUS_SIGN = '+';
var RFC3966_VISUAL_SEPARATOR_ = '[\\-\\.\\(\\)]?';
var RFC3966_PHONE_DIGIT_ = '(' + '[' + VALID_DIGITS + ']' + '|' + RFC3966_VISUAL_SEPARATOR_ + ')';
var RFC3966_GLOBAL_NUMBER_DIGITS_ = '^' + '\\' + PLUS_SIGN + RFC3966_PHONE_DIGIT_ + '*' + '[' + VALID_DIGITS + ']' + RFC3966_PHONE_DIGIT_ + '*' + '$';
/**
 * Regular expression of valid global-number-digits for the phone-context
 * parameter, following the syntax defined in RFC3966.
 */

var RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_ = new RegExp(RFC3966_GLOBAL_NUMBER_DIGITS_, 'g'); // In this port of Google's library, we don't accept alpha characters in phone numbers.
// const ALPHANUM_ = VALID_ALPHA_ + VALID_DIGITS

var ALPHANUM_ = VALID_DIGITS;
var RFC3966_DOMAINLABEL_ = '[' + ALPHANUM_ + ']+((\\-)*[' + ALPHANUM_ + '])*';
var VALID_ALPHA_ = 'a-zA-Z';
var RFC3966_TOPLABEL_ = '[' + VALID_ALPHA_ + ']+((\\-)*[' + ALPHANUM_ + '])*';
var RFC3966_DOMAINNAME_ = '^(' + RFC3966_DOMAINLABEL_ + '\\.)*' + RFC3966_TOPLABEL_ + '\\.?$';
/**
 * Regular expression of valid domainname for the phone-context parameter,
 * following the syntax defined in RFC3966.
 */

var RFC3966_DOMAINNAME_PATTERN_ = new RegExp(RFC3966_DOMAINNAME_, 'g');
var RFC3966_PREFIX_ = 'tel:';
var RFC3966_PHONE_CONTEXT_ = ';phone-context=';
var RFC3966_ISDN_SUBADDRESS_ = ';isub=';
/**
 * Extracts the value of the phone-context parameter of `numberToExtractFrom`,
 * following the syntax defined in RFC3966.
 *
 * @param {string} numberToExtractFrom
 * @return {string|null} the extracted string (possibly empty), or `null` if no phone-context parameter is found.
 */

function extractPhoneContext(numberToExtractFrom) {
  var indexOfPhoneContext = numberToExtractFrom.indexOf(RFC3966_PHONE_CONTEXT_); // If no phone-context parameter is present

  if (indexOfPhoneContext < 0) {
    return null;
  }

  var phoneContextStart = indexOfPhoneContext + RFC3966_PHONE_CONTEXT_.length; // If phone-context parameter is empty

  if (phoneContextStart >= numberToExtractFrom.length) {
    return '';
  }

  var phoneContextEnd = numberToExtractFrom.indexOf(';', phoneContextStart); // If phone-context is not the last parameter

  if (phoneContextEnd >= 0) {
    return numberToExtractFrom.substring(phoneContextStart, phoneContextEnd);
  } else {
    return numberToExtractFrom.substring(phoneContextStart);
  }
}
/**
 * Returns whether the value of phoneContext follows the syntax defined in RFC3966.
 *
 * @param {string|null} phoneContext
 * @return {boolean}
 */

function isPhoneContextValid(phoneContext) {
  if (phoneContext === null) {
    return true;
  }

  if (phoneContext.length === 0) {
    return false;
  } // Does phone-context value match pattern of global-number-digits or domainname.


  return RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_.test(phoneContext) || RFC3966_DOMAINNAME_PATTERN_.test(phoneContext);
}

/**
 * @param  {string} numberToParse
 * @param  {string} nationalNumber
 * @return {}
 */

function extractFormattedPhoneNumberFromPossibleRfc3966NumberUri(numberToParse, _ref) {
  var extractFormattedPhoneNumber = _ref.extractFormattedPhoneNumber;
  var phoneContext = extractPhoneContext(numberToParse);

  if (!isPhoneContextValid(phoneContext)) {
    throw new ParseError('NOT_A_NUMBER');
  }

  var phoneNumberString;

  if (phoneContext === null) {
    // Extract a possible number from the string passed in.
    // (this strips leading characters that could not be the start of a phone number)
    phoneNumberString = extractFormattedPhoneNumber(numberToParse) || '';
  } else {
    phoneNumberString = ''; // If the phone context contains a phone number prefix, we need to capture
    // it, whereas domains will be ignored.

    if (phoneContext.charAt(0) === PLUS_SIGN) {
      phoneNumberString += phoneContext;
    } // Now append everything between the "tel:" prefix and the phone-context.
    // This should include the national number, an optional extension or
    // isdn-subaddress component. Note we also handle the case when "tel:" is
    // missing, as we have seen in some of the phone number inputs.
    // In that case, we append everything from the beginning.


    var indexOfRfc3966Prefix = numberToParse.indexOf(RFC3966_PREFIX_);
    var indexOfNationalNumber; // RFC 3966 "tel:" prefix is preset at this stage because
    // `isPhoneContextValid()` requires it to be present.

    /* istanbul ignore else */

    if (indexOfRfc3966Prefix >= 0) {
      indexOfNationalNumber = indexOfRfc3966Prefix + RFC3966_PREFIX_.length;
    } else {
      indexOfNationalNumber = 0;
    }

    var indexOfPhoneContext = numberToParse.indexOf(RFC3966_PHONE_CONTEXT_);
    phoneNumberString += numberToParse.substring(indexOfNationalNumber, indexOfPhoneContext);
  } // Delete the isdn-subaddress and everything after it if it is present.
  // Note extension won't appear at the same time with isdn-subaddress
  // according to paragraph 5.3 of the RFC3966 spec.


  var indexOfIsdn = phoneNumberString.indexOf(RFC3966_ISDN_SUBADDRESS_);

  if (indexOfIsdn > 0) {
    phoneNumberString = phoneNumberString.substring(0, indexOfIsdn);
  } // If both phone context and isdn-subaddress are absent but other
  // parameters are present, the parameters are left in nationalNumber.
  // This is because we are concerned about deleting content from a potential
  // number string when there is no strong evidence that the number is
  // actually written in RFC3966.


  if (phoneNumberString !== '') {
    return phoneNumberString;
  }
}

// This is a port of Google Android `libphonenumber`'s
// This prevents malicious input from consuming CPU.

var MAX_INPUT_STRING_LENGTH = 250; // This consists of the plus symbol, digits, and arabic-indic digits.

var PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']'); // Regular expression of trailing characters that we want to remove.
// A trailing `#` is sometimes used when writing phone numbers with extensions in US.
// Example: "+1 (645) 123 1234-910#" number has extension "910".

var AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + '#' + ']+$');
//
// ```js
// parse('8 (800) 555-35-35', 'RU')
// parse('8 (800) 555-35-35', 'RU', metadata)
// parse('8 (800) 555-35-35', { country: { default: 'RU' } })
// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)
// parse('+7 800 555 35 35')
// parse('+7 800 555 35 35', metadata)
// ```
//

/**
 * Parses a phone number.
 *
 * parse('123456789', { defaultCountry: 'RU', v2: true }, metadata)
 * parse('123456789', { defaultCountry: 'RU' }, metadata)
 * parse('123456789', undefined, metadata)
 *
 * @param  {string} input
 * @param  {object} [options]
 * @param  {object} metadata
 * @return {object|PhoneNumber?} If `options.v2: true` flag is passed, it returns a `PhoneNumber?` instance. Otherwise, returns an object of shape `{ phone: '...', country: '...' }` (or just `{}` if no phone number was parsed).
 */

function parse$1(text, options, metadata) {
  // If assigning the `{}` default value is moved to the arguments above,
  // code coverage would decrease for some weird reason.
  options = options || {};
  metadata = new Metadata$1(metadata); // Validate `defaultCountry`.

  if (options.defaultCountry && !metadata.hasCountry(options.defaultCountry)) {
    if (options.v2) {
      throw new ParseError('INVALID_COUNTRY');
    }

    throw new Error("Unknown country: ".concat(options.defaultCountry));
  } // Parse the phone number.


  var _parseInput = parseInput(text, options.v2, options.extract),
      formattedPhoneNumber = _parseInput.number,
      ext = _parseInput.ext,
      error = _parseInput.error; // If the phone number is not viable then return nothing.


  if (!formattedPhoneNumber) {
    if (options.v2) {
      if (error === 'TOO_SHORT') {
        throw new ParseError('TOO_SHORT');
      }

      throw new ParseError('NOT_A_NUMBER');
    }

    return {};
  }

  var _parsePhoneNumber = parsePhoneNumber$2(formattedPhoneNumber, options.defaultCountry, options.defaultCallingCode, metadata),
      country = _parsePhoneNumber.country,
      nationalNumber = _parsePhoneNumber.nationalNumber,
      countryCallingCode = _parsePhoneNumber.countryCallingCode,
      countryCallingCodeSource = _parsePhoneNumber.countryCallingCodeSource,
      carrierCode = _parsePhoneNumber.carrierCode;

  if (!metadata.hasSelectedNumberingPlan()) {
    if (options.v2) {
      throw new ParseError('INVALID_COUNTRY');
    }

    return {};
  } // Validate national (significant) number length.


  if (!nationalNumber || nationalNumber.length < MIN_LENGTH_FOR_NSN) {
    // Won't throw here because the regexp already demands length > 1.

    /* istanbul ignore if */
    if (options.v2) {
      throw new ParseError('TOO_SHORT');
    } // Google's demo just throws an error in this case.


    return {};
  } // Validate national (significant) number length.
  //
  // A sidenote:
  //
  // They say that sometimes national (significant) numbers
  // can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).
  // https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36
  // Such numbers will just be discarded.
  //


  if (nationalNumber.length > MAX_LENGTH_FOR_NSN) {
    if (options.v2) {
      throw new ParseError('TOO_LONG');
    } // Google's demo just throws an error in this case.


    return {};
  }

  if (options.v2) {
    var phoneNumber = new PhoneNumber(countryCallingCode, nationalNumber, metadata.metadata);

    if (country) {
      phoneNumber.country = country;
    }

    if (carrierCode) {
      phoneNumber.carrierCode = carrierCode;
    }

    if (ext) {
      phoneNumber.ext = ext;
    }

    phoneNumber.__countryCallingCodeSource = countryCallingCodeSource;
    return phoneNumber;
  } // Check if national phone number pattern matches the number.
  // National number pattern is different for each country,
  // even for those ones which are part of the "NANPA" group.


  var valid = (options.extended ? metadata.hasSelectedNumberingPlan() : country) ? matchesEntirely(nationalNumber, metadata.nationalNumberPattern()) : false;

  if (!options.extended) {
    return valid ? result(country, nationalNumber, ext) : {};
  } // isInternational: countryCallingCode !== undefined


  return {
    country: country,
    countryCallingCode: countryCallingCode,
    carrierCode: carrierCode,
    valid: valid,
    possible: valid ? true : options.extended === true && metadata.possibleLengths() && isPossibleNumber(nationalNumber, metadata) ? true : false,
    phone: nationalNumber,
    ext: ext
  };
}
/**
 * Extracts a formatted phone number from text.
 * Doesn't guarantee that the extracted phone number
 * is a valid phone number (for example, doesn't validate its length).
 * @param  {string} text
 * @param  {boolean} [extract] — If `false`, then will parse the entire `text` as a phone number.
 * @param  {boolean} [throwOnError] — By default, it won't throw if the text is too long.
 * @return {string}
 * @example
 * // Returns "(213) 373-4253".
 * extractFormattedPhoneNumber("Call (213) 373-4253 for assistance.")
 */

function _extractFormattedPhoneNumber(text, extract, throwOnError) {
  if (!text) {
    return;
  }

  if (text.length > MAX_INPUT_STRING_LENGTH) {
    if (throwOnError) {
      throw new ParseError('TOO_LONG');
    }

    return;
  }

  if (extract === false) {
    return text;
  } // Attempt to extract a possible number from the string passed in


  var startsAt = text.search(PHONE_NUMBER_START_PATTERN);

  if (startsAt < 0) {
    return;
  }

  return text // Trim everything to the left of the phone number
  .slice(startsAt) // Remove trailing non-numerical characters
  .replace(AFTER_PHONE_NUMBER_END_PATTERN, '');
}
/**
 * @param  {string} text - Input.
 * @param  {boolean} v2 - Legacy API functions don't pass `v2: true` flag.
 * @param  {boolean} [extract] - Whether to extract a phone number from `text`, or attempt to parse the entire text as a phone number.
 * @return {object} `{ ?number, ?ext }`.
 */


function parseInput(text, v2, extract) {
  // // Parse RFC 3966 phone number URI.
  // if (text && text.indexOf('tel:') === 0) {
  // 	return parseRFC3966(text)
  // }
  // let number = extractFormattedPhoneNumber(text, extract, v2)
  var number = extractFormattedPhoneNumberFromPossibleRfc3966NumberUri(text, {
    extractFormattedPhoneNumber: function extractFormattedPhoneNumber(text) {
      return _extractFormattedPhoneNumber(text, extract, v2);
    }
  }); // If the phone number is not viable, then abort.

  if (!number) {
    return {};
  }

  if (!isViablePhoneNumber(number)) {
    if (isViablePhoneNumberStart(number)) {
      return {
        error: 'TOO_SHORT'
      };
    }

    return {};
  } // Attempt to parse extension first, since it doesn't require region-specific
  // data and we want to have the non-normalised number here.


  var withExtensionStripped = extractExtension(number);

  if (withExtensionStripped.ext) {
    return withExtensionStripped;
  }

  return {
    number: number
  };
}
/**
 * Creates `parse()` result object.
 */


function result(country, nationalNumber, ext) {
  var result = {
    country: country,
    phone: nationalNumber
  };

  if (ext) {
    result.ext = ext;
  }

  return result;
}
/**
 * Parses a viable phone number.
 * @param {string} formattedPhoneNumber — Example: "(213) 373-4253".
 * @param {string} [defaultCountry]
 * @param {string} [defaultCallingCode]
 * @param {Metadata} metadata
 * @return {object} Returns `{ country: string?, countryCallingCode: string?, nationalNumber: string? }`.
 */


function parsePhoneNumber$2(formattedPhoneNumber, defaultCountry, defaultCallingCode, metadata) {
  // Extract calling code from phone number.
  var _extractCountryCallin = extractCountryCallingCode(parseIncompletePhoneNumber(formattedPhoneNumber), defaultCountry, defaultCallingCode, metadata.metadata),
      countryCallingCodeSource = _extractCountryCallin.countryCallingCodeSource,
      countryCallingCode = _extractCountryCallin.countryCallingCode,
      number = _extractCountryCallin.number; // Choose a country by `countryCallingCode`.


  var country;

  if (countryCallingCode) {
    metadata.selectNumberingPlan(countryCallingCode);
  } // If `formattedPhoneNumber` is passed in "national" format
  // then `number` is defined and `countryCallingCode` is `undefined`.
  else if (number && (defaultCountry || defaultCallingCode)) {
    metadata.selectNumberingPlan(defaultCountry, defaultCallingCode);

    if (defaultCountry) {
      country = defaultCountry;
    }

    countryCallingCode = defaultCallingCode || getCountryCallingCode(defaultCountry, metadata.metadata);
  } else return {};

  if (!number) {
    return {
      countryCallingCodeSource: countryCallingCodeSource,
      countryCallingCode: countryCallingCode
    };
  }

  var _extractNationalNumbe = extractNationalNumber(parseIncompletePhoneNumber(number), metadata),
      nationalNumber = _extractNationalNumbe.nationalNumber,
      carrierCode = _extractNationalNumbe.carrierCode; // Sometimes there are several countries
  // corresponding to the same country phone code
  // (e.g. NANPA countries all having `1` country phone code).
  // Therefore, to reliably determine the exact country,
  // national (significant) number should have been parsed first.
  //
  // When `metadata.json` is generated, all "ambiguous" country phone codes
  // get their countries populated with the full set of
  // "phone number type" regular expressions.
  //


  var exactCountry = getCountryByCallingCode(countryCallingCode, {
    nationalNumber: nationalNumber,
    defaultCountry: defaultCountry,
    metadata: metadata
  });

  if (exactCountry) {
    country = exactCountry;
    /* istanbul ignore if */

    if (exactCountry === '001') ; else {
      metadata.country(country);
    }
  }

  return {
    country: country,
    countryCallingCode: countryCallingCode,
    countryCallingCodeSource: countryCallingCodeSource,
    nationalNumber: nationalNumber,
    carrierCode: carrierCode
  };
}

function ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { _defineProperty$2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty$2(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function parsePhoneNumberWithError(text, options, metadata) {
  return parse$1(text, _objectSpread$2(_objectSpread$2({}, options), {}, {
    v2: true
  }), metadata);
}

function _typeof$1(obj) { "@babel/helpers - typeof"; return _typeof$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof$1(obj); }

function ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty$1(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty$1(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray$2(arr, i) { return _arrayWithHoles$2(arr) || _iterableToArrayLimit$2(arr, i) || _unsupportedIterableToArray$6(arr, i) || _nonIterableRest$2(); }

function _nonIterableRest$2() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray$6(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$6(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$6(o, minLen); }

function _arrayLikeToArray$6(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit$2(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles$2(arr) { if (Array.isArray(arr)) return arr; }

// Extracts the following properties from function arguments:
// * input `text`
// * `options` object
// * `metadata` JSON
function normalizeArguments(args) {
  var _Array$prototype$slic = Array.prototype.slice.call(args),
      _Array$prototype$slic2 = _slicedToArray$2(_Array$prototype$slic, 4),
      arg_1 = _Array$prototype$slic2[0],
      arg_2 = _Array$prototype$slic2[1],
      arg_3 = _Array$prototype$slic2[2],
      arg_4 = _Array$prototype$slic2[3];

  var text;
  var options;
  var metadata; // If the phone number is passed as a string.
  // `parsePhoneNumber('88005553535', ...)`.

  if (typeof arg_1 === 'string') {
    text = arg_1;
  } else throw new TypeError('A text for parsing must be a string.'); // If "default country" argument is being passed then move it to `options`.
  // `parsePhoneNumber('88005553535', 'RU', [options], metadata)`.


  if (!arg_2 || typeof arg_2 === 'string') {
    if (arg_4) {
      options = arg_3;
      metadata = arg_4;
    } else {
      options = undefined;
      metadata = arg_3;
    }

    if (arg_2) {
      options = _objectSpread$1({
        defaultCountry: arg_2
      }, options);
    }
  } // `defaultCountry` is not passed.
  // Example: `parsePhoneNumber('+78005553535', [options], metadata)`.
  else if (isObject(arg_2)) {
    if (arg_3) {
      options = arg_2;
      metadata = arg_3;
    } else {
      metadata = arg_2;
    }
  } else throw new Error("Invalid second argument: ".concat(arg_2));

  return {
    text: text,
    options: options,
    metadata: metadata
  };
} // Otherwise istanbul would show this as "branch not covered".

/* istanbul ignore next */

var isObject = function isObject(_) {
  return _typeof$1(_) === 'object';
};

function ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function parsePhoneNumber$1(text, options, metadata) {
  // Validate `defaultCountry`.
  if (options && options.defaultCountry && !isSupportedCountry(options.defaultCountry, metadata)) {
    options = _objectSpread(_objectSpread({}, options), {}, {
      defaultCountry: undefined
    });
  } // Parse phone number.


  try {
    return parsePhoneNumberWithError(text, options, metadata);
  } catch (error) {
    /* istanbul ignore else */
    if (error instanceof ParseError) ; else {
      throw error;
    }
  }
}

function parsePhoneNumber() {
  var _normalizeArguments = normalizeArguments(arguments),
      text = _normalizeArguments.text,
      options = _normalizeArguments.options,
      metadata = _normalizeArguments.metadata;

  return parsePhoneNumber$1(text, options, metadata);
}

function _defineProperties$9(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass$9(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$9(Constructor.prototype, protoProps); if (staticProps) _defineProperties$9(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck$9(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// https://medium.com/dsinjs/implementing-lru-cache-in-javascript-94ba6755cda9
var Node = /*#__PURE__*/_createClass$9(function Node(key, value) {
  var next = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var prev = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  _classCallCheck$9(this, Node);

  this.key = key;
  this.value = value;
  this.next = next;
  this.prev = prev;
});

var LRUCache = /*#__PURE__*/function () {
  //set default limit of 10 if limit is not passed.
  function LRUCache() {
    var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;

    _classCallCheck$9(this, LRUCache);

    this.size = 0;
    this.limit = limit;
    this.head = null;
    this.tail = null;
    this.cache = {};
  } // Write Node to head of LinkedList
  // update cache with Node key and Node reference


  _createClass$9(LRUCache, [{
    key: "put",
    value: function put(key, value) {
      this.ensureLimit();

      if (!this.head) {
        this.head = this.tail = new Node(key, value);
      } else {
        var node = new Node(key, value, this.head);
        this.head.prev = node;
        this.head = node;
      } //Update the cache map


      this.cache[key] = this.head;
      this.size++;
    } // Read from cache map and make that node as new Head of LinkedList

  }, {
    key: "get",
    value: function get(key) {
      if (this.cache[key]) {
        var value = this.cache[key].value; // node removed from it's position and cache

        this.remove(key); // write node again to the head of LinkedList to make it most recently used

        this.put(key, value);
        return value;
      }

      console.log("Item not available in cache for key ".concat(key));
    }
  }, {
    key: "ensureLimit",
    value: function ensureLimit() {
      if (this.size === this.limit) {
        this.remove(this.tail.key);
      }
    }
  }, {
    key: "remove",
    value: function remove(key) {
      var node = this.cache[key];

      if (node.prev !== null) {
        node.prev.next = node.next;
      } else {
        this.head = node.next;
      }

      if (node.next !== null) {
        node.next.prev = node.prev;
      } else {
        this.tail = node.prev;
      }

      delete this.cache[key];
      this.size--;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.head = null;
      this.tail = null;
      this.size = 0;
      this.cache = {};
    } // // Invokes the callback function with every node of the chain and the index of the node.
    // forEach(fn) {
    //   let node = this.head;
    //   let counter = 0;
    //   while (node) {
    //     fn(node, counter);
    //     node = node.next;
    //     counter++;
    //   }
    // }
    // // To iterate over LRU with a 'for...of' loop
    // *[Symbol.iterator]() {
    //   let node = this.head;
    //   while (node) {
    //     yield node;
    //     node = node.next;
    //   }
    // }

  }]);

  return LRUCache;
}();

function _classCallCheck$8(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties$8(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass$8(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$8(Constructor.prototype, protoProps); if (staticProps) _defineProperties$8(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
// countries being used for the same doc with ~10 patterns for each country. Some pages will have
// a lot more countries in use, but typically fewer numbers for each so expanding the cache for
// that use-case won't have a lot of benefit.

var RegExpCache = /*#__PURE__*/function () {
  function RegExpCache(size) {
    _classCallCheck$8(this, RegExpCache);

    this.cache = new LRUCache(size);
  }

  _createClass$8(RegExpCache, [{
    key: "getPatternForRegExp",
    value: function getPatternForRegExp(pattern) {
      var regExp = this.cache.get(pattern);

      if (!regExp) {
        regExp = new RegExp('^' + pattern);
        this.cache.put(pattern, regExp);
      }

      return regExp;
    }
  }]);

  return RegExpCache;
}();

/** Returns a regular expression quantifier with an upper and lower limit. */
function limit(lower, upper) {
  if (lower < 0 || upper <= 0 || upper < lower) {
    throw new TypeError();
  }

  return "{".concat(lower, ",").concat(upper, "}");
}
/**
 * Trims away any characters after the first match of {@code pattern} in {@code candidate},
 * returning the trimmed version.
 */

function trimAfterFirstMatch(regexp, string) {
  var index = string.search(regexp);

  if (index >= 0) {
    return string.slice(0, index);
  }

  return string;
}

// Javascript doesn't support UTF-8 regular expressions.
// So mimicking them here.
// Copy-pasted from `PhoneNumberMatcher.js`.

/**
 * "\p{Z}" is any kind of whitespace or invisible separator ("Separator").
 * http://www.regular-expressions.info/unicode.html
 * "\P{Z}" is the reverse of "\p{Z}".
 * "\p{N}" is any kind of numeric character in any script ("Number").
 * "\p{Nd}" is a digit zero through nine in any script except "ideographic scripts" ("Decimal_Digit_Number").
 * "\p{Sc}" is a currency symbol ("Currency_Symbol").
 * "\p{L}" is any kind of letter from any language ("Letter").
 * "\p{Mn}" is "non-spacing mark".
 *
 * Javascript doesn't support Unicode Regular Expressions
 * so substituting it with this explicit set of characters.
 *
 * https://stackoverflow.com/questions/13210194/javascript-regex-equivalent-of-a-za-z-using-pl
 * https://github.com/danielberndt/babel-plugin-utf-8-regex/blob/master/src/transformer.js
 */
var _pZ = " \xA0\u1680\u180E\u2000-\u200A\u2028\u2029\u202F\u205F\u3000";
var pZ = "[".concat(_pZ, "]");
var PZ = "[^".concat(_pZ, "]");
var _pN = "0-9\xB2\xB3\xB9\xBC-\xBE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D66-\u0D75\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19"; // const pN = `[${_pN}]`

var _pNd = "0-9\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0BE6-\u0BEF\u0C66-\u0C6F\u0CE6-\u0CEF\u0D66-\u0D6F\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F29\u1040-\u1049\u1090-\u1099\u17E0-\u17E9\u1810-\u1819\u1946-\u194F\u19D0-\u19D9\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\uA620-\uA629\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19";
var pNd = "[".concat(_pNd, "]");
var _pL = "A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0\u08A2-\u08AC\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097F\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191C\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA697\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA793\uA7A0-\uA7AA\uA7F8-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA80-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC";
var pL = "[".concat(_pL, "]");
var pL_regexp = new RegExp(pL);
var _pSc = "$\xA2-\xA5\u058F\u060B\u09F2\u09F3\u09FB\u0AF1\u0BF9\u0E3F\u17DB\u20A0-\u20B9\uA838\uFDFC\uFE69\uFF04\uFFE0\uFFE1\uFFE5\uFFE6";
var pSc = "[".concat(_pSc, "]");
var pSc_regexp = new RegExp(pSc);
var _pMn = "\u0300-\u036F\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u08FE\u0900-\u0902\u093A\u093C\u0941-\u0948\u094D\u0951-\u0957\u0962\u0963\u0981\u09BC\u09C1-\u09C4\u09CD\u09E2\u09E3\u0A01\u0A02\u0A3C\u0A41\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81\u0A82\u0ABC\u0AC1-\u0AC5\u0AC7\u0AC8\u0ACD\u0AE2\u0AE3\u0B01\u0B3C\u0B3F\u0B41-\u0B44\u0B4D\u0B56\u0B62\u0B63\u0B82\u0BC0\u0BCD\u0C3E-\u0C40\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0CBC\u0CBF\u0CC6\u0CCC\u0CCD\u0CE2\u0CE3\u0D41-\u0D44\u0D4D\u0D62\u0D63\u0DCA\u0DD2-\u0DD4\u0DD6\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F71-\u0F7E\u0F80-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102D-\u1030\u1032-\u1037\u1039\u103A\u103D\u103E\u1058\u1059\u105E-\u1060\u1071-\u1074\u1082\u1085\u1086\u108D\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4\u17B5\u17B7-\u17BD\u17C6\u17C9-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u1922\u1927\u1928\u1932\u1939-\u193B\u1A17\u1A18\u1A56\u1A58-\u1A5E\u1A60\u1A62\u1A65-\u1A6C\u1A73-\u1A7C\u1A7F\u1B00-\u1B03\u1B34\u1B36-\u1B3A\u1B3C\u1B42\u1B6B-\u1B73\u1B80\u1B81\u1BA2-\u1BA5\u1BA8\u1BA9\u1BAB\u1BE6\u1BE8\u1BE9\u1BED\u1BEF-\u1BF1\u1C2C-\u1C33\u1C36\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE0\u1CE2-\u1CE8\u1CED\u1CF4\u1DC0-\u1DE6\u1DFC-\u1DFF\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302D\u3099\u309A\uA66F\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA825\uA826\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA951\uA980-\uA982\uA9B3\uA9B6-\uA9B9\uA9BC\uAA29-\uAA2E\uAA31\uAA32\uAA35\uAA36\uAA43\uAA4C\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEC\uAAED\uAAF6\uABE5\uABE8\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE26";
var pMn = "[".concat(_pMn, "]");
var pMn_regexp = new RegExp(pMn);
var _InBasic_Latin = "\0-\x7F";
var _InLatin_1_Supplement = "\x80-\xFF";
var _InLatin_Extended_A = "\u0100-\u017F";
var _InLatin_Extended_Additional = "\u1E00-\u1EFF";
var _InLatin_Extended_B = "\u0180-\u024F";
var _InCombining_Diacritical_Marks = "\u0300-\u036F";
var latinLetterRegexp = new RegExp('[' + _InBasic_Latin + _InLatin_1_Supplement + _InLatin_Extended_A + _InLatin_Extended_Additional + _InLatin_Extended_B + _InCombining_Diacritical_Marks + ']');
/**
 * Helper method to determine if a character is a Latin-script letter or not.
 * For our purposes, combining marks should also return true since we assume
 * they have been added to a preceding Latin character.
 */

function isLatinLetter(letter) {
  // Combining marks are a subset of non-spacing-mark.
  if (!pL_regexp.test(letter) && !pMn_regexp.test(letter)) {
    return false;
  }

  return latinLetterRegexp.test(letter);
}
function isInvalidPunctuationSymbol(character) {
  return character === '%' || pSc_regexp.test(character);
}

/**
 * Matches a phone number object against a phone number string.
 * @param  {string} phoneNumberString
 * @param  {PhoneNumber} phoneNumber
 * @param  {object} metadata — Metadata JSON
 * @return {'INVALID_NUMBER'|'NO_MATCH'|'SHORT_NSN_MATCH'|'NSN_MATCH'|'EXACT_MATCH'}
 */

function matchPhoneNumberStringAgainstPhoneNumber(phoneNumberString, phoneNumber, metadata) {
  // Parse `phoneNumberString`.
  var phoneNumberStringContainsCallingCode = true;
  var parsedPhoneNumber = parsePhoneNumber(phoneNumberString, metadata);

  if (!parsedPhoneNumber) {
    // If `phoneNumberString` didn't contain a country calling code
    // then substitute it with the `phoneNumber`'s country calling code.
    phoneNumberStringContainsCallingCode = false;
    parsedPhoneNumber = parsePhoneNumber(phoneNumberString, {
      defaultCallingCode: phoneNumber.countryCallingCode
    }, metadata);
  }

  if (!parsedPhoneNumber) {
    return 'INVALID_NUMBER';
  } // Check that the extensions match.


  if (phoneNumber.ext) {
    if (parsedPhoneNumber.ext !== phoneNumber.ext) {
      return 'NO_MATCH';
    }
  } else {
    if (parsedPhoneNumber.ext) {
      return 'NO_MATCH';
    }
  } // Check that country calling codes match.


  if (phoneNumberStringContainsCallingCode) {
    if (phoneNumber.countryCallingCode !== parsedPhoneNumber.countryCallingCode) {
      return 'NO_MATCH';
    }
  } // Check if the whole numbers match.


  if (phoneNumber.number === parsedPhoneNumber.number) {
    if (phoneNumberStringContainsCallingCode) {
      return 'EXACT_MATCH';
    } else {
      return 'NSN_MATCH';
    }
  } // Check if one national number is a "suffix" of the other.


  if (phoneNumber.nationalNumber.indexOf(parsedPhoneNumber.nationalNumber) === 0 || parsedPhoneNumber.nationalNumber.indexOf(phoneNumber.nationalNumber) === 0) {
    // "A SHORT_NSN_MATCH occurs if there is a difference because of the
    //  presence or absence of an 'Italian leading zero', the presence or
    //  absence of an extension, or one NSN being a shorter variant of the
    //  other."
    return 'SHORT_NSN_MATCH';
  }

  return 'NO_MATCH';
}

/**
 * Leniency when finding potential phone numbers in text segments
 * The levels here are ordered in increasing strictness.
 */

var Leniency = {
  /**
   * Phone numbers accepted are "possible", but not necessarily "valid".
   */
  POSSIBLE: function POSSIBLE(phoneNumber, _ref) {
    _ref.candidate;
        _ref.metadata;
    return true;
  },

  /**
   * Phone numbers accepted are "possible" and "valid".
   * Numbers written in national format must have their national-prefix
   * present if it is usually written for a number of this type.
   */
  VALID: function VALID(phoneNumber, _ref2) {
    var candidate = _ref2.candidate;
        _ref2.defaultCountry;
        var metadata = _ref2.metadata;

    if (!phoneNumber.isValid() || !containsOnlyValidXChars(phoneNumber, candidate, metadata)) {
      return false;
    } // Skipped for simplicity.
    // return isNationalPrefixPresentIfRequired(phoneNumber, { defaultCountry, metadata })


    return true;
  },

  /**
   * Phone numbers accepted are "valid" and
   * are grouped in a possible way for this locale. For example, a US number written as
   * "65 02 53 00 00" and "650253 0000" are not accepted at this leniency level, whereas
   * "650 253 0000", "650 2530000" or "6502530000" are.
   * Numbers with more than one '/' symbol in the national significant number
   * are also dropped at this level.
   *
   * Warning: This level might result in lower coverage especially for regions outside of
   * country code "+1". If you are not sure about which level to use,
   * email the discussion group libphonenumber-discuss@googlegroups.com.
   */
  STRICT_GROUPING: function STRICT_GROUPING(phoneNumber, _ref3) {
    var candidate = _ref3.candidate,
        defaultCountry = _ref3.defaultCountry,
        metadata = _ref3.metadata;
        _ref3.regExpCache;

    if (!phoneNumber.isValid() || !containsOnlyValidXChars(phoneNumber, candidate, metadata) || containsMoreThanOneSlashInNationalNumber(phoneNumber, candidate) || !isNationalPrefixPresentIfRequired(phoneNumber, {
      defaultCountry: defaultCountry,
      metadata: metadata
    })) {
      return false;
    }

    return checkNumberGroupingIsValid();
  },

  /**
   * Phone numbers accepted are "valid" and are grouped in the same way
   * that we would have formatted it, or as a single block.
   * For example, a US number written as "650 2530000" is not accepted
   * at this leniency level, whereas "650 253 0000" or "6502530000" are.
   * Numbers with more than one '/' symbol are also dropped at this level.
   *
   * Warning: This level might result in lower coverage especially for regions outside of
   * country code "+1". If you are not sure about which level to use, email the discussion group
   * libphonenumber-discuss@googlegroups.com.
   */
  EXACT_GROUPING: function EXACT_GROUPING(phoneNumber, _ref4) {
    var candidate = _ref4.candidate,
        defaultCountry = _ref4.defaultCountry,
        metadata = _ref4.metadata;
        _ref4.regExpCache;

    if (!phoneNumber.isValid() || !containsOnlyValidXChars(phoneNumber, candidate, metadata) || containsMoreThanOneSlashInNationalNumber(phoneNumber, candidate) || !isNationalPrefixPresentIfRequired(phoneNumber, {
      defaultCountry: defaultCountry,
      metadata: metadata
    })) {
      return false;
    }

    return checkNumberGroupingIsValid();
  }
};

function containsOnlyValidXChars(phoneNumber, candidate, metadata) {
  // The characters 'x' and 'X' can be (1) a carrier code, in which case they always precede the
  // national significant number or (2) an extension sign, in which case they always precede the
  // extension number. We assume a carrier code is more than 1 digit, so the first case has to
  // have more than 1 consecutive 'x' or 'X', whereas the second case can only have exactly 1 'x'
  // or 'X'. We ignore the character if it appears as the last character of the string.
  for (var index = 0; index < candidate.length - 1; index++) {
    var charAtIndex = candidate.charAt(index);

    if (charAtIndex === 'x' || charAtIndex === 'X') {
      var charAtNextIndex = candidate.charAt(index + 1);

      if (charAtNextIndex === 'x' || charAtNextIndex === 'X') {
        // This is the carrier code case, in which the 'X's always precede the national
        // significant number.
        index++;

        if (matchPhoneNumberStringAgainstPhoneNumber(candidate.substring(index), phoneNumber, metadata) !== 'NSN_MATCH') {
          return false;
        } // This is the extension sign case, in which the 'x' or 'X' should always precede the
        // extension number.

      } else {
        var ext = parseDigits(candidate.substring(index));

        if (ext) {
          if (phoneNumber.ext !== ext) {
            return false;
          }
        } else {
          if (phoneNumber.ext) {
            return false;
          }
        }
      }
    }
  }

  return true;
}

function isNationalPrefixPresentIfRequired(phoneNumber, _ref5) {
  var defaultCountry = _ref5.defaultCountry,
      _metadata = _ref5.metadata;

  // First, check how we deduced the country code. If it was written in international format, then
  // the national prefix is not required.
  if (phoneNumber.__countryCallingCodeSource !== 'FROM_DEFAULT_COUNTRY') {
    return true;
  }

  var metadata = new Metadata$1(_metadata);
  metadata.selectNumberingPlan(phoneNumber.countryCallingCode);
  phoneNumber.country || getCountryByCallingCode(phoneNumber.countryCallingCode, {
    nationalNumber: phoneNumber.nationalNumber,
    defaultCountry: defaultCountry,
    metadata: metadata
  }); // Check if a national prefix should be present when formatting this number.

  var nationalNumber = phoneNumber.nationalNumber;
  var format = chooseFormatForNumber(metadata.numberingPlan.formats(), nationalNumber); // To do this, we check that a national prefix formatting rule was present
  // and that it wasn't just the first-group symbol ($1) with punctuation.

  if (format.nationalPrefixFormattingRule()) {
    if (metadata.numberingPlan.nationalPrefixIsOptionalWhenFormattingInNationalFormat()) {
      // The national-prefix is optional in these cases, so we don't need to check if it was present.
      return true;
    }

    if (!format.usesNationalPrefix()) {
      // National Prefix not needed for this number.
      return true;
    }

    return Boolean(phoneNumber.nationalPrefix);
  }

  return true;
}

function containsMoreThanOneSlashInNationalNumber(phoneNumber, candidate) {
  var firstSlashInBodyIndex = candidate.indexOf('/');

  if (firstSlashInBodyIndex < 0) {
    // No slashes, this is okay.
    return false;
  } // Now look for a second one.


  var secondSlashInBodyIndex = candidate.indexOf('/', firstSlashInBodyIndex + 1);

  if (secondSlashInBodyIndex < 0) {
    // Only one slash, this is okay.
    return false;
  } // If the first slash is after the country calling code, this is permitted.


  var candidateHasCountryCode = phoneNumber.__countryCallingCodeSource === 'FROM_NUMBER_WITH_PLUS_SIGN' || phoneNumber.__countryCallingCodeSource === 'FROM_NUMBER_WITHOUT_PLUS_SIGN';

  if (candidateHasCountryCode && parseDigits(candidate.substring(0, firstSlashInBodyIndex)) === phoneNumber.countryCallingCode) {
    // Any more slashes and this is illegal.
    return candidate.slice(secondSlashInBodyIndex + 1).indexOf('/') >= 0;
  }

  return true;
}

function checkNumberGroupingIsValid(number, candidate, metadata, checkGroups, regExpCache) {
  throw new Error('This part of code hasn\'t been ported');
}

// of parsing. This allows us to strip off parts of the number that are actually the start of
// another number, such as for: (530) 583-6985 x302/x2303 -> the second extension here makes this
// actually two phone numbers, (530) 583-6985 x302 and (530) 583-6985 x2303. We remove the second
// extension so that the first number is parsed correctly.
//
// Matches a slash (\ or /) followed by a space followed by an `x`.
//

var SECOND_NUMBER_START_PATTERN = /[\\/] *x/;
function parsePreCandidate(candidate) {
  // Check for extra numbers at the end.
  // TODO: This is the place to start when trying to support extraction of multiple phone number
  // from split notations (+41 79 123 45 67 / 68).
  return trimAfterFirstMatch(SECOND_NUMBER_START_PATTERN, candidate);
}

// Matches strings that look like dates using "/" as a separator.
// Examples: 3/10/2011, 31/10/96 or 08/31/95.
var SLASH_SEPARATED_DATES = /(?:(?:[0-3]?\d\/[01]?\d)|(?:[01]?\d\/[0-3]?\d))\/(?:[12]\d)?\d{2}/; // Matches timestamps.
// Examples: "2012-01-02 08:00".
// Note that the reg-ex does not include the
// trailing ":\d\d" -- that is covered by TIME_STAMPS_SUFFIX.

var TIME_STAMPS = /[12]\d{3}[-/]?[01]\d[-/]?[0-3]\d +[0-2]\d$/;
var TIME_STAMPS_SUFFIX_LEADING = /^:[0-5]\d/;
function isValidPreCandidate(candidate, offset, text) {
  // Skip a match that is more likely to be a date.
  if (SLASH_SEPARATED_DATES.test(candidate)) {
    return false;
  } // Skip potential time-stamps.


  if (TIME_STAMPS.test(candidate)) {
    var followingText = text.slice(offset + candidate.length);

    if (TIME_STAMPS_SUFFIX_LEADING.test(followingText)) {
      return false;
    }
  }

  return true;
}

// Copy-pasted from `PhoneNumberMatcher.js`.
var OPENING_PARENS = "(\\[\uFF08\uFF3B";
var CLOSING_PARENS = ")\\]\uFF09\uFF3D";
var NON_PARENS = "[^".concat(OPENING_PARENS).concat(CLOSING_PARENS, "]");
var LEAD_CLASS = "[".concat(OPENING_PARENS).concat(PLUS_CHARS, "]"); // Punctuation that may be at the start of a phone number - brackets and plus signs.

var LEAD_CLASS_LEADING = new RegExp('^' + LEAD_CLASS); // Limit on the number of pairs of brackets in a phone number.

var BRACKET_PAIR_LIMIT = limit(0, 3);
/**
 * Pattern to check that brackets match. Opening brackets should be closed within a phone number.
 * This also checks that there is something inside the brackets. Having no brackets at all is also
 * fine.
 *
 * An opening bracket at the beginning may not be closed, but subsequent ones should be.  It's
 * also possible that the leading bracket was dropped, so we shouldn't be surprised if we see a
 * closing bracket first. We limit the sets of brackets in a phone number to four.
 */

var MATCHING_BRACKETS_ENTIRE = new RegExp('^' + "(?:[" + OPENING_PARENS + "])?" + "(?:" + NON_PARENS + "+" + "[" + CLOSING_PARENS + "])?" + NON_PARENS + "+" + "(?:[" + OPENING_PARENS + "]" + NON_PARENS + "+[" + CLOSING_PARENS + "])" + BRACKET_PAIR_LIMIT + NON_PARENS + "*" + '$');
/**
 * Matches strings that look like publication pages. Example:
 * <pre>Computing Complete Answers to Queries in the Presence of Limited Access Patterns.
 * Chen Li. VLDB J. 12(3): 211-227 (2003).</pre>
 *
 * The string "211-227 (2003)" is not a telephone number.
 */

var PUB_PAGES = /\d{1,5}-+\d{1,5}\s{0,4}\(\d{1,4}/;
function isValidCandidate(candidate, offset, text, leniency) {
  // Check the candidate doesn't contain any formatting
  // which would indicate that it really isn't a phone number.
  if (!MATCHING_BRACKETS_ENTIRE.test(candidate) || PUB_PAGES.test(candidate)) {
    return;
  } // If leniency is set to VALID or stricter, we also want to skip numbers that are surrounded
  // by Latin alphabetic characters, to skip cases like abc8005001234 or 8005001234def.


  if (leniency !== 'POSSIBLE') {
    // If the candidate is not at the start of the text,
    // and does not start with phone-number punctuation,
    // check the previous character.
    if (offset > 0 && !LEAD_CLASS_LEADING.test(candidate)) {
      var previousChar = text[offset - 1]; // We return null if it is a latin letter or an invalid punctuation symbol.

      if (isInvalidPunctuationSymbol(previousChar) || isLatinLetter(previousChar)) {
        return false;
      }
    }

    var lastCharIndex = offset + candidate.length;

    if (lastCharIndex < text.length) {
      var nextChar = text[lastCharIndex];

      if (isInvalidPunctuationSymbol(nextChar) || isLatinLetter(nextChar)) {
        return false;
      }
    }
  }

  return true;
}

function _createForOfIteratorHelperLoose$3(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray$5(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray$5(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$5(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$5(o, minLen); }

function _arrayLikeToArray$5(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck$7(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties$7(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass$7(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$7(Constructor.prototype, protoProps); if (staticProps) _defineProperties$7(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
var EXTN_PATTERNS_FOR_MATCHING = createExtensionPattern();
/**
 * Patterns used to extract phone numbers from a larger phone-number-like pattern. These are
 * ordered according to specificity. For example, white-space is last since that is frequently
 * used in numbers, not just to separate two numbers. We have separate patterns since we don't
 * want to break up the phone-number-like text on more than one different kind of symbol at one
 * time, although symbols of the same type (e.g. space) can be safely grouped together.
 *
 * Note that if there is a match, we will always check any text found up to the first match as
 * well.
 */

var INNER_MATCHES = [// Breaks on the slash - e.g. "651-234-2345/332-445-1234"
'\\/+(.*)/', // Note that the bracket here is inside the capturing group, since we consider it part of the
// phone number. Will match a pattern like "(650) 223 3345 (754) 223 3321".
'(\\([^(]*)', // Breaks on a hyphen - e.g. "12345 - 332-445-1234 is my number."
// We require a space on either side of the hyphen for it to be considered a separator.
"(?:".concat(pZ, "-|-").concat(pZ, ")").concat(pZ, "*(.+)"), // Various types of wide hyphens. Note we have decided not to enforce a space here, since it's
// possible that it's supposed to be used to break two numbers without spaces, and we haven't
// seen many instances of it used within a number.
"[\u2012-\u2015\uFF0D]".concat(pZ, "*(.+)"), // Breaks on a full stop - e.g. "12345. 332-445-1234 is my number."
"\\.+".concat(pZ, "*([^.]+)"), // Breaks on space - e.g. "3324451234 8002341234"
"".concat(pZ, "+(").concat(PZ, "+)")]; // Limit on the number of leading (plus) characters.

var leadLimit = limit(0, 2); // Limit on the number of consecutive punctuation characters.

var punctuationLimit = limit(0, 4);
/* The maximum number of digits allowed in a digit-separated block. As we allow all digits in a
 * single block, set high enough to accommodate the entire national number and the international
 * country code. */

var digitBlockLimit = MAX_LENGTH_FOR_NSN + MAX_LENGTH_COUNTRY_CODE; // Limit on the number of blocks separated by punctuation.
// Uses digitBlockLimit since some formats use spaces to separate each digit.

var blockLimit = limit(0, digitBlockLimit);
/* A punctuation sequence allowing white space. */

var punctuation = "[".concat(VALID_PUNCTUATION, "]") + punctuationLimit; // A digits block without punctuation.

var digitSequence = pNd + limit(1, digitBlockLimit);
/**
 * Phone number pattern allowing optional punctuation.
 * The phone number pattern used by `find()`, similar to
 * VALID_PHONE_NUMBER, but with the following differences:
 * <ul>
 *   <li>All captures are limited in order to place an upper bound to the text matched by the
 *       pattern.
 * <ul>
 *   <li>Leading punctuation / plus signs are limited.
 *   <li>Consecutive occurrences of punctuation are limited.
 *   <li>Number of digits is limited.
 * </ul>
 *   <li>No whitespace is allowed at the start or end.
 *   <li>No alpha digits (vanity numbers such as 1-800-SIX-FLAGS) are currently supported.
 * </ul>
 */

var PATTERN = '(?:' + LEAD_CLASS + punctuation + ')' + leadLimit + digitSequence + '(?:' + punctuation + digitSequence + ')' + blockLimit + '(?:' + EXTN_PATTERNS_FOR_MATCHING + ')?'; // Regular expression of trailing characters that we want to remove.
// We remove all characters that are not alpha or numerical characters.
// The hash character is retained here, as it may signify
// the previous block was an extension.
//
// // Don't know what does '&&' mean here.
// const UNWANTED_END_CHAR_PATTERN = new RegExp(`[[\\P{N}&&\\P{L}]&&[^#]]+$`)
//

var UNWANTED_END_CHAR_PATTERN = new RegExp("[^".concat(_pN).concat(_pL, "#]+$"));
var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;
/**
 * A stateful class that finds and extracts telephone numbers from {@linkplain CharSequence text}.
 * Instances can be created using the {@linkplain PhoneNumberUtil#findNumbers factory methods} in
 * {@link PhoneNumberUtil}.
 *
 * <p>Vanity numbers (phone numbers using alphabetic digits such as <tt>1-800-SIX-FLAGS</tt> are
 * not found.
 *
 * <p>This class is not thread-safe.
 */

var PhoneNumberMatcher$1 = /*#__PURE__*/function () {
  /**
   * @param {string} text — the character sequence that we will search, null for no text.
   * @param {'POSSIBLE'|'VALID'|'STRICT_GROUPING'|'EXACT_GROUPING'} [options.leniency] — The leniency to use when evaluating candidate phone numbers. See `source/findNumbers/Leniency.js` for more details.
   * @param {number} [options.maxTries] — The maximum number of invalid numbers to try before giving up on the text. This is to cover degenerate cases where the text has a lot of false positives in it. Must be >= 0.
   */
  function PhoneNumberMatcher() {
    var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var metadata = arguments.length > 2 ? arguments[2] : undefined;

    _classCallCheck$7(this, PhoneNumberMatcher);

    options = {
      v2: options.v2,
      defaultCallingCode: options.defaultCallingCode,
      defaultCountry: options.defaultCountry && isSupportedCountry(options.defaultCountry, metadata) ? options.defaultCountry : undefined,
      leniency: options.leniency || (options.extended ? 'POSSIBLE' : 'VALID'),
      maxTries: options.maxTries || MAX_SAFE_INTEGER
    }; // Validate `leniency`.

    if (!options.leniency) {
      throw new TypeError('`leniency` is required');
    }

    if (options.leniency !== 'POSSIBLE' && options.leniency !== 'VALID') {
      throw new TypeError("Invalid `leniency`: \"".concat(options.leniency, "\". Supported values: \"POSSIBLE\", \"VALID\"."));
    } // Validate `maxTries`.


    if (options.maxTries < 0) {
      throw new TypeError('`maxTries` must be `>= 0`');
    }

    this.text = text;
    this.options = options;
    this.metadata = metadata; // The degree of phone number validation.

    this.leniency = Leniency[options.leniency];

    if (!this.leniency) {
      throw new TypeError("Unknown leniency: \"".concat(options.leniency, "\""));
    }
    /** The maximum number of retries after matching an invalid number. */


    this.maxTries = options.maxTries;
    this.PATTERN = new RegExp(PATTERN, 'ig');
    /** The iteration tristate. */

    this.state = 'NOT_READY';
    /** The next index to start searching at. Undefined in {@link State#DONE}. */

    this.searchIndex = 0; // A cache for frequently used country-specific regular expressions. Set to 32 to cover ~2-3
    // countries being used for the same doc with ~10 patterns for each country. Some pages will have
    // a lot more countries in use, but typically fewer numbers for each so expanding the cache for
    // that use-case won't have a lot of benefit.

    this.regExpCache = new RegExpCache(32);
  }
  /**
   * Attempts to find the next subsequence in the searched sequence on or after {@code searchIndex}
   * that represents a phone number. Returns the next match, null if none was found.
   *
   * @param index  the search index to start searching at
   * @return  the phone number match found, null if none can be found
   */


  _createClass$7(PhoneNumberMatcher, [{
    key: "find",
    value: function find() {
      // // Reset the regular expression.
      // this.PATTERN.lastIndex = index
      var matches;

      while (this.maxTries > 0 && (matches = this.PATTERN.exec(this.text)) !== null) {
        var candidate = matches[0];
        var offset = matches.index;
        candidate = parsePreCandidate(candidate);

        if (isValidPreCandidate(candidate, offset, this.text)) {
          var match = // Try to come up with a valid match given the entire candidate.
          this.parseAndVerify(candidate, offset, this.text) // If that failed, try to find an "inner match" -
          // there might be a phone number within this candidate.
          || this.extractInnerMatch(candidate, offset, this.text);

          if (match) {
            if (this.options.v2) {
              return {
                startsAt: match.startsAt,
                endsAt: match.endsAt,
                number: match.phoneNumber
              };
            } else {
              var phoneNumber = match.phoneNumber;
              var result = {
                startsAt: match.startsAt,
                endsAt: match.endsAt,
                phone: phoneNumber.nationalNumber
              };

              if (phoneNumber.country) {
                /* istanbul ignore if */
                {
                  result.country = phoneNumber.country;
                }
              } else {
                result.countryCallingCode = phoneNumber.countryCallingCode;
              }

              if (phoneNumber.ext) {
                result.ext = phoneNumber.ext;
              }

              return result;
            }
          }
        }

        this.maxTries--;
      }
    }
    /**
     * Attempts to extract a match from `substring`
     * if the substring itself does not qualify as a match.
     */

  }, {
    key: "extractInnerMatch",
    value: function extractInnerMatch(substring, offset, text) {
      for (var _iterator = _createForOfIteratorHelperLoose$3(INNER_MATCHES), _step; !(_step = _iterator()).done;) {
        var innerMatchPattern = _step.value;
        var isFirstMatch = true;
        var candidateMatch = void 0;
        var innerMatchRegExp = new RegExp(innerMatchPattern, 'g');

        while (this.maxTries > 0 && (candidateMatch = innerMatchRegExp.exec(substring)) !== null) {
          if (isFirstMatch) {
            // We should handle any group before this one too.
            var _candidate = trimAfterFirstMatch(UNWANTED_END_CHAR_PATTERN, substring.slice(0, candidateMatch.index));

            var _match = this.parseAndVerify(_candidate, offset, text);

            if (_match) {
              return _match;
            }

            this.maxTries--;
            isFirstMatch = false;
          }

          var candidate = trimAfterFirstMatch(UNWANTED_END_CHAR_PATTERN, candidateMatch[1]); // Java code does `groupMatcher.start(1)` here,
          // but there's no way in javascript to get a `candidate` start index,
          // therefore resort to using this kind of an approximation.
          // (`groupMatcher` is called `candidateInSubstringMatch` in this javascript port)
          // https://stackoverflow.com/questions/15934353/get-index-of-each-capture-in-a-javascript-regex

          var candidateIndexGuess = substring.indexOf(candidate, candidateMatch.index);
          var match = this.parseAndVerify(candidate, offset + candidateIndexGuess, text);

          if (match) {
            return match;
          }

          this.maxTries--;
        }
      }
    }
    /**
     * Parses a phone number from the `candidate` using `parse` and
     * verifies it matches the requested `leniency`. If parsing and verification succeed,
     * a corresponding `PhoneNumberMatch` is returned, otherwise this method returns `null`.
     *
     * @param candidate  the candidate match
     * @param offset  the offset of {@code candidate} within {@link #text}
     * @return  the parsed and validated phone number match, or null
     */

  }, {
    key: "parseAndVerify",
    value: function parseAndVerify(candidate, offset, text) {
      if (!isValidCandidate(candidate, offset, text, this.options.leniency)) {
        return;
      }

      var phoneNumber = parsePhoneNumber(candidate, {
        extended: true,
        defaultCountry: this.options.defaultCountry,
        defaultCallingCode: this.options.defaultCallingCode
      }, this.metadata);

      if (!phoneNumber) {
        return;
      }

      if (!phoneNumber.isPossible()) {
        return;
      }

      if (this.leniency(phoneNumber, {
        candidate: candidate,
        defaultCountry: this.options.defaultCountry,
        metadata: this.metadata,
        regExpCache: this.regExpCache
      })) {
        return {
          startsAt: offset,
          endsAt: offset + candidate.length,
          phoneNumber: phoneNumber
        };
      }
    }
  }, {
    key: "hasNext",
    value: function hasNext() {
      if (this.state === 'NOT_READY') {
        this.lastMatch = this.find(); // (this.searchIndex)

        if (this.lastMatch) {
          // this.searchIndex = this.lastMatch.endsAt
          this.state = 'READY';
        } else {
          this.state = 'DONE';
        }
      }

      return this.state === 'READY';
    }
  }, {
    key: "next",
    value: function next() {
      // Check the state and find the next match as a side-effect if necessary.
      if (!this.hasNext()) {
        throw new Error('No next element');
      } // Don't retain that memory any longer than necessary.


      var result = this.lastMatch;
      this.lastMatch = null;
      this.state = 'NOT_READY';
      return result;
    }
  }]);

  return PhoneNumberMatcher;
}();

function _classCallCheck$6(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties$6(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass$6(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$6(Constructor.prototype, protoProps); if (staticProps) _defineProperties$6(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

// This "state" object simply holds the state of the "AsYouType" parser:
//
// * `country?: string`
// * `callingCode?: string`
// * `digits: string`
// * `international: boolean`
// * `missingPlus: boolean`
// * `IDDPrefix?: string`
// * `carrierCode?: string`
// * `nationalPrefix?: string`
// * `nationalSignificantNumber?: string`
// * `nationalSignificantNumberMatchesInput: boolean`
// * `complexPrefixBeforeNationalSignificantNumber?: string`
//
// `state.country` and `state.callingCode` aren't required to be in sync.
// For example, `state.country` could be `"AR"` and `state.callingCode` could be `undefined`.
// So `state.country` and `state.callingCode` are totally independent.
//
var AsYouTypeState = /*#__PURE__*/function () {
  function AsYouTypeState(_ref) {
    var onCountryChange = _ref.onCountryChange,
        onCallingCodeChange = _ref.onCallingCodeChange;

    _classCallCheck$6(this, AsYouTypeState);

    this.onCountryChange = onCountryChange;
    this.onCallingCodeChange = onCallingCodeChange;
  }

  _createClass$6(AsYouTypeState, [{
    key: "reset",
    value: function reset(_ref2) {
      var country = _ref2.country,
          callingCode = _ref2.callingCode;
      this.international = false;
      this.missingPlus = false;
      this.IDDPrefix = undefined;
      this.callingCode = undefined;
      this.digits = '';
      this.resetNationalSignificantNumber();
      this.initCountryAndCallingCode(country, callingCode);
    }
  }, {
    key: "resetNationalSignificantNumber",
    value: function resetNationalSignificantNumber() {
      this.nationalSignificantNumber = this.getNationalDigits();
      this.nationalSignificantNumberMatchesInput = true;
      this.nationalPrefix = undefined;
      this.carrierCode = undefined;
      this.complexPrefixBeforeNationalSignificantNumber = undefined;
    }
  }, {
    key: "update",
    value: function update(properties) {
      for (var _i = 0, _Object$keys = Object.keys(properties); _i < _Object$keys.length; _i++) {
        var key = _Object$keys[_i];
        this[key] = properties[key];
      }
    }
  }, {
    key: "initCountryAndCallingCode",
    value: function initCountryAndCallingCode(country, callingCode) {
      this.setCountry(country);
      this.setCallingCode(callingCode);
    }
  }, {
    key: "setCountry",
    value: function setCountry(country) {
      this.country = country;
      this.onCountryChange(country);
    }
  }, {
    key: "setCallingCode",
    value: function setCallingCode(callingCode) {
      this.callingCode = callingCode;
      this.onCallingCodeChange(callingCode, this.country);
    }
  }, {
    key: "startInternationalNumber",
    value: function startInternationalNumber(country, callingCode) {
      // Prepend the `+` to parsed input.
      this.international = true; // If a default country was set then reset it
      // because an explicitly international phone
      // number is being entered.

      this.initCountryAndCallingCode(country, callingCode);
    }
  }, {
    key: "appendDigits",
    value: function appendDigits(nextDigits) {
      this.digits += nextDigits;
    }
  }, {
    key: "appendNationalSignificantNumberDigits",
    value: function appendNationalSignificantNumberDigits(nextDigits) {
      this.nationalSignificantNumber += nextDigits;
    }
    /**
     * Returns the part of `this.digits` that corresponds to the national number.
     * Basically, all digits that have been input by the user, except for the
     * international prefix and the country calling code part
     * (if the number is an international one).
     * @return {string}
     */

  }, {
    key: "getNationalDigits",
    value: function getNationalDigits() {
      if (this.international) {
        return this.digits.slice((this.IDDPrefix ? this.IDDPrefix.length : 0) + (this.callingCode ? this.callingCode.length : 0));
      }

      return this.digits;
    }
  }, {
    key: "getDigitsWithoutInternationalPrefix",
    value: function getDigitsWithoutInternationalPrefix() {
      if (this.international) {
        if (this.IDDPrefix) {
          return this.digits.slice(this.IDDPrefix.length);
        }
      }

      return this.digits;
    }
  }]);

  return AsYouTypeState;
}();

function _createForOfIteratorHelperLoose$2(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray$4(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray$4(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$4(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$4(o, minLen); }

function _arrayLikeToArray$4(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// Should be the same as `DIGIT_PLACEHOLDER` in `libphonenumber-metadata-generator`.
var DIGIT_PLACEHOLDER = 'x'; // '\u2008' (punctuation space)

var DIGIT_PLACEHOLDER_MATCHER = new RegExp(DIGIT_PLACEHOLDER); // Counts all occurences of a symbol in a string.
// http://stackoverflow.com/questions/202605/repeat-string-javascript

function repeat(string, times) {
  if (times < 1) {
    return '';
  }

  var result = '';

  while (times > 1) {
    if (times & 1) {
      result += string;
    }

    times >>= 1;
    string += string;
  }

  return result + string;
}
function cutAndStripNonPairedParens(string, cutBeforeIndex) {
  if (string[cutBeforeIndex] === ')') {
    cutBeforeIndex++;
  }

  return stripNonPairedParens(string.slice(0, cutBeforeIndex));
}
function stripNonPairedParens(string) {
  var dangling_braces = [];
  var i = 0;

  while (i < string.length) {
    if (string[i] === '(') {
      dangling_braces.push(i);
    } else if (string[i] === ')') {
      dangling_braces.pop();
    }

    i++;
  }

  var start = 0;
  var cleared_string = '';
  dangling_braces.push(string.length);

  for (var _i = 0, _dangling_braces = dangling_braces; _i < _dangling_braces.length; _i++) {
    var index = _dangling_braces[_i];
    cleared_string += string.slice(start, index);
    start = index + 1;
  }

  return cleared_string;
}
function populateTemplateWithDigits(template, position, digits) {
  // Using `.split('')` to iterate through a string here
  // to avoid requiring `Symbol.iterator` polyfill.
  // `.split('')` is generally not safe for Unicode,
  // but in this particular case for `digits` it is safe.
  // for (const digit of digits)
  for (var _iterator2 = _createForOfIteratorHelperLoose$2(digits.split('')), _step2; !(_step2 = _iterator2()).done;) {
    var digit = _step2.value;

    // If there is room for more digits in current `template`,
    // then set the next digit in the `template`,
    // and return the formatted digits so far.
    // If more digits are entered than the current format could handle.
    if (template.slice(position + 1).search(DIGIT_PLACEHOLDER_MATCHER) < 0) {
      return;
    }

    position = template.search(DIGIT_PLACEHOLDER_MATCHER);
    template = template.replace(DIGIT_PLACEHOLDER_MATCHER, digit);
  }

  return [template, position];
}

function formatCompleteNumber(state, format, _ref) {
  var metadata = _ref.metadata,
      shouldTryNationalPrefixFormattingRule = _ref.shouldTryNationalPrefixFormattingRule,
      getSeparatorAfterNationalPrefix = _ref.getSeparatorAfterNationalPrefix;
  var matcher = new RegExp("^(?:".concat(format.pattern(), ")$"));

  if (matcher.test(state.nationalSignificantNumber)) {
    return formatNationalNumberWithAndWithoutNationalPrefixFormattingRule(state, format, {
      metadata: metadata,
      shouldTryNationalPrefixFormattingRule: shouldTryNationalPrefixFormattingRule,
      getSeparatorAfterNationalPrefix: getSeparatorAfterNationalPrefix
    });
  }
}
function canFormatCompleteNumber(nationalSignificantNumber, metadata) {
  return checkNumberLength(nationalSignificantNumber, metadata) === 'IS_POSSIBLE';
}

function formatNationalNumberWithAndWithoutNationalPrefixFormattingRule(state, format, _ref2) {
  var metadata = _ref2.metadata,
      shouldTryNationalPrefixFormattingRule = _ref2.shouldTryNationalPrefixFormattingRule,
      getSeparatorAfterNationalPrefix = _ref2.getSeparatorAfterNationalPrefix;
  // `format` has already been checked for `nationalPrefix` requirement.
  state.nationalSignificantNumber;
      state.international;
      state.nationalPrefix;
      state.carrierCode; // Format the number with using `national_prefix_formatting_rule`.
  // If the resulting formatted number is a valid formatted number, then return it.
  //
  // Google's AsYouType formatter is different in a way that it doesn't try
  // to format using the "national prefix formatting rule", and instead it
  // simply prepends a national prefix followed by a " " character.
  // This code does that too, but as a fallback.
  // The reason is that "national prefix formatting rule" may use parentheses,
  // which wouldn't be included has it used the simpler Google's way.
  //

  if (shouldTryNationalPrefixFormattingRule(format)) {
    var formattedNumber = formatNationalNumber(state, format, {
      useNationalPrefixFormattingRule: true,
      getSeparatorAfterNationalPrefix: getSeparatorAfterNationalPrefix,
      metadata: metadata
    });

    if (formattedNumber) {
      return formattedNumber;
    }
  } // Format the number without using `national_prefix_formatting_rule`.


  return formatNationalNumber(state, format, {
    useNationalPrefixFormattingRule: false,
    getSeparatorAfterNationalPrefix: getSeparatorAfterNationalPrefix,
    metadata: metadata
  });
}

function formatNationalNumber(state, format, _ref3) {
  var metadata = _ref3.metadata,
      useNationalPrefixFormattingRule = _ref3.useNationalPrefixFormattingRule,
      getSeparatorAfterNationalPrefix = _ref3.getSeparatorAfterNationalPrefix;
  var formattedNationalNumber = formatNationalNumberUsingFormat(state.nationalSignificantNumber, format, {
    carrierCode: state.carrierCode,
    useInternationalFormat: state.international,
    withNationalPrefix: useNationalPrefixFormattingRule,
    metadata: metadata
  });

  if (!useNationalPrefixFormattingRule) {
    if (state.nationalPrefix) {
      // If a national prefix was extracted, then just prepend it,
      // followed by a " " character.
      formattedNationalNumber = state.nationalPrefix + getSeparatorAfterNationalPrefix(format) + formattedNationalNumber;
    } else if (state.complexPrefixBeforeNationalSignificantNumber) {
      formattedNationalNumber = state.complexPrefixBeforeNationalSignificantNumber + ' ' + formattedNationalNumber;
    }
  }

  if (isValidFormattedNationalNumber(formattedNationalNumber, state)) {
    return formattedNationalNumber;
  }
} // Check that the formatted phone number contains exactly
// the same digits that have been input by the user.
// For example, when "0111523456789" is input for `AR` country,
// the extracted `this.nationalSignificantNumber` is "91123456789",
// which means that the national part of `this.digits` isn't simply equal to
// `this.nationalPrefix` + `this.nationalSignificantNumber`.
//
// Also, a `format` can add extra digits to the `this.nationalSignificantNumber`
// being formatted via `metadata[country].national_prefix_transform_rule`.
// For example, for `VI` country, it prepends `340` to the national number,
// and if this check hasn't been implemented, then there would be a bug
// when `340` "area coude" is "duplicated" during input for `VI` country:
// https://github.com/catamphetamine/libphonenumber-js/issues/318
//
// So, all these "gotchas" are filtered out.
//
// In the original Google's code, the comments say:
// "Check that we didn't remove nor add any extra digits when we matched
// this formatting pattern. This usually happens after we entered the last
// digit during AYTF. Eg: In case of MX, we swallow mobile token (1) when
// formatted but AYTF should retain all the number entered and not change
// in order to match a format (of same leading digits and length) display
// in that way."
// "If it's the same (i.e entered number and format is same), then it's
// safe to return this in formatted number as nothing is lost / added."
// Otherwise, don't use this format.
// https://github.com/google/libphonenumber/commit/3e7c1f04f5e7200f87fb131e6f85c6e99d60f510#diff-9149457fa9f5d608a11bb975c6ef4bc5
// https://github.com/google/libphonenumber/commit/3ac88c7106e7dcb553bcc794b15f19185928a1c6#diff-2dcb77e833422ee304da348b905cde0b
//


function isValidFormattedNationalNumber(formattedNationalNumber, state) {
  return parseDigits(formattedNationalNumber) === state.getNationalDigits();
}

function _classCallCheck$5(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties$5(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass$5(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$5(Constructor.prototype, protoProps); if (staticProps) _defineProperties$5(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var PatternParser = /*#__PURE__*/function () {
  function PatternParser() {
    _classCallCheck$5(this, PatternParser);
  }

  _createClass$5(PatternParser, [{
    key: "parse",
    value: function parse(pattern) {
      this.context = [{
        or: true,
        instructions: []
      }];
      this.parsePattern(pattern);

      if (this.context.length !== 1) {
        throw new Error('Non-finalized contexts left when pattern parse ended');
      }

      var _this$context$ = this.context[0],
          branches = _this$context$.branches,
          instructions = _this$context$.instructions;

      if (branches) {
        return {
          op: '|',
          args: branches.concat([expandSingleElementArray(instructions)])
        };
      }
      /* istanbul ignore if */


      if (instructions.length === 0) {
        throw new Error('Pattern is required');
      }

      if (instructions.length === 1) {
        return instructions[0];
      }

      return instructions;
    }
  }, {
    key: "startContext",
    value: function startContext(context) {
      this.context.push(context);
    }
  }, {
    key: "endContext",
    value: function endContext() {
      this.context.pop();
    }
  }, {
    key: "getContext",
    value: function getContext() {
      return this.context[this.context.length - 1];
    }
  }, {
    key: "parsePattern",
    value: function parsePattern(pattern) {
      if (!pattern) {
        throw new Error('Pattern is required');
      }

      var match = pattern.match(OPERATOR);

      if (!match) {
        if (ILLEGAL_CHARACTER_REGEXP.test(pattern)) {
          throw new Error("Illegal characters found in a pattern: ".concat(pattern));
        }

        this.getContext().instructions = this.getContext().instructions.concat(pattern.split(''));
        return;
      }

      var operator = match[1];
      var before = pattern.slice(0, match.index);
      var rightPart = pattern.slice(match.index + operator.length);

      switch (operator) {
        case '(?:':
          if (before) {
            this.parsePattern(before);
          }

          this.startContext({
            or: true,
            instructions: [],
            branches: []
          });
          break;

        case ')':
          if (!this.getContext().or) {
            throw new Error('")" operator must be preceded by "(?:" operator');
          }

          if (before) {
            this.parsePattern(before);
          }

          if (this.getContext().instructions.length === 0) {
            throw new Error('No instructions found after "|" operator in an "or" group');
          }

          var _this$getContext = this.getContext(),
              branches = _this$getContext.branches;

          branches.push(expandSingleElementArray(this.getContext().instructions));
          this.endContext();
          this.getContext().instructions.push({
            op: '|',
            args: branches
          });
          break;

        case '|':
          if (!this.getContext().or) {
            throw new Error('"|" operator can only be used inside "or" groups');
          }

          if (before) {
            this.parsePattern(before);
          } // The top-level is an implicit "or" group, if required.


          if (!this.getContext().branches) {
            // `branches` are not defined only for the root implicit "or" operator.

            /* istanbul ignore else */
            if (this.context.length === 1) {
              this.getContext().branches = [];
            } else {
              throw new Error('"branches" not found in an "or" group context');
            }
          }

          this.getContext().branches.push(expandSingleElementArray(this.getContext().instructions));
          this.getContext().instructions = [];
          break;

        case '[':
          if (before) {
            this.parsePattern(before);
          }

          this.startContext({
            oneOfSet: true
          });
          break;

        case ']':
          if (!this.getContext().oneOfSet) {
            throw new Error('"]" operator must be preceded by "[" operator');
          }

          this.endContext();
          this.getContext().instructions.push({
            op: '[]',
            args: parseOneOfSet(before)
          });
          break;

        /* istanbul ignore next */

        default:
          throw new Error("Unknown operator: ".concat(operator));
      }

      if (rightPart) {
        this.parsePattern(rightPart);
      }
    }
  }]);

  return PatternParser;
}();

function parseOneOfSet(pattern) {
  var values = [];
  var i = 0;

  while (i < pattern.length) {
    if (pattern[i] === '-') {
      if (i === 0 || i === pattern.length - 1) {
        throw new Error("Couldn't parse a one-of set pattern: ".concat(pattern));
      }

      var prevValue = pattern[i - 1].charCodeAt(0) + 1;
      var nextValue = pattern[i + 1].charCodeAt(0) - 1;
      var value = prevValue;

      while (value <= nextValue) {
        values.push(String.fromCharCode(value));
        value++;
      }
    } else {
      values.push(pattern[i]);
    }

    i++;
  }

  return values;
}

var ILLEGAL_CHARACTER_REGEXP = /[\(\)\[\]\?\:\|]/;
var OPERATOR = new RegExp( // any of:
'(' + // or operator
'\\|' + // or
'|' + // or group start
'\\(\\?\\:' + // or
'|' + // or group end
'\\)' + // or
'|' + // one-of set start
'\\[' + // or
'|' + // one-of set end
'\\]' + ')');

function expandSingleElementArray(array) {
  if (array.length === 1) {
    return array[0];
  }

  return array;
}

function _createForOfIteratorHelperLoose$1(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray$3(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray$3(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$3(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen); }

function _arrayLikeToArray$3(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck$4(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties$4(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass$4(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$4(Constructor.prototype, protoProps); if (staticProps) _defineProperties$4(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var PatternMatcher = /*#__PURE__*/function () {
  function PatternMatcher(pattern) {
    _classCallCheck$4(this, PatternMatcher);

    this.matchTree = new PatternParser().parse(pattern);
  }

  _createClass$4(PatternMatcher, [{
    key: "match",
    value: function match(string) {
      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          allowOverflow = _ref.allowOverflow;

      if (!string) {
        throw new Error('String is required');
      }

      var result = _match(string.split(''), this.matchTree, true);

      if (result && result.match) {
        delete result.matchedChars;
      }

      if (result && result.overflow) {
        if (!allowOverflow) {
          return;
        }
      }

      return result;
    }
  }]);

  return PatternMatcher;
}();

function _match(characters, tree, last) {
  // If `tree` is a string, then `tree` is a single character.
  // That's because when a pattern is parsed, multi-character-string parts
  // of a pattern are compiled into arrays of single characters.
  // I still wrote this piece of code for a "general" hypothetical case
  // when `tree` could be a string of several characters, even though
  // such case is not possible with the current implementation.
  if (typeof tree === 'string') {
    var characterString = characters.join('');

    if (tree.indexOf(characterString) === 0) {
      // `tree` is always a single character.
      // If `tree.indexOf(characterString) === 0`
      // then `characters.length === tree.length`.

      /* istanbul ignore else */
      if (characters.length === tree.length) {
        return {
          match: true,
          matchedChars: characters
        };
      } // `tree` is always a single character.
      // If `tree.indexOf(characterString) === 0`
      // then `characters.length === tree.length`.

      /* istanbul ignore next */


      return {
        partialMatch: true // matchedChars: characters

      };
    }

    if (characterString.indexOf(tree) === 0) {
      if (last) {
        // The `else` path is not possible because `tree` is always a single character.
        // The `else` case for `characters.length > tree.length` would be
        // `characters.length <= tree.length` which means `characters.length <= 1`.
        // `characters` array can't be empty, so that means `characters === [tree]`,
        // which would also mean `tree.indexOf(characterString) === 0` and that'd mean
        // that the `if (tree.indexOf(characterString) === 0)` condition before this
        // `if` condition would be entered, and returned from there, not reaching this code.

        /* istanbul ignore else */
        if (characters.length > tree.length) {
          return {
            overflow: true
          };
        }
      }

      return {
        match: true,
        matchedChars: characters.slice(0, tree.length)
      };
    }

    return;
  }

  if (Array.isArray(tree)) {
    var restCharacters = characters.slice();
    var i = 0;

    while (i < tree.length) {
      var subtree = tree[i];

      var result = _match(restCharacters, subtree, last && i === tree.length - 1);

      if (!result) {
        return;
      } else if (result.overflow) {
        return result;
      } else if (result.match) {
        // Continue with the next subtree with the rest of the characters.
        restCharacters = restCharacters.slice(result.matchedChars.length);

        if (restCharacters.length === 0) {
          if (i === tree.length - 1) {
            return {
              match: true,
              matchedChars: characters
            };
          } else {
            return {
              partialMatch: true // matchedChars: characters

            };
          }
        }
      } else {
        /* istanbul ignore else */
        if (result.partialMatch) {
          return {
            partialMatch: true // matchedChars: characters

          };
        } else {
          throw new Error("Unsupported match result:\n".concat(JSON.stringify(result, null, 2)));
        }
      }

      i++;
    } // If `last` then overflow has already been checked
    // by the last element of the `tree` array.

    /* istanbul ignore if */


    if (last) {
      return {
        overflow: true
      };
    }

    return {
      match: true,
      matchedChars: characters.slice(0, characters.length - restCharacters.length)
    };
  }

  switch (tree.op) {
    case '|':
      var partialMatch;

      for (var _iterator = _createForOfIteratorHelperLoose$1(tree.args), _step; !(_step = _iterator()).done;) {
        var branch = _step.value;

        var _result = _match(characters, branch, last);

        if (_result) {
          if (_result.overflow) {
            return _result;
          } else if (_result.match) {
            return {
              match: true,
              matchedChars: _result.matchedChars
            };
          } else {
            /* istanbul ignore else */
            if (_result.partialMatch) {
              partialMatch = true;
            } else {
              throw new Error("Unsupported match result:\n".concat(JSON.stringify(_result, null, 2)));
            }
          }
        }
      }

      if (partialMatch) {
        return {
          partialMatch: true // matchedChars: ...

        };
      } // Not even a partial match.


      return;

    case '[]':
      for (var _iterator2 = _createForOfIteratorHelperLoose$1(tree.args), _step2; !(_step2 = _iterator2()).done;) {
        var _char = _step2.value;

        if (characters[0] === _char) {
          if (characters.length === 1) {
            return {
              match: true,
              matchedChars: characters
            };
          }

          if (last) {
            return {
              overflow: true
            };
          }

          return {
            match: true,
            matchedChars: [_char]
          };
        }
      } // No character matches.


      return;

    /* istanbul ignore next */

    default:
      throw new Error("Unsupported instruction tree: ".concat(tree));
  }
}

function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray$2(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray$2(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$2(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen); }

function _arrayLikeToArray$2(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck$3(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties$3(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass$3(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$3(Constructor.prototype, protoProps); if (staticProps) _defineProperties$3(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
// Could be any digit, I guess.

var DUMMY_DIGIT = '9'; // I don't know why is it exactly `15`

var LONGEST_NATIONAL_PHONE_NUMBER_LENGTH = 15; // Create a phone number consisting only of the digit 9 that matches the
// `number_pattern` by applying the pattern to the "longest phone number" string.

var LONGEST_DUMMY_PHONE_NUMBER = repeat(DUMMY_DIGIT, LONGEST_NATIONAL_PHONE_NUMBER_LENGTH); // A set of characters that, if found in a national prefix formatting rules, are an indicator to
// us that we should separate the national prefix from the number when formatting.

var NATIONAL_PREFIX_SEPARATORS_PATTERN = /[- ]/; // Deprecated: Google has removed some formatting pattern related code from their repo.
// An example of a character class is "[1-4]".

var CREATE_CHARACTER_CLASS_PATTERN = function () {
  return /\[([^\[\]])*\]/g;
}; // Any digit in a regular expression that actually denotes a digit. For
// example, in the regular expression "80[0-2]\d{6,10}", the first 2 digits
// (8 and 0) are standalone digits, but the rest are not.
// Two look-aheads are needed because the number following \\d could be a
// two-digit number, since the phone number can be as long as 15 digits.


var CREATE_STANDALONE_DIGIT_PATTERN = function () {
  return /\d(?=[^,}][^,}])/g;
}; // A regular expression that is used to determine if a `format` is
// suitable to be used in the "as you type formatter".
// A `format` is suitable when the resulting formatted number has
// the same digits as the user has entered.
//
// In the simplest case, that would mean that the format
// doesn't add any additional digits when formatting a number.
// Google says that it also shouldn't add "star" (`*`) characters,
// like it does in some Israeli formats.
// Such basic format would only contain "valid punctuation"
// and "captured group" identifiers ($1, $2, etc).
//
// An example of a format that adds additional digits:
//
// Country: `AR` (Argentina).
// Format:
// {
//    "pattern": "(\\d)(\\d{2})(\\d{4})(\\d{4})",
//    "leading_digits_patterns": ["91"],
//    "national_prefix_formatting_rule": "0$1",
//    "format": "$2 15-$3-$4",
//    "international_format": "$1 $2 $3-$4"
// }
//
// In the format above, the `format` adds `15` to the digits when formatting a number.
// A sidenote: this format actually is suitable because `national_prefix_for_parsing`
// has previously removed `15` from a national number, so re-adding `15` in `format`
// doesn't actually result in any extra digits added to user's input.
// But verifying that would be a complex procedure, so the code chooses a simpler path:
// it simply filters out all `format`s that contain anything but "captured group" ids.
//
// This regular expression is called `ELIGIBLE_FORMAT_PATTERN` in Google's
// `libphonenumber` code.
//


var NON_ALTERING_FORMAT_REG_EXP = new RegExp('[' + VALID_PUNCTUATION + ']*' + // Google developers say:
// "We require that the first matching group is present in the
//  output pattern to ensure no data is lost while formatting."
'\\$1' + '[' + VALID_PUNCTUATION + ']*' + '(\\$\\d[' + VALID_PUNCTUATION + ']*)*' + '$'); // This is the minimum length of the leading digits of a phone number
// to guarantee the first "leading digits pattern" for a phone number format
// to be preemptive.

var MIN_LEADING_DIGITS_LENGTH = 3;

var AsYouTypeFormatter = /*#__PURE__*/function () {
  function AsYouTypeFormatter(_ref) {
    _ref.state;
        var metadata = _ref.metadata;

    _classCallCheck$3(this, AsYouTypeFormatter);

    this.metadata = metadata;
    this.resetFormat();
  }

  _createClass$3(AsYouTypeFormatter, [{
    key: "resetFormat",
    value: function resetFormat() {
      this.chosenFormat = undefined;
      this.template = undefined;
      this.nationalNumberTemplate = undefined;
      this.populatedNationalNumberTemplate = undefined;
      this.populatedNationalNumberTemplatePosition = -1;
    }
  }, {
    key: "reset",
    value: function reset(numberingPlan, state) {
      this.resetFormat();

      if (numberingPlan) {
        this.isNANP = numberingPlan.callingCode() === '1';
        this.matchingFormats = numberingPlan.formats();

        if (state.nationalSignificantNumber) {
          this.narrowDownMatchingFormats(state);
        }
      } else {
        this.isNANP = undefined;
        this.matchingFormats = [];
      }
    }
    /**
     * Formats an updated phone number.
     * @param  {string} nextDigits — Additional phone number digits.
     * @param  {object} state — `AsYouType` state.
     * @return {[string]} Returns undefined if the updated phone number can't be formatted using any of the available formats.
     */

  }, {
    key: "format",
    value: function format(nextDigits, state) {
      var _this = this;

      // See if the phone number digits can be formatted as a complete phone number.
      // If not, use the results from `formatNationalNumberWithNextDigits()`,
      // which formats based on the chosen formatting pattern.
      //
      // Attempting to format complete phone number first is how it's done
      // in Google's `libphonenumber`, so this library just follows it.
      // Google's `libphonenumber` code doesn't explain in detail why does it
      // attempt to format digits as a complete phone number
      // instead of just going with a previoulsy (or newly) chosen `format`:
      //
      // "Checks to see if there is an exact pattern match for these digits.
      //  If so, we should use this instead of any other formatting template
      //  whose leadingDigitsPattern also matches the input."
      //
      if (canFormatCompleteNumber(state.nationalSignificantNumber, this.metadata)) {
        for (var _iterator = _createForOfIteratorHelperLoose(this.matchingFormats), _step; !(_step = _iterator()).done;) {
          var format = _step.value;
          var formattedCompleteNumber = formatCompleteNumber(state, format, {
            metadata: this.metadata,
            shouldTryNationalPrefixFormattingRule: function shouldTryNationalPrefixFormattingRule(format) {
              return _this.shouldTryNationalPrefixFormattingRule(format, {
                international: state.international,
                nationalPrefix: state.nationalPrefix
              });
            },
            getSeparatorAfterNationalPrefix: function getSeparatorAfterNationalPrefix(format) {
              return _this.getSeparatorAfterNationalPrefix(format);
            }
          });

          if (formattedCompleteNumber) {
            this.resetFormat();
            this.chosenFormat = format;
            this.setNationalNumberTemplate(formattedCompleteNumber.replace(/\d/g, DIGIT_PLACEHOLDER), state);
            this.populatedNationalNumberTemplate = formattedCompleteNumber; // With a new formatting template, the matched position
            // using the old template needs to be reset.

            this.populatedNationalNumberTemplatePosition = this.template.lastIndexOf(DIGIT_PLACEHOLDER);
            return formattedCompleteNumber;
          }
        }
      } // Format the digits as a partial (incomplete) phone number
      // using the previously chosen formatting pattern (or a newly chosen one).


      return this.formatNationalNumberWithNextDigits(nextDigits, state);
    } // Formats the next phone number digits.

  }, {
    key: "formatNationalNumberWithNextDigits",
    value: function formatNationalNumberWithNextDigits(nextDigits, state) {
      var previouslyChosenFormat = this.chosenFormat; // Choose a format from the list of matching ones.

      var newlyChosenFormat = this.chooseFormat(state);

      if (newlyChosenFormat) {
        if (newlyChosenFormat === previouslyChosenFormat) {
          // If it can format the next (current) digits
          // using the previously chosen phone number format
          // then return the updated formatted number.
          return this.formatNextNationalNumberDigits(nextDigits);
        } else {
          // If a more appropriate phone number format
          // has been chosen for these "leading digits",
          // then re-format the national phone number part
          // using the newly selected format.
          return this.formatNextNationalNumberDigits(state.getNationalDigits());
        }
      }
    }
  }, {
    key: "narrowDownMatchingFormats",
    value: function narrowDownMatchingFormats(_ref2) {
      var _this2 = this;

      var nationalSignificantNumber = _ref2.nationalSignificantNumber,
          nationalPrefix = _ref2.nationalPrefix,
          international = _ref2.international;
      var leadingDigits = nationalSignificantNumber; // "leading digits" pattern list starts with a
      // "leading digits" pattern fitting a maximum of 3 leading digits.
      // So, after a user inputs 3 digits of a national (significant) phone number
      // this national (significant) number can already be formatted.
      // The next "leading digits" pattern is for 4 leading digits max,
      // and the "leading digits" pattern after it is for 5 leading digits max, etc.
      // This implementation is different from Google's
      // in that it searches for a fitting format
      // even if the user has entered less than
      // `MIN_LEADING_DIGITS_LENGTH` digits of a national number.
      // Because some leading digit patterns already match for a single first digit.

      var leadingDigitsPatternIndex = leadingDigits.length - MIN_LEADING_DIGITS_LENGTH;

      if (leadingDigitsPatternIndex < 0) {
        leadingDigitsPatternIndex = 0;
      }

      this.matchingFormats = this.matchingFormats.filter(function (format) {
        return _this2.formatSuits(format, international, nationalPrefix) && _this2.formatMatches(format, leadingDigits, leadingDigitsPatternIndex);
      }); // If there was a phone number format chosen
      // and it no longer holds given the new leading digits then reset it.
      // The test for this `if` condition is marked as:
      // "Reset a chosen format when it no longer holds given the new leading digits".
      // To construct a valid test case for this one can find a country
      // in `PhoneNumberMetadata.xml` yielding one format for 3 `<leadingDigits>`
      // and yielding another format for 4 `<leadingDigits>` (Australia in this case).

      if (this.chosenFormat && this.matchingFormats.indexOf(this.chosenFormat) === -1) {
        this.resetFormat();
      }
    }
  }, {
    key: "formatSuits",
    value: function formatSuits(format, international, nationalPrefix) {
      // When a prefix before a national (significant) number is
      // simply a national prefix, then it's parsed as `this.nationalPrefix`.
      // In more complex cases, a prefix before national (significant) number
      // could include a national prefix as well as some "capturing groups",
      // and in that case there's no info whether a national prefix has been parsed.
      // If national prefix is not used when formatting a phone number
      // using this format, but a national prefix has been entered by the user,
      // and was extracted, then discard such phone number format.
      // In Google's "AsYouType" formatter code, the equivalent would be this part:
      // https://github.com/google/libphonenumber/blob/0a45cfd96e71cad8edb0e162a70fcc8bd9728933/java/libphonenumber/src/com/google/i18n/phonenumbers/AsYouTypeFormatter.java#L175-L184
      if (nationalPrefix && !format.usesNationalPrefix() && // !format.domesticCarrierCodeFormattingRule() &&
      !format.nationalPrefixIsOptionalWhenFormattingInNationalFormat()) {
        return false;
      } // If national prefix is mandatory for this phone number format
      // and there're no guarantees that a national prefix is present in user input
      // then discard this phone number format as not suitable.
      // In Google's "AsYouType" formatter code, the equivalent would be this part:
      // https://github.com/google/libphonenumber/blob/0a45cfd96e71cad8edb0e162a70fcc8bd9728933/java/libphonenumber/src/com/google/i18n/phonenumbers/AsYouTypeFormatter.java#L185-L193


      if (!international && !nationalPrefix && format.nationalPrefixIsMandatoryWhenFormattingInNationalFormat()) {
        return false;
      }

      return true;
    }
  }, {
    key: "formatMatches",
    value: function formatMatches(format, leadingDigits, leadingDigitsPatternIndex) {
      var leadingDigitsPatternsCount = format.leadingDigitsPatterns().length; // If this format is not restricted to a certain
      // leading digits pattern then it fits.
      // The test case could be found by searching for "leadingDigitsPatternsCount === 0".

      if (leadingDigitsPatternsCount === 0) {
        return true;
      } // Start narrowing down the list of possible formats based on the leading digits.
      // (only previously matched formats take part in the narrowing down process)
      // `leading_digits_patterns` start with 3 digits min
      // and then go up from there one digit at a time.


      leadingDigitsPatternIndex = Math.min(leadingDigitsPatternIndex, leadingDigitsPatternsCount - 1);
      var leadingDigitsPattern = format.leadingDigitsPatterns()[leadingDigitsPatternIndex]; // Google imposes a requirement on the leading digits
      // to be minimum 3 digits long in order to be eligible
      // for checking those with a leading digits pattern.
      //
      // Since `leading_digits_patterns` start with 3 digits min,
      // Google's original `libphonenumber` library only starts
      // excluding any non-matching formats only when the
      // national number entered so far is at least 3 digits long,
      // otherwise format matching would give false negatives.
      //
      // For example, when the digits entered so far are `2`
      // and the leading digits pattern is `21` –
      // it's quite obvious in this case that the format could be the one
      // but due to the absence of further digits it would give false negative.
      //
      // Also, `leading_digits_patterns` doesn't always correspond to a single
      // digits count. For example, `60|8` pattern would already match `8`
      // but the `60` part would require having at least two leading digits,
      // so the whole pattern would require inputting two digits first in order to
      // decide on whether it matches the input, even when the input is "80".
      //
      // This library — `libphonenumber-js` — allows filtering by `leading_digits_patterns`
      // even when there's only 1 or 2 digits of the national (significant) number.
      // To do that, it uses a non-strict pattern matcher written specifically for that.
      //

      if (leadingDigits.length < MIN_LEADING_DIGITS_LENGTH) {
        // Before leading digits < 3 matching was implemented:
        // return true
        //
        // After leading digits < 3 matching was implemented:
        try {
          return new PatternMatcher(leadingDigitsPattern).match(leadingDigits, {
            allowOverflow: true
          }) !== undefined;
        } catch (error)
        /* istanbul ignore next */
        {
          // There's a slight possibility that there could be some undiscovered bug
          // in the pattern matcher code. Since the "leading digits < 3 matching"
          // feature is not "essential" for operation, it can fall back to the old way
          // in case of any issues rather than halting the application's execution.
          console.error(error);
          return true;
        }
      } // If at least `MIN_LEADING_DIGITS_LENGTH` digits of a national number are
      // available then use the usual regular expression matching.
      //
      // The whole pattern is wrapped in round brackets (`()`) because
      // the pattern can use "or" operator (`|`) at the top level of the pattern.
      //


      return new RegExp("^(".concat(leadingDigitsPattern, ")")).test(leadingDigits);
    }
  }, {
    key: "getFormatFormat",
    value: function getFormatFormat(format, international) {
      return international ? format.internationalFormat() : format.format();
    }
  }, {
    key: "chooseFormat",
    value: function chooseFormat(state) {
      var _this3 = this;

      var _loop = function _loop() {
        var format = _step2.value;

        // If this format is currently being used
        // and is still suitable, then stick to it.
        if (_this3.chosenFormat === format) {
          return "break";
        } // Sometimes, a formatting rule inserts additional digits in a phone number,
        // and "as you type" formatter can't do that: it should only use the digits
        // that the user has input.
        //
        // For example, in Argentina, there's a format for mobile phone numbers:
        //
        // {
        //    "pattern": "(\\d)(\\d{2})(\\d{4})(\\d{4})",
        //    "leading_digits_patterns": ["91"],
        //    "national_prefix_formatting_rule": "0$1",
        //    "format": "$2 15-$3-$4",
        //    "international_format": "$1 $2 $3-$4"
        // }
        //
        // In that format, `international_format` is used instead of `format`
        // because `format` inserts `15` in the formatted number,
        // and `AsYouType` formatter should only use the digits
        // the user has actually input, without adding any extra digits.
        // In this case, it wouldn't make a difference, because the `15`
        // is first stripped when applying `national_prefix_for_parsing`
        // and then re-added when using `format`, so in reality it doesn't
        // add any new digits to the number, but to detect that, the code
        // would have to be more complex: it would have to try formatting
        // the digits using the format and then see if any digits have
        // actually been added or removed, and then, every time a new digit
        // is input, it should re-check whether the chosen format doesn't
        // alter the digits.
        //
        // Google's code doesn't go that far, and so does this library:
        // it simply requires that a `format` doesn't add any additonal
        // digits to user's input.
        //
        // Also, people in general should move from inputting phone numbers
        // in national format (possibly with national prefixes)
        // and use international phone number format instead:
        // it's a logical thing in the modern age of mobile phones,
        // globalization and the internet.
        //

        /* istanbul ignore if */


        if (!NON_ALTERING_FORMAT_REG_EXP.test(_this3.getFormatFormat(format, state.international))) {
          return "continue";
        }

        if (!_this3.createTemplateForFormat(format, state)) {
          // Remove the format if it can't generate a template.
          _this3.matchingFormats = _this3.matchingFormats.filter(function (_) {
            return _ !== format;
          });
          return "continue";
        }

        _this3.chosenFormat = format;
        return "break";
      };

      // When there are multiple available formats, the formatter uses the first
      // format where a formatting template could be created.
      //
      // For some weird reason, `istanbul` says "else path not taken"
      // for the `for of` line below. Supposedly that means that
      // the loop doesn't ever go over the last element in the list.
      // That's true because there always is `this.chosenFormat`
      // when `this.matchingFormats` is non-empty.
      // And, for some weird reason, it doesn't think that the case
      // with empty `this.matchingFormats` qualifies for a valid "else" path.
      // So simply muting this `istanbul` warning.
      // It doesn't skip the contents of the `for of` loop,
      // it just skips the `for of` line.
      //

      /* istanbul ignore next */
      for (var _iterator2 = _createForOfIteratorHelperLoose(this.matchingFormats.slice()), _step2; !(_step2 = _iterator2()).done;) {
        var _ret = _loop();

        if (_ret === "break") break;
        if (_ret === "continue") continue;
      }

      if (!this.chosenFormat) {
        // No format matches the national (significant) phone number.
        this.resetFormat();
      }

      return this.chosenFormat;
    }
  }, {
    key: "createTemplateForFormat",
    value: function createTemplateForFormat(format, state) {
      // The formatter doesn't format numbers when numberPattern contains '|', e.g.
      // (20|3)\d{4}. In those cases we quickly return.
      // (Though there's no such format in current metadata)

      /* istanbul ignore if */
      if (format.pattern().indexOf('|') >= 0) {
        return;
      } // Get formatting template for this phone number format


      var template = this.getTemplateForFormat(format, state); // If the national number entered is too long
      // for any phone number format, then abort.

      if (template) {
        this.setNationalNumberTemplate(template, state);
        return true;
      }
    }
  }, {
    key: "getSeparatorAfterNationalPrefix",
    value: function getSeparatorAfterNationalPrefix(format) {
      // `US` metadata doesn't have a `national_prefix_formatting_rule`,
      // so the `if` condition below doesn't apply to `US`,
      // but in reality there shoudl be a separator
      // between a national prefix and a national (significant) number.
      // So `US` national prefix separator is a "special" "hardcoded" case.
      if (this.isNANP) {
        return ' ';
      } // If a `format` has a `national_prefix_formatting_rule`
      // and that rule has a separator after a national prefix,
      // then it means that there should be a separator
      // between a national prefix and a national (significant) number.


      if (format && format.nationalPrefixFormattingRule() && NATIONAL_PREFIX_SEPARATORS_PATTERN.test(format.nationalPrefixFormattingRule())) {
        return ' ';
      } // At this point, there seems to be no clear evidence that
      // there should be a separator between a national prefix
      // and a national (significant) number. So don't insert one.


      return '';
    }
  }, {
    key: "getInternationalPrefixBeforeCountryCallingCode",
    value: function getInternationalPrefixBeforeCountryCallingCode(_ref3, options) {
      var IDDPrefix = _ref3.IDDPrefix,
          missingPlus = _ref3.missingPlus;

      if (IDDPrefix) {
        return options && options.spacing === false ? IDDPrefix : IDDPrefix + ' ';
      }

      if (missingPlus) {
        return '';
      }

      return '+';
    }
  }, {
    key: "getTemplate",
    value: function getTemplate(state) {
      if (!this.template) {
        return;
      } // `this.template` holds the template for a "complete" phone number.
      // The currently entered phone number is most likely not "complete",
      // so trim all non-populated digits.


      var index = -1;
      var i = 0;
      var internationalPrefix = state.international ? this.getInternationalPrefixBeforeCountryCallingCode(state, {
        spacing: false
      }) : '';

      while (i < internationalPrefix.length + state.getDigitsWithoutInternationalPrefix().length) {
        index = this.template.indexOf(DIGIT_PLACEHOLDER, index + 1);
        i++;
      }

      return cutAndStripNonPairedParens(this.template, index + 1);
    }
  }, {
    key: "setNationalNumberTemplate",
    value: function setNationalNumberTemplate(template, state) {
      this.nationalNumberTemplate = template;
      this.populatedNationalNumberTemplate = template; // With a new formatting template, the matched position
      // using the old template needs to be reset.

      this.populatedNationalNumberTemplatePosition = -1; // For convenience, the public `.template` property
      // contains the whole international number
      // if the phone number being input is international:
      // 'x' for the '+' sign, 'x'es for the country phone code,
      // a spacebar and then the template for the formatted national number.

      if (state.international) {
        this.template = this.getInternationalPrefixBeforeCountryCallingCode(state).replace(/[\d\+]/g, DIGIT_PLACEHOLDER) + repeat(DIGIT_PLACEHOLDER, state.callingCode.length) + ' ' + template;
      } else {
        this.template = template;
      }
    }
    /**
     * Generates formatting template for a national phone number,
     * optionally containing a national prefix, for a format.
     * @param  {Format} format
     * @param  {string} nationalPrefix
     * @return {string}
     */

  }, {
    key: "getTemplateForFormat",
    value: function getTemplateForFormat(format, _ref4) {
      var nationalSignificantNumber = _ref4.nationalSignificantNumber,
          international = _ref4.international,
          nationalPrefix = _ref4.nationalPrefix,
          complexPrefixBeforeNationalSignificantNumber = _ref4.complexPrefixBeforeNationalSignificantNumber;
      var pattern = format.pattern();
      /* istanbul ignore else */

      {
        pattern = pattern // Replace anything in the form of [..] with \d
        .replace(CREATE_CHARACTER_CLASS_PATTERN(), '\\d') // Replace any standalone digit (not the one in `{}`) with \d
        .replace(CREATE_STANDALONE_DIGIT_PATTERN(), '\\d');
      } // Generate a dummy national number (consisting of `9`s)
      // that fits this format's `pattern`.
      //
      // This match will always succeed,
      // because the "longest dummy phone number"
      // has enough length to accomodate any possible
      // national phone number format pattern.
      //


      var digits = LONGEST_DUMMY_PHONE_NUMBER.match(pattern)[0]; // If the national number entered is too long
      // for any phone number format, then abort.

      if (nationalSignificantNumber.length > digits.length) {
        return;
      } // Get a formatting template which can be used to efficiently format
      // a partial number where digits are added one by one.
      // Below `strictPattern` is used for the
      // regular expression (with `^` and `$`).
      // This wasn't originally in Google's `libphonenumber`
      // and I guess they don't really need it
      // because they're not using "templates" to format phone numbers
      // but I added `strictPattern` after encountering
      // South Korean phone number formatting bug.
      //
      // Non-strict regular expression bug demonstration:
      //
      // this.nationalSignificantNumber : `111111111` (9 digits)
      //
      // pattern : (\d{2})(\d{3,4})(\d{4})
      // format : `$1 $2 $3`
      // digits : `9999999999` (10 digits)
      //
      // '9999999999'.replace(new RegExp(/(\d{2})(\d{3,4})(\d{4})/g), '$1 $2 $3') = "99 9999 9999"
      //
      // template : xx xxxx xxxx
      //
      // But the correct template in this case is `xx xxx xxxx`.
      // The template was generated incorrectly because of the
      // `{3,4}` variability in the `pattern`.
      //
      // The fix is, if `this.nationalSignificantNumber` has already sufficient length
      // to satisfy the `pattern` completely then `this.nationalSignificantNumber`
      // is used instead of `digits`.


      var strictPattern = new RegExp('^' + pattern + '$');
      var nationalNumberDummyDigits = nationalSignificantNumber.replace(/\d/g, DUMMY_DIGIT); // If `this.nationalSignificantNumber` has already sufficient length
      // to satisfy the `pattern` completely then use it
      // instead of `digits`.

      if (strictPattern.test(nationalNumberDummyDigits)) {
        digits = nationalNumberDummyDigits;
      }

      var numberFormat = this.getFormatFormat(format, international);
      var nationalPrefixIncludedInTemplate; // If a user did input a national prefix (and that's guaranteed),
      // and if a `format` does have a national prefix formatting rule,
      // then see if that national prefix formatting rule
      // prepends exactly the same national prefix the user has input.
      // If that's the case, then use the `format` with the national prefix formatting rule.
      // Otherwise, use  the `format` without the national prefix formatting rule,
      // and prepend a national prefix manually to it.

      if (this.shouldTryNationalPrefixFormattingRule(format, {
        international: international,
        nationalPrefix: nationalPrefix
      })) {
        var numberFormatWithNationalPrefix = numberFormat.replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule()); // If `national_prefix_formatting_rule` of a `format` simply prepends
        // national prefix at the start of a national (significant) number,
        // then such formatting can be used with `AsYouType` formatter.
        // There seems to be no `else` case: everywhere in metadata,
        // national prefix formatting rule is national prefix + $1,
        // or `($1)`, in which case such format isn't even considered
        // when the user has input a national prefix.

        /* istanbul ignore else */

        if (parseDigits(format.nationalPrefixFormattingRule()) === (nationalPrefix || '') + parseDigits('$1')) {
          numberFormat = numberFormatWithNationalPrefix;
          nationalPrefixIncludedInTemplate = true; // Replace all digits of the national prefix in the formatting template
          // with `DIGIT_PLACEHOLDER`s.

          if (nationalPrefix) {
            var i = nationalPrefix.length;

            while (i > 0) {
              numberFormat = numberFormat.replace(/\d/, DIGIT_PLACEHOLDER);
              i--;
            }
          }
        }
      } // Generate formatting template for this phone number format.


      var template = digits // Format the dummy phone number according to the format.
      .replace(new RegExp(pattern), numberFormat) // Replace each dummy digit with a DIGIT_PLACEHOLDER.
      .replace(new RegExp(DUMMY_DIGIT, 'g'), DIGIT_PLACEHOLDER); // If a prefix of a national (significant) number is not as simple
      // as just a basic national prefix, then just prepend such prefix
      // before the national (significant) number, optionally spacing
      // the two with a whitespace.

      if (!nationalPrefixIncludedInTemplate) {
        if (complexPrefixBeforeNationalSignificantNumber) {
          // Prepend the prefix to the template manually.
          template = repeat(DIGIT_PLACEHOLDER, complexPrefixBeforeNationalSignificantNumber.length) + ' ' + template;
        } else if (nationalPrefix) {
          // Prepend national prefix to the template manually.
          template = repeat(DIGIT_PLACEHOLDER, nationalPrefix.length) + this.getSeparatorAfterNationalPrefix(format) + template;
        }
      }

      if (international) {
        template = applyInternationalSeparatorStyle(template);
      }

      return template;
    }
  }, {
    key: "formatNextNationalNumberDigits",
    value: function formatNextNationalNumberDigits(digits) {
      var result = populateTemplateWithDigits(this.populatedNationalNumberTemplate, this.populatedNationalNumberTemplatePosition, digits);

      if (!result) {
        // Reset the format.
        this.resetFormat();
        return;
      }

      this.populatedNationalNumberTemplate = result[0];
      this.populatedNationalNumberTemplatePosition = result[1]; // Return the formatted phone number so far.

      return cutAndStripNonPairedParens(this.populatedNationalNumberTemplate, this.populatedNationalNumberTemplatePosition + 1); // The old way which was good for `input-format` but is not so good
      // for `react-phone-number-input`'s default input (`InputBasic`).
      // return closeNonPairedParens(this.populatedNationalNumberTemplate, this.populatedNationalNumberTemplatePosition + 1)
      // 	.replace(new RegExp(DIGIT_PLACEHOLDER, 'g'), ' ')
    }
  }, {
    key: "shouldTryNationalPrefixFormattingRule",
    value: function shouldTryNationalPrefixFormattingRule(format, _ref5) {
      var international = _ref5.international,
          nationalPrefix = _ref5.nationalPrefix;

      if (format.nationalPrefixFormattingRule()) {
        // In some countries, `national_prefix_formatting_rule` is `($1)`,
        // so it applies even if the user hasn't input a national prefix.
        // `format.usesNationalPrefix()` detects such cases.
        var usesNationalPrefix = format.usesNationalPrefix();

        if (usesNationalPrefix && nationalPrefix || !usesNationalPrefix && !international) {
          return true;
        }
      }
    }
  }]);

  return AsYouTypeFormatter;
}();

function _slicedToArray$1(arr, i) { return _arrayWithHoles$1(arr) || _iterableToArrayLimit$1(arr, i) || _unsupportedIterableToArray$1(arr, i) || _nonIterableRest$1(); }

function _nonIterableRest$1() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray$1(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$1(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen); }

function _arrayLikeToArray$1(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit$1(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles$1(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck$2(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties$2(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass$2(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$2(Constructor.prototype, protoProps); if (staticProps) _defineProperties$2(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
var VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART = '[' + VALID_PUNCTUATION + VALID_DIGITS + ']+';
var VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART_PATTERN = new RegExp('^' + VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART + '$', 'i');
var VALID_FORMATTED_PHONE_NUMBER_PART = '(?:' + '[' + PLUS_CHARS + ']' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*' + '|' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']+' + ')';
var AFTER_PHONE_NUMBER_DIGITS_END_PATTERN = new RegExp('[^' + VALID_PUNCTUATION + VALID_DIGITS + ']+' + '.*' + '$'); // Tests whether `national_prefix_for_parsing` could match
// different national prefixes.
// Matches anything that's not a digit or a square bracket.

var COMPLEX_NATIONAL_PREFIX = /[^\d\[\]]/;

var AsYouTypeParser = /*#__PURE__*/function () {
  function AsYouTypeParser(_ref) {
    var defaultCountry = _ref.defaultCountry,
        defaultCallingCode = _ref.defaultCallingCode,
        metadata = _ref.metadata,
        onNationalSignificantNumberChange = _ref.onNationalSignificantNumberChange;

    _classCallCheck$2(this, AsYouTypeParser);

    this.defaultCountry = defaultCountry;
    this.defaultCallingCode = defaultCallingCode;
    this.metadata = metadata;
    this.onNationalSignificantNumberChange = onNationalSignificantNumberChange;
  }

  _createClass$2(AsYouTypeParser, [{
    key: "input",
    value: function input(text, state) {
      var _extractFormattedDigi = extractFormattedDigitsAndPlus(text),
          _extractFormattedDigi2 = _slicedToArray$1(_extractFormattedDigi, 2),
          formattedDigits = _extractFormattedDigi2[0],
          hasPlus = _extractFormattedDigi2[1];

      var digits = parseDigits(formattedDigits); // Checks for a special case: just a leading `+` has been entered.

      var justLeadingPlus;

      if (hasPlus) {
        if (!state.digits) {
          state.startInternationalNumber();

          if (!digits) {
            justLeadingPlus = true;
          }
        }
      }

      if (digits) {
        this.inputDigits(digits, state);
      }

      return {
        digits: digits,
        justLeadingPlus: justLeadingPlus
      };
    }
    /**
     * Inputs "next" phone number digits.
     * @param  {string} digits
     * @return {string} [formattedNumber] Formatted national phone number (if it can be formatted at this stage). Returning `undefined` means "don't format the national phone number at this stage".
     */

  }, {
    key: "inputDigits",
    value: function inputDigits(nextDigits, state) {
      var digits = state.digits;
      var hasReceivedThreeLeadingDigits = digits.length < 3 && digits.length + nextDigits.length >= 3; // Append phone number digits.

      state.appendDigits(nextDigits); // Attempt to extract IDD prefix:
      // Some users input their phone number in international format,
      // but in an "out-of-country" dialing format instead of using the leading `+`.
      // https://github.com/catamphetamine/libphonenumber-js/issues/185
      // Detect such numbers as soon as there're at least 3 digits.
      // Google's library attempts to extract IDD prefix at 3 digits,
      // so this library just copies that behavior.
      // I guess that's because the most commot IDD prefixes are
      // `00` (Europe) and `011` (US).
      // There exist really long IDD prefixes too:
      // for example, in Australia the default IDD prefix is `0011`,
      // and it could even be as long as `14880011`.
      // An IDD prefix is extracted here, and then every time when
      // there's a new digit and the number couldn't be formatted.

      if (hasReceivedThreeLeadingDigits) {
        this.extractIddPrefix(state);
      }

      if (this.isWaitingForCountryCallingCode(state)) {
        if (!this.extractCountryCallingCode(state)) {
          return;
        }
      } else {
        state.appendNationalSignificantNumberDigits(nextDigits);
      } // If a phone number is being input in international format,
      // then it's not valid for it to have a national prefix.
      // Still, some people incorrectly input such numbers with a national prefix.
      // In such cases, only attempt to strip a national prefix if the number becomes too long.
      // (but that is done later, not here)


      if (!state.international) {
        if (!this.hasExtractedNationalSignificantNumber) {
          this.extractNationalSignificantNumber(state.getNationalDigits(), function (stateUpdate) {
            return state.update(stateUpdate);
          });
        }
      }
    }
  }, {
    key: "isWaitingForCountryCallingCode",
    value: function isWaitingForCountryCallingCode(_ref2) {
      var international = _ref2.international,
          callingCode = _ref2.callingCode;
      return international && !callingCode;
    } // Extracts a country calling code from a number
    // being entered in internatonal format.

  }, {
    key: "extractCountryCallingCode",
    value: function extractCountryCallingCode$1(state) {
      var _extractCountryCallin = extractCountryCallingCode('+' + state.getDigitsWithoutInternationalPrefix(), this.defaultCountry, this.defaultCallingCode, this.metadata.metadata),
          countryCallingCode = _extractCountryCallin.countryCallingCode,
          number = _extractCountryCallin.number;

      if (countryCallingCode) {
        state.setCallingCode(countryCallingCode);
        state.update({
          nationalSignificantNumber: number
        });
        return true;
      }
    }
  }, {
    key: "reset",
    value: function reset(numberingPlan) {
      if (numberingPlan) {
        this.hasSelectedNumberingPlan = true;

        var nationalPrefixForParsing = numberingPlan._nationalPrefixForParsing();

        this.couldPossiblyExtractAnotherNationalSignificantNumber = nationalPrefixForParsing && COMPLEX_NATIONAL_PREFIX.test(nationalPrefixForParsing);
      } else {
        this.hasSelectedNumberingPlan = undefined;
        this.couldPossiblyExtractAnotherNationalSignificantNumber = undefined;
      }
    }
    /**
     * Extracts a national (significant) number from user input.
     * Google's library is different in that it only applies `national_prefix_for_parsing`
     * and doesn't apply `national_prefix_transform_rule` after that.
     * https://github.com/google/libphonenumber/blob/a3d70b0487875475e6ad659af404943211d26456/java/libphonenumber/src/com/google/i18n/phonenumbers/AsYouTypeFormatter.java#L539
     * @return {boolean} [extracted]
     */

  }, {
    key: "extractNationalSignificantNumber",
    value: function extractNationalSignificantNumber(nationalDigits, setState) {
      if (!this.hasSelectedNumberingPlan) {
        return;
      }

      var _extractNationalNumbe = extractNationalNumberFromPossiblyIncompleteNumber(nationalDigits, this.metadata),
          nationalPrefix = _extractNationalNumbe.nationalPrefix,
          nationalNumber = _extractNationalNumbe.nationalNumber,
          carrierCode = _extractNationalNumbe.carrierCode;

      if (nationalNumber === nationalDigits) {
        return;
      }

      this.onExtractedNationalNumber(nationalPrefix, carrierCode, nationalNumber, nationalDigits, setState);
      return true;
    }
    /**
     * In Google's code this function is called "attempt to extract longer NDD".
     * "Some national prefixes are a substring of others", they say.
     * @return {boolean} [result] — Returns `true` if extracting a national prefix produced different results from what they were.
     */

  }, {
    key: "extractAnotherNationalSignificantNumber",
    value: function extractAnotherNationalSignificantNumber(nationalDigits, prevNationalSignificantNumber, setState) {
      if (!this.hasExtractedNationalSignificantNumber) {
        return this.extractNationalSignificantNumber(nationalDigits, setState);
      }

      if (!this.couldPossiblyExtractAnotherNationalSignificantNumber) {
        return;
      }

      var _extractNationalNumbe2 = extractNationalNumberFromPossiblyIncompleteNumber(nationalDigits, this.metadata),
          nationalPrefix = _extractNationalNumbe2.nationalPrefix,
          nationalNumber = _extractNationalNumbe2.nationalNumber,
          carrierCode = _extractNationalNumbe2.carrierCode; // If a national prefix has been extracted previously,
      // then it's always extracted as additional digits are added.
      // That's assuming `extractNationalNumberFromPossiblyIncompleteNumber()`
      // doesn't do anything different from what it currently does.
      // So, just in case, here's this check, though it doesn't occur.

      /* istanbul ignore if */


      if (nationalNumber === prevNationalSignificantNumber) {
        return;
      }

      this.onExtractedNationalNumber(nationalPrefix, carrierCode, nationalNumber, nationalDigits, setState);
      return true;
    }
  }, {
    key: "onExtractedNationalNumber",
    value: function onExtractedNationalNumber(nationalPrefix, carrierCode, nationalSignificantNumber, nationalDigits, setState) {
      var complexPrefixBeforeNationalSignificantNumber;
      var nationalSignificantNumberMatchesInput; // This check also works with empty `this.nationalSignificantNumber`.

      var nationalSignificantNumberIndex = nationalDigits.lastIndexOf(nationalSignificantNumber); // If the extracted national (significant) number is the
      // last substring of the `digits`, then it means that it hasn't been altered:
      // no digits have been removed from the national (significant) number
      // while applying `national_prefix_transform_rule`.
      // https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule

      if (nationalSignificantNumberIndex >= 0 && nationalSignificantNumberIndex === nationalDigits.length - nationalSignificantNumber.length) {
        nationalSignificantNumberMatchesInput = true; // If a prefix of a national (significant) number is not as simple
        // as just a basic national prefix, then such prefix is stored in
        // `this.complexPrefixBeforeNationalSignificantNumber` property and will be
        // prepended "as is" to the national (significant) number to produce
        // a formatted result.

        var prefixBeforeNationalNumber = nationalDigits.slice(0, nationalSignificantNumberIndex); // `prefixBeforeNationalNumber` is always non-empty,
        // because `onExtractedNationalNumber()` isn't called
        // when a national (significant) number hasn't been actually "extracted":
        // when a national (significant) number is equal to the national part of `digits`,
        // then `onExtractedNationalNumber()` doesn't get called.

        if (prefixBeforeNationalNumber !== nationalPrefix) {
          complexPrefixBeforeNationalSignificantNumber = prefixBeforeNationalNumber;
        }
      }

      setState({
        nationalPrefix: nationalPrefix,
        carrierCode: carrierCode,
        nationalSignificantNumber: nationalSignificantNumber,
        nationalSignificantNumberMatchesInput: nationalSignificantNumberMatchesInput,
        complexPrefixBeforeNationalSignificantNumber: complexPrefixBeforeNationalSignificantNumber
      }); // `onExtractedNationalNumber()` is only called when
      // the national (significant) number actually did change.

      this.hasExtractedNationalSignificantNumber = true;
      this.onNationalSignificantNumberChange();
    }
  }, {
    key: "reExtractNationalSignificantNumber",
    value: function reExtractNationalSignificantNumber(state) {
      // Attempt to extract a national prefix.
      //
      // Some people incorrectly input national prefix
      // in an international phone number.
      // For example, some people write British phone numbers as `+44(0)...`.
      //
      // Also, in some rare cases, it is valid for a national prefix
      // to be a part of an international phone number.
      // For example, mobile phone numbers in Mexico are supposed to be
      // dialled internationally using a `1` national prefix,
      // so the national prefix will be part of an international number.
      //
      // Quote from:
      // https://www.mexperience.com/dialing-cell-phones-in-mexico/
      //
      // "Dialing a Mexican cell phone from abroad
      // When you are calling a cell phone number in Mexico from outside Mexico,
      // it’s necessary to dial an additional “1” after Mexico’s country code
      // (which is “52”) and before the area code.
      // You also ignore the 045, and simply dial the area code and the
      // cell phone’s number.
      //
      // If you don’t add the “1”, you’ll receive a recorded announcement
      // asking you to redial using it.
      //
      // For example, if you are calling from the USA to a cell phone
      // in Mexico City, you would dial +52 – 1 – 55 – 1234 5678.
      // (Note that this is different to calling a land line in Mexico City
      // from abroad, where the number dialed would be +52 – 55 – 1234 5678)".
      //
      // Google's demo output:
      // https://libphonenumber.appspot.com/phonenumberparser?number=%2b5215512345678&country=MX
      //
      if (this.extractAnotherNationalSignificantNumber(state.getNationalDigits(), state.nationalSignificantNumber, function (stateUpdate) {
        return state.update(stateUpdate);
      })) {
        return true;
      } // If no format matches the phone number, then it could be
      // "a really long IDD" (quote from a comment in Google's library).
      // An IDD prefix is first extracted when the user has entered at least 3 digits,
      // and then here — every time when there's a new digit and the number
      // couldn't be formatted.
      // For example, in Australia the default IDD prefix is `0011`,
      // and it could even be as long as `14880011`.
      //
      // Could also check `!hasReceivedThreeLeadingDigits` here
      // to filter out the case when this check duplicates the one
      // already performed when there're 3 leading digits,
      // but it's not a big deal, and in most cases there
      // will be a suitable `format` when there're 3 leading digits.
      //


      if (this.extractIddPrefix(state)) {
        this.extractCallingCodeAndNationalSignificantNumber(state);
        return true;
      } // Google's AsYouType formatter supports sort of an "autocorrection" feature
      // when it "autocorrects" numbers that have been input for a country
      // with that country's calling code.
      // Such "autocorrection" feature looks weird, but different people have been requesting it:
      // https://github.com/catamphetamine/libphonenumber-js/issues/376
      // https://github.com/catamphetamine/libphonenumber-js/issues/375
      // https://github.com/catamphetamine/libphonenumber-js/issues/316


      if (this.fixMissingPlus(state)) {
        this.extractCallingCodeAndNationalSignificantNumber(state);
        return true;
      }
    }
  }, {
    key: "extractIddPrefix",
    value: function extractIddPrefix(state) {
      // An IDD prefix can't be present in a number written with a `+`.
      // Also, don't re-extract an IDD prefix if has already been extracted.
      var international = state.international,
          IDDPrefix = state.IDDPrefix,
          digits = state.digits;
          state.nationalSignificantNumber;

      if (international || IDDPrefix) {
        return;
      } // Some users input their phone number in "out-of-country"
      // dialing format instead of using the leading `+`.
      // https://github.com/catamphetamine/libphonenumber-js/issues/185
      // Detect such numbers.


      var numberWithoutIDD = stripIddPrefix(digits, this.defaultCountry, this.defaultCallingCode, this.metadata.metadata);

      if (numberWithoutIDD !== undefined && numberWithoutIDD !== digits) {
        // If an IDD prefix was stripped then convert the IDD-prefixed number
        // to international number for subsequent parsing.
        state.update({
          IDDPrefix: digits.slice(0, digits.length - numberWithoutIDD.length)
        });
        this.startInternationalNumber(state, {
          country: undefined,
          callingCode: undefined
        });
        return true;
      }
    }
  }, {
    key: "fixMissingPlus",
    value: function fixMissingPlus(state) {
      if (!state.international) {
        var _extractCountryCallin2 = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(state.digits, this.defaultCountry, this.defaultCallingCode, this.metadata.metadata),
            newCallingCode = _extractCountryCallin2.countryCallingCode;
            _extractCountryCallin2.number;

        if (newCallingCode) {
          state.update({
            missingPlus: true
          });
          this.startInternationalNumber(state, {
            country: state.country,
            callingCode: newCallingCode
          });
          return true;
        }
      }
    }
  }, {
    key: "startInternationalNumber",
    value: function startInternationalNumber(state, _ref3) {
      var country = _ref3.country,
          callingCode = _ref3.callingCode;
      state.startInternationalNumber(country, callingCode); // If a national (significant) number has been extracted before, reset it.

      if (state.nationalSignificantNumber) {
        state.resetNationalSignificantNumber();
        this.onNationalSignificantNumberChange();
        this.hasExtractedNationalSignificantNumber = undefined;
      }
    }
  }, {
    key: "extractCallingCodeAndNationalSignificantNumber",
    value: function extractCallingCodeAndNationalSignificantNumber(state) {
      if (this.extractCountryCallingCode(state)) {
        // `this.extractCallingCode()` is currently called when the number
        // couldn't be formatted during the standard procedure.
        // Normally, the national prefix would be re-extracted
        // for an international number if such number couldn't be formatted,
        // but since it's already not able to be formatted,
        // there won't be yet another retry, so also extract national prefix here.
        this.extractNationalSignificantNumber(state.getNationalDigits(), function (stateUpdate) {
          return state.update(stateUpdate);
        });
      }
    }
  }]);

  return AsYouTypeParser;
}();

function extractFormattedPhoneNumber(text) {
  // Attempt to extract a possible number from the string passed in.
  var startsAt = text.search(VALID_FORMATTED_PHONE_NUMBER_PART);

  if (startsAt < 0) {
    return;
  } // Trim everything to the left of the phone number.


  text = text.slice(startsAt); // Trim the `+`.

  var hasPlus;

  if (text[0] === '+') {
    hasPlus = true;
    text = text.slice('+'.length);
  } // Trim everything to the right of the phone number.


  text = text.replace(AFTER_PHONE_NUMBER_DIGITS_END_PATTERN, ''); // Re-add the previously trimmed `+`.

  if (hasPlus) {
    text = '+' + text;
  }

  return text;
}
/**
 * Extracts formatted phone number digits (and a `+`) from text (if there're any).
 * @param  {string} text
 * @return {any[]}
 */


function _extractFormattedDigitsAndPlus(text) {
  // Extract a formatted phone number part from text.
  var extractedNumber = extractFormattedPhoneNumber(text) || ''; // Trim a `+`.

  if (extractedNumber[0] === '+') {
    return [extractedNumber.slice('+'.length), true];
  }

  return [extractedNumber];
}
/**
 * Extracts formatted phone number digits (and a `+`) from text (if there're any).
 * @param  {string} text
 * @return {any[]}
 */


function extractFormattedDigitsAndPlus(text) {
  var _extractFormattedDigi3 = _extractFormattedDigitsAndPlus(text),
      _extractFormattedDigi4 = _slicedToArray$1(_extractFormattedDigi3, 2),
      formattedDigits = _extractFormattedDigi4[0],
      hasPlus = _extractFormattedDigi4[1]; // If the extracted phone number part
  // can possibly be a part of some valid phone number
  // then parse phone number characters from a formatted phone number.


  if (!VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART_PATTERN.test(formattedDigits)) {
    formattedDigits = '';
  }

  return [formattedDigits, hasPlus];
}

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck$1(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties$1(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass$1(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$1(Constructor.prototype, protoProps); if (staticProps) _defineProperties$1(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var AsYouType$1 = /*#__PURE__*/function () {
  /**
   * @param {(string|object)?} [optionsOrDefaultCountry] - The default country used for parsing non-international phone numbers. Can also be an `options` object.
   * @param {Object} metadata
   */
  function AsYouType(optionsOrDefaultCountry, metadata) {
    _classCallCheck$1(this, AsYouType);

    this.metadata = new Metadata$1(metadata);

    var _this$getCountryAndCa = this.getCountryAndCallingCode(optionsOrDefaultCountry),
        _this$getCountryAndCa2 = _slicedToArray(_this$getCountryAndCa, 2),
        defaultCountry = _this$getCountryAndCa2[0],
        defaultCallingCode = _this$getCountryAndCa2[1]; // `this.defaultCountry` and `this.defaultCallingCode` aren't required to be in sync.
    // For example, `this.defaultCountry` could be `"AR"` and `this.defaultCallingCode` could be `undefined`.
    // So `this.defaultCountry` and `this.defaultCallingCode` are totally independent.


    this.defaultCountry = defaultCountry;
    this.defaultCallingCode = defaultCallingCode;
    this.reset();
  }

  _createClass$1(AsYouType, [{
    key: "getCountryAndCallingCode",
    value: function getCountryAndCallingCode(optionsOrDefaultCountry) {
      // Set `defaultCountry` and `defaultCallingCode` options.
      var defaultCountry;
      var defaultCallingCode; // Turns out `null` also has type "object". Weird.

      if (optionsOrDefaultCountry) {
        if (_typeof(optionsOrDefaultCountry) === 'object') {
          defaultCountry = optionsOrDefaultCountry.defaultCountry;
          defaultCallingCode = optionsOrDefaultCountry.defaultCallingCode;
        } else {
          defaultCountry = optionsOrDefaultCountry;
        }
      }

      if (defaultCountry && !this.metadata.hasCountry(defaultCountry)) {
        defaultCountry = undefined;
      }

      return [defaultCountry, defaultCallingCode];
    }
    /**
     * Inputs "next" phone number characters.
     * @param  {string} text
     * @return {string} Formatted phone number characters that have been input so far.
     */

  }, {
    key: "input",
    value: function input(text) {
      var _this$parser$input = this.parser.input(text, this.state),
          digits = _this$parser$input.digits,
          justLeadingPlus = _this$parser$input.justLeadingPlus;

      if (justLeadingPlus) {
        this.formattedOutput = '+';
      } else if (digits) {
        this.determineTheCountryIfNeeded(); // Match the available formats by the currently available leading digits.

        if (this.state.nationalSignificantNumber) {
          this.formatter.narrowDownMatchingFormats(this.state);
        }

        var formattedNationalNumber;

        if (this.metadata.hasSelectedNumberingPlan()) {
          formattedNationalNumber = this.formatter.format(digits, this.state);
        }

        if (formattedNationalNumber === undefined) {
          // See if another national (significant) number could be re-extracted.
          if (this.parser.reExtractNationalSignificantNumber(this.state)) {
            this.determineTheCountryIfNeeded(); // If it could, then re-try formatting the new national (significant) number.

            var nationalDigits = this.state.getNationalDigits();

            if (nationalDigits) {
              formattedNationalNumber = this.formatter.format(nationalDigits, this.state);
            }
          }
        }

        this.formattedOutput = formattedNationalNumber ? this.getFullNumber(formattedNationalNumber) : this.getNonFormattedNumber();
      }

      return this.formattedOutput;
    }
  }, {
    key: "reset",
    value: function reset() {
      var _this = this;

      this.state = new AsYouTypeState({
        onCountryChange: function onCountryChange(country) {
          // Before version `1.6.0`, the official `AsYouType` formatter API
          // included the `.country` property of an `AsYouType` instance.
          // Since that property (along with the others) have been moved to
          // `this.state`, `this.country` property is emulated for compatibility
          // with the old versions.
          _this.country = country;
        },
        onCallingCodeChange: function onCallingCodeChange(callingCode, country) {
          _this.metadata.selectNumberingPlan(country, callingCode);

          _this.formatter.reset(_this.metadata.numberingPlan, _this.state);

          _this.parser.reset(_this.metadata.numberingPlan);
        }
      });
      this.formatter = new AsYouTypeFormatter({
        state: this.state,
        metadata: this.metadata
      });
      this.parser = new AsYouTypeParser({
        defaultCountry: this.defaultCountry,
        defaultCallingCode: this.defaultCallingCode,
        metadata: this.metadata,
        state: this.state,
        onNationalSignificantNumberChange: function onNationalSignificantNumberChange() {
          _this.determineTheCountryIfNeeded();

          _this.formatter.reset(_this.metadata.numberingPlan, _this.state);
        }
      });
      this.state.reset({
        country: this.defaultCountry,
        callingCode: this.defaultCallingCode
      });
      this.formattedOutput = '';
      return this;
    }
    /**
     * Returns `true` if the phone number is being input in international format.
     * In other words, returns `true` if and only if the parsed phone number starts with a `"+"`.
     * @return {boolean}
     */

  }, {
    key: "isInternational",
    value: function isInternational() {
      return this.state.international;
    }
    /**
     * Returns the "calling code" part of the phone number when it's being input
     * in an international format.
     * If no valid calling code has been entered so far, returns `undefined`.
     * @return {string} [callingCode]
     */

  }, {
    key: "getCallingCode",
    value: function getCallingCode() {
      // If the number is being input in national format and some "default calling code"
      // has been passed to `AsYouType` constructor, then `this.state.callingCode`
      // is equal to that "default calling code".
      //
      // If the number is being input in national format and no "default calling code"
      // has been passed to `AsYouType` constructor, then returns `undefined`,
      // even if a "default country" has been passed to `AsYouType` constructor.
      //
      if (this.isInternational()) {
        return this.state.callingCode;
      }
    } // A legacy alias.

  }, {
    key: "getCountryCallingCode",
    value: function getCountryCallingCode() {
      return this.getCallingCode();
    }
    /**
     * Returns a two-letter country code of the phone number.
     * Returns `undefined` for "non-geographic" phone numbering plans.
     * Returns `undefined` if no phone number has been input yet.
     * @return {string} [country]
     */

  }, {
    key: "getCountry",
    value: function getCountry() {
      var digits = this.state.digits; // Return `undefined` if no digits have been input yet.

      if (digits) {
        return this._getCountry();
      }
    }
    /**
     * Returns a two-letter country code of the phone number.
     * Returns `undefined` for "non-geographic" phone numbering plans.
     * @return {string} [country]
     */

  }, {
    key: "_getCountry",
    value: function _getCountry() {
      var country = this.state.country;

      return country;
    }
  }, {
    key: "determineTheCountryIfNeeded",
    value: function determineTheCountryIfNeeded() {
      // Suppose a user enters a phone number in international format,
      // and there're several countries corresponding to that country calling code,
      // and a country has been derived from the number, and then
      // a user enters one more digit and the number is no longer
      // valid for the derived country, so the country should be re-derived
      // on every new digit in those cases.
      //
      // If the phone number is being input in national format,
      // then it could be a case when `defaultCountry` wasn't specified
      // when creating `AsYouType` instance, and just `defaultCallingCode` was specified,
      // and that "calling code" could correspond to a "non-geographic entity",
      // or there could be several countries corresponding to that country calling code.
      // In those cases, `this.country` is `undefined` and should be derived
      // from the number. Again, if country calling code is ambiguous, then
      // `this.country` should be re-derived with each new digit.
      //
      if (!this.state.country || this.isCountryCallingCodeAmbiguous()) {
        this.determineTheCountry();
      }
    } // Prepends `+CountryCode ` in case of an international phone number

  }, {
    key: "getFullNumber",
    value: function getFullNumber(formattedNationalNumber) {
      var _this2 = this;

      if (this.isInternational()) {
        var prefix = function prefix(text) {
          return _this2.formatter.getInternationalPrefixBeforeCountryCallingCode(_this2.state, {
            spacing: text ? true : false
          }) + text;
        };

        var callingCode = this.state.callingCode;

        if (!callingCode) {
          return prefix("".concat(this.state.getDigitsWithoutInternationalPrefix()));
        }

        if (!formattedNationalNumber) {
          return prefix(callingCode);
        }

        return prefix("".concat(callingCode, " ").concat(formattedNationalNumber));
      }

      return formattedNationalNumber;
    }
  }, {
    key: "getNonFormattedNationalNumberWithPrefix",
    value: function getNonFormattedNationalNumberWithPrefix() {
      var _this$state = this.state,
          nationalSignificantNumber = _this$state.nationalSignificantNumber,
          complexPrefixBeforeNationalSignificantNumber = _this$state.complexPrefixBeforeNationalSignificantNumber,
          nationalPrefix = _this$state.nationalPrefix;
      var number = nationalSignificantNumber;
      var prefix = complexPrefixBeforeNationalSignificantNumber || nationalPrefix;

      if (prefix) {
        number = prefix + number;
      }

      return number;
    }
  }, {
    key: "getNonFormattedNumber",
    value: function getNonFormattedNumber() {
      var nationalSignificantNumberMatchesInput = this.state.nationalSignificantNumberMatchesInput;
      return this.getFullNumber(nationalSignificantNumberMatchesInput ? this.getNonFormattedNationalNumberWithPrefix() : this.state.getNationalDigits());
    }
  }, {
    key: "getNonFormattedTemplate",
    value: function getNonFormattedTemplate() {
      var number = this.getNonFormattedNumber();

      if (number) {
        return number.replace(/[\+\d]/g, DIGIT_PLACEHOLDER);
      }
    }
  }, {
    key: "isCountryCallingCodeAmbiguous",
    value: function isCountryCallingCodeAmbiguous() {
      var callingCode = this.state.callingCode;
      var countryCodes = this.metadata.getCountryCodesForCallingCode(callingCode);
      return countryCodes && countryCodes.length > 1;
    } // Determines the country of the phone number
    // entered so far based on the country phone code
    // and the national phone number.

  }, {
    key: "determineTheCountry",
    value: function determineTheCountry() {
      this.state.setCountry(getCountryByCallingCode(this.isInternational() ? this.state.callingCode : this.defaultCallingCode, {
        nationalNumber: this.state.nationalSignificantNumber,
        defaultCountry: this.defaultCountry,
        metadata: this.metadata
      }));
    }
    /**
     * Returns a E.164 phone number value for the user's input.
     *
     * For example, for country `"US"` and input `"(222) 333-4444"`
     * it will return `"+12223334444"`.
     *
     * For international phone number input, it will also auto-correct
     * some minor errors such as using a national prefix when writing
     * an international phone number. For example, if the user inputs
     * `"+44 0 7400 000000"` then it will return an auto-corrected
     * `"+447400000000"` phone number value.
     *
     * Will return `undefined` if no digits have been input,
     * or when inputting a phone number in national format and no
     * default country or default "country calling code" have been set.
     *
     * @return {string} [value]
     */

  }, {
    key: "getNumberValue",
    value: function getNumberValue() {
      var _this$state2 = this.state,
          digits = _this$state2.digits,
          callingCode = _this$state2.callingCode,
          country = _this$state2.country,
          nationalSignificantNumber = _this$state2.nationalSignificantNumber; // Will return `undefined` if no digits have been input.

      if (!digits) {
        return;
      }

      if (this.isInternational()) {
        if (callingCode) {
          return '+' + callingCode + nationalSignificantNumber;
        } else {
          return '+' + digits;
        }
      } else {
        if (country || callingCode) {
          var callingCode_ = country ? this.metadata.countryCallingCode() : callingCode;
          return '+' + callingCode_ + nationalSignificantNumber;
        }
      }
    }
    /**
     * Returns an instance of `PhoneNumber` class.
     * Will return `undefined` if no national (significant) number
     * digits have been entered so far, or if no `defaultCountry` has been
     * set and the user enters a phone number not in international format.
     */

  }, {
    key: "getNumber",
    value: function getNumber() {
      var _this$state3 = this.state,
          nationalSignificantNumber = _this$state3.nationalSignificantNumber,
          carrierCode = _this$state3.carrierCode,
          callingCode = _this$state3.callingCode; // `this._getCountry()` is basically same as `this.state.country`
      // with the only change that it return `undefined` in case of a
      // "non-geographic" numbering plan instead of `"001"` "internal use" value.

      var country = this._getCountry();

      if (!nationalSignificantNumber) {
        return;
      } // `state.country` and `state.callingCode` aren't required to be in sync.
      // For example, `country` could be `"AR"` and `callingCode` could be `undefined`.
      // So `country` and `callingCode` are totally independent.


      if (!country && !callingCode) {
        return;
      } // By default, if `defaultCountry` parameter was passed when
      // creating `AsYouType` instance, `state.country` is gonna be
      // that `defaultCountry`, which doesn't entirely conform with
      // `parsePhoneNumber()`'s behavior where it attempts to determine
      // the country more precisely in cases when multiple countries
      // could correspond to the same `countryCallingCode`.
      // https://gitlab.com/catamphetamine/libphonenumber-js/-/issues/103#note_1417192969
      //
      // Because `AsYouType.getNumber()` method is supposed to be a 1:1
      // equivalent for `parsePhoneNumber(AsYouType.getNumberValue())`,
      // then it should also behave accordingly in cases of `country` ambiguity.
      // That's how users of this library would expect it to behave anyway.
      //


      if (country) {
        if (country === this.defaultCountry) {
          // `state.country` and `state.callingCode` aren't required to be in sync.
          // For example, `state.country` could be `"AR"` and `state.callingCode` could be `undefined`.
          // So `state.country` and `state.callingCode` are totally independent.
          var metadata = new Metadata$1(this.metadata.metadata);
          metadata.selectNumberingPlan(country);

          var _callingCode = metadata.numberingPlan.callingCode();

          var ambiguousCountries = this.metadata.getCountryCodesForCallingCode(_callingCode);

          if (ambiguousCountries.length > 1) {
            var exactCountry = getCountryByNationalNumber(nationalSignificantNumber, {
              countries: ambiguousCountries,
              defaultCountry: this.defaultCountry,
              metadata: this.metadata.metadata
            });

            if (exactCountry) {
              country = exactCountry;
            }
          }
        }
      }

      var phoneNumber = new PhoneNumber(country || callingCode, nationalSignificantNumber, this.metadata.metadata);

      if (carrierCode) {
        phoneNumber.carrierCode = carrierCode;
      } // Phone number extensions are not supported by "As You Type" formatter.


      return phoneNumber;
    }
    /**
     * Returns `true` if the phone number is "possible".
     * Is just a shortcut for `PhoneNumber.isPossible()`.
     * @return {boolean}
     */

  }, {
    key: "isPossible",
    value: function isPossible() {
      var phoneNumber = this.getNumber();

      if (!phoneNumber) {
        return false;
      }

      return phoneNumber.isPossible();
    }
    /**
     * Returns `true` if the phone number is "valid".
     * Is just a shortcut for `PhoneNumber.isValid()`.
     * @return {boolean}
     */

  }, {
    key: "isValid",
    value: function isValid() {
      var phoneNumber = this.getNumber();

      if (!phoneNumber) {
        return false;
      }

      return phoneNumber.isValid();
    }
    /**
     * @deprecated
     * This method is used in `react-phone-number-input/source/input-control.js`
     * in versions before `3.0.16`.
     */

  }, {
    key: "getNationalNumber",
    value: function getNationalNumber() {
      return this.state.nationalSignificantNumber;
    }
    /**
     * Returns the phone number characters entered by the user.
     * @return {string}
     */

  }, {
    key: "getChars",
    value: function getChars() {
      return (this.state.international ? '+' : '') + this.state.digits;
    }
    /**
     * Returns the template for the formatted phone number.
     * @return {string}
     */

  }, {
    key: "getTemplate",
    value: function getTemplate() {
      return this.formatter.getTemplate(this.state) || this.getNonFormattedTemplate() || '';
    }
  }]);

  return AsYouType;
}();

/**
 * Formats a (possibly incomplete) phone number.
 * The phone number can be either in E.164 format
 * or in a form of national number digits.
 * @param {string} value - A possibly incomplete phone number. Either in E.164 format or in a form of national number digits.
 * @param {string?} country - Two-letter ("ISO 3166-1 alpha-2") country code.
 * @return {string} Formatted (possibly incomplete) phone number.
 */

function formatIncompletePhoneNumber$1(value, country, metadata) {
  if (!metadata) {
    metadata = country;
    country = undefined;
  }

  return new AsYouType$1(country, metadata).input(value);
}

// Importing from a ".js" file is a workaround for Node.js "ES Modules"

function PhoneNumberMatcher(text, options) {
	return PhoneNumberMatcher$1.call(this, text, options, metadata)
}
PhoneNumberMatcher.prototype = Object.create(PhoneNumberMatcher$1.prototype, {});
PhoneNumberMatcher.prototype.constructor = PhoneNumberMatcher;

// Importing from a ".js" file is a workaround for Node.js "ES Modules"

function AsYouType(country) {
	return AsYouType$1.call(this, country, metadata)
}

AsYouType.prototype = Object.create(AsYouType$1.prototype, {});
AsYouType.prototype.constructor = AsYouType;

// Importing from a ".js" file is a workaround for Node.js "ES Modules"

function Metadata() {
	return Metadata$1.call(this, metadata)
}

Metadata.prototype = Object.create(Metadata$1.prototype, {});
Metadata.prototype.constructor = Metadata;

function formatIncompletePhoneNumber() {
	return withMetadataArgument(formatIncompletePhoneNumber$1, arguments)
}

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
var WHITESPACE_IN_THE_BEGINNING_PATTERN = new RegExp('^[' + WHITESPACE + ']+');
var PUNCTUATION_IN_THE_END_PATTERN = new RegExp('[' + VALID_PUNCTUATION + ']+$'); // // Regular expression for getting opening brackets for a valid number
/**
 * Extracts a parseable phone number including any opening brackets, etc.
 * @param  {string} text - Input.
 * @return {object} `{ ?number, ?startsAt, ?endsAt }`.
 */

var PhoneNumberSearch$1 = /*#__PURE__*/function () {
  function PhoneNumberSearch(text, options, metadata) {
    _classCallCheck(this, PhoneNumberSearch);

    this.text = text; // If assigning the `{}` default value is moved to the arguments above,
    // code coverage would decrease for some weird reason.

    this.options = options || {};
    this.metadata = metadata; // Iteration tristate.

    this.state = 'NOT_READY';
    this.regexp = new RegExp(VALID_PHONE_NUMBER_WITH_EXTENSION, 'ig');
  }

  _createClass(PhoneNumberSearch, [{
    key: "find",
    value: function find() {
      var matches = this.regexp.exec(this.text);

      if (!matches) {
        return;
      }

      var number = matches[0];
      var startsAt = matches.index;
      number = number.replace(WHITESPACE_IN_THE_BEGINNING_PATTERN, '');
      startsAt += matches[0].length - number.length; // Fixes not parsing numbers with whitespace in the end.
      // Also fixes not parsing numbers with opening parentheses in the end.
      // https://github.com/catamphetamine/libphonenumber-js/issues/252

      number = number.replace(PUNCTUATION_IN_THE_END_PATTERN, '');
      number = parsePreCandidate(number);
      var result = this.parseCandidate(number, startsAt);

      if (result) {
        return result;
      } // Tail recursion.
      // Try the next one if this one is not a valid phone number.


      return this.find();
    }
  }, {
    key: "parseCandidate",
    value: function parseCandidate(number, startsAt) {
      if (!isValidPreCandidate(number, startsAt, this.text)) {
        return;
      } // Don't parse phone numbers which are non-phone numbers
      // due to being part of something else (e.g. a UUID).
      // https://github.com/catamphetamine/libphonenumber-js/issues/213
      // Copy-pasted from Google's `PhoneNumberMatcher.js` (`.parseAndValidate()`).


      if (!isValidCandidate(number, startsAt, this.text, this.options.extended ? 'POSSIBLE' : 'VALID')) {
        return;
      } // // Prepend any opening brackets left behind by the
      // // `PHONE_NUMBER_START_PATTERN` regexp.
      // const text_before_number = text.slice(this.searching_from, startsAt)
      // const full_number_starts_at = text_before_number.search(BEFORE_NUMBER_DIGITS_PUNCTUATION)
      // if (full_number_starts_at >= 0)
      // {
      // 	number   = text_before_number.slice(full_number_starts_at) + number
      // 	startsAt = full_number_starts_at
      // }
      //
      // this.searching_from = matches.lastIndex


      var result = parse$1(number, this.options, this.metadata);

      if (!result.phone) {
        return;
      }

      result.startsAt = startsAt;
      result.endsAt = startsAt + number.length;
      return result;
    }
  }, {
    key: "hasNext",
    value: function hasNext() {
      if (this.state === 'NOT_READY') {
        this.last_match = this.find();

        if (this.last_match) {
          this.state = 'READY';
        } else {
          this.state = 'DONE';
        }
      }

      return this.state === 'READY';
    }
  }, {
    key: "next",
    value: function next() {
      // Check the state and find the next match as a side-effect if necessary.
      if (!this.hasNext()) {
        throw new Error('No next element');
      } // Don't retain that memory any longer than necessary.


      var result = this.last_match;
      this.last_match = null;
      this.state = 'NOT_READY';
      return result;
    }
  }]);

  return PhoneNumberSearch;
}();

// Importing from a ".js" file is a workaround for Node.js "ES Modules"

function PhoneNumberSearch(text, options) {
	PhoneNumberSearch$1.call(this, text, options, metadata);
}

// Deprecated.
PhoneNumberSearch.prototype = Object.create(PhoneNumberSearch$1.prototype, {});
PhoneNumberSearch.prototype.constructor = PhoneNumberSearch;

var countryCodes = {
	"+93": [
	"AF"
],
	"+358": [
	"AX",
	"FI"
],
	"+355": [
	"AL"
],
	"+213": [
	"DZ"
],
	"+1684": [
	"AS"
],
	"+376": [
	"AD"
],
	"+244": [
	"AO"
],
	"+1264": [
	"AI"
],
	"+672": [
	"AQ",
	"NF"
],
	"+1268": [
	"AG"
],
	"+54": [
	"AR"
],
	"+374": [
	"AM"
],
	"+297": [
	"AW"
],
	"+61": [
	"AU",
	"CC",
	"CX"
],
	"+43": [
	"AT"
],
	"+994": [
	"AZ"
],
	"+1242": [
	"BS"
],
	"+973": [
	"BH"
],
	"+880": [
	"BD"
],
	"+1246": [
	"BB"
],
	"+375": [
	"BY"
],
	"+32": [
	"BE"
],
	"+501": [
	"BZ"
],
	"+229": [
	"BJ"
],
	"+1441": [
	"BM"
],
	"+975": [
	"BT"
],
	"+591": [
	"BO"
],
	"+387": [
	"BA"
],
	"+267": [
	"BW"
],
	"+55": [
	"BR"
],
	"+246": [
	"IO"
],
	"+673": [
	"BN"
],
	"+359": [
	"BG"
],
	"+226": [
	"BF"
],
	"+257": [
	"BI"
],
	"+855": [
	"KH"
],
	"+237": [
	"CM"
],
	"+1": [
	"CA",
	"US"
],
	"+238": [
	"CV"
],
	"+ 345": [
	"KY"
],
	"+236": [
	"CF"
],
	"+235": [
	"TD"
],
	"+56": [
	"CL"
],
	"+86": [
	"CN"
],
	"+57": [
	"CO"
],
	"+269": [
	"KM"
],
	"+242": [
	"CG"
],
	"+243": [
	"CD"
],
	"+682": [
	"CK"
],
	"+506": [
	"CR"
],
	"+225": [
	"CI"
],
	"+385": [
	"HR"
],
	"+53": [
	"CU"
],
	"+357": [
	"CY"
],
	"+420": [
	"CZ"
],
	"+45": [
	"DK"
],
	"+253": [
	"DJ"
],
	"+1767": [
	"DM"
],
	"+1849": [
	"DO"
],
	"+593": [
	"EC"
],
	"+20": [
	"EG"
],
	"+503": [
	"SV"
],
	"+240": [
	"GQ"
],
	"+291": [
	"ER"
],
	"+372": [
	"EE"
],
	"+251": [
	"ET"
],
	"+500": [
	"FK",
	"GS"
],
	"+298": [
	"FO"
],
	"+679": [
	"FJ"
],
	"+33": [
	"FR"
],
	"+594": [
	"GF"
],
	"+689": [
	"PF"
],
	"+241": [
	"GA"
],
	"+220": [
	"GM"
],
	"+995": [
	"GE"
],
	"+49": [
	"DE"
],
	"+233": [
	"GH"
],
	"+350": [
	"GI"
],
	"+30": [
	"GR"
],
	"+299": [
	"GL"
],
	"+1473": [
	"GD"
],
	"+590": [
	"BL",
	"GP",
	"MF"
],
	"+1671": [
	"GU"
],
	"+502": [
	"GT"
],
	"+44": [
	"GB",
	"GG",
	"IM",
	"JE"
],
	"+224": [
	"GN"
],
	"+245": [
	"GW"
],
	"+595": [
	"GY",
	"PY"
],
	"+509": [
	"HT"
],
	"+379": [
	"VA"
],
	"+504": [
	"HN"
],
	"+852": [
	"HK"
],
	"+36": [
	"HU"
],
	"+354": [
	"IS"
],
	"+91": [
	"IN"
],
	"+62": [
	"ID"
],
	"+98": [
	"IR"
],
	"+964": [
	"IQ"
],
	"+353": [
	"IE"
],
	"+972": [
	"IL"
],
	"+39": [
	"IT"
],
	"+1876": [
	"JM"
],
	"+81": [
	"JP"
],
	"+962": [
	"JO"
],
	"+77": [
	"KZ"
],
	"+254": [
	"KE"
],
	"+686": [
	"KI"
],
	"+850": [
	"KP"
],
	"+82": [
	"KR"
],
	"+965": [
	"KW"
],
	"+996": [
	"KG"
],
	"+856": [
	"LA"
],
	"+371": [
	"LV"
],
	"+961": [
	"LB"
],
	"+266": [
	"LS"
],
	"+231": [
	"LR"
],
	"+218": [
	"LY"
],
	"+423": [
	"LI"
],
	"+370": [
	"LT"
],
	"+352": [
	"LU"
],
	"+853": [
	"MO"
],
	"+389": [
	"MK"
],
	"+261": [
	"MG"
],
	"+265": [
	"MW"
],
	"+60": [
	"MY"
],
	"+960": [
	"MV"
],
	"+223": [
	"ML"
],
	"+356": [
	"MT"
],
	"+692": [
	"MH"
],
	"+596": [
	"MQ"
],
	"+222": [
	"MR"
],
	"+230": [
	"MU"
],
	"+262": [
	"RE",
	"YT"
],
	"+52": [
	"MX"
],
	"+691": [
	"FM"
],
	"+373": [
	"MD"
],
	"+377": [
	"MC"
],
	"+976": [
	"MN"
],
	"+382": [
	"ME"
],
	"+1664": [
	"MS"
],
	"+212": [
	"MA"
],
	"+258": [
	"MZ"
],
	"+95": [
	"MM"
],
	"+264": [
	"NA"
],
	"+674": [
	"NR"
],
	"+977": [
	"NP"
],
	"+31": [
	"NL"
],
	"+599": [
	"AN"
],
	"+687": [
	"NC"
],
	"+64": [
	"NZ"
],
	"+505": [
	"NI"
],
	"+227": [
	"NE"
],
	"+234": [
	"NG"
],
	"+683": [
	"NU"
],
	"+1670": [
	"MP"
],
	"+47": [
	"NO",
	"SJ"
],
	"+968": [
	"OM"
],
	"+92": [
	"PK"
],
	"+680": [
	"PW"
],
	"+970": [
	"PS"
],
	"+507": [
	"PA"
],
	"+675": [
	"PG"
],
	"+51": [
	"PE"
],
	"+63": [
	"PH"
],
	"+872": [
	"PN"
],
	"+48": [
	"PL"
],
	"+351": [
	"PT"
],
	"+1939": [
	"PR"
],
	"+974": [
	"QA"
],
	"+40": [
	"RO"
],
	"+7": [
	"RU"
],
	"+250": [
	"RW"
],
	"+290": [
	"SH"
],
	"+1869": [
	"KN"
],
	"+1758": [
	"LC"
],
	"+508": [
	"PM"
],
	"+1784": [
	"VC"
],
	"+685": [
	"WS"
],
	"+378": [
	"SM"
],
	"+239": [
	"ST"
],
	"+966": [
	"SA"
],
	"+221": [
	"SN"
],
	"+381": [
	"RS"
],
	"+248": [
	"SC"
],
	"+232": [
	"SL"
],
	"+65": [
	"SG"
],
	"+421": [
	"SK"
],
	"+386": [
	"SI"
],
	"+677": [
	"SB"
],
	"+252": [
	"SO"
],
	"+27": [
	"ZA"
],
	"+211": [
	"SS"
],
	"+34": [
	"ES"
],
	"+94": [
	"LK"
],
	"+249": [
	"SD"
],
	"+597": [
	"SR"
],
	"+268": [
	"SZ"
],
	"+46": [
	"SE"
],
	"+41": [
	"CH"
],
	"+963": [
	"SY"
],
	"+886": [
	"TW"
],
	"+992": [
	"TJ"
],
	"+255": [
	"TZ"
],
	"+66": [
	"TH"
],
	"+670": [
	"TL"
],
	"+228": [
	"TG"
],
	"+690": [
	"TK"
],
	"+676": [
	"TO"
],
	"+1868": [
	"TT"
],
	"+216": [
	"TN"
],
	"+90": [
	"TR"
],
	"+993": [
	"TM"
],
	"+1649": [
	"TC"
],
	"+688": [
	"TV"
],
	"+256": [
	"UG"
],
	"+380": [
	"UA"
],
	"+971": [
	"AE"
],
	"+598": [
	"UY"
],
	"+998": [
	"UZ"
],
	"+678": [
	"VU"
],
	"+58": [
	"VE"
],
	"+84": [
	"VN"
],
	"+1284": [
	"VG"
],
	"+1340": [
	"VI"
],
	"+681": [
	"WF"
],
	"+967": [
	"YE"
],
	"+260": [
	"ZM"
],
	"+263": [
	"ZW"
]
};

var _excluded$l = ["label", "leftIcon", "size", "dropDown", "rightIcon", "errorMessage", "inputClassName", "className", "disabled", "isUs", "labelClass", "phoneNumber", "onChange", "value", "code", "onLocalErrorChanged"];
var PhoneField = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var _classNames;
  var label = _ref.label,
    leftIcon = _ref.leftIcon,
    size = _ref.size,
    dropDown = _ref.dropDown,
    rightIcon = _ref.rightIcon,
    errorMessage = _ref.errorMessage,
    inputClassName = _ref.inputClassName,
    className = _ref.className,
    disabled = _ref.disabled,
    isUs = _ref.isUs,
    labelClass = _ref.labelClass,
    phoneNumber = _ref.phoneNumber,
    onChange = _ref.onChange,
    value = _ref.value,
    code = _ref.code,
    onLocalErrorChanged = _ref.onLocalErrorChanged,
    props = _objectWithoutProperties(_ref, _excluded$l);
  var phoneInputRef = useRef();
  var phoneNumberRef = useRef();
  useLayoutEffect(function () {
    var elem = phoneInputRef.current;
    var value = elem.value;
    elem.style.width = "calc(" + value.length + "ch + 4px)";
    var wrapper = elem.closest(".ui-text-field__wrapper");
    var offset;
    if (wrapper.classList.contains("size__small")) {
      offset = 16;
    } else if (wrapper.classList.contains("size__xlarge")) {
      offset = 20;
    } else {
      offset = 26;
    }
    elem.nextSibling.style.paddingLeft = "calc(" + (value.length <= 2 ? 2 : value.length) + "ch + " + offset + "px)";
  }, []);
  var _useState = useState(""),
    _useState2 = _slicedToArray$4(_useState, 2),
    internalPhone = _useState2[0],
    setInternalPhone = _useState2[1];
  var _useState3 = useState("+1"),
    _useState4 = _slicedToArray$4(_useState3, 2),
    internalCode = _useState4[0],
    setInternalCode = _useState4[1];
  var _useState5 = useState(""),
    _useState6 = _slicedToArray$4(_useState5, 2),
    formattedInternalPhone = _useState6[0],
    setFormattedInternalPhone = _useState6[1];
  var _useState7 = useState(""),
    _useState8 = _slicedToArray$4(_useState7, 2),
    localErrorMessage = _useState8[0],
    setLocalErrorMessage = _useState8[1];
  var _useState9 = useState(false),
    _useState10 = _slicedToArray$4(_useState9, 2),
    codeIsFocused = _useState10[0],
    setCodeIsFocused = _useState10[1];
  var _useState11 = useState(null),
    _useState12 = _slicedToArray$4(_useState11, 2),
    lastEvent = _useState12[0],
    setLastEvent = _useState12[1];
  var _useState13 = useState(false),
    _useState14 = _slicedToArray$4(_useState13, 2),
    initialized = _useState14[0],
    setInitialized = _useState14[1];
  useImperativeHandle(ref, function () {
    return _objectSpread2$1(_objectSpread2$1({}, phoneNumberRef.current), {}, {
      value: "".concat(internalCode, " ").concat(formattedInternalPhone)
    });
  });
  useEffect(function () {
    if (!initialized) {
      if (code) {
        setInternalCode(code);
      }
      if (phoneNumber) {
        setInternalPhone(phoneNumber);
      }
      if (value) {
        var asYouType = new AsYouType({
          defaultCountry: countryCodes[internalCode][0]
        });
        asYouType.input(value);
        if (asYouType.getNumber() && asYouType.getNumber().isPossible()) {
          setInternalPhone(asYouType.getNumber().formatNational());
          setInternalCode("+".concat(asYouType.getCallingCode()));
        }
      }
      setInitialized(true);
    }
  }, [code, phoneNumber]);
  useEffect(function () {
    if (internalCode.length && !countryCodes[internalCode]) {
      setLocalErrorMessage("Please enter a valid country code");
    } else {
      if (internalPhone && internalPhone.length) {
        if (internalCode && internalCode.length) {
          var asYouType = new AsYouType({
            defaultCountry: countryCodes[internalCode][0]
          });
          asYouType.input(internalPhone);
          if (asYouType.getNumber() && asYouType.getNumber().isPossible()) {
            setLocalErrorMessage("");
          } else {
            setLocalErrorMessage("Please enter a valid phone number");
          }
        } else {
          setLocalErrorMessage("");
        }
      } else {
        setLocalErrorMessage("");
      }
    }
  }, [internalCode, internalPhone]);
  useEffect(function () {
    if (onLocalErrorChanged && typeof onLocalErrorChanged === "function") {
      onLocalErrorChanged(!!localErrorMessage);
    }
  }, [localErrorMessage]);
  useEffect(function () {
    if (onChange && typeof onChange === "function") {
      if (lastEvent && lastEvent.target) {
        var clonedE = Object.assign({}, lastEvent);
        clonedE.target.value = "".concat(internalCode, " ").concat(formattedInternalPhone);
        onChange(clonedE, {
          code: internalCode,
          number: internalPhone,
          formattedNumber: formattedInternalPhone,
          fullNumber: "".concat(code, " ").concat(internalPhone),
          formattedFullNumber: "".concat(code, " ").concat(formattedInternalPhone)
        });
      }
    }
  }, [internalCode, internalPhone, lastEvent]);
  useEffect(function () {
    if (internalCode && countryCodes[internalCode]) {
      setFormattedInternalPhone(new AsYouType({
        defaultCountry: countryCodes[internalCode][0]
      }).input(internalPhone));
    } else {
      setFormattedInternalPhone(formatIncompletePhoneNumber(internalPhone));
    }
  }, [internalPhone, internalCode]);
  var updateInternalPhone = function updateInternalPhone(e) {
    setLastEvent(e);
    setInternalPhone(e.target.value);
  };
  var updateInternalCode = function updateInternalCode(e) {
    setLastEvent(e);
    setInternalCode(e.target.value);
  };
  var changeFocusStyle = function changeFocusStyle(val) {
    return setCodeIsFocused(val);
  };
  var generateInputFieldClasses = classNames({
    "ui-text-field__input": true,
    "has-error": errorMessage || localErrorMessage,
    "has-left-icon": leftIcon,
    "has-right-icon": dropDown || rightIcon,
    focus: codeIsFocused
  }, inputClassName);
  var wrapperClasses = classNames((_classNames = {}, _defineProperty$6(_classNames, "size__".concat(size), true), _defineProperty$6(_classNames, "ui-text-field__wrapper", true), _defineProperty$6(_classNames, "has-error", errorMessage || localErrorMessage), _defineProperty$6(_classNames, "disabled", disabled), _classNames), className);
  var resizeCountryCode = function resizeCountryCode(elem) {
    var value = elem.target.value;
    elem.target.style.width = "calc(" + value.length + "ch + 4px)";
    var wrapper = elem.target.closest(".ui-text-field__wrapper");
    var offset;
    if (wrapper.classList.contains("size__small")) {
      offset = 16;
    } else if (wrapper.classList.contains("size__xlarge")) {
      offset = 20;
    } else {
      offset = 26;
    }
    elem.target.nextSibling.style.paddingLeft = "calc(" + (value.length <= 2 ? 2 : value.length) + "ch + " + offset + "px)";
  };
  return /*#__PURE__*/React__default.createElement(Box, {
    className: wrapperClasses
  }, label && /*#__PURE__*/React__default.createElement(Box, {
    is: "label"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    className: classNames({
      "ui-text-field__label": true,
      labelClass: labelClass
    }),
    scale: "subhead"
  }, label)), /*#__PURE__*/React__default.createElement("div", {
    className: "ui-text-field__input-wrapper ui-text-field__phone-input ui-text-field__phone-input"
  }, /*#__PURE__*/React__default.createElement(Box, {
    onInput: resizeCountryCode,
    className: "ui-text-field__country-code",
    placeholder: "+1",
    ref: phoneInputRef,
    maxLength: 4,
    is: "input",
    disabled: disabled || isUs,
    value: internalCode,
    onChange: updateInternalCode,
    onFocus: function onFocus() {
      return changeFocusStyle(true);
    },
    onBlur: function onBlur() {
      return changeFocusStyle(false);
    }
  }), /*#__PURE__*/React__default.createElement(Box, _extends$1({
    className: generateInputFieldClasses,
    disabled: disabled,
    is: "input"
  }, props, {
    value: formattedInternalPhone,
    onChange: updateInternalPhone,
    onKeyPress: allowOnlyNumbers,
    ref: phoneNumberRef
  }))), (errorMessage || localErrorMessage) && /*#__PURE__*/React__default.createElement("div", {
    className: "ui-text-field__error"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: Error$1,
    className: "ui-text-field__error-icon"
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-text-field__error-text",
    scale: "subhead",
    fontFace: "circularSTD"
  }, localErrorMessage ? localErrorMessage : errorMessage)));
});
PhoneField.propTypes = {
  label: propTypes.exports.string,
  dropDown: propTypes.exports.bool,
  size: propTypes.exports.oneOf(["small", "medium", "large", "xlarge", "huge", "massive"]),
  isUs: propTypes.exports.bool,
  phoneNumber: propTypes.exports.string,
  code: propTypes.exports.string,
  labelClass: propTypes.exports.string,
  onChange: propTypes.exports.func,
  onLocalErrorChanged: propTypes.exports.func
};
PhoneField.defaultProps = {
  size: "huge"
};

var _excluded$k = ["label", "size", "labelClass", "labelFontFace", "spacing", "errorMessage", "invisible", "noOfCharacters", "initialValue", "placeholder", "password", "onlyNumbers", "onChange"];
var PinInput = function PinInput(_ref) {
  var label = _ref.label,
    size = _ref.size,
    labelClass = _ref.labelClass,
    labelFontFace = _ref.labelFontFace,
    spacing = _ref.spacing,
    errorMessage = _ref.errorMessage,
    invisible = _ref.invisible,
    noOfCharacters = _ref.noOfCharacters,
    initialValue = _ref.initialValue,
    placeholder = _ref.placeholder,
    password = _ref.password,
    onlyNumbers = _ref.onlyNumbers,
    onChange = _ref.onChange;
    _objectWithoutProperties(_ref, _excluded$k);
  var _useState = useState([]),
    _useState2 = _slicedToArray$4(_useState, 2),
    data = _useState2[0],
    setData = _useState2[1];
  var _useState3 = useState(false),
    _useState4 = _slicedToArray$4(_useState3, 2),
    initialized = _useState4[0],
    setInitialized = _useState4[1];
  var _useState5 = useState(false),
    _useState6 = _slicedToArray$4(_useState5, 2),
    initiated = _useState6[0],
    setInitiated = _useState6[1];
  var updateValue = function updateValue(e, index) {
    var cloneData = _toConsumableArray(data);
    var value = e.target.value;
    if (value) {
      // We are changing an empty field
      if (index < data.length - 1) {
        var nextInput = document.getElementById(data[index + 1].id);
        nextInput.focus();
        setTimeout(function () {
          nextInput.select();
        });
      }
    } else if (!value) {
      if (index > 0) {
        var _nextInput = document.getElementById(data[index - 1].id);
        _nextInput.focus();
        setTimeout(function () {
          _nextInput.select();
        });
      }
    }
    cloneData[index].value = value;
    setData(cloneData);
    if (onChange && typeof onChange === "function") {
      onChange(data.reduce(function (prev, curr) {
        return (typeof prev === "string" ? prev : prev.value) + curr.value;
      }), "");
    }
  };
  useEffect(function () {
    if (!initialized) {
      for (var i = 0; i < noOfCharacters; i++) {
        setData(function (data) {
          data.push({
            value: "",
            id: uniqueRandomString(19, 8)
          });
          return data;
        });
        setInitialized(true);
      }
    }
    if (initialized && !initiated && initialValue.length === data.length) {
      setData(function (data) {
        return data.map(function (datum, index) {
          return _objectSpread2$1(_objectSpread2$1({}, datum), {}, {
            value: initialValue[index]
          });
        });
      });
      setInitiated(true);
    }
  }, [data, initialValue, initialized, initiated, noOfCharacters]);
  var handleKeyDown = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e, index) {
      var nextInput, _nextInput2;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (e.key === "ArrowLeft") {
              if (index !== 0) {
                nextInput = document.getElementById(data[index - 1].id);
                nextInput.focus();
                setTimeout(function () {
                  nextInput.select();
                });
              }
            }
            if (e.key === "ArrowRight") {
              if (index !== data.length - 1) {
                _nextInput2 = document.getElementById(data[index + 1].id);
                _nextInput2.focus();
                setTimeout(function () {
                  _nextInput2.select();
                });
              }
            }
          case 2:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function handleKeyDown(_x, _x2) {
      return _ref2.apply(this, arguments);
    };
  }();
  var textFields = data.map(function (item, index) {
    return /*#__PURE__*/React__default.createElement(TextField, {
      id: item.id,
      key: "item__".concat(index),
      placeholder: placeholder,
      onlyNumbers: onlyNumbers,
      type: password ? "password" : "text",
      oneCharWide: true,
      maxLength: "1",
      minLength: "1",
      showError: !!errorMessage,
      value: item.value,
      onInput: function onInput(e) {
        return updateValue(e, index);
      },
      onKeyDown: function onKeyDown(e) {
        return handleKeyDown(e, index);
      }
    });
  });
  return /*#__PURE__*/React__default.createElement(Box, {
    className: classNames(["ui-text-field__wrapper", "size__".concat(size)])
  }, label && /*#__PURE__*/React__default.createElement(Box, {
    is: "label"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    marginTop: 0,
    className: classNames({
      "ui-text-field__label": true,
      labelClass: labelClass
    }),
    fontFace: labelFontFace
  }, label)), /*#__PURE__*/React__default.createElement(Box, {
    display: "inline-flex",
    className: "ui-pin-input-container",
    style: {
      "--spacing": spacing
    }
  }, textFields), errorMessage && !invisible && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-text-field__error"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: Error$1,
    className: "ui-text-field__error-icon"
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-text-field__error-text",
    scale: "subhead",
    fontFace: "circularSTD"
  }, errorMessage)));
};
PinInput.propTypes = _objectSpread2$1(_objectSpread2$1({}, inputPropTypes), {}, {
  noOfCharacters: propTypes.exports.number,
  placeholder: propTypes.exports.string,
  password: propTypes.exports.bool,
  spacing: propTypes.exports.string,
  onChange: propTypes.exports.func,
  errorMessage: propTypes.exports.string
});
PinInput.defaultProps = _objectSpread2$1(_objectSpread2$1({}, defaultProps$1), {}, {
  noOfCharacters: 6,
  placeholder: "-",
  spacing: "8px"
});

var _excluded$j = ["variant", "percentage", "totalSteps", "currentStep", "fillColor", "emptyColor", "darkFillColor", "darkEmptyColor", "height"];
var ProgressBar = function ProgressBar(_ref) {
  var variant = _ref.variant,
    percentage = _ref.percentage,
    totalSteps = _ref.totalSteps,
    currentStep = _ref.currentStep,
    fillColor = _ref.fillColor,
    emptyColor = _ref.emptyColor,
    darkFillColor = _ref.darkFillColor,
    darkEmptyColor = _ref.darkEmptyColor,
    height = _ref.height,
    props = _objectWithoutProperties(_ref, _excluded$j);
  var _useState = useState(0),
    _useState2 = _slicedToArray$4(_useState, 2),
    computedWidth = _useState2[0],
    setComputedWidth = _useState2[1];
  var _useContext = useContext(DarkModeContext),
    darkMode = _useContext.darkMode;
  var _useContext2 = useContext(ThemeContext),
    theme = _useContext2.theme;
  useEffect(function () {
    if (percentage) {
      setComputedWidth(percentage);
    } else {
      if (currentStep !== undefined && totalSteps !== undefined) {
        setComputedWidth(Math.round(currentStep / totalSteps * 100));
      } else setComputedWidth(0);
    }
  }, [percentage, currentStep, totalSteps]);
  var computedThemeStyles = darkMode ? {
    "--fill-color": darkFillColor || theme["--dark-primary-action-color"],
    "--empty-color": darkEmptyColor ? emptyColor : variant === "variant-2" ? theme["--dark-primary-200"] : "#384860",
    "--height": height
  } : {
    "--fill-color": fillColor || theme["--light-primary-action-color"],
    "--empty-color": emptyColor || variant === "variant-2" ? theme["--light-primary-200"] : "#384860",
    "--height": props.height
  };
  return /*#__PURE__*/React__default.createElement(Box, {
    className: classNames(_defineProperty$6({
      "ui-progress-bar": true
    }, variant, variant)),
    style: _objectSpread2$1({}, computedThemeStyles)
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: classNames(_defineProperty$6({
      "ui-progress-bar__active": true
    }, variant, variant)),
    style: {
      "--width": "".concat(computedWidth, "%")
    }
  }));
};
ProgressBar.propTypes = {
  percentage: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.string]),
  totalSteps: propTypes.exports.number,
  currentStep: propTypes.exports.number,
  fillColor: propTypes.exports.string,
  emptyColor: propTypes.exports.string,
  darkFillColor: propTypes.exports.string,
  darkEmptyColor: propTypes.exports.string,
  variant: propTypes.exports.oneOf(["variant-1", "variant-2"]),
  height: propTypes.exports.string
};
ProgressBar.defaultProps = {
  variant: "variant-1",
  height: "6px"
};

var _excluded$i = ["full", "children", "debugMode", "className"];
var ResponsiveLayout = function ResponsiveLayout(_ref) {
  var full = _ref.full,
    children = _ref.children,
    debugMode = _ref.debugMode,
    className = _ref.className;
    _objectWithoutProperties(_ref, _excluded$i);
  return /*#__PURE__*/React__default.createElement(Box, {
    className: classNames({
      full: full,
      debugMode: debugMode,
      "ui-responsive-layout": true
    }, className)
  }, children);
};
ResponsiveLayout.propTypes = {
  full: propTypes.exports.bool,
  debugMode: propTypes.exports.bool,
  noPadding: propTypes.exports.bool
};
ResponsiveLayout.defaultProps = {};

var _excluded$h = ["className", "children", "alignment", "gutter", "gutterX", "gutterY"];
var Row = function Row(_ref) {
  var _classNames;
  var className = _ref.className,
    children = _ref.children,
    alignment = _ref.alignment,
    gutter = _ref.gutter,
    gutterX = _ref.gutterX,
    gutterY = _ref.gutterY,
    props = _objectWithoutProperties(_ref, _excluded$h);
  var computedGutter = {
    x: gutterX || gutter,
    y: gutterY || gutter
  };
  return /*#__PURE__*/React__default.createElement(Box, _extends$1({
    className: classNames((_classNames = {}, _defineProperty$6(_classNames, "align__".concat(alignment), alignment), _defineProperty$6(_classNames, "ui-responsive__row", true), _classNames), className)
  }, props, {
    style: {
      "--gutter-x": computedGutter.x,
      "--gutter-y": computedGutter.y
    }
  }), children);
};
Row.propTypes = {
  alignment: propTypes.exports.oneOf(["top", "center", "bottom"]),
  gutter: propTypes.exports.oneOfType([propTypes.exports.string, propTypes.exports.object]),
  gutterX: propTypes.exports.string,
  gutterY: propTypes.exports.string
};
Row.defaultProps = {
  alignment: "top",
  gutter: "16px"
};

var _excluded$g = ["label", "leftIcon", "size", "dropDown", "rightIcon", "errorMessage", "inputClassName", "options", "className", "placeholder", "onChange"];
var SelectField = function SelectField(_ref) {
  var label = _ref.label,
    leftIcon = _ref.leftIcon,
    size = _ref.size,
    dropDown = _ref.dropDown,
    rightIcon = _ref.rightIcon,
    errorMessage = _ref.errorMessage,
    inputClassName = _ref.inputClassName,
    options = _ref.options,
    className = _ref.className,
    placeholder = _ref.placeholder,
    onChange = _ref.onChange,
    props = _objectWithoutProperties(_ref, _excluded$g);
  var generateInputFieldClasses = classNames({
    "ui-text-field__input": true,
    "has-error": errorMessage,
    "has-left-icon": leftIcon,
    "has-right-icon": dropDown || rightIcon
  }, inputClassName);
  var selectWrapperClasses = classNames({
    "ui-text-field__input-wrapper": true,
    "ui-select-field__wrapper": true,
    "has-error": errorMessage
  });
  var wrapperClasses = classNames(["size__".concat(size), "ui-text-field__wrapper"], className);
  var handleChange = function handleChange(e) {
    if (typeof onChange === "function") {
      onChange(e);
    }
  };
  var mappedOptions = options.map(function (option) {
    return /*#__PURE__*/React__default.createElement("option", {
      key: keyGen(),
      value: typeof option === "string" ? option : option.value ? option.value : option.text
    }, typeof option === "string" ? option : option.text);
  });
  return /*#__PURE__*/React__default.createElement(Box, {
    className: wrapperClasses
  }, /*#__PURE__*/React__default.createElement(Box, {
    is: "label"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-text-field__label",
    scale: "subhead"
  }, label)), /*#__PURE__*/React__default.createElement("div", {
    className: selectWrapperClasses
  }, leftIcon && /*#__PURE__*/React__default.createElement(Icon, {
    icon: leftIcon,
    className: "ui-text-field__left-icon"
  }), /*#__PURE__*/React__default.createElement(Box, _extends$1({
    className: generateInputFieldClasses,
    is: "select",
    onChange: handleChange
  }, props), placeholder && /*#__PURE__*/React__default.createElement("option", {
    value: ""
  }, placeholder), mappedOptions), /*#__PURE__*/React__default.createElement(Icon, {
    icon: ChevronFilledDown,
    className: "ui-text-field__right-icon"
  })), errorMessage && /*#__PURE__*/React__default.createElement("div", {
    className: "ui-text-field__error"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: Error$1,
    className: "ui-text-field__error-icon"
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-text-field__error-text",
    scale: "subhead",
    fontFace: "circularSTD"
  }, errorMessage)));
};
SelectField.propTypes = {
  label: propTypes.exports.string,
  dropDown: propTypes.exports.bool,
  size: propTypes.exports.oneOf(["small", "medium", "large", "xlarge", "huge", "massive"]),
  options: propTypes.exports.array,
  placeholder: propTypes.exports.string
};
SelectField.defaultProps = {
  size: "huge",
  options: ["Item 1", "Item 2", "item 3"],
  placeholder: "Enter a value here"
};

var _excluded$f = ["steps", "currentStep", "fontSize", "spacing", "indicatorSize", "scheme", "activeColor", "StepComponent"];
var Stepper = function Stepper(_ref) {
  var steps = _ref.steps,
    currentStep = _ref.currentStep,
    fontSize = _ref.fontSize,
    spacing = _ref.spacing,
    indicatorSize = _ref.indicatorSize,
    scheme = _ref.scheme,
    activeColor = _ref.activeColor,
    StepComponent = _ref.StepComponent;
    _objectWithoutProperties(_ref, _excluded$f);
  var computedStyles = {
    "--spacing": spacing,
    "--indicator-size": indicatorSize,
    "--active-color": activeColor,
    "--active-color-bg": activeColor ? tinycolor(activeColor).lighten(43) : null
  };
  var mappedSteps = steps.map(function (step, index) {
    var _classNames, _classNames2;
    return /*#__PURE__*/React__default.createElement(Box, {
      key: "step__".concat(index),
      className: classNames((_classNames = {
        active: currentStep === index,
        completed: currentStep > index,
        todo: currentStep < index,
        last: index === steps.length - 1
      }, _defineProperty$6(_classNames, scheme, scheme), _defineProperty$6(_classNames, "ui-step", true), _classNames))
    }, /*#__PURE__*/React__default.createElement(Box, {
      className: classNames((_classNames2 = {
        active: currentStep === index,
        completed: currentStep > index,
        todo: currentStep < index,
        last: index === steps.length - 1
      }, _defineProperty$6(_classNames2, scheme, scheme), _defineProperty$6(_classNames2, "activeColor", activeColor), _defineProperty$6(_classNames2, "ui-step__indicator", true), _classNames2))
    }, currentStep > index && /*#__PURE__*/React__default.createElement(Icon, {
      className: "indicator-icon",
      icon: Check
    })), /*#__PURE__*/React__default.createElement(Box, {
      className: "ui-step__content"
    }, StepComponent ? /*#__PURE__*/React__default.createElement(StepComponent, {
      step: step
    }) : /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Text$1, {
      marginY: "0",
      className: "ui-step__content-title",
      fontSize: fontSize
    }, typeof step === "string" ? step : step.text), step.description && /*#__PURE__*/React__default.createElement(Text$1, {
      marginY: "0",
      fontFace: "circularSTD",
      scale: "subhead",
      color: "#878B9A"
    }, step.description))));
  });
  return /*#__PURE__*/React__default.createElement(Box, {
    className: classNames(["ui-stepper", scheme]),
    style: _objectSpread2$1({}, computedStyles)
  }, mappedSteps);
};
Stepper.propTypes = {
  steps: propTypes.exports.array,
  currentStep: propTypes.exports.number,
  fontSize: propTypes.exports.string,
  spacing: propTypes.exports.string,
  indicatorSize: propTypes.exports.string,
  scheme: propTypes.exports.oneOf(["variant-1", "variant-2"]),
  activeColor: propTypes.exports.string
};
Stepper.defaultProps = {
  currentStep: 0,
  fontSize: "14px",
  spacing: "50px",
  indicatorSize: "20px",
  scheme: "variant-1"
};

var _excluded$e = ["label", "colorScheme", "disabled", "className", "switchColor", "thumbColor", "switchHeight", "alignRight", "switchWidth", "thumbSize"];
var Switch = function Switch(_ref) {
  var _classNames;
  var label = _ref.label,
    colorScheme = _ref.colorScheme,
    disabled = _ref.disabled,
    className = _ref.className,
    switchColor = _ref.switchColor,
    thumbColor = _ref.thumbColor,
    switchHeight = _ref.switchHeight,
    alignRight = _ref.alignRight,
    switchWidth = _ref.switchWidth,
    thumbSize = _ref.thumbSize,
    props = _objectWithoutProperties(_ref, _excluded$e);
  var switchClassName = classNames((_classNames = {
    "ui-switch__wrapper": true
  }, _defineProperty$6(_classNames, "state__disabled", disabled), _defineProperty$6(_classNames, "semantic__".concat(colorScheme), colorScheme), _defineProperty$6(_classNames, "custom_color", switchColor), _defineProperty$6(_classNames, "custom_thumb_color", thumbColor), _defineProperty$6(_classNames, "alignRight", alignRight), _classNames), className);
  return /*#__PURE__*/React__default.createElement(Box, {
    is: "label",
    className: switchClassName,
    style: {
      "--customswitchcolor": switchColor,
      "--customthumbcolor": thumbColor,
      "--switch-height": switchHeight,
      "--switch-width": switchWidth,
      "--thumb-size": thumbSize
    }
  }, /*#__PURE__*/React__default.createElement(Box, {
    is: "div",
    className: "ui-switch"
  }, /*#__PURE__*/React__default.createElement(Box, _extends$1({
    is: "input",
    className: "ui-slider",
    type: "checkbox",
    disabled: disabled && true
  }, props)), /*#__PURE__*/React__default.createElement(Box, {
    is: "span",
    className: "ui-slider round"
  })), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-switch__label-text"
  }, label));
};
Switch.propTypes = {
  colorScheme: propTypes.exports.oneOf(["primary", "danger", "success", "outline", "invisible"]),
  disabled: propTypes.exports.bool,
  switchColor: propTypes.exports.string,
  thumbColor: propTypes.exports.string,
  alignRight: propTypes.exports.bool,
  thumbSize: propTypes.exports.string,
  switchWidth: propTypes.exports.string,
  switchHeight: propTypes.exports.string
};
Switch.defaultProps = {
  colorScheme: "success",
  disabled: false,
  thumbSize: "18px",
  switchWidth: "56px",
  switchHeight: "26px"
};

var _excluded$d = ["is", "text", "tabs", "className", "initiallyActiveTab", "horizontal", "spacing", "onTabChange"],
  _excluded2$2 = ["text", "is"];
var Tab = function Tab(_ref) {
  _ref.is;
    _ref.text;
    var tabs = _ref.tabs,
    className = _ref.className,
    initiallyActiveTab = _ref.initiallyActiveTab,
    horizontal = _ref.horizontal,
    spacing = _ref.spacing,
    onTabChange = _ref.onTabChange;
    _objectWithoutProperties(_ref, _excluded$d);
  var _useState = useState(0),
    _useState2 = _slicedToArray$4(_useState, 2),
    internalActive = _useState2[0],
    setInternalActive = _useState2[1];
  useLayoutEffect(function () {
    if (initiallyActiveTab !== undefined && typeof initiallyActiveTab === "number") {
      setInternalActive(initiallyActiveTab);
    }
  }, [initiallyActiveTab]);
  useEffect(function () {
    if (onTabChange && typeof onTabChange === "function") {
      onTabChange(internalActive, tabs[internalActive]);
    }
  }, [internalActive]);
  var wrapperClassNames = classNames({
    "ui-tabs": true,
    horizontal: horizontal
  });
  var switchActiveTabs = function switchActiveTabs(index, tab) {
    if (!tab.disabled) {
      setInternalActive(index);
    }
  };
  var generateSpacing = function generateSpacing(index) {
    if (index < tabs.length - 1) {
      if (horizontal) {
        return {
          marginRight: spacing || 0
        };
      } else {
        return {
          marginBottom: spacing || 0
        };
      }
    } else {
      return {};
    }
  };
  var mappedTabs = tabs.map(function (_ref2, index) {
    var text = _ref2.text;
      _ref2.is;
      var tab = _objectWithoutProperties(_ref2, _excluded2$2);
    var spacing = generateSpacing(index);
    return /*#__PURE__*/React__default.createElement(Box, _extends$1({
      display: "inline-block",
      cursor: "pointer"
    }, spacing, tab, {
      key: keyGen(),
      className: classNames({
        "ui-tab": true,
        active: internalActive === index,
        disabled: _typeof$6(tab) === "object" && tab.disabled
      }, className),
      onClick: function onClick() {
        return switchActiveTabs(index, tab);
      }
    }), /*#__PURE__*/React__default.createElement(Text$1, {
      is: "span",
      scale: "subhead"
    }, text));
  });
  return /*#__PURE__*/React__default.createElement("div", {
    className: wrapperClassNames
  }, mappedTabs);
};
Tab.propTypes = {
  tabs: propTypes.exports.array,
  horizontal: propTypes.exports.bool,
  spacing: propTypes.exports.string,
  initiallyActiveTab: propTypes.exports.number,
  onTabChange: propTypes.exports.func
};
Tab.defaultProps = {
  horizontal: true,
  initiallyActiveTab: 0,
  spacing: "4px"
};

// `SameValue` abstract operation
// https://tc39.es/ecma262/#sec-samevalue
// eslint-disable-next-line es/no-object-is -- safe
var sameValue$1 = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare -- NaN check
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};

var call = functionCall;
var fixRegExpWellKnownSymbolLogic = fixRegexpWellKnownSymbolLogic;
var anObject = anObject$b;
var isNullOrUndefined = isNullOrUndefined$5;
var requireObjectCoercible$2 = requireObjectCoercible$a;
var sameValue = sameValue$1;
var toString$3 = toString$f;
var getMethod = getMethod$4;
var regExpExec = regexpExecAbstract;

// @@search logic
fixRegExpWellKnownSymbolLogic('search', function (SEARCH, nativeSearch, maybeCallNative) {
  return [
    // `String.prototype.search` method
    // https://tc39.es/ecma262/#sec-string.prototype.search
    function search(regexp) {
      var O = requireObjectCoercible$2(this);
      var searcher = isNullOrUndefined(regexp) ? undefined : getMethod(regexp, SEARCH);
      return searcher ? call(searcher, regexp, O) : new RegExp(regexp)[SEARCH](toString$3(O));
    },
    // `RegExp.prototype[@@search]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search
    function (string) {
      var rx = anObject(this);
      var S = toString$3(string);
      var res = maybeCallNative(nativeSearch, rx, S);

      if (res.done) return res.value;

      var previousLastIndex = rx.lastIndex;
      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
      var result = regExpExec(rx, S);
      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
      return result === null ? -1 : result.index;
    }
  ];
});

var availableFiltersTextMap = {
  Is: true,
  "Is not": true,
  "Is empty": false,
  "Is not empty": false,
  "Is equal to": true,
  "Is not equal to": true,
  "Begins with": true,
  "Ends with": true,
  Contains: true,
  "Does not contain": true
};
var availableFilters = [{
  text: "Is",
  requiresText: true
}, {
  text: "Is not",
  requiresText: true
}, {
  text: "Is empty",
  requiresText: false
}, {
  text: "Is not empty",
  requiresText: false
}, {
  text: "Is equal to",
  requiresText: true
}, {
  text: "Is not equal to",
  requiresText: true
}, {
  text: "Begins with",
  requiresText: true
}, {
  text: "Ends with",
  requiresText: true
}, {
  text: "Contains",
  requiresText: true
}, {
  text: "Does not contain",
  requiresText: true
}];

var _excluded$c = ["column", "onClose"];
var TableFilterDropdown = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var column = _ref.column,
    onClose = _ref.onClose;
    _objectWithoutProperties(_ref, _excluded$c);
  var _useContext = useContext(TableContext),
    setFilter = _useContext.setFilter;
  var _useState = useState({
      column: null,
      selectedFilter: null,
      selectedFilterValue: null,
      join: null,
      selectedFilter2: null,
      selectedFilterValue2: null
    }),
    _useState2 = _slicedToArray$4(_useState, 2),
    localFilter = _useState2[0],
    setLocalFilter = _useState2[1];
  var updateLocalFilterSelectedFilterValue = function updateLocalFilterSelectedFilterValue(e) {
    var value = e.target.value;
    setLocalFilter(function (localFilter) {
      return _objectSpread2$1(_objectSpread2$1({}, localFilter), {}, {
        selectedFilterValue: value
      });
    });
  };
  var updateLocalFilterSelectedFilter = function updateLocalFilterSelectedFilter(e) {
    var value = e.target.value;
    setLocalFilter(function (localFilter) {
      return _objectSpread2$1(_objectSpread2$1({}, localFilter), {}, {
        selectedFilter: value
      });
    });
  };
  var applyFilter = function applyFilter() {
    setFilter(_objectSpread2$1(_objectSpread2$1({}, localFilter), {}, {
      column: column
    }));
    onClose();
  };
  useEffect(function () {
    return function () {
      setLocalFilter({
        column: null,
        selectedFilter: null,
        selectedFilterValue: null,
        join: null,
        selectedFilter2: null,
        selectedFilterValue2: null
      });
    };
  }, []);
  var closeDropdown = function closeDropdown() {
    onClose();
  };
  var mappedAvailableFilters = availableFilters.map(function (filter, index) {
    return /*#__PURE__*/React__default.createElement(Box, {
      className: classNames({
        "ui-table__filters-item": true,
        bordered: index > 0 && index % 2 === 1
      }),
      key: "filter-item-".concat(index)
    }, /*#__PURE__*/React__default.createElement(Radio, {
      checked: filter.text === localFilter.selectedFilter,
      ringed: true,
      value: filter.text,
      onChange: updateLocalFilterSelectedFilter
    }, /*#__PURE__*/React__default.createElement(Text$1, {
      marginY: 0,
      marginLeft: 8,
      scale: "subhead",
      className: "filterText",
      fontFace: "circularSTD"
    }, filter.text)), /*#__PURE__*/React__default.createElement(Box, {
      marginTop: ".5rem"
    }, localFilter.selectedFilter === filter.text && filter.requiresText && /*#__PURE__*/React__default.createElement(TextField, {
      size: "medium",
      label: "Value",
      placeholder: "Type something",
      fontFace: "circularSTD",
      onChange: updateLocalFilterSelectedFilterValue
    })));
  });
  var applyFilterColor = availableFiltersTextMap[localFilter.selectedFilter] ? localFilter.selectedFilterValue ? "text-blue-500" : "text-blue-300" : "text-blue-500";
  return /*#__PURE__*/React__default.createElement(Box, {
    ref: ref,
    className: "ui-table__filters"
  }, localFilter.selectedFilter && /*#__PURE__*/React__default.createElement(Box, {
    paddingX: 16,
    display: "flex",
    justifyContent: "flex-end"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    fontFace: "heroNew",
    className: "text-grey-600",
    scale: "footnote",
    marginRight: 10,
    onClick: closeDropdown
  }, "Cancel"), /*#__PURE__*/React__default.createElement(Text$1, {
    className: classNames(_defineProperty$6({}, applyFilterColor, true)),
    fontFace: "heroNew",
    scale: "footnote",
    onClick: applyFilter
  }, "Apply filter")), mappedAvailableFilters);
});
TableFilterDropdown.defaultProps = {};
TableFilterDropdown.propTypes = {
  column: propTypes.exports.object,
  toggleSelection: propTypes.exports.func,
  onClose: propTypes.exports.func
};

function getAlignment(placement) {
  return placement.split('-')[1];
}

function getLengthFromAxis(axis) {
  return axis === 'y' ? 'height' : 'width';
}

function getSide(placement) {
  return placement.split('-')[0];
}

function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';
}

function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref;
  const commonX = reference.x + reference.width / 2 - floating.width / 2;
  const commonY = reference.y + reference.height / 2 - floating.height / 2;
  const mainAxis = getMainAxisFromPlacement(placement);
  const length = getLengthFromAxis(mainAxis);
  const commonAlign = reference[length] / 2 - floating[length] / 2;
  const side = getSide(placement);
  const isVertical = mainAxis === 'x';
  let coords;
  switch (side) {
    case 'top':
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case 'bottom':
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case 'right':
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case 'left':
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch (getAlignment(placement)) {
    case 'start':
      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case 'end':
      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}

/**
 * Computes the `x` and `y` coordinates that will place the floating element
 * next to a reference element when it is given a certain positioning strategy.
 *
 * This export does not have any `platform` interface logic. You will need to
 * write one for the platform you are using Floating UI with.
 */
const computePosition$1 = async (reference, floating, config) => {
  const {
    placement = 'bottom',
    strategy = 'absolute',
    middleware = [],
    platform
  } = config;
  const validMiddleware = middleware.filter(Boolean);
  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));
  let rects = await platform.getElementRects({
    reference,
    floating,
    strategy
  });
  let {
    x,
    y
  } = computeCoordsFromPlacement(rects, placement, rtl);
  let statefulPlacement = placement;
  let middlewareData = {};
  let resetCount = 0;
  for (let i = 0; i < validMiddleware.length; i++) {
    const {
      name,
      fn
    } = validMiddleware[i];
    const {
      x: nextX,
      y: nextY,
      data,
      reset
    } = await fn({
      x,
      y,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform,
      elements: {
        reference,
        floating
      }
    });
    x = nextX != null ? nextX : x;
    y = nextY != null ? nextY : y;
    middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data
      }
    };
    if (reset && resetCount <= 50) {
      resetCount++;
      if (typeof reset === 'object') {
        if (reset.placement) {
          statefulPlacement = reset.placement;
        }
        if (reset.rects) {
          rects = reset.rects === true ? await platform.getElementRects({
            reference,
            floating,
            strategy
          }) : reset.rects;
        }
        ({
          x,
          y
        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
      }
      i = -1;
      continue;
    }
  }
  return {
    x,
    y,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};

function evaluate(value, param) {
  return typeof value === 'function' ? value(param) : value;
}

function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}

function getSideObjectFromPadding(padding) {
  return typeof padding !== 'number' ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}

function rectToClientRect(rect) {
  return {
    ...rect,
    top: rect.y,
    left: rect.x,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  };
}

/**
 * Resolves with an object of overflow side offsets that determine how much the
 * element is overflowing a given clipping boundary on each side.
 * - positive = overflowing the boundary by that number of pixels
 * - negative = how many pixels left before it will overflow
 * - 0 = lies flush with the boundary
 * @see https://floating-ui.com/docs/detectOverflow
 */
async function detectOverflow(state, options) {
  var _await$platform$isEle;
  if (options === void 0) {
    options = {};
  }
  const {
    x,
    y,
    platform,
    rects,
    elements,
    strategy
  } = state;
  const {
    boundary = 'clippingAncestors',
    rootBoundary = 'viewport',
    elementContext = 'floating',
    altBoundary = false,
    padding = 0
  } = evaluate(options, state);
  const paddingObject = getSideObjectFromPadding(padding);
  const altContext = elementContext === 'floating' ? 'reference' : 'floating';
  const element = elements[altBoundary ? altContext : elementContext];
  const clippingClientRect = rectToClientRect(await platform.getClippingRect({
    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),
    boundary,
    rootBoundary,
    strategy
  }));
  const rect = elementContext === 'floating' ? {
    ...rects.floating,
    x,
    y
  } : rects.reference;
  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));
  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  };
  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}

const min$3 = Math.min;
const max$2 = Math.max;

function within(min$1, value, max$1) {
  return max$2(min$1, min$3(value, max$1));
}

const oppositeSideMap = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);
}

function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const mainAxis = getMainAxisFromPlacement(placement);
  const length = getLengthFromAxis(mainAxis);
  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';
  if (rects.reference[length] > rects.floating[length]) {
    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
  }
  return {
    main: mainAlignmentSide,
    cross: getOppositePlacement(mainAlignmentSide)
  };
}

const oppositeAlignmentMap = {
  start: 'end',
  end: 'start'
};
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);
}

function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}

function getSideList(side, isStart, rtl) {
  const lr = ['left', 'right'];
  const rl = ['right', 'left'];
  const tb = ['top', 'bottom'];
  const bt = ['bottom', 'top'];
  switch (side) {
    case 'top':
    case 'bottom':
      if (rtl) return isStart ? rl : lr;
      return isStart ? lr : rl;
    case 'left':
    case 'right':
      return isStart ? tb : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  const alignment = getAlignment(placement);
  let list = getSideList(getSide(placement), direction === 'start', rtl);
  if (alignment) {
    list = list.map(side => side + "-" + alignment);
    if (flipAlignment) {
      list = list.concat(list.map(getOppositeAlignmentPlacement));
    }
  }
  return list;
}

/**
 * Optimizes the visibility of the floating element by flipping the `placement`
 * in order to keep it in view when the preferred placement(s) will overflow the
 * clipping boundary. Alternative to `autoPlacement`.
 * @see https://floating-ui.com/docs/flip
 */
const flip = function (options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: 'flip',
    options,
    async fn(state) {
      var _middlewareData$flip;
      const {
        placement,
        middlewareData,
        rects,
        initialPlacement,
        platform,
        elements
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = 'bestFit',
        fallbackAxisSideDirection = 'none',
        flipAlignment = true,
        ...detectOverflowOptions
      } = evaluate(options, state);
      const side = getSide(placement);
      const isBasePlacement = getSide(initialPlacement) === initialPlacement;
      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));
      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {
        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
      }
      const placements = [initialPlacement, ...fallbackPlacements];
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const overflows = [];
      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
      if (checkMainAxis) {
        overflows.push(overflow[side]);
      }
      if (checkCrossAxis) {
        const {
          main,
          cross
        } = getAlignmentSides(placement, rects, rtl);
        overflows.push(overflow[main], overflow[cross]);
      }
      overflowsData = [...overflowsData, {
        placement,
        overflows
      }];

      // One or more sides is overflowing.
      if (!overflows.every(side => side <= 0)) {
        var _middlewareData$flip2, _overflowsData$filter;
        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
        const nextPlacement = placements[nextIndex];
        if (nextPlacement) {
          // Try next placement and re-run the lifecycle.
          return {
            data: {
              index: nextIndex,
              overflows: overflowsData
            },
            reset: {
              placement: nextPlacement
            }
          };
        }

        // First, find the candidates that fit on the mainAxis side of overflow,
        // then find the placement that fits the best on the main crossAxis side.
        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;

        // Otherwise fallback.
        if (!resetPlacement) {
          switch (fallbackStrategy) {
            case 'bestFit':
              {
                var _overflowsData$map$so;
                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];
                if (placement) {
                  resetPlacement = placement;
                }
                break;
              }
            case 'initialPlacement':
              resetPlacement = initialPlacement;
              break;
          }
        }
        if (placement !== resetPlacement) {
          return {
            reset: {
              placement: resetPlacement
            }
          };
        }
      }
      return {};
    }
  };
};

async function convertValueToCoords(state, options) {
  const {
    placement,
    platform,
    elements
  } = state;
  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));
  const side = getSide(placement);
  const alignment = getAlignment(placement);
  const isVertical = getMainAxisFromPlacement(placement) === 'x';
  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;
  const crossAxisMulti = rtl && isVertical ? -1 : 1;
  const rawValue = evaluate(options, state);

  // eslint-disable-next-line prefer-const
  let {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue === 'number' ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...rawValue
  };
  if (alignment && typeof alignmentAxis === 'number') {
    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;
  }
  return isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}

/**
 * Modifies the placement by translating the floating element along the
 * specified axes.
 * A number (shorthand for `mainAxis` or distance), or an axes configuration
 * object may be passed.
 * @see https://floating-ui.com/docs/offset
 */
const offset$1 = function (options) {
  if (options === void 0) {
    options = 0;
  }
  return {
    name: 'offset',
    options,
    async fn(state) {
      const {
        x,
        y
      } = state;
      const diffCoords = await convertValueToCoords(state, options);
      return {
        x: x + diffCoords.x,
        y: y + diffCoords.y,
        data: diffCoords
      };
    }
  };
};

function getCrossAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}

/**
 * Optimizes the visibility of the floating element by shifting it in order to
 * keep it in view when it will overflow the clipping boundary.
 * @see https://floating-ui.com/docs/shift
 */
const shift$1 = function (options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: 'shift',
    options,
    async fn(state) {
      const {
        x,
        y,
        placement
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = false,
        limiter = {
          fn: _ref => {
            let {
              x,
              y
            } = _ref;
            return {
              x,
              y
            };
          }
        },
        ...detectOverflowOptions
      } = evaluate(options, state);
      const coords = {
        x,
        y
      };
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const mainAxis = getMainAxisFromPlacement(getSide(placement));
      const crossAxis = getCrossAxis(mainAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      if (checkMainAxis) {
        const minSide = mainAxis === 'y' ? 'top' : 'left';
        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';
        const min = mainAxisCoord + overflow[minSide];
        const max = mainAxisCoord - overflow[maxSide];
        mainAxisCoord = within(min, mainAxisCoord, max);
      }
      if (checkCrossAxis) {
        const minSide = crossAxis === 'y' ? 'top' : 'left';
        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';
        const min = crossAxisCoord + overflow[minSide];
        const max = crossAxisCoord - overflow[maxSide];
        crossAxisCoord = within(min, crossAxisCoord, max);
      }
      const limitedCoords = limiter.fn({
        ...state,
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      });
      return {
        ...limitedCoords,
        data: {
          x: limitedCoords.x - x,
          y: limitedCoords.y - y
        }
      };
    }
  };
};

function getWindow(node) {
  var _node$ownerDocument;
  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}

function getComputedStyle$1(element) {
  return getWindow(element).getComputedStyle(element);
}

function isNode(value) {
  return value instanceof getWindow(value).Node;
}
function getNodeName(node) {
  if (isNode(node)) {
    return (node.nodeName || '').toLowerCase();
  }
  // Mocked nodes in testing environments may not be instances of Node. By
  // returning `#document` an infinite loop won't occur.
  // https://github.com/floating-ui/floating-ui/issues/2317
  return '#document';
}

function isHTMLElement(value) {
  return value instanceof getWindow(value).HTMLElement;
}
function isElement$1(value) {
  return value instanceof getWindow(value).Element;
}
function isShadowRoot(node) {
  // Browsers without `ShadowRoot` support.
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }
  return node instanceof getWindow(node).ShadowRoot || node instanceof ShadowRoot;
}
function isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle$1(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);
}
function isTableElement(element) {
  return ['table', 'td', 'th'].includes(getNodeName(element));
}
function isContainingBlock(element) {
  const safari = isSafari();
  const css = getComputedStyle$1(element);

  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
  return css.transform !== 'none' || css.perspective !== 'none' || !safari && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !safari && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));
}
function isSafari() {
  if (typeof CSS === 'undefined' || !CSS.supports) return false;
  return CSS.supports('-webkit-backdrop-filter', 'none');
}
function isLastTraversableNode(node) {
  return ['html', 'body', '#document'].includes(getNodeName(node));
}

const min$2 = Math.min;
const max$1 = Math.max;
const round = Math.round;
const createEmptyCoords = v => ({
  x: v,
  y: v
});

function getCssDimensions(element) {
  const css = getComputedStyle$1(element);
  // In testing environments, the `width` and `height` properties are empty
  // strings for SVG elements, returning NaN. Fallback to `0` in this case.
  let width = parseFloat(css.width) || 0;
  let height = parseFloat(css.height) || 0;
  const hasOffset = isHTMLElement(element);
  const offsetWidth = hasOffset ? element.offsetWidth : width;
  const offsetHeight = hasOffset ? element.offsetHeight : height;
  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;
  if (shouldFallback) {
    width = offsetWidth;
    height = offsetHeight;
  }
  return {
    width,
    height,
    $: shouldFallback
  };
}

function unwrapElement(element) {
  return !isElement$1(element) ? element.contextElement : element;
}

function getScale(element) {
  const domElement = unwrapElement(element);
  if (!isHTMLElement(domElement)) {
    return createEmptyCoords(1);
  }
  const rect = domElement.getBoundingClientRect();
  const {
    width,
    height,
    $
  } = getCssDimensions(domElement);
  let x = ($ ? round(rect.width) : rect.width) / width;
  let y = ($ ? round(rect.height) : rect.height) / height;

  // 0, NaN, or Infinity should always fallback to 1.

  if (!x || !Number.isFinite(x)) {
    x = 1;
  }
  if (!y || !Number.isFinite(y)) {
    y = 1;
  }
  return {
    x,
    y
  };
}

const noOffsets = /*#__PURE__*/createEmptyCoords(0);
function getVisualOffsets(element, isFixed, floatingOffsetParent) {
  var _win$visualViewport, _win$visualViewport2;
  if (isFixed === void 0) {
    isFixed = true;
  }
  if (!isSafari()) {
    return noOffsets;
  }
  const win = element ? getWindow(element) : window;
  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== win) {
    return noOffsets;
  }
  return {
    x: ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0,
    y: ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0
  };
}

function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element.getBoundingClientRect();
  const domElement = unwrapElement(element);
  let scale = createEmptyCoords(1);
  if (includeScale) {
    if (offsetParent) {
      if (isElement$1(offsetParent)) {
        scale = getScale(offsetParent);
      }
    } else {
      scale = getScale(element);
    }
  }
  const visualOffsets = getVisualOffsets(domElement, isFixedStrategy, offsetParent);
  let x = (clientRect.left + visualOffsets.x) / scale.x;
  let y = (clientRect.top + visualOffsets.y) / scale.y;
  let width = clientRect.width / scale.x;
  let height = clientRect.height / scale.y;
  if (domElement) {
    const win = getWindow(domElement);
    const offsetWin = offsetParent && isElement$1(offsetParent) ? getWindow(offsetParent) : offsetParent;
    let currentIFrame = win.frameElement;
    while (currentIFrame && offsetParent && offsetWin !== win) {
      const iframeScale = getScale(currentIFrame);
      const iframeRect = currentIFrame.getBoundingClientRect();
      const css = getComputedStyle(currentIFrame);
      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
      x *= iframeScale.x;
      y *= iframeScale.y;
      width *= iframeScale.x;
      height *= iframeScale.y;
      x += left;
      y += top;
      currentIFrame = getWindow(currentIFrame).frameElement;
    }
  }
  return rectToClientRect({
    width,
    height,
    x,
    y
  });
}

function getDocumentElement$1(node) {
  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;
}

function getNodeScroll(element) {
  if (isElement$1(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.pageXOffset,
    scrollTop: element.pageYOffset
  };
}

function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    rect,
    offsetParent,
    strategy
  } = _ref;
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement$1(offsetParent);
  if (offsetParent === documentElement) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  let scale = createEmptyCoords(1);
  const offsets = createEmptyCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {
    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent);
      scale = getScale(offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  return {
    width: rect.width * scale.x,
    height: rect.height * scale.y,
    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,
    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y
  };
}

function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  return getBoundingClientRect(getDocumentElement$1(element)).left + getNodeScroll(element).scrollLeft;
}

// Gets the entire size of the scrollable document area, even extending outside
// of the `<html>` and `<body>` rect bounds if horizontally scrollable.
function getDocumentRect(element) {
  const html = getDocumentElement$1(element);
  const scroll = getNodeScroll(element);
  const body = element.ownerDocument.body;
  const width = max$1(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);
  const height = max$1(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);
  let x = -scroll.scrollLeft + getWindowScrollBarX(element);
  const y = -scroll.scrollTop;
  if (getComputedStyle$1(body).direction === 'rtl') {
    x += max$1(html.clientWidth, body.clientWidth) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}

function getParentNode(node) {
  if (getNodeName(node) === 'html') {
    return node;
  }
  const result =
  // Step into the shadow DOM of the parent of a slotted node.
  node.assignedSlot ||
  // DOM Element detected.
  node.parentNode ||
  // ShadowRoot detected.
  isShadowRoot(node) && node.host ||
  // Fallback.
  getDocumentElement$1(node);
  return isShadowRoot(result) ? result.host : result;
}

function getNearestOverflowAncestor(node) {
  const parentNode = getParentNode(node);
  if (isLastTraversableNode(parentNode)) {
    return node.ownerDocument ? node.ownerDocument.body : node.body;
  }
  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}

function getOverflowAncestors(node, list) {
  var _node$ownerDocument;
  if (list === void 0) {
    list = [];
  }
  const scrollableAncestor = getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);
  const win = getWindow(scrollableAncestor);
  if (isBody) {
    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);
  }
  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));
}

function getViewportRect(element, strategy) {
  const win = getWindow(element);
  const html = getDocumentElement$1(element);
  const visualViewport = win.visualViewport;
  let width = html.clientWidth;
  let height = html.clientHeight;
  let x = 0;
  let y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    const visualViewportBased = isSafari();
    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x,
    y
  };
}

// Returns the inner client rect, subtracting scrollbars if present.
function getInnerBoundingClientRect(element, strategy) {
  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');
  const top = clientRect.top + element.clientTop;
  const left = clientRect.left + element.clientLeft;
  const scale = isHTMLElement(element) ? getScale(element) : createEmptyCoords(1);
  const width = element.clientWidth * scale.x;
  const height = element.clientHeight * scale.y;
  const x = left * scale.x;
  const y = top * scale.y;
  return {
    width,
    height,
    x,
    y
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === 'viewport') {
    rect = getViewportRect(element, strategy);
  } else if (clippingAncestor === 'document') {
    rect = getDocumentRect(getDocumentElement$1(element));
  } else if (isElement$1(clippingAncestor)) {
    rect = getInnerBoundingClientRect(clippingAncestor, strategy);
  } else {
    const visualOffsets = getVisualOffsets(element);
    rect = {
      ...clippingAncestor,
      x: clippingAncestor.x - visualOffsets.x,
      y: clippingAncestor.y - visualOffsets.y
    };
  }
  return rectToClientRect(rect);
}
function hasFixedPositionAncestor(element, stopNode) {
  const parentNode = getParentNode(element);
  if (parentNode === stopNode || !isElement$1(parentNode) || isLastTraversableNode(parentNode)) {
    return false;
  }
  return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);
}

// A "clipping ancestor" is an `overflow` element with the characteristic of
// clipping (or hiding) child elements. This returns all clipping ancestors
// of the given element up the tree.
function getClippingElementAncestors(element, cache) {
  const cachedResult = cache.get(element);
  if (cachedResult) {
    return cachedResult;
  }
  let result = getOverflowAncestors(element).filter(el => isElement$1(el) && getNodeName(el) !== 'body');
  let currentContainingBlockComputedStyle = null;
  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';
  let currentNode = elementIsFixed ? getParentNode(element) : element;

  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
  while (isElement$1(currentNode) && !isLastTraversableNode(currentNode)) {
    const computedStyle = getComputedStyle$1(currentNode);
    const currentNodeIsContaining = isContainingBlock(currentNode);
    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {
      currentContainingBlockComputedStyle = null;
    }
    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
    if (shouldDropCurrentNode) {
      // Drop non-containing blocks.
      result = result.filter(ancestor => ancestor !== currentNode);
    } else {
      // Record last containing block for next iteration.
      currentContainingBlockComputedStyle = computedStyle;
    }
    currentNode = getParentNode(currentNode);
  }
  cache.set(element, result);
  return result;
}

// Gets the maximum area that the element is visible in due to any number of
// clipping ancestors.
function getClippingRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref;
  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);
  const clippingAncestors = [...elementClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = max$1(rect.top, accRect.top);
    accRect.right = min$2(rect.right, accRect.right);
    accRect.bottom = min$2(rect.bottom, accRect.bottom);
    accRect.left = max$1(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}

function getDimensions(element) {
  return getCssDimensions(element);
}

function getTrueOffsetParent(element, polyfill) {
  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {
    return null;
  }
  if (polyfill) {
    return polyfill(element);
  }
  return element.offsetParent;
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else {
      currentNode = getParentNode(currentNode);
    }
  }
  return null;
}

// Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.
function getOffsetParent(element, polyfill) {
  const window = getWindow(element);
  if (!isHTMLElement(element)) {
    return window;
  }
  let offsetParent = getTrueOffsetParent(element, polyfill);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent, polyfill);
  }
  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {
    return window;
  }
  return offsetParent || getContainingBlock(element) || window;
}

function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement$1(offsetParent);
  const isFixed = strategy === 'fixed';
  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = createEmptyCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

const platform = {
  getClippingRect,
  convertOffsetParentRelativeRectToViewportRelativeRect,
  isElement: isElement$1,
  getDimensions,
  getOffsetParent,
  getDocumentElement: getDocumentElement$1,
  getScale,
  async getElementRects(_ref) {
    let {
      reference,
      floating,
      strategy
    } = _ref;
    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;
    const getDimensionsFn = this.getDimensions;
    return {
      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),
      floating: {
        x: 0,
        y: 0,
        ...(await getDimensionsFn(floating))
      }
    };
  },
  getClientRects: element => Array.from(element.getClientRects()),
  isRTL: element => getComputedStyle$1(element).direction === 'rtl'
};

/**
 * Computes the `x` and `y` coordinates that will place the floating element
 * next to a reference element when it is given a certain CSS positioning
 * strategy.
 */
const computePosition = (reference, floating, options) => {
  // This caches the expensive `getClippingElementAncestors` function so that
  // multiple lifecycle resets re-use the same result. It only lives for a
  // single call. If other functions become expensive, we can add them as well.
  const cache = new Map();
  const mergedOptions = {
    platform,
    ...options
  };
  const platformWithCache = {
    ...mergedOptions.platform,
    _c: cache
  };
  return computePosition$1(reference, floating, {
    ...mergedOptions,
    platform: platformWithCache
  });
};

var _excluded$b = ["column", "thCell", "toggleSelection"];
var TableHeadCellDropdown = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var column = _ref.column,
    thCell = _ref.thCell,
    toggleSelection = _ref.toggleSelection;
    _objectWithoutProperties(_ref, _excluded$b);
  var trigger = useRef();
  var target = useRef();
  var _useContext = useContext(TableContext),
    setSortConfiguration = _useContext.setSortConfiguration;
  var _useState = useState(false),
    _useState2 = _slicedToArray$4(_useState, 2),
    showFilterDropdown = _useState2[0],
    setShowFilterDropdown = _useState2[1];
  useEffect(function () {
    if (showFilterDropdown) {
      computePosition(trigger.current, target.current, {
        placement: "right-end",
        middleware: [offset$1(6), flip(), shift$1()]
      }).then(function (_ref2) {
        var x = _ref2.x,
          y = _ref2.y;
        Object.assign(target.current.style, {
          left: "".concat(x, "px"),
          top: "".concat(y, "px")
        });
      });
    }
  }, [showFilterDropdown]);
  var closeFilterDropdownOnOutsideClick = function closeFilterDropdownOnOutsideClick(e) {
    var elem = e.target;
    if (thCell.current && elem.closest("#".concat(thCell.current.id)) === null) {
      toggleSelection();
    }
  };
  var closeFilterOnEsc = function closeFilterOnEsc(e) {
    if (e.key === "Escape") {
      toggleSelection();
    }
  };
  var triggerSort = function triggerSort(direction) {
    var sortConfiguration = {
      direction: direction,
      column: column
    };
    setSortConfiguration(_objectSpread2$1({}, sortConfiguration));
    toggleSelection();
  };
  useEffect(function () {
    window.addEventListener("click", closeFilterDropdownOnOutsideClick);
    document.addEventListener("keydown", closeFilterOnEsc);
    return function () {
      window.removeEventListener("click", closeFilterDropdownOnOutsideClick);
      document.removeEventListener("keydown", closeFilterOnEsc);
      setShowFilterDropdown(false);
    };
  }, []);
  var closeFilterDropdown = function closeFilterDropdown() {
    setShowFilterDropdown(false);
  };
  var toggleFilterDropdown = function toggleFilterDropdown(e) {
    if (e.target.classList.contains("ui-table-filter-trigger") || e.target.closest(".ui-table-filter-trigger")) {
      setShowFilterDropdown(true);
    }
  };
  return /*#__PURE__*/React__default.createElement(Box, {
    ref: ref,
    className: "ui-table__heading-cell__dropdown__wrapper"
  }, /*#__PURE__*/React__default.createElement(Box, {
    ref: trigger,
    className: "ui-table__heading-cell__dropdown"
  }, column.sortable && /*#__PURE__*/React__default.createElement(Box, {
    onClick: function onClick() {
      return triggerSort("asc");
    },
    className: "ui-table__heading-cell__dropdown-item"
  }, /*#__PURE__*/React__default.createElement(Box, null, /*#__PURE__*/React__default.createElement(Icon, {
    icon: SortAscending
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    marginY: 0,
    scale: "subhead",
    fontFace: "circularSTD"
  }, "Sort ascending"))), column.sortable && /*#__PURE__*/React__default.createElement(Box, {
    onClick: function onClick() {
      return triggerSort("desc");
    },
    className: "ui-table__heading-cell__dropdown-item"
  }, /*#__PURE__*/React__default.createElement(Box, null, /*#__PURE__*/React__default.createElement(Icon, {
    icon: SortDescending
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    marginY: 0,
    scale: "subhead",
    fontFace: "circularSTD"
  }, "Sort descending"))), column.filterable && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-table__heading-cell__dropdown-item ui-table-filter-trigger",
    onClick: toggleFilterDropdown
  }, /*#__PURE__*/React__default.createElement(Box, null, /*#__PURE__*/React__default.createElement(Icon, {
    icon: Funnel
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    marginY: 0,
    scale: "subhead",
    fontFace: "circularSTD"
  }, "Filter")), /*#__PURE__*/React__default.createElement(Icon, {
    icon: ChevronFilledRight
  }))), showFilterDropdown && /*#__PURE__*/React__default.createElement(TableFilterDropdown, {
    ref: target,
    column: column,
    onClose: closeFilterDropdown
  }));
});
TableHeadCellDropdown.defaultProps = {};
TableHeadCellDropdown.propTypes = {
  column: propTypes.exports.object
};

var _excluded$a = ["column"];
var TableHeadCell = function TableHeadCell(_ref) {
  var column = _ref.column;
    _objectWithoutProperties(_ref, _excluded$a);
  var trigger = useRef();
  var target = useRef();
  var thCell = useRef();
  var _useState = useState(false),
    _useState2 = _slicedToArray$4(_useState, 2),
    isSelected = _useState2[0],
    setIsSelected = _useState2[1];
  useEffect(function () {
    if (isSelected) {
      computePosition(trigger.current, target.current, {
        placement: "bottom-start",
        middleware: [offset$1(6), flip(), shift$1()]
      }).then(function (_ref2) {
        var x = _ref2.x,
          y = _ref2.y;
        Object.assign(target.current.style, {
          left: "".concat(x, "px"),
          top: "".concat(y, "px")
        });
      });
    }
  }, [isSelected]);
  var toggleSelection = function toggleSelection(e) {
    var shouldProceed = false;
    if (e === undefined) {
      shouldProceed = true;
    } else {
      ["ui-table__heading-cell__content", "ui-table__heading-cell-text", "ui-table__heading-cell__icon"].forEach(function (target) {
        if (e.target.classList.contains(target)) {
          shouldProceed = true;
        }
      });
    }
    if (shouldProceed) {
      setIsSelected(!isSelected);
    }
  };
  return /*#__PURE__*/React__default.createElement(Box, {
    ref: thCell
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: classNames({
      "ui-table__heading-cell__content": true,
      selected: isSelected
    }),
    onClick: toggleSelection,
    ref: trigger
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    marginY: 0,
    className: "font-weight-600 ui-table__heading-cell-text"
  }, column.uppercase ? column.display.toUpperCase() : column.display), column.sortable !== false && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-table__heading-cell__icon"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: ChevronFilledDown,
    height: "20px",
    width: "20px",
    className: "ui-table__heading-cell__icon"
  }))), isSelected && /*#__PURE__*/React__default.createElement(TableHeadCellDropdown, {
    ref: target,
    column: column,
    toggleSelection: toggleSelection,
    thCell: thCell
  }));
};
TableHeadCell.propTypes = {};

var getColumnWidth = function getColumnWidth(column) {
  var isCheckbox = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var returnedStyles = {
    "--column_min_width": "120px"
  };
  if (!isCheckbox) {
    if (column.width) {
      returnedStyles["--column_width"] = column.width;
    }
    if (column.maxWidth) {
      returnedStyles["--column_max_width"] = column.maxWidth;
    }
    if (column.minWidth) {
      returnedStyles["--column_min_width"] = column.minWidth;
    }
  } else {
    returnedStyles = {
      "--column_width": "50px",
      "--column_min_width": "50px",
      "--column_max_width": "50px"
    };
  }
  return returnedStyles;
};

var build = {};

var exportToCsv = {};

(function (exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	var CsvConfigConsts = (function () {
	    function CsvConfigConsts() {
	    }
	    CsvConfigConsts.EOL = "\r\n";
	    CsvConfigConsts.BOM = "\ufeff";
	    CsvConfigConsts.DEFAULT_FIELD_SEPARATOR = ',';
	    CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR = '.';
	    CsvConfigConsts.DEFAULT_QUOTE = '"';
	    CsvConfigConsts.DEFAULT_SHOW_TITLE = false;
	    CsvConfigConsts.DEFAULT_TITLE = 'My Generated Report';
	    CsvConfigConsts.DEFAULT_FILENAME = 'generated';
	    CsvConfigConsts.DEFAULT_SHOW_LABELS = false;
	    CsvConfigConsts.DEFAULT_USE_TEXT_FILE = false;
	    CsvConfigConsts.DEFAULT_USE_BOM = true;
	    CsvConfigConsts.DEFAULT_HEADER = [];
	    CsvConfigConsts.DEFAULT_KEYS_AS_HEADERS = false;
	    return CsvConfigConsts;
	}());
	exports.CsvConfigConsts = CsvConfigConsts;
	exports.ConfigDefaults = {
	    filename: CsvConfigConsts.DEFAULT_FILENAME,
	    fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,
	    quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,
	    decimalSeparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,
	    showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,
	    showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,
	    title: CsvConfigConsts.DEFAULT_TITLE,
	    useTextFile: CsvConfigConsts.DEFAULT_USE_TEXT_FILE,
	    useBom: CsvConfigConsts.DEFAULT_USE_BOM,
	    headers: CsvConfigConsts.DEFAULT_HEADER,
	    useKeysAsHeaders: CsvConfigConsts.DEFAULT_KEYS_AS_HEADERS,
	};
	var ExportToCsv = (function () {
	    function ExportToCsv(options) {
	        this._csv = "";
	        var config = options || {};
	        this._options = objectAssign({}, exports.ConfigDefaults, config);
	        if (this._options.useKeysAsHeaders
	            && this._options.headers
	            && this._options.headers.length > 0) {
	            console.warn('Option to use object keys as headers was set, but headers were still passed!');
	        }
	    }
	    Object.defineProperty(ExportToCsv.prototype, "options", {
	        get: function () {
	            return this._options;
	        },
	        set: function (options) {
	            this._options = objectAssign({}, exports.ConfigDefaults, options);
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /**
	     * Generate and Download Csv
	     */
	    ExportToCsv.prototype.generateCsv = function (jsonData, shouldReturnCsv) {
	        if (shouldReturnCsv === void 0) { shouldReturnCsv = false; }
	        // Make sure to reset csv data on each run
	        this._csv = '';
	        this._parseData(jsonData);
	        if (this._options.useBom) {
	            this._csv += CsvConfigConsts.BOM;
	        }
	        if (this._options.showTitle) {
	            this._csv += this._options.title + '\r\n\n';
	        }
	        this._getHeaders();
	        this._getBody();
	        if (this._csv == '') {
	            console.log("Invalid data");
	            return;
	        }
	        // When the consumer asks for the data, exit the function
	        // by returning the CSV data built at this point
	        if (shouldReturnCsv) {
	            return this._csv;
	        }
	        // Create CSV blob to download if requesting in the browser and the
	        // consumer doesn't set the shouldReturnCsv param
	        var FileType = this._options.useTextFile ? 'plain' : 'csv';
	        var fileExtension = this._options.useTextFile ? '.txt' : '.csv';
	        var blob = new Blob([this._csv], { "type": "text/" + FileType + ";charset=utf8;" });
	        if (navigator.msSaveBlob) {
	            var filename = this._options.filename.replace(/ /g, "_") + fileExtension;
	            navigator.msSaveBlob(blob, filename);
	        }
	        else {
	            var attachmentType = this._options.useTextFile ? 'text' : 'csv';
	            'data:attachment/' + attachmentType + ';charset=utf-8,' + encodeURI(this._csv);
	            var link = document.createElement("a");
	            link.href = URL.createObjectURL(blob);
	            link.setAttribute('visibility', 'hidden');
	            link.download = this._options.filename.replace(/ /g, "_") + fileExtension;
	            document.body.appendChild(link);
	            link.click();
	            document.body.removeChild(link);
	        }
	    };
	    /**
	     * Create Headers
	     */
	    ExportToCsv.prototype._getHeaders = function () {
	        if (!this._options.showLabels && !this._options.useKeysAsHeaders) {
	            return;
	        }
	        var useKeysAsHeaders = this._options.useKeysAsHeaders;
	        var headers = useKeysAsHeaders ? Object.keys(this._data[0]) : this._options.headers;
	        if (headers.length > 0) {
	            var row = "";
	            for (var keyPos = 0; keyPos < headers.length; keyPos++) {
	                row += headers[keyPos] + this._options.fieldSeparator;
	            }
	            row = row.slice(0, -1);
	            this._csv += row + CsvConfigConsts.EOL;
	        }
	    };
	    /**
	     * Create Body
	     */
	    ExportToCsv.prototype._getBody = function () {
	        var keys = Object.keys(this._data[0]);
	        for (var i = 0; i < this._data.length; i++) {
	            var row = "";
	            for (var keyPos = 0; keyPos < keys.length; keyPos++) {
	                var key = keys[keyPos];
	                row += this._formatData(this._data[i][key]) + this._options.fieldSeparator;
	            }
	            row = row.slice(0, -1);
	            this._csv += row + CsvConfigConsts.EOL;
	        }
	    };
	    /**
	     * Format Data
	     * @param {any} data
	     */
	    ExportToCsv.prototype._formatData = function (data) {
	        if (this._options.decimalSeparator === 'locale' && this._isFloat(data)) {
	            return data.toLocaleString();
	        }
	        if (this._options.decimalSeparator !== '.' && this._isFloat(data)) {
	            return data.toString().replace('.', this._options.decimalSeparator);
	        }
	        if (typeof data === 'string') {
	            data = data.replace(/"/g, '""');
	            if (this._options.quoteStrings || data.indexOf(',') > -1 || data.indexOf('\n') > -1 || data.indexOf('\r') > -1) {
	                data = this._options.quoteStrings + data + this._options.quoteStrings;
	            }
	            return data;
	        }
	        if (typeof data === 'boolean') {
	            return data ? 'TRUE' : 'FALSE';
	        }
	        return data;
	    };
	    /**
	     * Check if is Float
	     * @param {any} input
	     */
	    ExportToCsv.prototype._isFloat = function (input) {
	        return +input === input && (!isFinite(input) || Boolean(input % 1));
	    };
	    /**
	     * Parse the collection given to it
	     *
	     * @private
	     * @param {*} jsonData
	     * @returns {any[]}
	     * @memberof ExportToCsv
	     */
	    ExportToCsv.prototype._parseData = function (jsonData) {
	        this._data = typeof jsonData != 'object' ? JSON.parse(jsonData) : jsonData;
	        return this._data;
	    };
	    return ExportToCsv;
	}());
	exports.ExportToCsv = ExportToCsv;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	/**
	 * Convet to Object
	 * @param {any} val
	 */
	function toObject(val) {
	    if (val === null || val === undefined) {
	        throw new TypeError('Object.assign cannot be called with null or undefined');
	    }
	    return Object(val);
	}
	/**
	 * Assign data  to new Object
	 * @param {any}   target
	 * @param {any[]} ...source
	 */
	function objectAssign(target) {
	    var from;
	    var to = toObject(target);
	    var symbols;
	    for (var s = 1; s < arguments.length; s++) {
	        from = Object(arguments[s]);
	        for (var key in from) {
	            if (hasOwnProperty.call(from, key)) {
	                to[key] = from[key];
	            }
	        }
	        if (Object.getOwnPropertySymbols) {
	            symbols = Object.getOwnPropertySymbols(from);
	            for (var i = 0; i < symbols.length; i++) {
	                if (propIsEnumerable.call(from, symbols[i])) {
	                    to[symbols[i]] = from[symbols[i]];
	                }
	            }
	        }
	    }
	    return to;
	}
	
} (exportToCsv));

(function (exports) {
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	Object.defineProperty(exports, "__esModule", { value: true });
	__export(exportToCsv);
	
} (build));

function useExportCsv(data, generatedCsvName) {
  var options = {
    fieldSeparator: ",",
    quoteStrings: '"',
    decimalSeparator: ".",
    showLabels: true,
    showTitle: true,
    title: generatedCsvName,
    useTextFile: false,
    useBom: true,
    useKeysAsHeaders: true
  };
  var csvExporter = new build.ExportToCsv(options);
  var exportCsv = function exportCsv() {
    return csvExporter.generateCsv(data);
  };
  return {
    exportCsv: exportCsv
  };
}

var $$2 = _export;
var uncurryThis$2 = functionUncurryThisClause;
var getOwnPropertyDescriptor$2 = objectGetOwnPropertyDescriptor.f;
var toLength$1 = toLength$4;
var toString$2 = toString$f;
var notARegExp$1 = notARegexp;
var requireObjectCoercible$1 = requireObjectCoercible$a;
var correctIsRegExpLogic$1 = correctIsRegexpLogic;

// eslint-disable-next-line es/no-string-prototype-startswith -- safe
var nativeStartsWith = uncurryThis$2(''.startsWith);
var stringSlice = uncurryThis$2(''.slice);
var min$1 = Math.min;

var CORRECT_IS_REGEXP_LOGIC$1 = correctIsRegExpLogic$1('startsWith');
// https://github.com/zloirock/core-js/pull/702
var MDN_POLYFILL_BUG$1 = !CORRECT_IS_REGEXP_LOGIC$1 && !!function () {
  var descriptor = getOwnPropertyDescriptor$2(String.prototype, 'startsWith');
  return descriptor && !descriptor.writable;
}();

// `String.prototype.startsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.startswith
$$2({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG$1 && !CORRECT_IS_REGEXP_LOGIC$1 }, {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = toString$2(requireObjectCoercible$1(this));
    notARegExp$1(searchString);
    var index = toLength$1(min$1(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = toString$2(searchString);
    return nativeStartsWith
      ? nativeStartsWith(that, search, index)
      : stringSlice(that, index, index + search.length) === search;
  }
});

var $$1 = _export;
var uncurryThis$1 = functionUncurryThisClause;
var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;
var toLength = toLength$4;
var toString$1 = toString$f;
var notARegExp = notARegexp;
var requireObjectCoercible = requireObjectCoercible$a;
var correctIsRegExpLogic = correctIsRegexpLogic;

// eslint-disable-next-line es/no-string-prototype-endswith -- safe
var nativeEndsWith = uncurryThis$1(''.endsWith);
var slice = uncurryThis$1(''.slice);
var min = Math.min;

var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');
// https://github.com/zloirock/core-js/pull/702
var MDN_POLYFILL_BUG = !CORRECT_IS_REGEXP_LOGIC && !!function () {
  var descriptor = getOwnPropertyDescriptor$1(String.prototype, 'endsWith');
  return descriptor && !descriptor.writable;
}();

// `String.prototype.endsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.endswith
$$1({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = toString$1(requireObjectCoercible(this));
    notARegExp(searchString);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = that.length;
    var end = endPosition === undefined ? len : min(toLength(endPosition), len);
    var search = toString$1(searchString);
    return nativeEndsWith
      ? nativeEndsWith(that, search, end)
      : slice(that, end - search.length, end) === search;
  }
});

var search = function search(_search, rows, columnHashMap) {
  var caseSensitiveSearch = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  return rows.filter(function (row) {
    for (var _i = 0, _Object$keys = Object.keys(row); _i < _Object$keys.length; _i++) {
      var key = _Object$keys[_i];
      if (columnHashMap[key].filterable) {
        var hayStack = caseSensitiveSearch ? row[key] : row[key].toLowerCase();
        var needle = caseSensitiveSearch ? _search : _search.toLowerCase();
        if (hayStack.includes(needle)) {
          return true;
        }
      }
    }
    return false;
  });
};
var filterMaps = {
  Is: function Is(dataItemToCheck, value) {
    return dataItemToCheck == value;
  },
  "Is not": function IsNot(dataItemToCheck, value) {
    return dataItemToCheck != value;
  },
  "Is empty": function IsEmpty(dataItemToCheck) {
    return dataItemToCheck === null || dataItemToCheck === "" || dataItemToCheck === undefined || dataItemToCheck === 0 || dataItemToCheck === "0" || !dataItemToCheck;
  },
  "Is not empty": function IsNotEmpty(dataItemToCheck) {
    return !!dataItemToCheck;
  },
  "Is equal to": function IsEqualTo(dataItemToCheck, value) {
    return dataItemToCheck === value;
  },
  "Is not equal to": function IsNotEqualTo(dataItemToCheck, value) {
    return dataItemToCheck !== value;
  },
  "Begins with": function BeginsWith(dataItemToCheck, value) {
    return dataItemToCheck.startsWith(value);
  },
  "Ends with": function EndsWith(dataItemToCheck, value) {
    return dataItemToCheck.endsWith(value);
  },
  Contains: function Contains(dataItemToCheck, value) {
    return dataItemToCheck.includes(value);
  },
  "Does not contain": function DoesNotContain(dataItemToCheck, value) {
    return !dataItemToCheck.includes(value);
  }
};
var filter = function filter(_filter, rows) {
  var column = _filter.column.dataSelector;
  return rows.filter(function (row) {
    var dataItemToCheck = row[column];
    var leftFilter = filterMaps[_filter.selectedFilter](dataItemToCheck, _filter.selectedFilterValue);
    var rightFilter = null;
    if (_filter.join) {
      rightFilter = filterMaps[_filter.selectedFilter2](dataItemToCheck, _filter.selectedFilterValue2);
    }
    if (_filter.join) {
      return _filter.join === "and" ? leftFilter && rightFilter : leftFilter || rightFilter;
    } else {
      return leftFilter;
    }
  });
};

var tryToString = tryToString$2;

var $TypeError = TypeError;

var deletePropertyOrThrow$1 = function (O, P) {
  if (!delete O[P]) throw $TypeError('Cannot delete property ' + tryToString(P) + ' of ' + tryToString(O));
};

var toPropertyKey = toPropertyKey$3;
var definePropertyModule = objectDefineProperty;
var createPropertyDescriptor = createPropertyDescriptor$4;

var createProperty$1 = function (object, key, value) {
  var propertyKey = toPropertyKey(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};

var toAbsoluteIndex = toAbsoluteIndex$2;
var lengthOfArrayLike$1 = lengthOfArrayLike$4;
var createProperty = createProperty$1;

var $Array = Array;
var max = Math.max;

var arraySliceSimple = function (O, start, end) {
  var length = lengthOfArrayLike$1(O);
  var k = toAbsoluteIndex(start, length);
  var fin = toAbsoluteIndex(end === undefined ? length : end, length);
  var result = $Array(max(fin - k, 0));
  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);
  result.length = n;
  return result;
};

var arraySlice = arraySliceSimple;

var floor = Math.floor;

var mergeSort = function (array, comparefn) {
  var length = array.length;
  var middle = floor(length / 2);
  return length < 8 ? insertionSort(array, comparefn) : merge(
    array,
    mergeSort(arraySlice(array, 0, middle), comparefn),
    mergeSort(arraySlice(array, middle), comparefn),
    comparefn
  );
};

var insertionSort = function (array, comparefn) {
  var length = array.length;
  var i = 1;
  var element, j;

  while (i < length) {
    j = i;
    element = array[i];
    while (j && comparefn(array[j - 1], element) > 0) {
      array[j] = array[--j];
    }
    if (j !== i++) array[j] = element;
  } return array;
};

var merge = function (array, left, right, comparefn) {
  var llength = left.length;
  var rlength = right.length;
  var lindex = 0;
  var rindex = 0;

  while (lindex < llength || rindex < rlength) {
    array[lindex + rindex] = (lindex < llength && rindex < rlength)
      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]
      : lindex < llength ? left[lindex++] : right[rindex++];
  } return array;
};

var arraySort = mergeSort;

var userAgent$1 = engineUserAgent;

var firefox = userAgent$1.match(/firefox\/(\d+)/i);

var engineFfVersion = !!firefox && +firefox[1];

var UA = engineUserAgent;

var engineIsIeOrEdge = /MSIE|Trident/.test(UA);

var userAgent = engineUserAgent;

var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);

var engineWebkitVersion = !!webkit && +webkit[1];

var $ = _export;
var uncurryThis = functionUncurryThis;
var aCallable = aCallable$4;
var toObject = toObject$6;
var lengthOfArrayLike = lengthOfArrayLike$4;
var deletePropertyOrThrow = deletePropertyOrThrow$1;
var toString = toString$f;
var fails = fails$o;
var internalSort = arraySort;
var arrayMethodIsStrict = arrayMethodIsStrict$2;
var FF = engineFfVersion;
var IE_OR_EDGE = engineIsIeOrEdge;
var V8 = engineV8Version;
var WEBKIT = engineWebkitVersion;

var test = [];
var nativeSort = uncurryThis(test.sort);
var push = uncurryThis(test.push);

// IE8-
var FAILS_ON_UNDEFINED = fails(function () {
  test.sort(undefined);
});
// V8 bug
var FAILS_ON_NULL = fails(function () {
  test.sort(null);
});
// Old WebKit
var STRICT_METHOD = arrayMethodIsStrict('sort');

var STABLE_SORT = !fails(function () {
  // feature detection can be too slow, so check engines versions
  if (V8) return V8 < 70;
  if (FF && FF > 3) return;
  if (IE_OR_EDGE) return true;
  if (WEBKIT) return WEBKIT < 603;

  var result = '';
  var code, chr, value, index;

  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)
  for (code = 65; code < 76; code++) {
    chr = String.fromCharCode(code);

    switch (code) {
      case 66: case 69: case 70: case 72: value = 3; break;
      case 68: case 71: value = 4; break;
      default: value = 2;
    }

    for (index = 0; index < 47; index++) {
      test.push({ k: chr + index, v: value });
    }
  }

  test.sort(function (a, b) { return b.v - a.v; });

  for (index = 0; index < test.length; index++) {
    chr = test[index].k.charAt(0);
    if (result.charAt(result.length - 1) !== chr) result += chr;
  }

  return result !== 'DGBEFHACIJK';
});

var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;

var getSortCompare = function (comparefn) {
  return function (x, y) {
    if (y === undefined) return -1;
    if (x === undefined) return 1;
    if (comparefn !== undefined) return +comparefn(x, y) || 0;
    return toString(x) > toString(y) ? 1 : -1;
  };
};

// `Array.prototype.sort` method
// https://tc39.es/ecma262/#sec-array.prototype.sort
$({ target: 'Array', proto: true, forced: FORCED }, {
  sort: function sort(comparefn) {
    if (comparefn !== undefined) aCallable(comparefn);

    var array = toObject(this);

    if (STABLE_SORT) return comparefn === undefined ? nativeSort(array) : nativeSort(array, comparefn);

    var items = [];
    var arrayLength = lengthOfArrayLike(array);
    var itemsLength, index;

    for (index = 0; index < arrayLength; index++) {
      if (index in array) push(items, array[index]);
    }

    internalSort(items, getSortCompare(comparefn));

    itemsLength = lengthOfArrayLike(items);
    index = 0;

    while (index < itemsLength) array[index] = items[index++];
    while (index < arrayLength) deletePropertyOrThrow(array, index++);

    return array;
  }
});

var sort = function sort(sortConfiguration, data) {
  data.sort(function (a, b) {
    if (sortConfiguration.column.sortNumerically) {
      var _valueA = a[sortConfiguration.column.dataSelector];
      var _valueB = b[sortConfiguration.column.dataSelector];
      return sortConfiguration.direction === "asc" ? _valueA - _valueB : _valueB - _valueA;
    }
    var valueA = a[sortConfiguration.column.dataSelector].toUpperCase();
    var valueB = b[sortConfiguration.column.dataSelector].toUpperCase();
    if (valueA < valueB) {
      return sortConfiguration.direction === "asc" ? -1 : 1;
    }
    if (valueA > valueB) {
      return sortConfiguration.direction === "asc" ? 1 : -1;
    }
    return 0;
  });
};

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf$2(subClass, superClass);
}

function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty$5(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}

/**
 * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js
 *
 * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes
 * during build.
 * @param {number} code
 */
function formatProdErrorMessage(code) {
  return "Minified Redux error #" + code + "; visit https://redux.js.org/Errors?code=" + code + " for the full message or " + 'use the non-minified dev environment for full errors. ';
}

// Inlined version of the `symbol-observable` polyfill
var $$observable = (function () {
  return typeof Symbol === 'function' && Symbol.observable || '@@observable';
})();

/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var randomString = function randomString() {
  return Math.random().toString(36).substring(7).split('').join('.');
};

var ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject$1(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = obj;

  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }

  return Object.getPrototypeOf(obj) === proto;
}

// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of
function miniKindOf(val) {
  if (val === void 0) return 'undefined';
  if (val === null) return 'null';
  var type = typeof val;

  switch (type) {
    case 'boolean':
    case 'string':
    case 'number':
    case 'symbol':
    case 'function':
      {
        return type;
      }
  }

  if (Array.isArray(val)) return 'array';
  if (isDate(val)) return 'date';
  if (isError(val)) return 'error';
  var constructorName = ctorName(val);

  switch (constructorName) {
    case 'Symbol':
    case 'Promise':
    case 'WeakMap':
    case 'WeakSet':
    case 'Map':
    case 'Set':
      return constructorName;
  } // other


  return type.slice(8, -1).toLowerCase().replace(/\s/g, '');
}

function ctorName(val) {
  return typeof val.constructor === 'function' ? val.constructor.name : null;
}

function isError(val) {
  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';
}

function isDate(val) {
  if (val instanceof Date) return true;
  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';
}

function kindOf(val) {
  var typeOfVal = typeof val;

  if (process.env.NODE_ENV !== 'production') {
    typeOfVal = miniKindOf(val);
  }

  return typeOfVal;
}

/**
 * @deprecated
 *
 * **We recommend using the `configureStore` method
 * of the `@reduxjs/toolkit` package**, which replaces `createStore`.
 *
 * Redux Toolkit is our recommended approach for writing Redux logic today,
 * including store setup, reducers, data fetching, and more.
 *
 * **For more details, please read this Redux docs page:**
 * **https://redux.js.org/introduction/why-rtk-is-redux-today**
 *
 * `configureStore` from Redux Toolkit is an improved version of `createStore` that
 * simplifies setup and helps avoid common bugs.
 *
 * You should not be using the `redux` core package by itself today, except for learning purposes.
 * The `createStore` method from the core `redux` package will not be removed, but we encourage
 * all users to migrate to using Redux Toolkit for all Redux code.
 *
 * If you want to use `createStore` without this visual deprecation warning, use
 * the `legacy_createStore` import instead:
 *
 * `import { legacy_createStore as createStore} from 'redux'`
 *
 */

function createStore$1(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
    throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');
  }

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(1) : "Expected the enhancer to be a function. Instead, received: '" + kindOf(enhancer) + "'");
    }

    return enhancer(createStore$1)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(2) : "Expected the root reducer to be a function. Instead, received: '" + kindOf(reducer) + "'");
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;
  /**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }
  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */


  function getState() {
    if (isDispatching) {
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');
    }

    return currentState;
  }
  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */


  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(4) : "Expected the listener to be a function. Instead, received: '" + kindOf(listener) + "'");
    }

    if (isDispatching) {
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');
    }

    var isSubscribed = true;
    ensureCanMutateNextListeners();
    nextListeners.push(listener);
    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      if (isDispatching) {
        throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');
      }

      isSubscribed = false;
      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
      currentListeners = null;
    };
  }
  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */


  function dispatch(action) {
    if (!isPlainObject$1(action)) {
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(7) : "Actions must be plain objects. Instead, the actual type was: '" + kindOf(action) + "'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.");
    }

    if (typeof action.type === 'undefined') {
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(8) : 'Actions may not have an undefined "type" property. You may have misspelled an action type string constant.');
    }

    if (isDispatching) {
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;

    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }
  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */


  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(10) : "Expected the nextReducer to be a function. Instead, received: '" + kindOf(nextReducer));
    }

    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.
    // Any reducers that existed in both the new and old rootReducer
    // will receive the previous state. This effectively populates
    // the new state tree with any relevant data from the old one.

    dispatch({
      type: ActionTypes.REPLACE
    });
  }
  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */


  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object' || observer === null) {
          throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(11) : "Expected the observer to be an object. Instead, received: '" + kindOf(observer) + "'");
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return {
          unsubscribe: unsubscribe
        };
      }
    }, _ref[$$observable] = function () {
      return this;
    }, _ref;
  } // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.


  dispatch({
    type: ActionTypes.INIT
  });
  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[$$observable] = observable, _ref2;
}

function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(this, arguments));
  };
}
/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass an action creator as the first argument,
 * and get a dispatch wrapped function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */


function bindActionCreators$1(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(16) : "bindActionCreators expected an object or a function, but instead received: '" + kindOf(actionCreators) + "'. " + "Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?");
  }

  var boundActionCreators = {};

  for (var key in actionCreators) {
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }

  return boundActionCreators;
}

/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */
function compose() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(void 0, arguments));
    };
  });
}

/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */

function applyMiddleware() {
  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function () {
      var store = createStore.apply(void 0, arguments);

      var _dispatch = function dispatch() {
        throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');
      };

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch() {
          return _dispatch.apply(void 0, arguments);
        }
      };
      var chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = compose.apply(void 0, chain)(store.dispatch);
      return _objectSpread2(_objectSpread2({}, store), {}, {
        dispatch: _dispatch
      });
    };
  };
}

var ReactReduxContext = /*#__PURE__*/React__default.createContext(null);

if (process.env.NODE_ENV !== 'production') {
  ReactReduxContext.displayName = 'ReactRedux';
}

// Default to a dummy "batch" implementation that just runs the callback
function defaultNoopBatch(callback) {
  callback();
}

var batch = defaultNoopBatch; // Allow injecting another batching function later

var setBatch = function setBatch(newBatch) {
  return batch = newBatch;
}; // Supply a getter just to skip dealing with ESM bindings

var getBatch = function getBatch() {
  return batch;
};

// well as nesting subscriptions of descendant components, so that we can ensure the
// ancestor components re-render before descendants

function createListenerCollection() {
  var batch = getBatch();
  var first = null;
  var last = null;
  return {
    clear: function clear() {
      first = null;
      last = null;
    },
    notify: function notify() {
      batch(function () {
        var listener = first;

        while (listener) {
          listener.callback();
          listener = listener.next;
        }
      });
    },
    get: function get() {
      var listeners = [];
      var listener = first;

      while (listener) {
        listeners.push(listener);
        listener = listener.next;
      }

      return listeners;
    },
    subscribe: function subscribe(callback) {
      var isSubscribed = true;
      var listener = last = {
        callback: callback,
        next: null,
        prev: last
      };

      if (listener.prev) {
        listener.prev.next = listener;
      } else {
        first = listener;
      }

      return function unsubscribe() {
        if (!isSubscribed || first === null) return;
        isSubscribed = false;

        if (listener.next) {
          listener.next.prev = listener.prev;
        } else {
          last = listener.prev;
        }

        if (listener.prev) {
          listener.prev.next = listener.next;
        } else {
          first = listener.next;
        }
      };
    }
  };
}

var nullListeners = {
  notify: function notify() {},
  get: function get() {
    return [];
  }
};
function createSubscription(store, parentSub) {
  var unsubscribe;
  var listeners = nullListeners;

  function addNestedSub(listener) {
    trySubscribe();
    return listeners.subscribe(listener);
  }

  function notifyNestedSubs() {
    listeners.notify();
  }

  function handleChangeWrapper() {
    if (subscription.onStateChange) {
      subscription.onStateChange();
    }
  }

  function isSubscribed() {
    return Boolean(unsubscribe);
  }

  function trySubscribe() {
    if (!unsubscribe) {
      unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);
      listeners = createListenerCollection();
    }
  }

  function tryUnsubscribe() {
    if (unsubscribe) {
      unsubscribe();
      unsubscribe = undefined;
      listeners.clear();
      listeners = nullListeners;
    }
  }

  var subscription = {
    addNestedSub: addNestedSub,
    notifyNestedSubs: notifyNestedSubs,
    handleChangeWrapper: handleChangeWrapper,
    isSubscribed: isSubscribed,
    trySubscribe: trySubscribe,
    tryUnsubscribe: tryUnsubscribe,
    getListeners: function getListeners() {
      return listeners;
    }
  };
  return subscription;
}

// To get around it, we can conditionally useEffect on the server (no-op) and
// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store
// subscription callback always has the selector from the latest render commit
// available, otherwise a store update may happen between render and the effect,
// which may cause missed updates; we also must ensure the store subscription
// is created synchronously, otherwise a store update may occur before the
// subscription is created and an inconsistent state may be observed

var useIsomorphicLayoutEffect$1 = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect : useEffect;

function Provider(_ref) {
  var store = _ref.store,
      context = _ref.context,
      children = _ref.children;
  var contextValue = useMemo$1(function () {
    var subscription = createSubscription(store);
    return {
      store: store,
      subscription: subscription
    };
  }, [store]);
  var previousState = useMemo$1(function () {
    return store.getState();
  }, [store]);
  useIsomorphicLayoutEffect$1(function () {
    var subscription = contextValue.subscription;
    subscription.onStateChange = subscription.notifyNestedSubs;
    subscription.trySubscribe();

    if (previousState !== store.getState()) {
      subscription.notifyNestedSubs();
    }

    return function () {
      subscription.tryUnsubscribe();
      subscription.onStateChange = null;
    };
  }, [contextValue, previousState]);
  var Context = context || ReactReduxContext;
  return /*#__PURE__*/React__default.createElement(Context.Provider, {
    value: contextValue
  }, children);
}

if (process.env.NODE_ENV !== 'production') {
  Provider.propTypes = {
    store: propTypes.exports.shape({
      subscribe: propTypes.exports.func.isRequired,
      dispatch: propTypes.exports.func.isRequired,
      getState: propTypes.exports.func.isRequired
    }),
    context: propTypes.exports.object,
    children: propTypes.exports.any
  };
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}

var reactIs$1 = requireReactIs();

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs$1.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs$1.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs$1.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

var hoistNonReactStatics_cjs = hoistNonReactStatics;

var reactIs = {exports: {}};

var reactIs_production_min = {};

/** @license React v17.0.2
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var hasRequiredReactIs_production_min;

function requireReactIs_production_min () {
	if (hasRequiredReactIs_production_min) return reactIs_production_min;
	hasRequiredReactIs_production_min = 1;
var b=60103,c=60106,d=60107,e=60108,f=60114,g=60109,h=60110,k=60112,l=60113,m=60120,n=60115,p=60116,q=60121,r=60122,u=60117,v=60129,w=60131;
	if("function"===typeof Symbol&&Symbol.for){var x=Symbol.for;b=x("react.element");c=x("react.portal");d=x("react.fragment");e=x("react.strict_mode");f=x("react.profiler");g=x("react.provider");h=x("react.context");k=x("react.forward_ref");l=x("react.suspense");m=x("react.suspense_list");n=x("react.memo");p=x("react.lazy");q=x("react.block");r=x("react.server.block");u=x("react.fundamental");v=x("react.debug_trace_mode");w=x("react.legacy_hidden");}
	function y(a){if("object"===typeof a&&null!==a){var t=a.$$typeof;switch(t){case b:switch(a=a.type,a){case d:case f:case e:case l:case m:return a;default:switch(a=a&&a.$$typeof,a){case h:case k:case p:case n:case g:return a;default:return t}}case c:return t}}}var z=g,A=b,B=k,C=d,D=p,E=n,F=c,G=f,H=e,I=l;reactIs_production_min.ContextConsumer=h;reactIs_production_min.ContextProvider=z;reactIs_production_min.Element=A;reactIs_production_min.ForwardRef=B;reactIs_production_min.Fragment=C;reactIs_production_min.Lazy=D;reactIs_production_min.Memo=E;reactIs_production_min.Portal=F;reactIs_production_min.Profiler=G;reactIs_production_min.StrictMode=H;
	reactIs_production_min.Suspense=I;reactIs_production_min.isAsyncMode=function(){return !1};reactIs_production_min.isConcurrentMode=function(){return !1};reactIs_production_min.isContextConsumer=function(a){return y(a)===h};reactIs_production_min.isContextProvider=function(a){return y(a)===g};reactIs_production_min.isElement=function(a){return "object"===typeof a&&null!==a&&a.$$typeof===b};reactIs_production_min.isForwardRef=function(a){return y(a)===k};reactIs_production_min.isFragment=function(a){return y(a)===d};reactIs_production_min.isLazy=function(a){return y(a)===p};reactIs_production_min.isMemo=function(a){return y(a)===n};
	reactIs_production_min.isPortal=function(a){return y(a)===c};reactIs_production_min.isProfiler=function(a){return y(a)===f};reactIs_production_min.isStrictMode=function(a){return y(a)===e};reactIs_production_min.isSuspense=function(a){return y(a)===l};reactIs_production_min.isValidElementType=function(a){return "string"===typeof a||"function"===typeof a||a===d||a===f||a===v||a===e||a===l||a===m||a===w||"object"===typeof a&&null!==a&&(a.$$typeof===p||a.$$typeof===n||a.$$typeof===g||a.$$typeof===h||a.$$typeof===k||a.$$typeof===u||a.$$typeof===q||a[0]===r)?!0:!1};
	reactIs_production_min.typeOf=y;
	return reactIs_production_min;
}

var reactIs_development = {};

/** @license React v17.0.2
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var hasRequiredReactIs_development;

function requireReactIs_development () {
	if (hasRequiredReactIs_development) return reactIs_development;
	hasRequiredReactIs_development = 1;

	if (process.env.NODE_ENV !== "production") {
	  (function() {

	// ATTENTION
	// When adding new symbols to this file,
	// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
	// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = 0xeac7;
	var REACT_PORTAL_TYPE = 0xeaca;
	var REACT_FRAGMENT_TYPE = 0xeacb;
	var REACT_STRICT_MODE_TYPE = 0xeacc;
	var REACT_PROFILER_TYPE = 0xead2;
	var REACT_PROVIDER_TYPE = 0xeacd;
	var REACT_CONTEXT_TYPE = 0xeace;
	var REACT_FORWARD_REF_TYPE = 0xead0;
	var REACT_SUSPENSE_TYPE = 0xead1;
	var REACT_SUSPENSE_LIST_TYPE = 0xead8;
	var REACT_MEMO_TYPE = 0xead3;
	var REACT_LAZY_TYPE = 0xead4;
	var REACT_BLOCK_TYPE = 0xead9;
	var REACT_SERVER_BLOCK_TYPE = 0xeada;
	var REACT_FUNDAMENTAL_TYPE = 0xead5;
	var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
	var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;

	if (typeof Symbol === 'function' && Symbol.for) {
	  var symbolFor = Symbol.for;
	  REACT_ELEMENT_TYPE = symbolFor('react.element');
	  REACT_PORTAL_TYPE = symbolFor('react.portal');
	  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');
	  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
	  REACT_PROFILER_TYPE = symbolFor('react.profiler');
	  REACT_PROVIDER_TYPE = symbolFor('react.provider');
	  REACT_CONTEXT_TYPE = symbolFor('react.context');
	  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
	  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
	  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
	  REACT_MEMO_TYPE = symbolFor('react.memo');
	  REACT_LAZY_TYPE = symbolFor('react.lazy');
	  REACT_BLOCK_TYPE = symbolFor('react.block');
	  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
	  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
	  symbolFor('react.scope');
	  symbolFor('react.opaque.id');
	  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
	  symbolFor('react.offscreen');
	  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
	}

	// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.

	var enableScopeAPI = false; // Experimental Create Event Handle API.

	function isValidElementType(type) {
	  if (typeof type === 'string' || typeof type === 'function') {
	    return true;
	  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


	  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {
	    return true;
	  }

	  if (typeof type === 'object' && type !== null) {
	    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
	      return true;
	    }
	  }

	  return false;
	}

	function typeOf(object) {
	  if (typeof object === 'object' && object !== null) {
	    var $$typeof = object.$$typeof;

	    switch ($$typeof) {
	      case REACT_ELEMENT_TYPE:
	        var type = object.type;

	        switch (type) {
	          case REACT_FRAGMENT_TYPE:
	          case REACT_PROFILER_TYPE:
	          case REACT_STRICT_MODE_TYPE:
	          case REACT_SUSPENSE_TYPE:
	          case REACT_SUSPENSE_LIST_TYPE:
	            return type;

	          default:
	            var $$typeofType = type && type.$$typeof;

	            switch ($$typeofType) {
	              case REACT_CONTEXT_TYPE:
	              case REACT_FORWARD_REF_TYPE:
	              case REACT_LAZY_TYPE:
	              case REACT_MEMO_TYPE:
	              case REACT_PROVIDER_TYPE:
	                return $$typeofType;

	              default:
	                return $$typeof;
	            }

	        }

	      case REACT_PORTAL_TYPE:
	        return $$typeof;
	    }
	  }

	  return undefined;
	}
	var ContextConsumer = REACT_CONTEXT_TYPE;
	var ContextProvider = REACT_PROVIDER_TYPE;
	var Element = REACT_ELEMENT_TYPE;
	var ForwardRef = REACT_FORWARD_REF_TYPE;
	var Fragment = REACT_FRAGMENT_TYPE;
	var Lazy = REACT_LAZY_TYPE;
	var Memo = REACT_MEMO_TYPE;
	var Portal = REACT_PORTAL_TYPE;
	var Profiler = REACT_PROFILER_TYPE;
	var StrictMode = REACT_STRICT_MODE_TYPE;
	var Suspense = REACT_SUSPENSE_TYPE;
	var hasWarnedAboutDeprecatedIsAsyncMode = false;
	var hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated

	function isAsyncMode(object) {
	  {
	    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
	      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

	      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 18+.');
	    }
	  }

	  return false;
	}
	function isConcurrentMode(object) {
	  {
	    if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
	      hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint

	      console['warn']('The ReactIs.isConcurrentMode() alias has been deprecated, ' + 'and will be removed in React 18+.');
	    }
	  }

	  return false;
	}
	function isContextConsumer(object) {
	  return typeOf(object) === REACT_CONTEXT_TYPE;
	}
	function isContextProvider(object) {
	  return typeOf(object) === REACT_PROVIDER_TYPE;
	}
	function isElement(object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	}
	function isForwardRef(object) {
	  return typeOf(object) === REACT_FORWARD_REF_TYPE;
	}
	function isFragment(object) {
	  return typeOf(object) === REACT_FRAGMENT_TYPE;
	}
	function isLazy(object) {
	  return typeOf(object) === REACT_LAZY_TYPE;
	}
	function isMemo(object) {
	  return typeOf(object) === REACT_MEMO_TYPE;
	}
	function isPortal(object) {
	  return typeOf(object) === REACT_PORTAL_TYPE;
	}
	function isProfiler(object) {
	  return typeOf(object) === REACT_PROFILER_TYPE;
	}
	function isStrictMode(object) {
	  return typeOf(object) === REACT_STRICT_MODE_TYPE;
	}
	function isSuspense(object) {
	  return typeOf(object) === REACT_SUSPENSE_TYPE;
	}

	reactIs_development.ContextConsumer = ContextConsumer;
	reactIs_development.ContextProvider = ContextProvider;
	reactIs_development.Element = Element;
	reactIs_development.ForwardRef = ForwardRef;
	reactIs_development.Fragment = Fragment;
	reactIs_development.Lazy = Lazy;
	reactIs_development.Memo = Memo;
	reactIs_development.Portal = Portal;
	reactIs_development.Profiler = Profiler;
	reactIs_development.StrictMode = StrictMode;
	reactIs_development.Suspense = Suspense;
	reactIs_development.isAsyncMode = isAsyncMode;
	reactIs_development.isConcurrentMode = isConcurrentMode;
	reactIs_development.isContextConsumer = isContextConsumer;
	reactIs_development.isContextProvider = isContextProvider;
	reactIs_development.isElement = isElement;
	reactIs_development.isForwardRef = isForwardRef;
	reactIs_development.isFragment = isFragment;
	reactIs_development.isLazy = isLazy;
	reactIs_development.isMemo = isMemo;
	reactIs_development.isPortal = isPortal;
	reactIs_development.isProfiler = isProfiler;
	reactIs_development.isStrictMode = isStrictMode;
	reactIs_development.isSuspense = isSuspense;
	reactIs_development.isValidElementType = isValidElementType;
	reactIs_development.typeOf = typeOf;
	  })();
	}
	return reactIs_development;
}

(function (module) {

	if (process.env.NODE_ENV === 'production') {
	  module.exports = requireReactIs_production_min();
	} else {
	  module.exports = requireReactIs_development();
	}
} (reactIs));

var _excluded$9 = ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef", "forwardRef", "context"],
    _excluded2$1 = ["reactReduxForwardedRef"];

var EMPTY_ARRAY = [];
var NO_SUBSCRIPTION_ARRAY = [null, null];

var stringifyComponent = function stringifyComponent(Comp) {
  try {
    return JSON.stringify(Comp);
  } catch (err) {
    return String(Comp);
  }
};

function storeStateUpdatesReducer(state, action) {
  var updateCount = state[1];
  return [action.payload, updateCount + 1];
}

function useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {
  useIsomorphicLayoutEffect$1(function () {
    return effectFunc.apply(void 0, effectArgs);
  }, dependencies);
}

function captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs) {
  // We want to capture the wrapper props and child props we used for later comparisons
  lastWrapperProps.current = wrapperProps;
  lastChildProps.current = actualChildProps;
  renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update

  if (childPropsFromStoreUpdate.current) {
    childPropsFromStoreUpdate.current = null;
    notifyNestedSubs();
  }
}

function subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch) {
  // If we're not subscribed to the store, nothing to do here
  if (!shouldHandleStateChanges) return; // Capture values for checking if and when this component unmounts

  var didUnsubscribe = false;
  var lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component

  var checkForUpdates = function checkForUpdates() {
    if (didUnsubscribe) {
      // Don't run stale listeners.
      // Redux doesn't guarantee unsubscriptions happen until next dispatch.
      return;
    }

    var latestStoreState = store.getState();
    var newChildProps, error;

    try {
      // Actually run the selector with the most recent store state and wrapper props
      // to determine what the child props should be
      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);
    } catch (e) {
      error = e;
      lastThrownError = e;
    }

    if (!error) {
      lastThrownError = null;
    } // If the child props haven't changed, nothing to do here - cascade the subscription update


    if (newChildProps === lastChildProps.current) {
      if (!renderIsScheduled.current) {
        notifyNestedSubs();
      }
    } else {
      // Save references to the new child props.  Note that we track the "child props from store update"
      // as a ref instead of a useState/useReducer because we need a way to determine if that value has
      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without
      // forcing another re-render, which we don't want.
      lastChildProps.current = newChildProps;
      childPropsFromStoreUpdate.current = newChildProps;
      renderIsScheduled.current = true; // If the child props _did_ change (or we caught an error), this wrapper component needs to re-render

      forceComponentUpdateDispatch({
        type: 'STORE_UPDATED',
        payload: {
          error: error
        }
      });
    }
  }; // Actually subscribe to the nearest connected ancestor (or store)


  subscription.onStateChange = checkForUpdates;
  subscription.trySubscribe(); // Pull data from the store after first render in case the store has
  // changed since we began.

  checkForUpdates();

  var unsubscribeWrapper = function unsubscribeWrapper() {
    didUnsubscribe = true;
    subscription.tryUnsubscribe();
    subscription.onStateChange = null;

    if (lastThrownError) {
      // It's possible that we caught an error due to a bad mapState function, but the
      // parent re-rendered without this component and we're about to unmount.
      // This shouldn't happen as long as we do top-down subscriptions correctly, but
      // if we ever do those wrong, this throw will surface the error in our tests.
      // In that case, throw the error from here so it doesn't get lost.
      throw lastThrownError;
    }
  };

  return unsubscribeWrapper;
}

var initStateUpdates = function initStateUpdates() {
  return [null, 0];
};

function connectAdvanced(
/*
  selectorFactory is a func that is responsible for returning the selector function used to
  compute new props from state, props, and dispatch. For example:
      export default connectAdvanced((dispatch, options) => (state, props) => ({
      thing: state.things[props.thingId],
      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
    }))(YourComponent)
    Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
    Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
  props. Do not use connectAdvanced directly without memoizing results between calls to your
  selector, otherwise the Connect component will re-render on every state or props change.
*/
selectorFactory, // options object:
_ref) {
  if (_ref === void 0) {
    _ref = {};
  }

  var _ref2 = _ref,
      _ref2$getDisplayName = _ref2.getDisplayName,
      getDisplayName = _ref2$getDisplayName === void 0 ? function (name) {
    return "ConnectAdvanced(" + name + ")";
  } : _ref2$getDisplayName,
      _ref2$methodName = _ref2.methodName,
      methodName = _ref2$methodName === void 0 ? 'connectAdvanced' : _ref2$methodName,
      _ref2$renderCountProp = _ref2.renderCountProp,
      renderCountProp = _ref2$renderCountProp === void 0 ? undefined : _ref2$renderCountProp,
      _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges,
      shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta,
      _ref2$storeKey = _ref2.storeKey,
      storeKey = _ref2$storeKey === void 0 ? 'store' : _ref2$storeKey,
      _ref2$withRef = _ref2.withRef,
      withRef = _ref2$withRef === void 0 ? false : _ref2$withRef,
      _ref2$forwardRef = _ref2.forwardRef,
      forwardRef = _ref2$forwardRef === void 0 ? false : _ref2$forwardRef,
      _ref2$context = _ref2.context,
      context = _ref2$context === void 0 ? ReactReduxContext : _ref2$context,
      connectOptions = _objectWithoutPropertiesLoose(_ref2, _excluded$9);

  if (process.env.NODE_ENV !== 'production') {
    if (renderCountProp !== undefined) {
      throw new Error("renderCountProp is removed. render counting is built into the latest React Dev Tools profiling extension");
    }

    if (withRef) {
      throw new Error('withRef is removed. To access the wrapped instance, use a ref on the connected component');
    }

    var customStoreWarningMessage = 'To use a custom Redux store for specific components, create a custom React context with ' + "React.createContext(), and pass the context object to React Redux's Provider and specific components" + ' like: <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. ' + 'You may also pass a {context : MyContext} option to connect';

    if (storeKey !== 'store') {
      throw new Error('storeKey has been removed and does not do anything. ' + customStoreWarningMessage);
    }
  }

  var Context = context;
  return function wrapWithConnect(WrappedComponent) {
    if (process.env.NODE_ENV !== 'production' && !reactIs.exports.isValidElementType(WrappedComponent)) {
      throw new Error("You must pass a component to the function returned by " + (methodName + ". Instead received " + stringifyComponent(WrappedComponent)));
    }

    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
    var displayName = getDisplayName(wrappedComponentName);

    var selectorFactoryOptions = _extends({}, connectOptions, {
      getDisplayName: getDisplayName,
      methodName: methodName,
      renderCountProp: renderCountProp,
      shouldHandleStateChanges: shouldHandleStateChanges,
      storeKey: storeKey,
      displayName: displayName,
      wrappedComponentName: wrappedComponentName,
      WrappedComponent: WrappedComponent
    });

    var pure = connectOptions.pure;

    function createChildSelector(store) {
      return selectorFactory(store.dispatch, selectorFactoryOptions);
    } // If we aren't running in "pure" mode, we don't want to memoize values.
    // To avoid conditionally calling hooks, we fall back to a tiny wrapper
    // that just executes the given callback immediately.


    var usePureOnlyMemo = pure ? useMemo$1 : function (callback) {
      return callback();
    };

    function ConnectFunction(props) {
      var _useMemo = useMemo$1(function () {
        // Distinguish between actual "data" props that were passed to the wrapper component,
        // and values needed to control behavior (forwarded refs, alternate context instances).
        // To maintain the wrapperProps object reference, memoize this destructuring.
        var reactReduxForwardedRef = props.reactReduxForwardedRef,
            wrapperProps = _objectWithoutPropertiesLoose(props, _excluded2$1);

        return [props.context, reactReduxForwardedRef, wrapperProps];
      }, [props]),
          propsContext = _useMemo[0],
          reactReduxForwardedRef = _useMemo[1],
          wrapperProps = _useMemo[2];

      var ContextToUse = useMemo$1(function () {
        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.
        // Memoize the check that determines which context instance we should use.
        return propsContext && propsContext.Consumer && reactIs.exports.isContextConsumer( /*#__PURE__*/React__default.createElement(propsContext.Consumer, null)) ? propsContext : Context;
      }, [propsContext, Context]); // Retrieve the store and ancestor subscription via context, if available

      var contextValue = useContext(ContextToUse); // The store _must_ exist as either a prop or in context.
      // We'll check to see if it _looks_ like a Redux store first.
      // This allows us to pass through a `store` prop that is just a plain value.

      var didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);
      var didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);

      if (process.env.NODE_ENV !== 'production' && !didStoreComeFromProps && !didStoreComeFromContext) {
        throw new Error("Could not find \"store\" in the context of " + ("\"" + displayName + "\". Either wrap the root component in a <Provider>, ") + "or pass a custom React context provider to <Provider> and the corresponding " + ("React context consumer to " + displayName + " in connect options."));
      } // Based on the previous check, one of these must be true


      var store = didStoreComeFromProps ? props.store : contextValue.store;
      var childPropsSelector = useMemo$1(function () {
        // The child props selector needs the store reference as an input.
        // Re-create this selector whenever the store changes.
        return createChildSelector(store);
      }, [store]);

      var _useMemo2 = useMemo$1(function () {
        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component
        // connected to the store via props shouldn't use subscription from context, or vice versa.

        // This Subscription's source should match where store came from: props vs. context. A component
        // connected to the store via props shouldn't use subscription from context, or vice versa.
        var subscription = createSubscription(store, didStoreComeFromProps ? null : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in
        // the middle of the notification loop, where `subscription` will then be null. This can
        // probably be avoided if Subscription's listeners logic is changed to not call listeners
        // that have been unsubscribed in the  middle of the notification loop.

        // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in
        // the middle of the notification loop, where `subscription` will then be null. This can
        // probably be avoided if Subscription's listeners logic is changed to not call listeners
        // that have been unsubscribed in the  middle of the notification loop.
        var notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);
        return [subscription, notifyNestedSubs];
      }, [store, didStoreComeFromProps, contextValue]),
          subscription = _useMemo2[0],
          notifyNestedSubs = _useMemo2[1]; // Determine what {store, subscription} value should be put into nested context, if necessary,
      // and memoize that value to avoid unnecessary context updates.


      var overriddenContextValue = useMemo$1(function () {
        if (didStoreComeFromProps) {
          // This component is directly subscribed to a store from props.
          // We don't want descendants reading from this store - pass down whatever
          // the existing context value is from the nearest connected ancestor.
          return contextValue;
        } // Otherwise, put this component's subscription instance into context, so that
        // connected descendants won't update until after this component is done


        return _extends({}, contextValue, {
          subscription: subscription
        });
      }, [didStoreComeFromProps, contextValue, subscription]); // We need to force this wrapper component to re-render whenever a Redux store update
      // causes a change to the calculated child component props (or we caught an error in mapState)

      var _useReducer = useReducer(storeStateUpdatesReducer, EMPTY_ARRAY, initStateUpdates),
          _useReducer$ = _useReducer[0],
          previousStateUpdateResult = _useReducer$[0],
          forceComponentUpdateDispatch = _useReducer[1]; // Propagate any mapState/mapDispatch errors upwards


      if (previousStateUpdateResult && previousStateUpdateResult.error) {
        throw previousStateUpdateResult.error;
      } // Set up refs to coordinate values between the subscription effect and the render logic


      var lastChildProps = useRef();
      var lastWrapperProps = useRef(wrapperProps);
      var childPropsFromStoreUpdate = useRef();
      var renderIsScheduled = useRef(false);
      var actualChildProps = usePureOnlyMemo(function () {
        // Tricky logic here:
        // - This render may have been triggered by a Redux store update that produced new child props
        // - However, we may have gotten new wrapper props after that
        // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.
        // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.
        // So, we'll use the child props from store update only if the wrapper props are the same as last time.
        if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {
          return childPropsFromStoreUpdate.current;
        } // TODO We're reading the store directly in render() here. Bad idea?
        // This will likely cause Bad Things (TM) to happen in Concurrent Mode.
        // Note that we do this because on renders _not_ caused by store updates, we need the latest store state
        // to determine what the child props should be.


        return childPropsSelector(store.getState(), wrapperProps);
      }, [store, previousStateUpdateResult, wrapperProps]); // We need this to execute synchronously every time we re-render. However, React warns
      // about useLayoutEffect in SSR, so we try to detect environment and fall back to
      // just useEffect instead to avoid the warning, since neither will run anyway.

      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs]); // Our re-subscribe logic only runs when the store/subscription setup changes

      useIsomorphicLayoutEffectWithArgs(subscribeUpdates, [shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch], [store, subscription, childPropsSelector]); // Now that all that's done, we can finally try to actually render the child component.
      // We memoize the elements for the rendered child component as an optimization.

      var renderedWrappedComponent = useMemo$1(function () {
        return /*#__PURE__*/React__default.createElement(WrappedComponent, _extends({}, actualChildProps, {
          ref: reactReduxForwardedRef
        }));
      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]); // If React sees the exact same element reference as last time, it bails out of re-rendering
      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.

      var renderedChild = useMemo$1(function () {
        if (shouldHandleStateChanges) {
          // If this component is subscribed to store updates, we need to pass its own
          // subscription instance down to our descendants. That means rendering the same
          // Context instance, and putting a different value into the context.
          return /*#__PURE__*/React__default.createElement(ContextToUse.Provider, {
            value: overriddenContextValue
          }, renderedWrappedComponent);
        }

        return renderedWrappedComponent;
      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);
      return renderedChild;
    } // If we're in "pure" mode, ensure our wrapper component only re-renders when incoming props have changed.


    var Connect = pure ? React__default.memo(ConnectFunction) : ConnectFunction;
    Connect.WrappedComponent = WrappedComponent;
    Connect.displayName = ConnectFunction.displayName = displayName;

    if (forwardRef) {
      var forwarded = React__default.forwardRef(function forwardConnectRef(props, ref) {
        return /*#__PURE__*/React__default.createElement(Connect, _extends({}, props, {
          reactReduxForwardedRef: ref
        }));
      });
      forwarded.displayName = displayName;
      forwarded.WrappedComponent = WrappedComponent;
      return hoistNonReactStatics_cjs(forwarded, WrappedComponent);
    }

    return hoistNonReactStatics_cjs(Connect, WrappedComponent);
  };
}

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) return true;

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) return false;

  for (var i = 0; i < keysA.length; i++) {
    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

function bindActionCreators(actionCreators, dispatch) {
  var boundActionCreators = {};

  var _loop = function _loop(key) {
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = function () {
        return dispatch(actionCreator.apply(void 0, arguments));
      };
    }
  };

  for (var key in actionCreators) {
    _loop(key);
  }

  return boundActionCreators;
}

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = Object.getPrototypeOf(obj);
  if (proto === null) return true;
  var baseProto = proto;

  while (Object.getPrototypeOf(baseProto) !== null) {
    baseProto = Object.getPrototypeOf(baseProto);
  }

  return proto === baseProto;
}

/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning$1(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
    /* eslint-disable no-empty */
  } catch (e) {}
  /* eslint-enable no-empty */

}

function verifyPlainObject(value, displayName, methodName) {
  if (!isPlainObject(value)) {
    warning$1(methodName + "() in " + displayName + " must return a plain object. Instead received " + value + ".");
  }
}

function wrapMapToPropsConstant(getConstant) {
  return function initConstantSelector(dispatch, options) {
    var constant = getConstant(dispatch, options);

    function constantSelector() {
      return constant;
    }

    constantSelector.dependsOnOwnProps = false;
    return constantSelector;
  };
} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
// whether mapToProps needs to be invoked when props have changed.
//
// A length of one signals that mapToProps does not depend on props from the parent component.
// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
// therefore not reporting its length accurately..

function getDependsOnOwnProps(mapToProps) {
  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
// this function wraps mapToProps in a proxy function which does several things:
//
//  * Detects whether the mapToProps function being called depends on props, which
//    is used by selectorFactory to decide if it should reinvoke on props changes.
//
//  * On first call, handles mapToProps if returns another function, and treats that
//    new function as the true mapToProps for subsequent calls.
//
//  * On first call, verifies the first result is a plain object, in order to warn
//    the developer that their mapToProps function is not returning a valid result.
//

function wrapMapToPropsFunc(mapToProps, methodName) {
  return function initProxySelector(dispatch, _ref) {
    var displayName = _ref.displayName;

    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
    }; // allow detectFactoryAndVerify to get ownProps


    proxy.dependsOnOwnProps = true;

    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
      proxy.mapToProps = mapToProps;
      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
      var props = proxy(stateOrDispatch, ownProps);

      if (typeof props === 'function') {
        proxy.mapToProps = props;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
        props = proxy(stateOrDispatch, ownProps);
      }

      if (process.env.NODE_ENV !== 'production') verifyPlainObject(props, displayName, methodName);
      return props;
    };

    return proxy;
  };
}

function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
  return typeof mapDispatchToProps === 'function' ? wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps') : undefined;
}
function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
  return !mapDispatchToProps ? wrapMapToPropsConstant(function (dispatch) {
    return {
      dispatch: dispatch
    };
  }) : undefined;
}
function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? wrapMapToPropsConstant(function (dispatch) {
    return bindActionCreators(mapDispatchToProps, dispatch);
  }) : undefined;
}
var defaultMapDispatchToPropsFactories = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];

function whenMapStateToPropsIsFunction(mapStateToProps) {
  return typeof mapStateToProps === 'function' ? wrapMapToPropsFunc(mapStateToProps, 'mapStateToProps') : undefined;
}
function whenMapStateToPropsIsMissing(mapStateToProps) {
  return !mapStateToProps ? wrapMapToPropsConstant(function () {
    return {};
  }) : undefined;
}
var defaultMapStateToPropsFactories = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];

function defaultMergeProps(stateProps, dispatchProps, ownProps) {
  return _extends({}, ownProps, stateProps, dispatchProps);
}
function wrapMergePropsFunc(mergeProps) {
  return function initMergePropsProxy(dispatch, _ref) {
    var displayName = _ref.displayName,
        pure = _ref.pure,
        areMergedPropsEqual = _ref.areMergedPropsEqual;
    var hasRunOnce = false;
    var mergedProps;
    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

      if (hasRunOnce) {
        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
      } else {
        hasRunOnce = true;
        mergedProps = nextMergedProps;
        if (process.env.NODE_ENV !== 'production') verifyPlainObject(mergedProps, displayName, 'mergeProps');
      }

      return mergedProps;
    };
  };
}
function whenMergePropsIsFunction(mergeProps) {
  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
}
function whenMergePropsIsOmitted(mergeProps) {
  return !mergeProps ? function () {
    return defaultMergeProps;
  } : undefined;
}
var defaultMergePropsFactories = [whenMergePropsIsFunction, whenMergePropsIsOmitted];

function verify(selector, methodName, displayName) {
  if (!selector) {
    throw new Error("Unexpected value for " + methodName + " in " + displayName + ".");
  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
    if (!Object.prototype.hasOwnProperty.call(selector, 'dependsOnOwnProps')) {
      warning$1("The selector for " + methodName + " of " + displayName + " did not specify a value for dependsOnOwnProps.");
    }
  }
}

function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
  verify(mapStateToProps, 'mapStateToProps', displayName);
  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
  verify(mergeProps, 'mergeProps', displayName);
}

var _excluded$8 = ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"];
function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
  return function impureFinalPropsSelector(state, ownProps) {
    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
  };
}
function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
  var areStatesEqual = _ref.areStatesEqual,
      areOwnPropsEqual = _ref.areOwnPropsEqual,
      areStatePropsEqual = _ref.areStatePropsEqual;
  var hasRunAtLeastOnce = false;
  var state;
  var ownProps;
  var stateProps;
  var dispatchProps;
  var mergedProps;

  function handleFirstCall(firstState, firstOwnProps) {
    state = firstState;
    ownProps = firstOwnProps;
    stateProps = mapStateToProps(state, ownProps);
    dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    hasRunAtLeastOnce = true;
    return mergedProps;
  }

  function handleNewPropsAndNewState() {
    stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewProps() {
    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewState() {
    var nextStateProps = mapStateToProps(state, ownProps);
    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
    stateProps = nextStateProps;
    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleSubsequentCalls(nextState, nextOwnProps) {
    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
    var stateChanged = !areStatesEqual(nextState, state, nextOwnProps, ownProps);
    state = nextState;
    ownProps = nextOwnProps;
    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
    if (propsChanged) return handleNewProps();
    if (stateChanged) return handleNewState();
    return mergedProps;
  }

  return function pureFinalPropsSelector(nextState, nextOwnProps) {
    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
  };
} // TODO: Add more comments
// If pure is true, the selector returned by selectorFactory will memoize its results,
// allowing connectAdvanced's shouldComponentUpdate to return false if final
// props have not changed. If false, the selector will always return a new
// object and shouldComponentUpdate will always return true.

function finalPropsSelectorFactory(dispatch, _ref2) {
  var initMapStateToProps = _ref2.initMapStateToProps,
      initMapDispatchToProps = _ref2.initMapDispatchToProps,
      initMergeProps = _ref2.initMergeProps,
      options = _objectWithoutPropertiesLoose(_ref2, _excluded$8);

  var mapStateToProps = initMapStateToProps(dispatch, options);
  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
  var mergeProps = initMergeProps(dispatch, options);

  if (process.env.NODE_ENV !== 'production') {
    verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
  }

  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
}

var _excluded$7 = ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"];
/*
  connect is a facade over connectAdvanced. It turns its args into a compatible
  selectorFactory, which has the signature:

    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
  
  connect passes its args to connectAdvanced as options, which will in turn pass them to
  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

  selectorFactory returns a final props selector from its mapStateToProps,
  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
  mergePropsFactories, and pure args.

  The resulting final props selector is called by the Connect component instance whenever
  it receives new props or store state.
 */

function match(arg, factories, name) {
  for (var i = factories.length - 1; i >= 0; i--) {
    var result = factories[i](arg);
    if (result) return result;
  }

  return function (dispatch, options) {
    throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");
  };
}

function strictEqual(a, b) {
  return a === b;
} // createConnect with default args builds the 'official' connect behavior. Calling it with
// different options opens up some testing and extensibility scenarios


function createConnect(_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$connectHOC = _ref.connectHOC,
      connectHOC = _ref$connectHOC === void 0 ? connectAdvanced : _ref$connectHOC,
      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? defaultMapStateToPropsFactories : _ref$mapStateToPropsF,
      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? defaultMapDispatchToPropsFactories : _ref$mapDispatchToPro,
      _ref$mergePropsFactor = _ref.mergePropsFactories,
      mergePropsFactories = _ref$mergePropsFactor === void 0 ? defaultMergePropsFactories : _ref$mergePropsFactor,
      _ref$selectorFactory = _ref.selectorFactory,
      selectorFactory = _ref$selectorFactory === void 0 ? finalPropsSelectorFactory : _ref$selectorFactory;

  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {
    if (_ref2 === void 0) {
      _ref2 = {};
    }

    var _ref3 = _ref2,
        _ref3$pure = _ref3.pure,
        pure = _ref3$pure === void 0 ? true : _ref3$pure,
        _ref3$areStatesEqual = _ref3.areStatesEqual,
        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,
        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,
        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? shallowEqual : _ref3$areOwnPropsEqua,
        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,
        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? shallowEqual : _ref3$areStatePropsEq,
        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,
        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? shallowEqual : _ref3$areMergedPropsE,
        extraOptions = _objectWithoutPropertiesLoose(_ref3, _excluded$7);

    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');
    return connectHOC(selectorFactory, _extends({
      // used in error messages
      methodName: 'connect',
      // used to compute Connect's displayName from the wrapped component's displayName.
      getDisplayName: function getDisplayName(name) {
        return "Connect(" + name + ")";
      },
      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
      shouldHandleStateChanges: Boolean(mapStateToProps),
      // passed through to selectorFactory
      initMapStateToProps: initMapStateToProps,
      initMapDispatchToProps: initMapDispatchToProps,
      initMergeProps: initMergeProps,
      pure: pure,
      areStatesEqual: areStatesEqual,
      areOwnPropsEqual: areOwnPropsEqual,
      areStatePropsEqual: areStatePropsEqual,
      areMergedPropsEqual: areMergedPropsEqual
    }, extraOptions));
  };
}
var connect = /*#__PURE__*/createConnect();

// with standard React renderers (ReactDOM, React Native)

setBatch(unstable_batchedUpdates);

function areInputsEqual$1(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }

  for (var i = 0; i < newInputs.length; i++) {
    if (newInputs[i] !== lastInputs[i]) {
      return false;
    }
  }

  return true;
}

function useMemoOne(getResult, inputs) {
  var initial = useState(function () {
    return {
      inputs: inputs,
      result: getResult()
    };
  })[0];
  var isFirstRun = useRef(true);
  var committed = useRef(initial);
  var useCache = isFirstRun.current || Boolean(inputs && committed.current.inputs && areInputsEqual$1(inputs, committed.current.inputs));
  var cache = useCache ? committed.current : {
    inputs: inputs,
    result: getResult()
  };
  useEffect(function () {
    isFirstRun.current = false;
    committed.current = cache;
  }, [cache]);
  return cache.result;
}
function useCallbackOne(callback, inputs) {
  return useMemoOne(function () {
    return callback;
  }, inputs);
}
var useMemo = useMemoOne;
var useCallback = useCallbackOne;

var isProduction$2 = process.env.NODE_ENV === 'production';
var prefix$2 = 'Invariant failed';
function invariant$1(condition, message) {
    if (condition) {
        return;
    }
    if (isProduction$2) {
        throw new Error(prefix$2);
    }
    var provided = typeof message === 'function' ? message() : message;
    var value = provided ? "".concat(prefix$2, ": ").concat(provided) : prefix$2;
    throw new Error(value);
}

var getRect = function getRect(_ref) {
  var top = _ref.top,
      right = _ref.right,
      bottom = _ref.bottom,
      left = _ref.left;
  var width = right - left;
  var height = bottom - top;
  var rect = {
    top: top,
    right: right,
    bottom: bottom,
    left: left,
    width: width,
    height: height,
    x: left,
    y: top,
    center: {
      x: (right + left) / 2,
      y: (bottom + top) / 2
    }
  };
  return rect;
};
var expand = function expand(target, expandBy) {
  return {
    top: target.top - expandBy.top,
    left: target.left - expandBy.left,
    bottom: target.bottom + expandBy.bottom,
    right: target.right + expandBy.right
  };
};
var shrink = function shrink(target, shrinkBy) {
  return {
    top: target.top + shrinkBy.top,
    left: target.left + shrinkBy.left,
    bottom: target.bottom - shrinkBy.bottom,
    right: target.right - shrinkBy.right
  };
};

var shift = function shift(target, shiftBy) {
  return {
    top: target.top + shiftBy.y,
    left: target.left + shiftBy.x,
    bottom: target.bottom + shiftBy.y,
    right: target.right + shiftBy.x
  };
};

var noSpacing$1 = {
  top: 0,
  right: 0,
  bottom: 0,
  left: 0
};
var createBox = function createBox(_ref2) {
  var borderBox = _ref2.borderBox,
      _ref2$margin = _ref2.margin,
      margin = _ref2$margin === void 0 ? noSpacing$1 : _ref2$margin,
      _ref2$border = _ref2.border,
      border = _ref2$border === void 0 ? noSpacing$1 : _ref2$border,
      _ref2$padding = _ref2.padding,
      padding = _ref2$padding === void 0 ? noSpacing$1 : _ref2$padding;
  var marginBox = getRect(expand(borderBox, margin));
  var paddingBox = getRect(shrink(borderBox, border));
  var contentBox = getRect(shrink(paddingBox, padding));
  return {
    marginBox: marginBox,
    borderBox: getRect(borderBox),
    paddingBox: paddingBox,
    contentBox: contentBox,
    margin: margin,
    border: border,
    padding: padding
  };
};

var parse = function parse(raw) {
  var value = raw.slice(0, -2);
  var suffix = raw.slice(-2);

  if (suffix !== 'px') {
    return 0;
  }

  var result = Number(value);
  !!isNaN(result) ? process.env.NODE_ENV !== "production" ? invariant$1(false, "Could not parse value [raw: " + raw + ", without suffix: " + value + "]") : invariant$1(false) : void 0;
  return result;
};

var getWindowScroll$1 = function getWindowScroll() {
  return {
    x: window.pageXOffset,
    y: window.pageYOffset
  };
};

var offset = function offset(original, change) {
  var borderBox = original.borderBox,
      border = original.border,
      margin = original.margin,
      padding = original.padding;
  var shifted = shift(borderBox, change);
  return createBox({
    borderBox: shifted,
    border: border,
    margin: margin,
    padding: padding
  });
};
var withScroll = function withScroll(original, scroll) {
  if (scroll === void 0) {
    scroll = getWindowScroll$1();
  }

  return offset(original, scroll);
};
var calculateBox = function calculateBox(borderBox, styles) {
  var margin = {
    top: parse(styles.marginTop),
    right: parse(styles.marginRight),
    bottom: parse(styles.marginBottom),
    left: parse(styles.marginLeft)
  };
  var padding = {
    top: parse(styles.paddingTop),
    right: parse(styles.paddingRight),
    bottom: parse(styles.paddingBottom),
    left: parse(styles.paddingLeft)
  };
  var border = {
    top: parse(styles.borderTopWidth),
    right: parse(styles.borderRightWidth),
    bottom: parse(styles.borderBottomWidth),
    left: parse(styles.borderLeftWidth)
  };
  return createBox({
    borderBox: borderBox,
    margin: margin,
    padding: padding,
    border: border
  });
};
var getBox = function getBox(el) {
  var borderBox = el.getBoundingClientRect();
  var styles = window.getComputedStyle(el);
  return calculateBox(borderBox, styles);
};

var safeIsNaN = Number.isNaN ||
    function ponyfill(value) {
        return typeof value === 'number' && value !== value;
    };
function isEqual$2(first, second) {
    if (first === second) {
        return true;
    }
    if (safeIsNaN(first) && safeIsNaN(second)) {
        return true;
    }
    return false;
}
function areInputsEqual(newInputs, lastInputs) {
    if (newInputs.length !== lastInputs.length) {
        return false;
    }
    for (var i = 0; i < newInputs.length; i++) {
        if (!isEqual$2(newInputs[i], lastInputs[i])) {
            return false;
        }
    }
    return true;
}

function memoizeOne(resultFn, isEqual) {
    if (isEqual === void 0) { isEqual = areInputsEqual; }
    var lastThis;
    var lastArgs = [];
    var lastResult;
    var calledOnce = false;
    function memoized() {
        var newArgs = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            newArgs[_i] = arguments[_i];
        }
        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {
            return lastResult;
        }
        lastResult = resultFn.apply(this, newArgs);
        calledOnce = true;
        lastThis = this;
        lastArgs = newArgs;
        return lastResult;
    }
    return memoized;
}

var rafSchd = function rafSchd(fn) {
  var lastArgs = [];
  var frameId = null;

  var wrapperFn = function wrapperFn() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    lastArgs = args;

    if (frameId) {
      return;
    }

    frameId = requestAnimationFrame(function () {
      frameId = null;
      fn.apply(void 0, lastArgs);
    });
  };

  wrapperFn.cancel = function () {
    if (!frameId) {
      return;
    }

    cancelAnimationFrame(frameId);
    frameId = null;
  };

  return wrapperFn;
};

var isProduction = process.env.NODE_ENV === 'production';
var spacesAndTabs = /[ \t]{2,}/g;
var lineStartWithSpaces = /^[ \t]*/gm;

var clean = function clean(value) {
  return value.replace(spacesAndTabs, ' ').replace(lineStartWithSpaces, '').trim();
};

var getDevMessage = function getDevMessage(message) {
  return clean("\n  %creact-beautiful-dnd\n\n  %c" + clean(message) + "\n\n  %c\uD83D\uDC77\u200D This is a development only message. It will be removed in production builds.\n");
};

var getFormattedMessage = function getFormattedMessage(message) {
  return [getDevMessage(message), 'color: #00C584; font-size: 1.2em; font-weight: bold;', 'line-height: 1.5', 'color: #723874;'];
};
var isDisabledFlag = '__react-beautiful-dnd-disable-dev-warnings';
function log(type, message) {
  var _console;

  if (isProduction) {
    return;
  }

  if (typeof window !== 'undefined' && window[isDisabledFlag]) {
    return;
  }

  (_console = console)[type].apply(_console, getFormattedMessage(message));
}
var warning = log.bind(null, 'warn');
var error = log.bind(null, 'error');

function noop() {}

function getOptions(shared, fromBinding) {
  return _extends({}, shared, {}, fromBinding);
}

function bindEvents(el, bindings, sharedOptions) {
  var unbindings = bindings.map(function (binding) {
    var options = getOptions(sharedOptions, binding.options);
    el.addEventListener(binding.eventName, binding.fn, options);
    return function unbind() {
      el.removeEventListener(binding.eventName, binding.fn, options);
    };
  });
  return function unbindAll() {
    unbindings.forEach(function (unbind) {
      unbind();
    });
  };
}

var isProduction$1 = process.env.NODE_ENV === 'production';
var prefix = 'Invariant failed';
function RbdInvariant(message) {
  this.message = message;
}

RbdInvariant.prototype.toString = function toString() {
  return this.message;
};

function invariant(condition, message) {
  if (condition) {
    return;
  }

  if (isProduction$1) {
    throw new RbdInvariant(prefix);
  } else {
    throw new RbdInvariant(prefix + ": " + (message || ''));
  }
}

var ErrorBoundary = function (_React$Component) {
  _inheritsLoose(ErrorBoundary, _React$Component);

  function ErrorBoundary() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.callbacks = null;
    _this.unbind = noop;

    _this.onWindowError = function (event) {
      var callbacks = _this.getCallbacks();

      if (callbacks.isDragging()) {
        callbacks.tryAbort();
        process.env.NODE_ENV !== "production" ? warning("\n        An error was caught by our window 'error' event listener while a drag was occurring.\n        The active drag has been aborted.\n      ") : void 0;
      }

      var err = event.error;

      if (err instanceof RbdInvariant) {
        event.preventDefault();

        if (process.env.NODE_ENV !== 'production') {
          error(err.message);
        }
      }
    };

    _this.getCallbacks = function () {
      if (!_this.callbacks) {
        throw new Error('Unable to find AppCallbacks in <ErrorBoundary/>');
      }

      return _this.callbacks;
    };

    _this.setCallbacks = function (callbacks) {
      _this.callbacks = callbacks;
    };

    return _this;
  }

  var _proto = ErrorBoundary.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.unbind = bindEvents(window, [{
      eventName: 'error',
      fn: this.onWindowError
    }]);
  };

  _proto.componentDidCatch = function componentDidCatch(err) {
    if (err instanceof RbdInvariant) {
      if (process.env.NODE_ENV !== 'production') {
        error(err.message);
      }

      this.setState({});
      return;
    }

    throw err;
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.unbind();
  };

  _proto.render = function render() {
    return this.props.children(this.setCallbacks);
  };

  return ErrorBoundary;
}(React__default.Component);

var dragHandleUsageInstructions = "\n  Press space bar to start a drag.\n  When dragging you can use the arrow keys to move the item around and escape to cancel.\n  Some screen readers may require you to be in focus mode or to use your pass through key\n";

var position = function position(index) {
  return index + 1;
};

var onDragStart = function onDragStart(start) {
  return "\n  You have lifted an item in position " + position(start.source.index) + "\n";
};

var withLocation = function withLocation(source, destination) {
  var isInHomeList = source.droppableId === destination.droppableId;
  var startPosition = position(source.index);
  var endPosition = position(destination.index);

  if (isInHomeList) {
    return "\n      You have moved the item from position " + startPosition + "\n      to position " + endPosition + "\n    ";
  }

  return "\n    You have moved the item from position " + startPosition + "\n    in list " + source.droppableId + "\n    to list " + destination.droppableId + "\n    in position " + endPosition + "\n  ";
};

var withCombine = function withCombine(id, source, combine) {
  var inHomeList = source.droppableId === combine.droppableId;

  if (inHomeList) {
    return "\n      The item " + id + "\n      has been combined with " + combine.draggableId;
  }

  return "\n      The item " + id + "\n      in list " + source.droppableId + "\n      has been combined with " + combine.draggableId + "\n      in list " + combine.droppableId + "\n    ";
};

var onDragUpdate = function onDragUpdate(update) {
  var location = update.destination;

  if (location) {
    return withLocation(update.source, location);
  }

  var combine = update.combine;

  if (combine) {
    return withCombine(update.draggableId, update.source, combine);
  }

  return 'You are over an area that cannot be dropped on';
};

var returnedToStart = function returnedToStart(source) {
  return "\n  The item has returned to its starting position\n  of " + position(source.index) + "\n";
};

var onDragEnd = function onDragEnd(result) {
  if (result.reason === 'CANCEL') {
    return "\n      Movement cancelled.\n      " + returnedToStart(result.source) + "\n    ";
  }

  var location = result.destination;
  var combine = result.combine;

  if (location) {
    return "\n      You have dropped the item.\n      " + withLocation(result.source, location) + "\n    ";
  }

  if (combine) {
    return "\n      You have dropped the item.\n      " + withCombine(result.draggableId, result.source, combine) + "\n    ";
  }

  return "\n    The item has been dropped while not over a drop area.\n    " + returnedToStart(result.source) + "\n  ";
};

var preset = {
  dragHandleUsageInstructions: dragHandleUsageInstructions,
  onDragStart: onDragStart,
  onDragUpdate: onDragUpdate,
  onDragEnd: onDragEnd
};

var origin = {
  x: 0,
  y: 0
};
var add = function add(point1, point2) {
  return {
    x: point1.x + point2.x,
    y: point1.y + point2.y
  };
};
var subtract = function subtract(point1, point2) {
  return {
    x: point1.x - point2.x,
    y: point1.y - point2.y
  };
};
var isEqual = function isEqual(point1, point2) {
  return point1.x === point2.x && point1.y === point2.y;
};
var negate = function negate(point) {
  return {
    x: point.x !== 0 ? -point.x : 0,
    y: point.y !== 0 ? -point.y : 0
  };
};
var patch = function patch(line, value, otherValue) {
  var _ref;

  if (otherValue === void 0) {
    otherValue = 0;
  }

  return _ref = {}, _ref[line] = value, _ref[line === 'x' ? 'y' : 'x'] = otherValue, _ref;
};
var distance = function distance(point1, point2) {
  return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));
};
var closest = function closest(target, points) {
  return Math.min.apply(Math, points.map(function (point) {
    return distance(target, point);
  }));
};
var apply = function apply(fn) {
  return function (point) {
    return {
      x: fn(point.x),
      y: fn(point.y)
    };
  };
};

var executeClip = (function (frame, subject) {
  var result = getRect({
    top: Math.max(subject.top, frame.top),
    right: Math.min(subject.right, frame.right),
    bottom: Math.min(subject.bottom, frame.bottom),
    left: Math.max(subject.left, frame.left)
  });

  if (result.width <= 0 || result.height <= 0) {
    return null;
  }

  return result;
});

var offsetByPosition = function offsetByPosition(spacing, point) {
  return {
    top: spacing.top + point.y,
    left: spacing.left + point.x,
    bottom: spacing.bottom + point.y,
    right: spacing.right + point.x
  };
};
var getCorners = function getCorners(spacing) {
  return [{
    x: spacing.left,
    y: spacing.top
  }, {
    x: spacing.right,
    y: spacing.top
  }, {
    x: spacing.left,
    y: spacing.bottom
  }, {
    x: spacing.right,
    y: spacing.bottom
  }];
};
var noSpacing = {
  top: 0,
  right: 0,
  bottom: 0,
  left: 0
};

var scroll = function scroll(target, frame) {
  if (!frame) {
    return target;
  }

  return offsetByPosition(target, frame.scroll.diff.displacement);
};

var increase = function increase(target, axis, withPlaceholder) {
  if (withPlaceholder && withPlaceholder.increasedBy) {
    var _extends2;

    return _extends({}, target, (_extends2 = {}, _extends2[axis.end] = target[axis.end] + withPlaceholder.increasedBy[axis.line], _extends2));
  }

  return target;
};

var clip = function clip(target, frame) {
  if (frame && frame.shouldClipSubject) {
    return executeClip(frame.pageMarginBox, target);
  }

  return getRect(target);
};

var getSubject = (function (_ref) {
  var page = _ref.page,
      withPlaceholder = _ref.withPlaceholder,
      axis = _ref.axis,
      frame = _ref.frame;
  var scrolled = scroll(page.marginBox, frame);
  var increased = increase(scrolled, axis, withPlaceholder);
  var clipped = clip(increased, frame);
  return {
    page: page,
    withPlaceholder: withPlaceholder,
    active: clipped
  };
});

var scrollDroppable = (function (droppable, newScroll) {
  !droppable.frame ? process.env.NODE_ENV !== "production" ? invariant(false) : invariant(false) : void 0;
  var scrollable = droppable.frame;
  var scrollDiff = subtract(newScroll, scrollable.scroll.initial);
  var scrollDisplacement = negate(scrollDiff);

  var frame = _extends({}, scrollable, {
    scroll: {
      initial: scrollable.scroll.initial,
      current: newScroll,
      diff: {
        value: scrollDiff,
        displacement: scrollDisplacement
      },
      max: scrollable.scroll.max
    }
  });

  var subject = getSubject({
    page: droppable.subject.page,
    withPlaceholder: droppable.subject.withPlaceholder,
    axis: droppable.axis,
    frame: frame
  });

  var result = _extends({}, droppable, {
    frame: frame,
    subject: subject
  });

  return result;
});

function isInteger(value) {
  if (Number.isInteger) {
    return Number.isInteger(value);
  }

  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;
}
function values(map) {
  if (Object.values) {
    return Object.values(map);
  }

  return Object.keys(map).map(function (key) {
    return map[key];
  });
}
function findIndex(list, predicate) {
  if (list.findIndex) {
    return list.findIndex(predicate);
  }

  for (var i = 0; i < list.length; i++) {
    if (predicate(list[i])) {
      return i;
    }
  }

  return -1;
}
function find(list, predicate) {
  if (list.find) {
    return list.find(predicate);
  }

  var index = findIndex(list, predicate);

  if (index !== -1) {
    return list[index];
  }

  return undefined;
}
function toArray(list) {
  return Array.prototype.slice.call(list);
}

var toDroppableMap = memoizeOne(function (droppables) {
  return droppables.reduce(function (previous, current) {
    previous[current.descriptor.id] = current;
    return previous;
  }, {});
});
var toDraggableMap = memoizeOne(function (draggables) {
  return draggables.reduce(function (previous, current) {
    previous[current.descriptor.id] = current;
    return previous;
  }, {});
});
var toDroppableList = memoizeOne(function (droppables) {
  return values(droppables);
});
var toDraggableList = memoizeOne(function (draggables) {
  return values(draggables);
});

var getDraggablesInsideDroppable = memoizeOne(function (droppableId, draggables) {
  var result = toDraggableList(draggables).filter(function (draggable) {
    return droppableId === draggable.descriptor.droppableId;
  }).sort(function (a, b) {
    return a.descriptor.index - b.descriptor.index;
  });
  return result;
});

function tryGetDestination(impact) {
  if (impact.at && impact.at.type === 'REORDER') {
    return impact.at.destination;
  }

  return null;
}
function tryGetCombine(impact) {
  if (impact.at && impact.at.type === 'COMBINE') {
    return impact.at.combine;
  }

  return null;
}

var removeDraggableFromList = memoizeOne(function (remove, list) {
  return list.filter(function (item) {
    return item.descriptor.id !== remove.descriptor.id;
  });
});

var moveToNextCombine = (function (_ref) {
  var isMovingForward = _ref.isMovingForward,
      draggable = _ref.draggable,
      destination = _ref.destination,
      insideDestination = _ref.insideDestination,
      previousImpact = _ref.previousImpact;

  if (!destination.isCombineEnabled) {
    return null;
  }

  var location = tryGetDestination(previousImpact);

  if (!location) {
    return null;
  }

  function getImpact(target) {
    var at = {
      type: 'COMBINE',
      combine: {
        draggableId: target,
        droppableId: destination.descriptor.id
      }
    };
    return _extends({}, previousImpact, {
      at: at
    });
  }

  var all = previousImpact.displaced.all;
  var closestId = all.length ? all[0] : null;

  if (isMovingForward) {
    return closestId ? getImpact(closestId) : null;
  }

  var withoutDraggable = removeDraggableFromList(draggable, insideDestination);

  if (!closestId) {
    if (!withoutDraggable.length) {
      return null;
    }

    var last = withoutDraggable[withoutDraggable.length - 1];
    return getImpact(last.descriptor.id);
  }

  var indexOfClosest = findIndex(withoutDraggable, function (d) {
    return d.descriptor.id === closestId;
  });
  !(indexOfClosest !== -1) ? process.env.NODE_ENV !== "production" ? invariant(false, 'Could not find displaced item in set') : invariant(false) : void 0;
  var proposedIndex = indexOfClosest - 1;

  if (proposedIndex < 0) {
    return null;
  }

  var before = withoutDraggable[proposedIndex];
  return getImpact(before.descriptor.id);
});

var isHomeOf = (function (draggable, destination) {
  return draggable.descriptor.droppableId === destination.descriptor.id;
});

var noDisplacedBy = {
  point: origin,
  value: 0
};
var emptyGroups = {
  invisible: {},
  visible: {},
  all: []
};
var noImpact = {
  displaced: emptyGroups,
  displacedBy: noDisplacedBy,
  at: null
};

var isWithin = (function (lowerBound, upperBound) {
  return function (value) {
    return lowerBound <= value && value <= upperBound;
  };
});

var isPartiallyVisibleThroughFrame = (function (frame) {
  var isWithinVertical = isWithin(frame.top, frame.bottom);
  var isWithinHorizontal = isWithin(frame.left, frame.right);
  return function (subject) {
    var isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);

    if (isContained) {
      return true;
    }

    var isPartiallyVisibleVertically = isWithinVertical(subject.top) || isWithinVertical(subject.bottom);
    var isPartiallyVisibleHorizontally = isWithinHorizontal(subject.left) || isWithinHorizontal(subject.right);
    var isPartiallyContained = isPartiallyVisibleVertically && isPartiallyVisibleHorizontally;

    if (isPartiallyContained) {
      return true;
    }

    var isBiggerVertically = subject.top < frame.top && subject.bottom > frame.bottom;
    var isBiggerHorizontally = subject.left < frame.left && subject.right > frame.right;
    var isTargetBiggerThanFrame = isBiggerVertically && isBiggerHorizontally;

    if (isTargetBiggerThanFrame) {
      return true;
    }

    var isTargetBiggerOnOneAxis = isBiggerVertically && isPartiallyVisibleHorizontally || isBiggerHorizontally && isPartiallyVisibleVertically;
    return isTargetBiggerOnOneAxis;
  };
});

var isTotallyVisibleThroughFrame = (function (frame) {
  var isWithinVertical = isWithin(frame.top, frame.bottom);
  var isWithinHorizontal = isWithin(frame.left, frame.right);
  return function (subject) {
    var isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);
    return isContained;
  };
});

var vertical = {
  direction: 'vertical',
  line: 'y',
  crossAxisLine: 'x',
  start: 'top',
  end: 'bottom',
  size: 'height',
  crossAxisStart: 'left',
  crossAxisEnd: 'right',
  crossAxisSize: 'width'
};
var horizontal = {
  direction: 'horizontal',
  line: 'x',
  crossAxisLine: 'y',
  start: 'left',
  end: 'right',
  size: 'width',
  crossAxisStart: 'top',
  crossAxisEnd: 'bottom',
  crossAxisSize: 'height'
};

var isTotallyVisibleThroughFrameOnAxis = (function (axis) {
  return function (frame) {
    var isWithinVertical = isWithin(frame.top, frame.bottom);
    var isWithinHorizontal = isWithin(frame.left, frame.right);
    return function (subject) {
      if (axis === vertical) {
        return isWithinVertical(subject.top) && isWithinVertical(subject.bottom);
      }

      return isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);
    };
  };
});

var getDroppableDisplaced = function getDroppableDisplaced(target, destination) {
  var displacement = destination.frame ? destination.frame.scroll.diff.displacement : origin;
  return offsetByPosition(target, displacement);
};

var isVisibleInDroppable = function isVisibleInDroppable(target, destination, isVisibleThroughFrameFn) {
  if (!destination.subject.active) {
    return false;
  }

  return isVisibleThroughFrameFn(destination.subject.active)(target);
};

var isVisibleInViewport = function isVisibleInViewport(target, viewport, isVisibleThroughFrameFn) {
  return isVisibleThroughFrameFn(viewport)(target);
};

var isVisible = function isVisible(_ref) {
  var toBeDisplaced = _ref.target,
      destination = _ref.destination,
      viewport = _ref.viewport,
      withDroppableDisplacement = _ref.withDroppableDisplacement,
      isVisibleThroughFrameFn = _ref.isVisibleThroughFrameFn;
  var displacedTarget = withDroppableDisplacement ? getDroppableDisplaced(toBeDisplaced, destination) : toBeDisplaced;
  return isVisibleInDroppable(displacedTarget, destination, isVisibleThroughFrameFn) && isVisibleInViewport(displacedTarget, viewport, isVisibleThroughFrameFn);
};

var isPartiallyVisible = function isPartiallyVisible(args) {
  return isVisible(_extends({}, args, {
    isVisibleThroughFrameFn: isPartiallyVisibleThroughFrame
  }));
};
var isTotallyVisible = function isTotallyVisible(args) {
  return isVisible(_extends({}, args, {
    isVisibleThroughFrameFn: isTotallyVisibleThroughFrame
  }));
};
var isTotallyVisibleOnAxis = function isTotallyVisibleOnAxis(args) {
  return isVisible(_extends({}, args, {
    isVisibleThroughFrameFn: isTotallyVisibleThroughFrameOnAxis(args.destination.axis)
  }));
};

var getShouldAnimate = function getShouldAnimate(id, last, forceShouldAnimate) {
  if (typeof forceShouldAnimate === 'boolean') {
    return forceShouldAnimate;
  }

  if (!last) {
    return true;
  }

  var invisible = last.invisible,
      visible = last.visible;

  if (invisible[id]) {
    return false;
  }

  var previous = visible[id];
  return previous ? previous.shouldAnimate : true;
};

function getTarget(draggable, displacedBy) {
  var marginBox = draggable.page.marginBox;
  var expandBy = {
    top: displacedBy.point.y,
    right: 0,
    bottom: 0,
    left: displacedBy.point.x
  };
  return getRect(expand(marginBox, expandBy));
}

function getDisplacementGroups(_ref) {
  var afterDragging = _ref.afterDragging,
      destination = _ref.destination,
      displacedBy = _ref.displacedBy,
      viewport = _ref.viewport,
      forceShouldAnimate = _ref.forceShouldAnimate,
      last = _ref.last;
  return afterDragging.reduce(function process(groups, draggable) {
    var target = getTarget(draggable, displacedBy);
    var id = draggable.descriptor.id;
    groups.all.push(id);
    var isVisible = isPartiallyVisible({
      target: target,
      destination: destination,
      viewport: viewport,
      withDroppableDisplacement: true
    });

    if (!isVisible) {
      groups.invisible[draggable.descriptor.id] = true;
      return groups;
    }

    var shouldAnimate = getShouldAnimate(id, last, forceShouldAnimate);
    var displacement = {
      draggableId: id,
      shouldAnimate: shouldAnimate
    };
    groups.visible[id] = displacement;
    return groups;
  }, {
    all: [],
    visible: {},
    invisible: {}
  });
}

function getIndexOfLastItem(draggables, options) {
  if (!draggables.length) {
    return 0;
  }

  var indexOfLastItem = draggables[draggables.length - 1].descriptor.index;
  return options.inHomeList ? indexOfLastItem : indexOfLastItem + 1;
}

function goAtEnd(_ref) {
  var insideDestination = _ref.insideDestination,
      inHomeList = _ref.inHomeList,
      displacedBy = _ref.displacedBy,
      destination = _ref.destination;
  var newIndex = getIndexOfLastItem(insideDestination, {
    inHomeList: inHomeList
  });
  return {
    displaced: emptyGroups,
    displacedBy: displacedBy,
    at: {
      type: 'REORDER',
      destination: {
        droppableId: destination.descriptor.id,
        index: newIndex
      }
    }
  };
}

function calculateReorderImpact(_ref2) {
  var draggable = _ref2.draggable,
      insideDestination = _ref2.insideDestination,
      destination = _ref2.destination,
      viewport = _ref2.viewport,
      displacedBy = _ref2.displacedBy,
      last = _ref2.last,
      index = _ref2.index,
      forceShouldAnimate = _ref2.forceShouldAnimate;
  var inHomeList = isHomeOf(draggable, destination);

  if (index == null) {
    return goAtEnd({
      insideDestination: insideDestination,
      inHomeList: inHomeList,
      displacedBy: displacedBy,
      destination: destination
    });
  }

  var match = find(insideDestination, function (item) {
    return item.descriptor.index === index;
  });

  if (!match) {
    return goAtEnd({
      insideDestination: insideDestination,
      inHomeList: inHomeList,
      displacedBy: displacedBy,
      destination: destination
    });
  }

  var withoutDragging = removeDraggableFromList(draggable, insideDestination);
  var sliceFrom = insideDestination.indexOf(match);
  var impacted = withoutDragging.slice(sliceFrom);
  var displaced = getDisplacementGroups({
    afterDragging: impacted,
    destination: destination,
    displacedBy: displacedBy,
    last: last,
    viewport: viewport.frame,
    forceShouldAnimate: forceShouldAnimate
  });
  return {
    displaced: displaced,
    displacedBy: displacedBy,
    at: {
      type: 'REORDER',
      destination: {
        droppableId: destination.descriptor.id,
        index: index
      }
    }
  };
}

function didStartAfterCritical(draggableId, afterCritical) {
  return Boolean(afterCritical.effected[draggableId]);
}

var fromCombine = (function (_ref) {
  var isMovingForward = _ref.isMovingForward,
      destination = _ref.destination,
      draggables = _ref.draggables,
      combine = _ref.combine,
      afterCritical = _ref.afterCritical;

  if (!destination.isCombineEnabled) {
    return null;
  }

  var combineId = combine.draggableId;
  var combineWith = draggables[combineId];
  var combineWithIndex = combineWith.descriptor.index;
  var didCombineWithStartAfterCritical = didStartAfterCritical(combineId, afterCritical);

  if (didCombineWithStartAfterCritical) {
    if (isMovingForward) {
      return combineWithIndex;
    }

    return combineWithIndex - 1;
  }

  if (isMovingForward) {
    return combineWithIndex + 1;
  }

  return combineWithIndex;
});

var fromReorder = (function (_ref) {
  var isMovingForward = _ref.isMovingForward,
      isInHomeList = _ref.isInHomeList,
      insideDestination = _ref.insideDestination,
      location = _ref.location;

  if (!insideDestination.length) {
    return null;
  }

  var currentIndex = location.index;
  var proposedIndex = isMovingForward ? currentIndex + 1 : currentIndex - 1;
  var firstIndex = insideDestination[0].descriptor.index;
  var lastIndex = insideDestination[insideDestination.length - 1].descriptor.index;
  var upperBound = isInHomeList ? lastIndex : lastIndex + 1;

  if (proposedIndex < firstIndex) {
    return null;
  }

  if (proposedIndex > upperBound) {
    return null;
  }

  return proposedIndex;
});

var moveToNextIndex = (function (_ref) {
  var isMovingForward = _ref.isMovingForward,
      isInHomeList = _ref.isInHomeList,
      draggable = _ref.draggable,
      draggables = _ref.draggables,
      destination = _ref.destination,
      insideDestination = _ref.insideDestination,
      previousImpact = _ref.previousImpact,
      viewport = _ref.viewport,
      afterCritical = _ref.afterCritical;
  var wasAt = previousImpact.at;
  !wasAt ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot move in direction without previous impact location') : invariant(false) : void 0;

  if (wasAt.type === 'REORDER') {
    var _newIndex = fromReorder({
      isMovingForward: isMovingForward,
      isInHomeList: isInHomeList,
      location: wasAt.destination,
      insideDestination: insideDestination
    });

    if (_newIndex == null) {
      return null;
    }

    return calculateReorderImpact({
      draggable: draggable,
      insideDestination: insideDestination,
      destination: destination,
      viewport: viewport,
      last: previousImpact.displaced,
      displacedBy: previousImpact.displacedBy,
      index: _newIndex
    });
  }

  var newIndex = fromCombine({
    isMovingForward: isMovingForward,
    destination: destination,
    displaced: previousImpact.displaced,
    draggables: draggables,
    combine: wasAt.combine,
    afterCritical: afterCritical
  });

  if (newIndex == null) {
    return null;
  }

  return calculateReorderImpact({
    draggable: draggable,
    insideDestination: insideDestination,
    destination: destination,
    viewport: viewport,
    last: previousImpact.displaced,
    displacedBy: previousImpact.displacedBy,
    index: newIndex
  });
});

var getCombinedItemDisplacement = (function (_ref) {
  var displaced = _ref.displaced,
      afterCritical = _ref.afterCritical,
      combineWith = _ref.combineWith,
      displacedBy = _ref.displacedBy;
  var isDisplaced = Boolean(displaced.visible[combineWith] || displaced.invisible[combineWith]);

  if (didStartAfterCritical(combineWith, afterCritical)) {
    return isDisplaced ? origin : negate(displacedBy.point);
  }

  return isDisplaced ? displacedBy.point : origin;
});

var whenCombining = (function (_ref) {
  var afterCritical = _ref.afterCritical,
      impact = _ref.impact,
      draggables = _ref.draggables;
  var combine = tryGetCombine(impact);
  !combine ? process.env.NODE_ENV !== "production" ? invariant(false) : invariant(false) : void 0;
  var combineWith = combine.draggableId;
  var center = draggables[combineWith].page.borderBox.center;
  var displaceBy = getCombinedItemDisplacement({
    displaced: impact.displaced,
    afterCritical: afterCritical,
    combineWith: combineWith,
    displacedBy: impact.displacedBy
  });
  return add(center, displaceBy);
});

var distanceFromStartToBorderBoxCenter = function distanceFromStartToBorderBoxCenter(axis, box) {
  return box.margin[axis.start] + box.borderBox[axis.size] / 2;
};

var distanceFromEndToBorderBoxCenter = function distanceFromEndToBorderBoxCenter(axis, box) {
  return box.margin[axis.end] + box.borderBox[axis.size] / 2;
};

var getCrossAxisBorderBoxCenter = function getCrossAxisBorderBoxCenter(axis, target, isMoving) {
  return target[axis.crossAxisStart] + isMoving.margin[axis.crossAxisStart] + isMoving.borderBox[axis.crossAxisSize] / 2;
};

var goAfter = function goAfter(_ref) {
  var axis = _ref.axis,
      moveRelativeTo = _ref.moveRelativeTo,
      isMoving = _ref.isMoving;
  return patch(axis.line, moveRelativeTo.marginBox[axis.end] + distanceFromStartToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveRelativeTo.marginBox, isMoving));
};
var goBefore = function goBefore(_ref2) {
  var axis = _ref2.axis,
      moveRelativeTo = _ref2.moveRelativeTo,
      isMoving = _ref2.isMoving;
  return patch(axis.line, moveRelativeTo.marginBox[axis.start] - distanceFromEndToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveRelativeTo.marginBox, isMoving));
};
var goIntoStart = function goIntoStart(_ref3) {
  var axis = _ref3.axis,
      moveInto = _ref3.moveInto,
      isMoving = _ref3.isMoving;
  return patch(axis.line, moveInto.contentBox[axis.start] + distanceFromStartToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveInto.contentBox, isMoving));
};

var whenReordering = (function (_ref) {
  var impact = _ref.impact,
      draggable = _ref.draggable,
      draggables = _ref.draggables,
      droppable = _ref.droppable,
      afterCritical = _ref.afterCritical;
  var insideDestination = getDraggablesInsideDroppable(droppable.descriptor.id, draggables);
  var draggablePage = draggable.page;
  var axis = droppable.axis;

  if (!insideDestination.length) {
    return goIntoStart({
      axis: axis,
      moveInto: droppable.page,
      isMoving: draggablePage
    });
  }

  var displaced = impact.displaced,
      displacedBy = impact.displacedBy;
  var closestAfter = displaced.all[0];

  if (closestAfter) {
    var closest = draggables[closestAfter];

    if (didStartAfterCritical(closestAfter, afterCritical)) {
      return goBefore({
        axis: axis,
        moveRelativeTo: closest.page,
        isMoving: draggablePage
      });
    }

    var withDisplacement = offset(closest.page, displacedBy.point);
    return goBefore({
      axis: axis,
      moveRelativeTo: withDisplacement,
      isMoving: draggablePage
    });
  }

  var last = insideDestination[insideDestination.length - 1];

  if (last.descriptor.id === draggable.descriptor.id) {
    return draggablePage.borderBox.center;
  }

  if (didStartAfterCritical(last.descriptor.id, afterCritical)) {
    var page = offset(last.page, negate(afterCritical.displacedBy.point));
    return goAfter({
      axis: axis,
      moveRelativeTo: page,
      isMoving: draggablePage
    });
  }

  return goAfter({
    axis: axis,
    moveRelativeTo: last.page,
    isMoving: draggablePage
  });
});

var withDroppableDisplacement = (function (droppable, point) {
  var frame = droppable.frame;

  if (!frame) {
    return point;
  }

  return add(point, frame.scroll.diff.displacement);
});

var getResultWithoutDroppableDisplacement = function getResultWithoutDroppableDisplacement(_ref) {
  var impact = _ref.impact,
      draggable = _ref.draggable,
      droppable = _ref.droppable,
      draggables = _ref.draggables,
      afterCritical = _ref.afterCritical;
  var original = draggable.page.borderBox.center;
  var at = impact.at;

  if (!droppable) {
    return original;
  }

  if (!at) {
    return original;
  }

  if (at.type === 'REORDER') {
    return whenReordering({
      impact: impact,
      draggable: draggable,
      draggables: draggables,
      droppable: droppable,
      afterCritical: afterCritical
    });
  }

  return whenCombining({
    impact: impact,
    draggables: draggables,
    afterCritical: afterCritical
  });
};

var getPageBorderBoxCenterFromImpact = (function (args) {
  var withoutDisplacement = getResultWithoutDroppableDisplacement(args);
  var droppable = args.droppable;
  var withDisplacement = droppable ? withDroppableDisplacement(droppable, withoutDisplacement) : withoutDisplacement;
  return withDisplacement;
});

var scrollViewport = (function (viewport, newScroll) {
  var diff = subtract(newScroll, viewport.scroll.initial);
  var displacement = negate(diff);
  var frame = getRect({
    top: newScroll.y,
    bottom: newScroll.y + viewport.frame.height,
    left: newScroll.x,
    right: newScroll.x + viewport.frame.width
  });
  var updated = {
    frame: frame,
    scroll: {
      initial: viewport.scroll.initial,
      max: viewport.scroll.max,
      current: newScroll,
      diff: {
        value: diff,
        displacement: displacement
      }
    }
  };
  return updated;
});

function getDraggables(ids, draggables) {
  return ids.map(function (id) {
    return draggables[id];
  });
}

function tryGetVisible(id, groups) {
  for (var i = 0; i < groups.length; i++) {
    var displacement = groups[i].visible[id];

    if (displacement) {
      return displacement;
    }
  }

  return null;
}

var speculativelyIncrease = (function (_ref) {
  var impact = _ref.impact,
      viewport = _ref.viewport,
      destination = _ref.destination,
      draggables = _ref.draggables,
      maxScrollChange = _ref.maxScrollChange;
  var scrolledViewport = scrollViewport(viewport, add(viewport.scroll.current, maxScrollChange));
  var scrolledDroppable = destination.frame ? scrollDroppable(destination, add(destination.frame.scroll.current, maxScrollChange)) : destination;
  var last = impact.displaced;
  var withViewportScroll = getDisplacementGroups({
    afterDragging: getDraggables(last.all, draggables),
    destination: destination,
    displacedBy: impact.displacedBy,
    viewport: scrolledViewport.frame,
    last: last,
    forceShouldAnimate: false
  });
  var withDroppableScroll = getDisplacementGroups({
    afterDragging: getDraggables(last.all, draggables),
    destination: scrolledDroppable,
    displacedBy: impact.displacedBy,
    viewport: viewport.frame,
    last: last,
    forceShouldAnimate: false
  });
  var invisible = {};
  var visible = {};
  var groups = [last, withViewportScroll, withDroppableScroll];
  last.all.forEach(function (id) {
    var displacement = tryGetVisible(id, groups);

    if (displacement) {
      visible[id] = displacement;
      return;
    }

    invisible[id] = true;
  });

  var newImpact = _extends({}, impact, {
    displaced: {
      all: last.all,
      invisible: invisible,
      visible: visible
    }
  });

  return newImpact;
});

var withViewportDisplacement = (function (viewport, point) {
  return add(viewport.scroll.diff.displacement, point);
});

var getClientFromPageBorderBoxCenter = (function (_ref) {
  var pageBorderBoxCenter = _ref.pageBorderBoxCenter,
      draggable = _ref.draggable,
      viewport = _ref.viewport;
  var withoutPageScrollChange = withViewportDisplacement(viewport, pageBorderBoxCenter);
  var offset = subtract(withoutPageScrollChange, draggable.page.borderBox.center);
  return add(draggable.client.borderBox.center, offset);
});

var isTotallyVisibleInNewLocation = (function (_ref) {
  var draggable = _ref.draggable,
      destination = _ref.destination,
      newPageBorderBoxCenter = _ref.newPageBorderBoxCenter,
      viewport = _ref.viewport,
      withDroppableDisplacement = _ref.withDroppableDisplacement,
      _ref$onlyOnMainAxis = _ref.onlyOnMainAxis,
      onlyOnMainAxis = _ref$onlyOnMainAxis === void 0 ? false : _ref$onlyOnMainAxis;
  var changeNeeded = subtract(newPageBorderBoxCenter, draggable.page.borderBox.center);
  var shifted = offsetByPosition(draggable.page.borderBox, changeNeeded);
  var args = {
    target: shifted,
    destination: destination,
    withDroppableDisplacement: withDroppableDisplacement,
    viewport: viewport
  };
  return onlyOnMainAxis ? isTotallyVisibleOnAxis(args) : isTotallyVisible(args);
});

var moveToNextPlace = (function (_ref) {
  var isMovingForward = _ref.isMovingForward,
      draggable = _ref.draggable,
      destination = _ref.destination,
      draggables = _ref.draggables,
      previousImpact = _ref.previousImpact,
      viewport = _ref.viewport,
      previousPageBorderBoxCenter = _ref.previousPageBorderBoxCenter,
      previousClientSelection = _ref.previousClientSelection,
      afterCritical = _ref.afterCritical;

  if (!destination.isEnabled) {
    return null;
  }

  var insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);
  var isInHomeList = isHomeOf(draggable, destination);
  var impact = moveToNextCombine({
    isMovingForward: isMovingForward,
    draggable: draggable,
    destination: destination,
    insideDestination: insideDestination,
    previousImpact: previousImpact
  }) || moveToNextIndex({
    isMovingForward: isMovingForward,
    isInHomeList: isInHomeList,
    draggable: draggable,
    draggables: draggables,
    destination: destination,
    insideDestination: insideDestination,
    previousImpact: previousImpact,
    viewport: viewport,
    afterCritical: afterCritical
  });

  if (!impact) {
    return null;
  }

  var pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({
    impact: impact,
    draggable: draggable,
    droppable: destination,
    draggables: draggables,
    afterCritical: afterCritical
  });
  var isVisibleInNewLocation = isTotallyVisibleInNewLocation({
    draggable: draggable,
    destination: destination,
    newPageBorderBoxCenter: pageBorderBoxCenter,
    viewport: viewport.frame,
    withDroppableDisplacement: false,
    onlyOnMainAxis: true
  });

  if (isVisibleInNewLocation) {
    var clientSelection = getClientFromPageBorderBoxCenter({
      pageBorderBoxCenter: pageBorderBoxCenter,
      draggable: draggable,
      viewport: viewport
    });
    return {
      clientSelection: clientSelection,
      impact: impact,
      scrollJumpRequest: null
    };
  }

  var distance = subtract(pageBorderBoxCenter, previousPageBorderBoxCenter);
  var cautious = speculativelyIncrease({
    impact: impact,
    viewport: viewport,
    destination: destination,
    draggables: draggables,
    maxScrollChange: distance
  });
  return {
    clientSelection: previousClientSelection,
    impact: cautious,
    scrollJumpRequest: distance
  };
});

var getKnownActive = function getKnownActive(droppable) {
  var rect = droppable.subject.active;
  !rect ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot get clipped area from droppable') : invariant(false) : void 0;
  return rect;
};

var getBestCrossAxisDroppable = (function (_ref) {
  var isMovingForward = _ref.isMovingForward,
      pageBorderBoxCenter = _ref.pageBorderBoxCenter,
      source = _ref.source,
      droppables = _ref.droppables,
      viewport = _ref.viewport;
  var active = source.subject.active;

  if (!active) {
    return null;
  }

  var axis = source.axis;
  var isBetweenSourceClipped = isWithin(active[axis.start], active[axis.end]);
  var candidates = toDroppableList(droppables).filter(function (droppable) {
    return droppable !== source;
  }).filter(function (droppable) {
    return droppable.isEnabled;
  }).filter(function (droppable) {
    return Boolean(droppable.subject.active);
  }).filter(function (droppable) {
    return isPartiallyVisibleThroughFrame(viewport.frame)(getKnownActive(droppable));
  }).filter(function (droppable) {
    var activeOfTarget = getKnownActive(droppable);

    if (isMovingForward) {
      return active[axis.crossAxisEnd] < activeOfTarget[axis.crossAxisEnd];
    }

    return activeOfTarget[axis.crossAxisStart] < active[axis.crossAxisStart];
  }).filter(function (droppable) {
    var activeOfTarget = getKnownActive(droppable);
    var isBetweenDestinationClipped = isWithin(activeOfTarget[axis.start], activeOfTarget[axis.end]);
    return isBetweenSourceClipped(activeOfTarget[axis.start]) || isBetweenSourceClipped(activeOfTarget[axis.end]) || isBetweenDestinationClipped(active[axis.start]) || isBetweenDestinationClipped(active[axis.end]);
  }).sort(function (a, b) {
    var first = getKnownActive(a)[axis.crossAxisStart];
    var second = getKnownActive(b)[axis.crossAxisStart];

    if (isMovingForward) {
      return first - second;
    }

    return second - first;
  }).filter(function (droppable, index, array) {
    return getKnownActive(droppable)[axis.crossAxisStart] === getKnownActive(array[0])[axis.crossAxisStart];
  });

  if (!candidates.length) {
    return null;
  }

  if (candidates.length === 1) {
    return candidates[0];
  }

  var contains = candidates.filter(function (droppable) {
    var isWithinDroppable = isWithin(getKnownActive(droppable)[axis.start], getKnownActive(droppable)[axis.end]);
    return isWithinDroppable(pageBorderBoxCenter[axis.line]);
  });

  if (contains.length === 1) {
    return contains[0];
  }

  if (contains.length > 1) {
    return contains.sort(function (a, b) {
      return getKnownActive(a)[axis.start] - getKnownActive(b)[axis.start];
    })[0];
  }

  return candidates.sort(function (a, b) {
    var first = closest(pageBorderBoxCenter, getCorners(getKnownActive(a)));
    var second = closest(pageBorderBoxCenter, getCorners(getKnownActive(b)));

    if (first !== second) {
      return first - second;
    }

    return getKnownActive(a)[axis.start] - getKnownActive(b)[axis.start];
  })[0];
});

var getCurrentPageBorderBoxCenter = function getCurrentPageBorderBoxCenter(draggable, afterCritical) {
  var original = draggable.page.borderBox.center;
  return didStartAfterCritical(draggable.descriptor.id, afterCritical) ? subtract(original, afterCritical.displacedBy.point) : original;
};
var getCurrentPageBorderBox = function getCurrentPageBorderBox(draggable, afterCritical) {
  var original = draggable.page.borderBox;
  return didStartAfterCritical(draggable.descriptor.id, afterCritical) ? offsetByPosition(original, negate(afterCritical.displacedBy.point)) : original;
};

var getClosestDraggable = (function (_ref) {
  var pageBorderBoxCenter = _ref.pageBorderBoxCenter,
      viewport = _ref.viewport,
      destination = _ref.destination,
      insideDestination = _ref.insideDestination,
      afterCritical = _ref.afterCritical;
  var sorted = insideDestination.filter(function (draggable) {
    return isTotallyVisible({
      target: getCurrentPageBorderBox(draggable, afterCritical),
      destination: destination,
      viewport: viewport.frame,
      withDroppableDisplacement: true
    });
  }).sort(function (a, b) {
    var distanceToA = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, getCurrentPageBorderBoxCenter(a, afterCritical)));
    var distanceToB = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, getCurrentPageBorderBoxCenter(b, afterCritical)));

    if (distanceToA < distanceToB) {
      return -1;
    }

    if (distanceToB < distanceToA) {
      return 1;
    }

    return a.descriptor.index - b.descriptor.index;
  });
  return sorted[0] || null;
});

var getDisplacedBy = memoizeOne(function getDisplacedBy(axis, displaceBy) {
  var displacement = displaceBy[axis.line];
  return {
    value: displacement,
    point: patch(axis.line, displacement)
  };
});

var getRequiredGrowthForPlaceholder = function getRequiredGrowthForPlaceholder(droppable, placeholderSize, draggables) {
  var axis = droppable.axis;

  if (droppable.descriptor.mode === 'virtual') {
    return patch(axis.line, placeholderSize[axis.line]);
  }

  var availableSpace = droppable.subject.page.contentBox[axis.size];
  var insideDroppable = getDraggablesInsideDroppable(droppable.descriptor.id, draggables);
  var spaceUsed = insideDroppable.reduce(function (sum, dimension) {
    return sum + dimension.client.marginBox[axis.size];
  }, 0);
  var requiredSpace = spaceUsed + placeholderSize[axis.line];
  var needsToGrowBy = requiredSpace - availableSpace;

  if (needsToGrowBy <= 0) {
    return null;
  }

  return patch(axis.line, needsToGrowBy);
};

var withMaxScroll = function withMaxScroll(frame, max) {
  return _extends({}, frame, {
    scroll: _extends({}, frame.scroll, {
      max: max
    })
  });
};

var addPlaceholder = function addPlaceholder(droppable, draggable, draggables) {
  var frame = droppable.frame;
  !!isHomeOf(draggable, droppable) ? process.env.NODE_ENV !== "production" ? invariant(false, 'Should not add placeholder space to home list') : invariant(false) : void 0;
  !!droppable.subject.withPlaceholder ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot add placeholder size to a subject when it already has one') : invariant(false) : void 0;
  var placeholderSize = getDisplacedBy(droppable.axis, draggable.displaceBy).point;
  var requiredGrowth = getRequiredGrowthForPlaceholder(droppable, placeholderSize, draggables);
  var added = {
    placeholderSize: placeholderSize,
    increasedBy: requiredGrowth,
    oldFrameMaxScroll: droppable.frame ? droppable.frame.scroll.max : null
  };

  if (!frame) {
    var _subject = getSubject({
      page: droppable.subject.page,
      withPlaceholder: added,
      axis: droppable.axis,
      frame: droppable.frame
    });

    return _extends({}, droppable, {
      subject: _subject
    });
  }

  var maxScroll = requiredGrowth ? add(frame.scroll.max, requiredGrowth) : frame.scroll.max;
  var newFrame = withMaxScroll(frame, maxScroll);
  var subject = getSubject({
    page: droppable.subject.page,
    withPlaceholder: added,
    axis: droppable.axis,
    frame: newFrame
  });
  return _extends({}, droppable, {
    subject: subject,
    frame: newFrame
  });
};
var removePlaceholder = function removePlaceholder(droppable) {
  var added = droppable.subject.withPlaceholder;
  !added ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot remove placeholder form subject when there was none') : invariant(false) : void 0;
  var frame = droppable.frame;

  if (!frame) {
    var _subject2 = getSubject({
      page: droppable.subject.page,
      axis: droppable.axis,
      frame: null,
      withPlaceholder: null
    });

    return _extends({}, droppable, {
      subject: _subject2
    });
  }

  var oldMaxScroll = added.oldFrameMaxScroll;
  !oldMaxScroll ? process.env.NODE_ENV !== "production" ? invariant(false, 'Expected droppable with frame to have old max frame scroll when removing placeholder') : invariant(false) : void 0;
  var newFrame = withMaxScroll(frame, oldMaxScroll);
  var subject = getSubject({
    page: droppable.subject.page,
    axis: droppable.axis,
    frame: newFrame,
    withPlaceholder: null
  });
  return _extends({}, droppable, {
    subject: subject,
    frame: newFrame
  });
};

var moveToNewDroppable = (function (_ref) {
  var previousPageBorderBoxCenter = _ref.previousPageBorderBoxCenter,
      moveRelativeTo = _ref.moveRelativeTo,
      insideDestination = _ref.insideDestination,
      draggable = _ref.draggable,
      draggables = _ref.draggables,
      destination = _ref.destination,
      viewport = _ref.viewport,
      afterCritical = _ref.afterCritical;

  if (!moveRelativeTo) {
    if (insideDestination.length) {
      return null;
    }

    var proposed = {
      displaced: emptyGroups,
      displacedBy: noDisplacedBy,
      at: {
        type: 'REORDER',
        destination: {
          droppableId: destination.descriptor.id,
          index: 0
        }
      }
    };
    var proposedPageBorderBoxCenter = getPageBorderBoxCenterFromImpact({
      impact: proposed,
      draggable: draggable,
      droppable: destination,
      draggables: draggables,
      afterCritical: afterCritical
    });
    var withPlaceholder = isHomeOf(draggable, destination) ? destination : addPlaceholder(destination, draggable, draggables);
    var isVisibleInNewLocation = isTotallyVisibleInNewLocation({
      draggable: draggable,
      destination: withPlaceholder,
      newPageBorderBoxCenter: proposedPageBorderBoxCenter,
      viewport: viewport.frame,
      withDroppableDisplacement: false,
      onlyOnMainAxis: true
    });
    return isVisibleInNewLocation ? proposed : null;
  }

  var isGoingBeforeTarget = Boolean(previousPageBorderBoxCenter[destination.axis.line] <= moveRelativeTo.page.borderBox.center[destination.axis.line]);

  var proposedIndex = function () {
    var relativeTo = moveRelativeTo.descriptor.index;

    if (moveRelativeTo.descriptor.id === draggable.descriptor.id) {
      return relativeTo;
    }

    if (isGoingBeforeTarget) {
      return relativeTo;
    }

    return relativeTo + 1;
  }();

  var displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);
  return calculateReorderImpact({
    draggable: draggable,
    insideDestination: insideDestination,
    destination: destination,
    viewport: viewport,
    displacedBy: displacedBy,
    last: emptyGroups,
    index: proposedIndex
  });
});

var moveCrossAxis = (function (_ref) {
  var isMovingForward = _ref.isMovingForward,
      previousPageBorderBoxCenter = _ref.previousPageBorderBoxCenter,
      draggable = _ref.draggable,
      isOver = _ref.isOver,
      draggables = _ref.draggables,
      droppables = _ref.droppables,
      viewport = _ref.viewport,
      afterCritical = _ref.afterCritical;
  var destination = getBestCrossAxisDroppable({
    isMovingForward: isMovingForward,
    pageBorderBoxCenter: previousPageBorderBoxCenter,
    source: isOver,
    droppables: droppables,
    viewport: viewport
  });

  if (!destination) {
    return null;
  }

  var insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);
  var moveRelativeTo = getClosestDraggable({
    pageBorderBoxCenter: previousPageBorderBoxCenter,
    viewport: viewport,
    destination: destination,
    insideDestination: insideDestination,
    afterCritical: afterCritical
  });
  var impact = moveToNewDroppable({
    previousPageBorderBoxCenter: previousPageBorderBoxCenter,
    destination: destination,
    draggable: draggable,
    draggables: draggables,
    moveRelativeTo: moveRelativeTo,
    insideDestination: insideDestination,
    viewport: viewport,
    afterCritical: afterCritical
  });

  if (!impact) {
    return null;
  }

  var pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({
    impact: impact,
    draggable: draggable,
    droppable: destination,
    draggables: draggables,
    afterCritical: afterCritical
  });
  var clientSelection = getClientFromPageBorderBoxCenter({
    pageBorderBoxCenter: pageBorderBoxCenter,
    draggable: draggable,
    viewport: viewport
  });
  return {
    clientSelection: clientSelection,
    impact: impact,
    scrollJumpRequest: null
  };
});

var whatIsDraggedOver = (function (impact) {
  var at = impact.at;

  if (!at) {
    return null;
  }

  if (at.type === 'REORDER') {
    return at.destination.droppableId;
  }

  return at.combine.droppableId;
});

var getDroppableOver = function getDroppableOver(impact, droppables) {
  var id = whatIsDraggedOver(impact);
  return id ? droppables[id] : null;
};

var moveInDirection = (function (_ref) {
  var state = _ref.state,
      type = _ref.type;
  var isActuallyOver = getDroppableOver(state.impact, state.dimensions.droppables);
  var isMainAxisMovementAllowed = Boolean(isActuallyOver);
  var home = state.dimensions.droppables[state.critical.droppable.id];
  var isOver = isActuallyOver || home;
  var direction = isOver.axis.direction;
  var isMovingOnMainAxis = direction === 'vertical' && (type === 'MOVE_UP' || type === 'MOVE_DOWN') || direction === 'horizontal' && (type === 'MOVE_LEFT' || type === 'MOVE_RIGHT');

  if (isMovingOnMainAxis && !isMainAxisMovementAllowed) {
    return null;
  }

  var isMovingForward = type === 'MOVE_DOWN' || type === 'MOVE_RIGHT';
  var draggable = state.dimensions.draggables[state.critical.draggable.id];
  var previousPageBorderBoxCenter = state.current.page.borderBoxCenter;
  var _state$dimensions = state.dimensions,
      draggables = _state$dimensions.draggables,
      droppables = _state$dimensions.droppables;
  return isMovingOnMainAxis ? moveToNextPlace({
    isMovingForward: isMovingForward,
    previousPageBorderBoxCenter: previousPageBorderBoxCenter,
    draggable: draggable,
    destination: isOver,
    draggables: draggables,
    viewport: state.viewport,
    previousClientSelection: state.current.client.selection,
    previousImpact: state.impact,
    afterCritical: state.afterCritical
  }) : moveCrossAxis({
    isMovingForward: isMovingForward,
    previousPageBorderBoxCenter: previousPageBorderBoxCenter,
    draggable: draggable,
    isOver: isOver,
    draggables: draggables,
    droppables: droppables,
    viewport: state.viewport,
    afterCritical: state.afterCritical
  });
});

function isMovementAllowed(state) {
  return state.phase === 'DRAGGING' || state.phase === 'COLLECTING';
}

function isPositionInFrame(frame) {
  var isWithinVertical = isWithin(frame.top, frame.bottom);
  var isWithinHorizontal = isWithin(frame.left, frame.right);
  return function run(point) {
    return isWithinVertical(point.y) && isWithinHorizontal(point.x);
  };
}

function getHasOverlap(first, second) {
  return first.left < second.right && first.right > second.left && first.top < second.bottom && first.bottom > second.top;
}

function getFurthestAway(_ref) {
  var pageBorderBox = _ref.pageBorderBox,
      draggable = _ref.draggable,
      candidates = _ref.candidates;
  var startCenter = draggable.page.borderBox.center;
  var sorted = candidates.map(function (candidate) {
    var axis = candidate.axis;
    var target = patch(candidate.axis.line, pageBorderBox.center[axis.line], candidate.page.borderBox.center[axis.crossAxisLine]);
    return {
      id: candidate.descriptor.id,
      distance: distance(startCenter, target)
    };
  }).sort(function (a, b) {
    return b.distance - a.distance;
  });
  return sorted[0] ? sorted[0].id : null;
}

function getDroppableOver$1(_ref2) {
  var pageBorderBox = _ref2.pageBorderBox,
      draggable = _ref2.draggable,
      droppables = _ref2.droppables;
  var candidates = toDroppableList(droppables).filter(function (item) {
    if (!item.isEnabled) {
      return false;
    }

    var active = item.subject.active;

    if (!active) {
      return false;
    }

    if (!getHasOverlap(pageBorderBox, active)) {
      return false;
    }

    if (isPositionInFrame(active)(pageBorderBox.center)) {
      return true;
    }

    var axis = item.axis;
    var childCenter = active.center[axis.crossAxisLine];
    var crossAxisStart = pageBorderBox[axis.crossAxisStart];
    var crossAxisEnd = pageBorderBox[axis.crossAxisEnd];
    var isContained = isWithin(active[axis.crossAxisStart], active[axis.crossAxisEnd]);
    var isStartContained = isContained(crossAxisStart);
    var isEndContained = isContained(crossAxisEnd);

    if (!isStartContained && !isEndContained) {
      return true;
    }

    if (isStartContained) {
      return crossAxisStart < childCenter;
    }

    return crossAxisEnd > childCenter;
  });

  if (!candidates.length) {
    return null;
  }

  if (candidates.length === 1) {
    return candidates[0].descriptor.id;
  }

  return getFurthestAway({
    pageBorderBox: pageBorderBox,
    draggable: draggable,
    candidates: candidates
  });
}

var offsetRectByPosition = function offsetRectByPosition(rect, point) {
  return getRect(offsetByPosition(rect, point));
};

var withDroppableScroll = (function (droppable, area) {
  var frame = droppable.frame;

  if (!frame) {
    return area;
  }

  return offsetRectByPosition(area, frame.scroll.diff.value);
});

function getIsDisplaced(_ref) {
  var displaced = _ref.displaced,
      id = _ref.id;
  return Boolean(displaced.visible[id] || displaced.invisible[id]);
}

function atIndex(_ref) {
  var draggable = _ref.draggable,
      closest = _ref.closest,
      inHomeList = _ref.inHomeList;

  if (!closest) {
    return null;
  }

  if (!inHomeList) {
    return closest.descriptor.index;
  }

  if (closest.descriptor.index > draggable.descriptor.index) {
    return closest.descriptor.index - 1;
  }

  return closest.descriptor.index;
}

var getReorderImpact = (function (_ref2) {
  var targetRect = _ref2.pageBorderBoxWithDroppableScroll,
      draggable = _ref2.draggable,
      destination = _ref2.destination,
      insideDestination = _ref2.insideDestination,
      last = _ref2.last,
      viewport = _ref2.viewport,
      afterCritical = _ref2.afterCritical;
  var axis = destination.axis;
  var displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);
  var displacement = displacedBy.value;
  var targetStart = targetRect[axis.start];
  var targetEnd = targetRect[axis.end];
  var withoutDragging = removeDraggableFromList(draggable, insideDestination);
  var closest = find(withoutDragging, function (child) {
    var id = child.descriptor.id;
    var childCenter = child.page.borderBox.center[axis.line];
    var didStartAfterCritical$1 = didStartAfterCritical(id, afterCritical);
    var isDisplaced = getIsDisplaced({
      displaced: last,
      id: id
    });

    if (didStartAfterCritical$1) {
      if (isDisplaced) {
        return targetEnd <= childCenter;
      }

      return targetStart < childCenter - displacement;
    }

    if (isDisplaced) {
      return targetEnd <= childCenter + displacement;
    }

    return targetStart < childCenter;
  });
  var newIndex = atIndex({
    draggable: draggable,
    closest: closest,
    inHomeList: isHomeOf(draggable, destination)
  });
  return calculateReorderImpact({
    draggable: draggable,
    insideDestination: insideDestination,
    destination: destination,
    viewport: viewport,
    last: last,
    displacedBy: displacedBy,
    index: newIndex
  });
});

var combineThresholdDivisor = 4;
var getCombineImpact = (function (_ref) {
  var draggable = _ref.draggable,
      targetRect = _ref.pageBorderBoxWithDroppableScroll,
      previousImpact = _ref.previousImpact,
      destination = _ref.destination,
      insideDestination = _ref.insideDestination,
      afterCritical = _ref.afterCritical;

  if (!destination.isCombineEnabled) {
    return null;
  }

  var axis = destination.axis;
  var displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);
  var displacement = displacedBy.value;
  var targetStart = targetRect[axis.start];
  var targetEnd = targetRect[axis.end];
  var withoutDragging = removeDraggableFromList(draggable, insideDestination);
  var combineWith = find(withoutDragging, function (child) {
    var id = child.descriptor.id;
    var childRect = child.page.borderBox;
    var childSize = childRect[axis.size];
    var threshold = childSize / combineThresholdDivisor;
    var didStartAfterCritical$1 = didStartAfterCritical(id, afterCritical);
    var isDisplaced = getIsDisplaced({
      displaced: previousImpact.displaced,
      id: id
    });

    if (didStartAfterCritical$1) {
      if (isDisplaced) {
        return targetEnd > childRect[axis.start] + threshold && targetEnd < childRect[axis.end] - threshold;
      }

      return targetStart > childRect[axis.start] - displacement + threshold && targetStart < childRect[axis.end] - displacement - threshold;
    }

    if (isDisplaced) {
      return targetEnd > childRect[axis.start] + displacement + threshold && targetEnd < childRect[axis.end] + displacement - threshold;
    }

    return targetStart > childRect[axis.start] + threshold && targetStart < childRect[axis.end] - threshold;
  });

  if (!combineWith) {
    return null;
  }

  var impact = {
    displacedBy: displacedBy,
    displaced: previousImpact.displaced,
    at: {
      type: 'COMBINE',
      combine: {
        draggableId: combineWith.descriptor.id,
        droppableId: destination.descriptor.id
      }
    }
  };
  return impact;
});

var getDragImpact = (function (_ref) {
  var pageOffset = _ref.pageOffset,
      draggable = _ref.draggable,
      draggables = _ref.draggables,
      droppables = _ref.droppables,
      previousImpact = _ref.previousImpact,
      viewport = _ref.viewport,
      afterCritical = _ref.afterCritical;
  var pageBorderBox = offsetRectByPosition(draggable.page.borderBox, pageOffset);
  var destinationId = getDroppableOver$1({
    pageBorderBox: pageBorderBox,
    draggable: draggable,
    droppables: droppables
  });

  if (!destinationId) {
    return noImpact;
  }

  var destination = droppables[destinationId];
  var insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);
  var pageBorderBoxWithDroppableScroll = withDroppableScroll(destination, pageBorderBox);
  return getCombineImpact({
    pageBorderBoxWithDroppableScroll: pageBorderBoxWithDroppableScroll,
    draggable: draggable,
    previousImpact: previousImpact,
    destination: destination,
    insideDestination: insideDestination,
    afterCritical: afterCritical
  }) || getReorderImpact({
    pageBorderBoxWithDroppableScroll: pageBorderBoxWithDroppableScroll,
    draggable: draggable,
    destination: destination,
    insideDestination: insideDestination,
    last: previousImpact.displaced,
    viewport: viewport,
    afterCritical: afterCritical
  });
});

var patchDroppableMap = (function (droppables, updated) {
  var _extends2;

  return _extends({}, droppables, (_extends2 = {}, _extends2[updated.descriptor.id] = updated, _extends2));
});

var clearUnusedPlaceholder = function clearUnusedPlaceholder(_ref) {
  var previousImpact = _ref.previousImpact,
      impact = _ref.impact,
      droppables = _ref.droppables;
  var last = whatIsDraggedOver(previousImpact);
  var now = whatIsDraggedOver(impact);

  if (!last) {
    return droppables;
  }

  if (last === now) {
    return droppables;
  }

  var lastDroppable = droppables[last];

  if (!lastDroppable.subject.withPlaceholder) {
    return droppables;
  }

  var updated = removePlaceholder(lastDroppable);
  return patchDroppableMap(droppables, updated);
};

var recomputePlaceholders = (function (_ref2) {
  var draggable = _ref2.draggable,
      draggables = _ref2.draggables,
      droppables = _ref2.droppables,
      previousImpact = _ref2.previousImpact,
      impact = _ref2.impact;
  var cleaned = clearUnusedPlaceholder({
    previousImpact: previousImpact,
    impact: impact,
    droppables: droppables
  });
  var isOver = whatIsDraggedOver(impact);

  if (!isOver) {
    return cleaned;
  }

  var droppable = droppables[isOver];

  if (isHomeOf(draggable, droppable)) {
    return cleaned;
  }

  if (droppable.subject.withPlaceholder) {
    return cleaned;
  }

  var patched = addPlaceholder(droppable, draggable, draggables);
  return patchDroppableMap(cleaned, patched);
});

var update = (function (_ref) {
  var state = _ref.state,
      forcedClientSelection = _ref.clientSelection,
      forcedDimensions = _ref.dimensions,
      forcedViewport = _ref.viewport,
      forcedImpact = _ref.impact,
      scrollJumpRequest = _ref.scrollJumpRequest;
  var viewport = forcedViewport || state.viewport;
  var dimensions = forcedDimensions || state.dimensions;
  var clientSelection = forcedClientSelection || state.current.client.selection;
  var offset = subtract(clientSelection, state.initial.client.selection);
  var client = {
    offset: offset,
    selection: clientSelection,
    borderBoxCenter: add(state.initial.client.borderBoxCenter, offset)
  };
  var page = {
    selection: add(client.selection, viewport.scroll.current),
    borderBoxCenter: add(client.borderBoxCenter, viewport.scroll.current),
    offset: add(client.offset, viewport.scroll.diff.value)
  };
  var current = {
    client: client,
    page: page
  };

  if (state.phase === 'COLLECTING') {
    return _extends({
      phase: 'COLLECTING'
    }, state, {
      dimensions: dimensions,
      viewport: viewport,
      current: current
    });
  }

  var draggable = dimensions.draggables[state.critical.draggable.id];
  var newImpact = forcedImpact || getDragImpact({
    pageOffset: page.offset,
    draggable: draggable,
    draggables: dimensions.draggables,
    droppables: dimensions.droppables,
    previousImpact: state.impact,
    viewport: viewport,
    afterCritical: state.afterCritical
  });
  var withUpdatedPlaceholders = recomputePlaceholders({
    draggable: draggable,
    impact: newImpact,
    previousImpact: state.impact,
    draggables: dimensions.draggables,
    droppables: dimensions.droppables
  });

  var result = _extends({}, state, {
    current: current,
    dimensions: {
      draggables: dimensions.draggables,
      droppables: withUpdatedPlaceholders
    },
    impact: newImpact,
    viewport: viewport,
    scrollJumpRequest: scrollJumpRequest || null,
    forceShouldAnimate: scrollJumpRequest ? false : null
  });

  return result;
});

function getDraggables$1(ids, draggables) {
  return ids.map(function (id) {
    return draggables[id];
  });
}

var recompute = (function (_ref) {
  var impact = _ref.impact,
      viewport = _ref.viewport,
      draggables = _ref.draggables,
      destination = _ref.destination,
      forceShouldAnimate = _ref.forceShouldAnimate;
  var last = impact.displaced;
  var afterDragging = getDraggables$1(last.all, draggables);
  var displaced = getDisplacementGroups({
    afterDragging: afterDragging,
    destination: destination,
    displacedBy: impact.displacedBy,
    viewport: viewport.frame,
    forceShouldAnimate: forceShouldAnimate,
    last: last
  });
  return _extends({}, impact, {
    displaced: displaced
  });
});

var getClientBorderBoxCenter = (function (_ref) {
  var impact = _ref.impact,
      draggable = _ref.draggable,
      droppable = _ref.droppable,
      draggables = _ref.draggables,
      viewport = _ref.viewport,
      afterCritical = _ref.afterCritical;
  var pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({
    impact: impact,
    draggable: draggable,
    draggables: draggables,
    droppable: droppable,
    afterCritical: afterCritical
  });
  return getClientFromPageBorderBoxCenter({
    pageBorderBoxCenter: pageBorderBoxCenter,
    draggable: draggable,
    viewport: viewport
  });
});

var refreshSnap = (function (_ref) {
  var state = _ref.state,
      forcedDimensions = _ref.dimensions,
      forcedViewport = _ref.viewport;
  !(state.movementMode === 'SNAP') ? process.env.NODE_ENV !== "production" ? invariant(false) : invariant(false) : void 0;
  var needsVisibilityCheck = state.impact;
  var viewport = forcedViewport || state.viewport;
  var dimensions = forcedDimensions || state.dimensions;
  var draggables = dimensions.draggables,
      droppables = dimensions.droppables;
  var draggable = draggables[state.critical.draggable.id];
  var isOver = whatIsDraggedOver(needsVisibilityCheck);
  !isOver ? process.env.NODE_ENV !== "production" ? invariant(false, 'Must be over a destination in SNAP movement mode') : invariant(false) : void 0;
  var destination = droppables[isOver];
  var impact = recompute({
    impact: needsVisibilityCheck,
    viewport: viewport,
    destination: destination,
    draggables: draggables
  });
  var clientSelection = getClientBorderBoxCenter({
    impact: impact,
    draggable: draggable,
    droppable: destination,
    draggables: draggables,
    viewport: viewport,
    afterCritical: state.afterCritical
  });
  return update({
    impact: impact,
    clientSelection: clientSelection,
    state: state,
    dimensions: dimensions,
    viewport: viewport
  });
});

var getHomeLocation = (function (descriptor) {
  return {
    index: descriptor.index,
    droppableId: descriptor.droppableId
  };
});

var getLiftEffect = (function (_ref) {
  var draggable = _ref.draggable,
      home = _ref.home,
      draggables = _ref.draggables,
      viewport = _ref.viewport;
  var displacedBy = getDisplacedBy(home.axis, draggable.displaceBy);
  var insideHome = getDraggablesInsideDroppable(home.descriptor.id, draggables);
  var rawIndex = insideHome.indexOf(draggable);
  !(rawIndex !== -1) ? process.env.NODE_ENV !== "production" ? invariant(false, 'Expected draggable to be inside home list') : invariant(false) : void 0;
  var afterDragging = insideHome.slice(rawIndex + 1);
  var effected = afterDragging.reduce(function (previous, item) {
    previous[item.descriptor.id] = true;
    return previous;
  }, {});
  var afterCritical = {
    inVirtualList: home.descriptor.mode === 'virtual',
    displacedBy: displacedBy,
    effected: effected
  };
  var displaced = getDisplacementGroups({
    afterDragging: afterDragging,
    destination: home,
    displacedBy: displacedBy,
    last: null,
    viewport: viewport.frame,
    forceShouldAnimate: false
  });
  var impact = {
    displaced: displaced,
    displacedBy: displacedBy,
    at: {
      type: 'REORDER',
      destination: getHomeLocation(draggable.descriptor)
    }
  };
  return {
    impact: impact,
    afterCritical: afterCritical
  };
});

var patchDimensionMap = (function (dimensions, updated) {
  return {
    draggables: dimensions.draggables,
    droppables: patchDroppableMap(dimensions.droppables, updated)
  };
});

var start = function start(key) {
  if (process.env.NODE_ENV !== 'production') {
    {
      return;
    }
  }
};
var finish = function finish(key) {
  if (process.env.NODE_ENV !== 'production') {
    {
      return;
    }
  }
};

var offsetDraggable = (function (_ref) {
  var draggable = _ref.draggable,
      offset$1 = _ref.offset,
      initialWindowScroll = _ref.initialWindowScroll;
  var client = offset(draggable.client, offset$1);
  var page = withScroll(client, initialWindowScroll);

  var moved = _extends({}, draggable, {
    placeholder: _extends({}, draggable.placeholder, {
      client: client
    }),
    client: client,
    page: page
  });

  return moved;
});

var getFrame = (function (droppable) {
  var frame = droppable.frame;
  !frame ? process.env.NODE_ENV !== "production" ? invariant(false, 'Expected Droppable to have a frame') : invariant(false) : void 0;
  return frame;
});

var adjustAdditionsForScrollChanges = (function (_ref) {
  var additions = _ref.additions,
      updatedDroppables = _ref.updatedDroppables,
      viewport = _ref.viewport;
  var windowScrollChange = viewport.scroll.diff.value;
  return additions.map(function (draggable) {
    var droppableId = draggable.descriptor.droppableId;
    var modified = updatedDroppables[droppableId];
    var frame = getFrame(modified);
    var droppableScrollChange = frame.scroll.diff.value;
    var totalChange = add(windowScrollChange, droppableScrollChange);
    var moved = offsetDraggable({
      draggable: draggable,
      offset: totalChange,
      initialWindowScroll: viewport.scroll.initial
    });
    return moved;
  });
});

var publishWhileDraggingInVirtual = (function (_ref) {
  var state = _ref.state,
      published = _ref.published;
  start();
  var withScrollChange = published.modified.map(function (update) {
    var existing = state.dimensions.droppables[update.droppableId];
    var scrolled = scrollDroppable(existing, update.scroll);
    return scrolled;
  });

  var droppables = _extends({}, state.dimensions.droppables, {}, toDroppableMap(withScrollChange));

  var updatedAdditions = toDraggableMap(adjustAdditionsForScrollChanges({
    additions: published.additions,
    updatedDroppables: droppables,
    viewport: state.viewport
  }));

  var draggables = _extends({}, state.dimensions.draggables, {}, updatedAdditions);

  published.removals.forEach(function (id) {
    delete draggables[id];
  });
  var dimensions = {
    droppables: droppables,
    draggables: draggables
  };
  var wasOverId = whatIsDraggedOver(state.impact);
  var wasOver = wasOverId ? dimensions.droppables[wasOverId] : null;
  var draggable = dimensions.draggables[state.critical.draggable.id];
  var home = dimensions.droppables[state.critical.droppable.id];

  var _getLiftEffect = getLiftEffect({
    draggable: draggable,
    home: home,
    draggables: draggables,
    viewport: state.viewport
  }),
      onLiftImpact = _getLiftEffect.impact,
      afterCritical = _getLiftEffect.afterCritical;

  var previousImpact = wasOver && wasOver.isCombineEnabled ? state.impact : onLiftImpact;
  var impact = getDragImpact({
    pageOffset: state.current.page.offset,
    draggable: dimensions.draggables[state.critical.draggable.id],
    draggables: dimensions.draggables,
    droppables: dimensions.droppables,
    previousImpact: previousImpact,
    viewport: state.viewport,
    afterCritical: afterCritical
  });
  finish();

  var draggingState = _extends({
    phase: 'DRAGGING'
  }, state, {
    phase: 'DRAGGING',
    impact: impact,
    onLiftImpact: onLiftImpact,
    dimensions: dimensions,
    afterCritical: afterCritical,
    forceShouldAnimate: false
  });

  if (state.phase === 'COLLECTING') {
    return draggingState;
  }

  var dropPending = _extends({
    phase: 'DROP_PENDING'
  }, draggingState, {
    phase: 'DROP_PENDING',
    reason: state.reason,
    isWaiting: false
  });

  return dropPending;
});

var isSnapping = function isSnapping(state) {
  return state.movementMode === 'SNAP';
};

var postDroppableChange = function postDroppableChange(state, updated, isEnabledChanging) {
  var dimensions = patchDimensionMap(state.dimensions, updated);

  if (!isSnapping(state) || isEnabledChanging) {
    return update({
      state: state,
      dimensions: dimensions
    });
  }

  return refreshSnap({
    state: state,
    dimensions: dimensions
  });
};

function removeScrollJumpRequest(state) {
  if (state.isDragging && state.movementMode === 'SNAP') {
    return _extends({
      phase: 'DRAGGING'
    }, state, {
      scrollJumpRequest: null
    });
  }

  return state;
}

var idle = {
  phase: 'IDLE',
  completed: null,
  shouldFlush: false
};
var reducer = (function (state, action) {
  if (state === void 0) {
    state = idle;
  }

  if (action.type === 'FLUSH') {
    return _extends({}, idle, {
      shouldFlush: true
    });
  }

  if (action.type === 'INITIAL_PUBLISH') {
    !(state.phase === 'IDLE') ? process.env.NODE_ENV !== "production" ? invariant(false, 'INITIAL_PUBLISH must come after a IDLE phase') : invariant(false) : void 0;
    var _action$payload = action.payload,
        critical = _action$payload.critical,
        clientSelection = _action$payload.clientSelection,
        viewport = _action$payload.viewport,
        dimensions = _action$payload.dimensions,
        movementMode = _action$payload.movementMode;
    var draggable = dimensions.draggables[critical.draggable.id];
    var home = dimensions.droppables[critical.droppable.id];
    var client = {
      selection: clientSelection,
      borderBoxCenter: draggable.client.borderBox.center,
      offset: origin
    };
    var initial = {
      client: client,
      page: {
        selection: add(client.selection, viewport.scroll.initial),
        borderBoxCenter: add(client.selection, viewport.scroll.initial),
        offset: add(client.selection, viewport.scroll.diff.value)
      }
    };
    var isWindowScrollAllowed = toDroppableList(dimensions.droppables).every(function (item) {
      return !item.isFixedOnPage;
    });

    var _getLiftEffect = getLiftEffect({
      draggable: draggable,
      home: home,
      draggables: dimensions.draggables,
      viewport: viewport
    }),
        impact = _getLiftEffect.impact,
        afterCritical = _getLiftEffect.afterCritical;

    var result = {
      phase: 'DRAGGING',
      isDragging: true,
      critical: critical,
      movementMode: movementMode,
      dimensions: dimensions,
      initial: initial,
      current: initial,
      isWindowScrollAllowed: isWindowScrollAllowed,
      impact: impact,
      afterCritical: afterCritical,
      onLiftImpact: impact,
      viewport: viewport,
      scrollJumpRequest: null,
      forceShouldAnimate: null
    };
    return result;
  }

  if (action.type === 'COLLECTION_STARTING') {
    if (state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') {
      return state;
    }

    !(state.phase === 'DRAGGING') ? process.env.NODE_ENV !== "production" ? invariant(false, "Collection cannot start from phase " + state.phase) : invariant(false) : void 0;

    var _result = _extends({
      phase: 'COLLECTING'
    }, state, {
      phase: 'COLLECTING'
    });

    return _result;
  }

  if (action.type === 'PUBLISH_WHILE_DRAGGING') {
    !(state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') ? process.env.NODE_ENV !== "production" ? invariant(false, "Unexpected " + action.type + " received in phase " + state.phase) : invariant(false) : void 0;
    return publishWhileDraggingInVirtual({
      state: state,
      published: action.payload
    });
  }

  if (action.type === 'MOVE') {
    if (state.phase === 'DROP_PENDING') {
      return state;
    }

    !isMovementAllowed(state) ? process.env.NODE_ENV !== "production" ? invariant(false, action.type + " not permitted in phase " + state.phase) : invariant(false) : void 0;
    var _clientSelection = action.payload.client;

    if (isEqual(_clientSelection, state.current.client.selection)) {
      return state;
    }

    return update({
      state: state,
      clientSelection: _clientSelection,
      impact: isSnapping(state) ? state.impact : null
    });
  }

  if (action.type === 'UPDATE_DROPPABLE_SCROLL') {
    if (state.phase === 'DROP_PENDING') {
      return removeScrollJumpRequest(state);
    }

    if (state.phase === 'COLLECTING') {
      return removeScrollJumpRequest(state);
    }

    !isMovementAllowed(state) ? process.env.NODE_ENV !== "production" ? invariant(false, action.type + " not permitted in phase " + state.phase) : invariant(false) : void 0;
    var _action$payload2 = action.payload,
        id = _action$payload2.id,
        newScroll = _action$payload2.newScroll;
    var target = state.dimensions.droppables[id];

    if (!target) {
      return state;
    }

    var scrolled = scrollDroppable(target, newScroll);
    return postDroppableChange(state, scrolled, false);
  }

  if (action.type === 'UPDATE_DROPPABLE_IS_ENABLED') {
    if (state.phase === 'DROP_PENDING') {
      return state;
    }

    !isMovementAllowed(state) ? process.env.NODE_ENV !== "production" ? invariant(false, "Attempting to move in an unsupported phase " + state.phase) : invariant(false) : void 0;
    var _action$payload3 = action.payload,
        _id = _action$payload3.id,
        isEnabled = _action$payload3.isEnabled;
    var _target = state.dimensions.droppables[_id];
    !_target ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot find Droppable[id: " + _id + "] to toggle its enabled state") : invariant(false) : void 0;
    !(_target.isEnabled !== isEnabled) ? process.env.NODE_ENV !== "production" ? invariant(false, "Trying to set droppable isEnabled to " + String(isEnabled) + "\n      but it is already " + String(_target.isEnabled)) : invariant(false) : void 0;

    var updated = _extends({}, _target, {
      isEnabled: isEnabled
    });

    return postDroppableChange(state, updated, true);
  }

  if (action.type === 'UPDATE_DROPPABLE_IS_COMBINE_ENABLED') {
    if (state.phase === 'DROP_PENDING') {
      return state;
    }

    !isMovementAllowed(state) ? process.env.NODE_ENV !== "production" ? invariant(false, "Attempting to move in an unsupported phase " + state.phase) : invariant(false) : void 0;
    var _action$payload4 = action.payload,
        _id2 = _action$payload4.id,
        isCombineEnabled = _action$payload4.isCombineEnabled;
    var _target2 = state.dimensions.droppables[_id2];
    !_target2 ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot find Droppable[id: " + _id2 + "] to toggle its isCombineEnabled state") : invariant(false) : void 0;
    !(_target2.isCombineEnabled !== isCombineEnabled) ? process.env.NODE_ENV !== "production" ? invariant(false, "Trying to set droppable isCombineEnabled to " + String(isCombineEnabled) + "\n      but it is already " + String(_target2.isCombineEnabled)) : invariant(false) : void 0;

    var _updated = _extends({}, _target2, {
      isCombineEnabled: isCombineEnabled
    });

    return postDroppableChange(state, _updated, true);
  }

  if (action.type === 'MOVE_BY_WINDOW_SCROLL') {
    if (state.phase === 'DROP_PENDING' || state.phase === 'DROP_ANIMATING') {
      return state;
    }

    !isMovementAllowed(state) ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot move by window in phase " + state.phase) : invariant(false) : void 0;
    !state.isWindowScrollAllowed ? process.env.NODE_ENV !== "production" ? invariant(false, 'Window scrolling is currently not supported for fixed lists') : invariant(false) : void 0;
    var _newScroll = action.payload.newScroll;

    if (isEqual(state.viewport.scroll.current, _newScroll)) {
      return removeScrollJumpRequest(state);
    }

    var _viewport = scrollViewport(state.viewport, _newScroll);

    if (isSnapping(state)) {
      return refreshSnap({
        state: state,
        viewport: _viewport
      });
    }

    return update({
      state: state,
      viewport: _viewport
    });
  }

  if (action.type === 'UPDATE_VIEWPORT_MAX_SCROLL') {
    if (!isMovementAllowed(state)) {
      return state;
    }

    var maxScroll = action.payload.maxScroll;

    if (isEqual(maxScroll, state.viewport.scroll.max)) {
      return state;
    }

    var withMaxScroll = _extends({}, state.viewport, {
      scroll: _extends({}, state.viewport.scroll, {
        max: maxScroll
      })
    });

    return _extends({
      phase: 'DRAGGING'
    }, state, {
      viewport: withMaxScroll
    });
  }

  if (action.type === 'MOVE_UP' || action.type === 'MOVE_DOWN' || action.type === 'MOVE_LEFT' || action.type === 'MOVE_RIGHT') {
    if (state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') {
      return state;
    }

    !(state.phase === 'DRAGGING') ? process.env.NODE_ENV !== "production" ? invariant(false, action.type + " received while not in DRAGGING phase") : invariant(false) : void 0;

    var _result2 = moveInDirection({
      state: state,
      type: action.type
    });

    if (!_result2) {
      return state;
    }

    return update({
      state: state,
      impact: _result2.impact,
      clientSelection: _result2.clientSelection,
      scrollJumpRequest: _result2.scrollJumpRequest
    });
  }

  if (action.type === 'DROP_PENDING') {
    var reason = action.payload.reason;
    !(state.phase === 'COLLECTING') ? process.env.NODE_ENV !== "production" ? invariant(false, 'Can only move into the DROP_PENDING phase from the COLLECTING phase') : invariant(false) : void 0;

    var newState = _extends({
      phase: 'DROP_PENDING'
    }, state, {
      phase: 'DROP_PENDING',
      isWaiting: true,
      reason: reason
    });

    return newState;
  }

  if (action.type === 'DROP_ANIMATE') {
    var _action$payload5 = action.payload,
        completed = _action$payload5.completed,
        dropDuration = _action$payload5.dropDuration,
        newHomeClientOffset = _action$payload5.newHomeClientOffset;
    !(state.phase === 'DRAGGING' || state.phase === 'DROP_PENDING') ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot animate drop from phase " + state.phase) : invariant(false) : void 0;
    var _result3 = {
      phase: 'DROP_ANIMATING',
      completed: completed,
      dropDuration: dropDuration,
      newHomeClientOffset: newHomeClientOffset,
      dimensions: state.dimensions
    };
    return _result3;
  }

  if (action.type === 'DROP_COMPLETE') {
    var _completed = action.payload.completed;
    return {
      phase: 'IDLE',
      completed: _completed,
      shouldFlush: false
    };
  }

  return state;
});

var beforeInitialCapture = function beforeInitialCapture(args) {
  return {
    type: 'BEFORE_INITIAL_CAPTURE',
    payload: args
  };
};
var lift = function lift(args) {
  return {
    type: 'LIFT',
    payload: args
  };
};
var initialPublish = function initialPublish(args) {
  return {
    type: 'INITIAL_PUBLISH',
    payload: args
  };
};
var publishWhileDragging = function publishWhileDragging(args) {
  return {
    type: 'PUBLISH_WHILE_DRAGGING',
    payload: args
  };
};
var collectionStarting = function collectionStarting() {
  return {
    type: 'COLLECTION_STARTING',
    payload: null
  };
};
var updateDroppableScroll = function updateDroppableScroll(args) {
  return {
    type: 'UPDATE_DROPPABLE_SCROLL',
    payload: args
  };
};
var updateDroppableIsEnabled = function updateDroppableIsEnabled(args) {
  return {
    type: 'UPDATE_DROPPABLE_IS_ENABLED',
    payload: args
  };
};
var updateDroppableIsCombineEnabled = function updateDroppableIsCombineEnabled(args) {
  return {
    type: 'UPDATE_DROPPABLE_IS_COMBINE_ENABLED',
    payload: args
  };
};
var move = function move(args) {
  return {
    type: 'MOVE',
    payload: args
  };
};
var moveByWindowScroll = function moveByWindowScroll(args) {
  return {
    type: 'MOVE_BY_WINDOW_SCROLL',
    payload: args
  };
};
var updateViewportMaxScroll = function updateViewportMaxScroll(args) {
  return {
    type: 'UPDATE_VIEWPORT_MAX_SCROLL',
    payload: args
  };
};
var moveUp = function moveUp() {
  return {
    type: 'MOVE_UP',
    payload: null
  };
};
var moveDown = function moveDown() {
  return {
    type: 'MOVE_DOWN',
    payload: null
  };
};
var moveRight = function moveRight() {
  return {
    type: 'MOVE_RIGHT',
    payload: null
  };
};
var moveLeft = function moveLeft() {
  return {
    type: 'MOVE_LEFT',
    payload: null
  };
};
var flush = function flush() {
  return {
    type: 'FLUSH',
    payload: null
  };
};
var animateDrop = function animateDrop(args) {
  return {
    type: 'DROP_ANIMATE',
    payload: args
  };
};
var completeDrop = function completeDrop(args) {
  return {
    type: 'DROP_COMPLETE',
    payload: args
  };
};
var drop = function drop(args) {
  return {
    type: 'DROP',
    payload: args
  };
};
var dropPending = function dropPending(args) {
  return {
    type: 'DROP_PENDING',
    payload: args
  };
};
var dropAnimationFinished = function dropAnimationFinished() {
  return {
    type: 'DROP_ANIMATION_FINISHED',
    payload: null
  };
};

function checkIndexes(insideDestination) {
  if (insideDestination.length <= 1) {
    return;
  }

  var indexes = insideDestination.map(function (d) {
    return d.descriptor.index;
  });
  var errors = {};

  for (var i = 1; i < indexes.length; i++) {
    var current = indexes[i];
    var previous = indexes[i - 1];

    if (current !== previous + 1) {
      errors[current] = true;
    }
  }

  if (!Object.keys(errors).length) {
    return;
  }

  var formatted = indexes.map(function (index) {
    var hasError = Boolean(errors[index]);
    return hasError ? "[\uD83D\uDD25" + index + "]" : "" + index;
  }).join(', ');
  process.env.NODE_ENV !== "production" ? warning("\n    Detected non-consecutive <Draggable /> indexes.\n\n    (This can cause unexpected bugs)\n\n    " + formatted + "\n  ") : void 0;
}

function validateDimensions(critical, dimensions) {
  if (process.env.NODE_ENV !== 'production') {
    var insideDestination = getDraggablesInsideDroppable(critical.droppable.id, dimensions.draggables);
    checkIndexes(insideDestination);
  }
}

var lift$1 = (function (marshal) {
  return function (_ref) {
    var getState = _ref.getState,
        dispatch = _ref.dispatch;
    return function (next) {
      return function (action) {
        if (action.type !== 'LIFT') {
          next(action);
          return;
        }

        var _action$payload = action.payload,
            id = _action$payload.id,
            clientSelection = _action$payload.clientSelection,
            movementMode = _action$payload.movementMode;
        var initial = getState();

        if (initial.phase === 'DROP_ANIMATING') {
          dispatch(completeDrop({
            completed: initial.completed
          }));
        }

        !(getState().phase === 'IDLE') ? process.env.NODE_ENV !== "production" ? invariant(false, 'Unexpected phase to start a drag') : invariant(false) : void 0;
        dispatch(flush());
        dispatch(beforeInitialCapture({
          draggableId: id,
          movementMode: movementMode
        }));
        var scrollOptions = {
          shouldPublishImmediately: movementMode === 'SNAP'
        };
        var request = {
          draggableId: id,
          scrollOptions: scrollOptions
        };

        var _marshal$startPublish = marshal.startPublishing(request),
            critical = _marshal$startPublish.critical,
            dimensions = _marshal$startPublish.dimensions,
            viewport = _marshal$startPublish.viewport;

        validateDimensions(critical, dimensions);
        dispatch(initialPublish({
          critical: critical,
          dimensions: dimensions,
          clientSelection: clientSelection,
          movementMode: movementMode,
          viewport: viewport
        }));
      };
    };
  };
});

var style = (function (marshal) {
  return function () {
    return function (next) {
      return function (action) {
        if (action.type === 'INITIAL_PUBLISH') {
          marshal.dragging();
        }

        if (action.type === 'DROP_ANIMATE') {
          marshal.dropping(action.payload.completed.result.reason);
        }

        if (action.type === 'FLUSH' || action.type === 'DROP_COMPLETE') {
          marshal.resting();
        }

        next(action);
      };
    };
  };
});

var curves = {
  outOfTheWay: 'cubic-bezier(0.2, 0, 0, 1)',
  drop: 'cubic-bezier(.2,1,.1,1)'
};
var combine = {
  opacity: {
    drop: 0,
    combining: 0.7
  },
  scale: {
    drop: 0.75
  }
};
var timings = {
  outOfTheWay: 0.2,
  minDropTime: 0.33,
  maxDropTime: 0.55
};
var outOfTheWayTiming = timings.outOfTheWay + "s " + curves.outOfTheWay;
var transitions = {
  fluid: "opacity " + outOfTheWayTiming,
  snap: "transform " + outOfTheWayTiming + ", opacity " + outOfTheWayTiming,
  drop: function drop(duration) {
    var timing = duration + "s " + curves.drop;
    return "transform " + timing + ", opacity " + timing;
  },
  outOfTheWay: "transform " + outOfTheWayTiming,
  placeholder: "height " + outOfTheWayTiming + ", width " + outOfTheWayTiming + ", margin " + outOfTheWayTiming
};

var moveTo = function moveTo(offset) {
  return isEqual(offset, origin) ? null : "translate(" + offset.x + "px, " + offset.y + "px)";
};

var transforms = {
  moveTo: moveTo,
  drop: function drop(offset, isCombining) {
    var translate = moveTo(offset);

    if (!translate) {
      return null;
    }

    if (!isCombining) {
      return translate;
    }

    return translate + " scale(" + combine.scale.drop + ")";
  }
};

var minDropTime = timings.minDropTime,
    maxDropTime = timings.maxDropTime;
var dropTimeRange = maxDropTime - minDropTime;
var maxDropTimeAtDistance = 1500;
var cancelDropModifier = 0.6;
var getDropDuration = (function (_ref) {
  var current = _ref.current,
      destination = _ref.destination,
      reason = _ref.reason;
  var distance$1 = distance(current, destination);

  if (distance$1 <= 0) {
    return minDropTime;
  }

  if (distance$1 >= maxDropTimeAtDistance) {
    return maxDropTime;
  }

  var percentage = distance$1 / maxDropTimeAtDistance;
  var duration = minDropTime + dropTimeRange * percentage;
  var withDuration = reason === 'CANCEL' ? duration * cancelDropModifier : duration;
  return Number(withDuration.toFixed(2));
});

var getNewHomeClientOffset = (function (_ref) {
  var impact = _ref.impact,
      draggable = _ref.draggable,
      dimensions = _ref.dimensions,
      viewport = _ref.viewport,
      afterCritical = _ref.afterCritical;
  var draggables = dimensions.draggables,
      droppables = dimensions.droppables;
  var droppableId = whatIsDraggedOver(impact);
  var destination = droppableId ? droppables[droppableId] : null;
  var home = droppables[draggable.descriptor.droppableId];
  var newClientCenter = getClientBorderBoxCenter({
    impact: impact,
    draggable: draggable,
    draggables: draggables,
    afterCritical: afterCritical,
    droppable: destination || home,
    viewport: viewport
  });
  var offset = subtract(newClientCenter, draggable.client.borderBox.center);
  return offset;
});

var getDropImpact = (function (_ref) {
  var draggables = _ref.draggables,
      reason = _ref.reason,
      lastImpact = _ref.lastImpact,
      home = _ref.home,
      viewport = _ref.viewport,
      onLiftImpact = _ref.onLiftImpact;

  if (!lastImpact.at || reason !== 'DROP') {
    var recomputedHomeImpact = recompute({
      draggables: draggables,
      impact: onLiftImpact,
      destination: home,
      viewport: viewport,
      forceShouldAnimate: true
    });
    return {
      impact: recomputedHomeImpact,
      didDropInsideDroppable: false
    };
  }

  if (lastImpact.at.type === 'REORDER') {
    return {
      impact: lastImpact,
      didDropInsideDroppable: true
    };
  }

  var withoutMovement = _extends({}, lastImpact, {
    displaced: emptyGroups
  });

  return {
    impact: withoutMovement,
    didDropInsideDroppable: true
  };
});

var drop$1 = (function (_ref) {
  var getState = _ref.getState,
      dispatch = _ref.dispatch;
  return function (next) {
    return function (action) {
      if (action.type !== 'DROP') {
        next(action);
        return;
      }

      var state = getState();
      var reason = action.payload.reason;

      if (state.phase === 'COLLECTING') {
        dispatch(dropPending({
          reason: reason
        }));
        return;
      }

      if (state.phase === 'IDLE') {
        return;
      }

      var isWaitingForDrop = state.phase === 'DROP_PENDING' && state.isWaiting;
      !!isWaitingForDrop ? process.env.NODE_ENV !== "production" ? invariant(false, 'A DROP action occurred while DROP_PENDING and still waiting') : invariant(false) : void 0;
      !(state.phase === 'DRAGGING' || state.phase === 'DROP_PENDING') ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot drop in phase: " + state.phase) : invariant(false) : void 0;
      var critical = state.critical;
      var dimensions = state.dimensions;
      var draggable = dimensions.draggables[state.critical.draggable.id];

      var _getDropImpact = getDropImpact({
        reason: reason,
        lastImpact: state.impact,
        afterCritical: state.afterCritical,
        onLiftImpact: state.onLiftImpact,
        home: state.dimensions.droppables[state.critical.droppable.id],
        viewport: state.viewport,
        draggables: state.dimensions.draggables
      }),
          impact = _getDropImpact.impact,
          didDropInsideDroppable = _getDropImpact.didDropInsideDroppable;

      var destination = didDropInsideDroppable ? tryGetDestination(impact) : null;
      var combine = didDropInsideDroppable ? tryGetCombine(impact) : null;
      var source = {
        index: critical.draggable.index,
        droppableId: critical.droppable.id
      };
      var result = {
        draggableId: draggable.descriptor.id,
        type: draggable.descriptor.type,
        source: source,
        reason: reason,
        mode: state.movementMode,
        destination: destination,
        combine: combine
      };
      var newHomeClientOffset = getNewHomeClientOffset({
        impact: impact,
        draggable: draggable,
        dimensions: dimensions,
        viewport: state.viewport,
        afterCritical: state.afterCritical
      });
      var completed = {
        critical: state.critical,
        afterCritical: state.afterCritical,
        result: result,
        impact: impact
      };
      var isAnimationRequired = !isEqual(state.current.client.offset, newHomeClientOffset) || Boolean(result.combine);

      if (!isAnimationRequired) {
        dispatch(completeDrop({
          completed: completed
        }));
        return;
      }

      var dropDuration = getDropDuration({
        current: state.current.client.offset,
        destination: newHomeClientOffset,
        reason: reason
      });
      var args = {
        newHomeClientOffset: newHomeClientOffset,
        dropDuration: dropDuration,
        completed: completed
      };
      dispatch(animateDrop(args));
    };
  };
});

var getWindowScroll = (function () {
  return {
    x: window.pageXOffset,
    y: window.pageYOffset
  };
});

function getWindowScrollBinding(update) {
  return {
    eventName: 'scroll',
    options: {
      passive: true,
      capture: false
    },
    fn: function fn(event) {
      if (event.target !== window && event.target !== window.document) {
        return;
      }

      update();
    }
  };
}

function getScrollListener(_ref) {
  var onWindowScroll = _ref.onWindowScroll;

  function updateScroll() {
    onWindowScroll(getWindowScroll());
  }

  var scheduled = rafSchd(updateScroll);
  var binding = getWindowScrollBinding(scheduled);
  var unbind = noop;

  function isActive() {
    return unbind !== noop;
  }

  function start() {
    !!isActive() ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot start scroll listener when already active') : invariant(false) : void 0;
    unbind = bindEvents(window, [binding]);
  }

  function stop() {
    !isActive() ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot stop scroll listener when not active') : invariant(false) : void 0;
    scheduled.cancel();
    unbind();
    unbind = noop;
  }

  return {
    start: start,
    stop: stop,
    isActive: isActive
  };
}

var shouldEnd = function shouldEnd(action) {
  return action.type === 'DROP_COMPLETE' || action.type === 'DROP_ANIMATE' || action.type === 'FLUSH';
};

var scrollListener = (function (store) {
  var listener = getScrollListener({
    onWindowScroll: function onWindowScroll(newScroll) {
      store.dispatch(moveByWindowScroll({
        newScroll: newScroll
      }));
    }
  });
  return function (next) {
    return function (action) {
      if (!listener.isActive() && action.type === 'INITIAL_PUBLISH') {
        listener.start();
      }

      if (listener.isActive() && shouldEnd(action)) {
        listener.stop();
      }

      next(action);
    };
  };
});

var getExpiringAnnounce = (function (announce) {
  var wasCalled = false;
  var isExpired = false;
  var timeoutId = setTimeout(function () {
    isExpired = true;
  });

  var result = function result(message) {
    if (wasCalled) {
      process.env.NODE_ENV !== "production" ? warning('Announcement already made. Not making a second announcement') : void 0;
      return;
    }

    if (isExpired) {
      process.env.NODE_ENV !== "production" ? warning("\n        Announcements cannot be made asynchronously.\n        Default message has already been announced.\n      ") : void 0;
      return;
    }

    wasCalled = true;
    announce(message);
    clearTimeout(timeoutId);
  };

  result.wasCalled = function () {
    return wasCalled;
  };

  return result;
});

var getAsyncMarshal = (function () {
  var entries = [];

  var execute = function execute(timerId) {
    var index = findIndex(entries, function (item) {
      return item.timerId === timerId;
    });
    !(index !== -1) ? process.env.NODE_ENV !== "production" ? invariant(false, 'Could not find timer') : invariant(false) : void 0;

    var _entries$splice = entries.splice(index, 1),
        entry = _entries$splice[0];

    entry.callback();
  };

  var add = function add(fn) {
    var timerId = setTimeout(function () {
      return execute(timerId);
    });
    var entry = {
      timerId: timerId,
      callback: fn
    };
    entries.push(entry);
  };

  var flush = function flush() {
    if (!entries.length) {
      return;
    }

    var shallow = [].concat(entries);
    entries.length = 0;
    shallow.forEach(function (entry) {
      clearTimeout(entry.timerId);
      entry.callback();
    });
  };

  return {
    add: add,
    flush: flush
  };
});

var areLocationsEqual = function areLocationsEqual(first, second) {
  if (first == null && second == null) {
    return true;
  }

  if (first == null || second == null) {
    return false;
  }

  return first.droppableId === second.droppableId && first.index === second.index;
};
var isCombineEqual = function isCombineEqual(first, second) {
  if (first == null && second == null) {
    return true;
  }

  if (first == null || second == null) {
    return false;
  }

  return first.draggableId === second.draggableId && first.droppableId === second.droppableId;
};
var isCriticalEqual = function isCriticalEqual(first, second) {
  if (first === second) {
    return true;
  }

  var isDraggableEqual = first.draggable.id === second.draggable.id && first.draggable.droppableId === second.draggable.droppableId && first.draggable.type === second.draggable.type && first.draggable.index === second.draggable.index;
  var isDroppableEqual = first.droppable.id === second.droppable.id && first.droppable.type === second.droppable.type;
  return isDraggableEqual && isDroppableEqual;
};

var withTimings = function withTimings(key, fn) {
  start();
  fn();
  finish();
};

var getDragStart = function getDragStart(critical, mode) {
  return {
    draggableId: critical.draggable.id,
    type: critical.droppable.type,
    source: {
      droppableId: critical.droppable.id,
      index: critical.draggable.index
    },
    mode: mode
  };
};

var execute = function execute(responder, data, announce, getDefaultMessage) {
  if (!responder) {
    announce(getDefaultMessage(data));
    return;
  }

  var willExpire = getExpiringAnnounce(announce);
  var provided = {
    announce: willExpire
  };
  responder(data, provided);

  if (!willExpire.wasCalled()) {
    announce(getDefaultMessage(data));
  }
};

var getPublisher = (function (getResponders, announce) {
  var asyncMarshal = getAsyncMarshal();
  var dragging = null;

  var beforeCapture = function beforeCapture(draggableId, mode) {
    !!dragging ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot fire onBeforeCapture as a drag start has already been published') : invariant(false) : void 0;
    withTimings('onBeforeCapture', function () {
      var fn = getResponders().onBeforeCapture;

      if (fn) {
        var before = {
          draggableId: draggableId,
          mode: mode
        };
        fn(before);
      }
    });
  };

  var beforeStart = function beforeStart(critical, mode) {
    !!dragging ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot fire onBeforeDragStart as a drag start has already been published') : invariant(false) : void 0;
    withTimings('onBeforeDragStart', function () {
      var fn = getResponders().onBeforeDragStart;

      if (fn) {
        fn(getDragStart(critical, mode));
      }
    });
  };

  var start = function start(critical, mode) {
    !!dragging ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot fire onBeforeDragStart as a drag start has already been published') : invariant(false) : void 0;
    var data = getDragStart(critical, mode);
    dragging = {
      mode: mode,
      lastCritical: critical,
      lastLocation: data.source,
      lastCombine: null
    };
    asyncMarshal.add(function () {
      withTimings('onDragStart', function () {
        return execute(getResponders().onDragStart, data, announce, preset.onDragStart);
      });
    });
  };

  var update = function update(critical, impact) {
    var location = tryGetDestination(impact);
    var combine = tryGetCombine(impact);
    !dragging ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot fire onDragMove when onDragStart has not been called') : invariant(false) : void 0;
    var hasCriticalChanged = !isCriticalEqual(critical, dragging.lastCritical);

    if (hasCriticalChanged) {
      dragging.lastCritical = critical;
    }

    var hasLocationChanged = !areLocationsEqual(dragging.lastLocation, location);

    if (hasLocationChanged) {
      dragging.lastLocation = location;
    }

    var hasGroupingChanged = !isCombineEqual(dragging.lastCombine, combine);

    if (hasGroupingChanged) {
      dragging.lastCombine = combine;
    }

    if (!hasCriticalChanged && !hasLocationChanged && !hasGroupingChanged) {
      return;
    }

    var data = _extends({}, getDragStart(critical, dragging.mode), {
      combine: combine,
      destination: location
    });

    asyncMarshal.add(function () {
      withTimings('onDragUpdate', function () {
        return execute(getResponders().onDragUpdate, data, announce, preset.onDragUpdate);
      });
    });
  };

  var flush = function flush() {
    !dragging ? process.env.NODE_ENV !== "production" ? invariant(false, 'Can only flush responders while dragging') : invariant(false) : void 0;
    asyncMarshal.flush();
  };

  var drop = function drop(result) {
    !dragging ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot fire onDragEnd when there is no matching onDragStart') : invariant(false) : void 0;
    dragging = null;
    withTimings('onDragEnd', function () {
      return execute(getResponders().onDragEnd, result, announce, preset.onDragEnd);
    });
  };

  var abort = function abort() {
    if (!dragging) {
      return;
    }

    var result = _extends({}, getDragStart(dragging.lastCritical, dragging.mode), {
      combine: null,
      destination: null,
      reason: 'CANCEL'
    });

    drop(result);
  };

  return {
    beforeCapture: beforeCapture,
    beforeStart: beforeStart,
    start: start,
    update: update,
    flush: flush,
    drop: drop,
    abort: abort
  };
});

var responders = (function (getResponders, announce) {
  var publisher = getPublisher(getResponders, announce);
  return function (store) {
    return function (next) {
      return function (action) {
        if (action.type === 'BEFORE_INITIAL_CAPTURE') {
          publisher.beforeCapture(action.payload.draggableId, action.payload.movementMode);
          return;
        }

        if (action.type === 'INITIAL_PUBLISH') {
          var critical = action.payload.critical;
          publisher.beforeStart(critical, action.payload.movementMode);
          next(action);
          publisher.start(critical, action.payload.movementMode);
          return;
        }

        if (action.type === 'DROP_COMPLETE') {
          var result = action.payload.completed.result;
          publisher.flush();
          next(action);
          publisher.drop(result);
          return;
        }

        next(action);

        if (action.type === 'FLUSH') {
          publisher.abort();
          return;
        }

        var state = store.getState();

        if (state.phase === 'DRAGGING') {
          publisher.update(state.critical, state.impact);
        }
      };
    };
  };
});

var dropAnimationFinish = (function (store) {
  return function (next) {
    return function (action) {
      if (action.type !== 'DROP_ANIMATION_FINISHED') {
        next(action);
        return;
      }

      var state = store.getState();
      !(state.phase === 'DROP_ANIMATING') ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot finish a drop animating when no drop is occurring') : invariant(false) : void 0;
      store.dispatch(completeDrop({
        completed: state.completed
      }));
    };
  };
});

var dropAnimationFlushOnScroll = (function (store) {
  var unbind = null;
  var frameId = null;

  function clear() {
    if (frameId) {
      cancelAnimationFrame(frameId);
      frameId = null;
    }

    if (unbind) {
      unbind();
      unbind = null;
    }
  }

  return function (next) {
    return function (action) {
      if (action.type === 'FLUSH' || action.type === 'DROP_COMPLETE' || action.type === 'DROP_ANIMATION_FINISHED') {
        clear();
      }

      next(action);

      if (action.type !== 'DROP_ANIMATE') {
        return;
      }

      var binding = {
        eventName: 'scroll',
        options: {
          capture: true,
          passive: false,
          once: true
        },
        fn: function flushDropAnimation() {
          var state = store.getState();

          if (state.phase === 'DROP_ANIMATING') {
            store.dispatch(dropAnimationFinished());
          }
        }
      };
      frameId = requestAnimationFrame(function () {
        frameId = null;
        unbind = bindEvents(window, [binding]);
      });
    };
  };
});

var dimensionMarshalStopper = (function (marshal) {
  return function () {
    return function (next) {
      return function (action) {
        if (action.type === 'DROP_COMPLETE' || action.type === 'FLUSH' || action.type === 'DROP_ANIMATE') {
          marshal.stopPublishing();
        }

        next(action);
      };
    };
  };
});

var focus = (function (marshal) {
  var isWatching = false;
  return function () {
    return function (next) {
      return function (action) {
        if (action.type === 'INITIAL_PUBLISH') {
          isWatching = true;
          marshal.tryRecordFocus(action.payload.critical.draggable.id);
          next(action);
          marshal.tryRestoreFocusRecorded();
          return;
        }

        next(action);

        if (!isWatching) {
          return;
        }

        if (action.type === 'FLUSH') {
          isWatching = false;
          marshal.tryRestoreFocusRecorded();
          return;
        }

        if (action.type === 'DROP_COMPLETE') {
          isWatching = false;
          var result = action.payload.completed.result;

          if (result.combine) {
            marshal.tryShiftRecord(result.draggableId, result.combine.draggableId);
          }

          marshal.tryRestoreFocusRecorded();
        }
      };
    };
  };
});

var shouldStop = function shouldStop(action) {
  return action.type === 'DROP_COMPLETE' || action.type === 'DROP_ANIMATE' || action.type === 'FLUSH';
};

var autoScroll = (function (autoScroller) {
  return function (store) {
    return function (next) {
      return function (action) {
        if (shouldStop(action)) {
          autoScroller.stop();
          next(action);
          return;
        }

        if (action.type === 'INITIAL_PUBLISH') {
          next(action);
          var state = store.getState();
          !(state.phase === 'DRAGGING') ? process.env.NODE_ENV !== "production" ? invariant(false, 'Expected phase to be DRAGGING after INITIAL_PUBLISH') : invariant(false) : void 0;
          autoScroller.start(state);
          return;
        }

        next(action);
        autoScroller.scroll(store.getState());
      };
    };
  };
});

var pendingDrop = (function (store) {
  return function (next) {
    return function (action) {
      next(action);

      if (action.type !== 'PUBLISH_WHILE_DRAGGING') {
        return;
      }

      var postActionState = store.getState();

      if (postActionState.phase !== 'DROP_PENDING') {
        return;
      }

      if (postActionState.isWaiting) {
        return;
      }

      store.dispatch(drop({
        reason: postActionState.reason
      }));
    };
  };
});

var composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({
  name: 'react-beautiful-dnd'
}) : compose;
var createStore = (function (_ref) {
  var dimensionMarshal = _ref.dimensionMarshal,
      focusMarshal = _ref.focusMarshal,
      styleMarshal = _ref.styleMarshal,
      getResponders = _ref.getResponders,
      announce = _ref.announce,
      autoScroller = _ref.autoScroller;
  return createStore$1(reducer, composeEnhancers(applyMiddleware(style(styleMarshal), dimensionMarshalStopper(dimensionMarshal), lift$1(dimensionMarshal), drop$1, dropAnimationFinish, dropAnimationFlushOnScroll, pendingDrop, autoScroll(autoScroller), scrollListener, focus(focusMarshal), responders(getResponders, announce))));
});

var clean$1 = function clean() {
  return {
    additions: {},
    removals: {},
    modified: {}
  };
};
function createPublisher(_ref) {
  var registry = _ref.registry,
      callbacks = _ref.callbacks;
  var staging = clean$1();
  var frameId = null;

  var collect = function collect() {
    if (frameId) {
      return;
    }

    callbacks.collectionStarting();
    frameId = requestAnimationFrame(function () {
      frameId = null;
      start();
      var _staging = staging,
          additions = _staging.additions,
          removals = _staging.removals,
          modified = _staging.modified;
      var added = Object.keys(additions).map(function (id) {
        return registry.draggable.getById(id).getDimension(origin);
      }).sort(function (a, b) {
        return a.descriptor.index - b.descriptor.index;
      });
      var updated = Object.keys(modified).map(function (id) {
        var entry = registry.droppable.getById(id);
        var scroll = entry.callbacks.getScrollWhileDragging();
        return {
          droppableId: id,
          scroll: scroll
        };
      });
      var result = {
        additions: added,
        removals: Object.keys(removals),
        modified: updated
      };
      staging = clean$1();
      finish();
      callbacks.publish(result);
    });
  };

  var add = function add(entry) {
    var id = entry.descriptor.id;
    staging.additions[id] = entry;
    staging.modified[entry.descriptor.droppableId] = true;

    if (staging.removals[id]) {
      delete staging.removals[id];
    }

    collect();
  };

  var remove = function remove(entry) {
    var descriptor = entry.descriptor;
    staging.removals[descriptor.id] = true;
    staging.modified[descriptor.droppableId] = true;

    if (staging.additions[descriptor.id]) {
      delete staging.additions[descriptor.id];
    }

    collect();
  };

  var stop = function stop() {
    if (!frameId) {
      return;
    }

    cancelAnimationFrame(frameId);
    frameId = null;
    staging = clean$1();
  };

  return {
    add: add,
    remove: remove,
    stop: stop
  };
}

var getMaxScroll = (function (_ref) {
  var scrollHeight = _ref.scrollHeight,
      scrollWidth = _ref.scrollWidth,
      height = _ref.height,
      width = _ref.width;
  var maxScroll = subtract({
    x: scrollWidth,
    y: scrollHeight
  }, {
    x: width,
    y: height
  });
  var adjustedMaxScroll = {
    x: Math.max(0, maxScroll.x),
    y: Math.max(0, maxScroll.y)
  };
  return adjustedMaxScroll;
});

var getDocumentElement = (function () {
  var doc = document.documentElement;
  !doc ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot find document.documentElement') : invariant(false) : void 0;
  return doc;
});

var getMaxWindowScroll = (function () {
  var doc = getDocumentElement();
  var maxScroll = getMaxScroll({
    scrollHeight: doc.scrollHeight,
    scrollWidth: doc.scrollWidth,
    width: doc.clientWidth,
    height: doc.clientHeight
  });
  return maxScroll;
});

var getViewport = (function () {
  var scroll = getWindowScroll();
  var maxScroll = getMaxWindowScroll();
  var top = scroll.y;
  var left = scroll.x;
  var doc = getDocumentElement();
  var width = doc.clientWidth;
  var height = doc.clientHeight;
  var right = left + width;
  var bottom = top + height;
  var frame = getRect({
    top: top,
    left: left,
    right: right,
    bottom: bottom
  });
  var viewport = {
    frame: frame,
    scroll: {
      initial: scroll,
      current: scroll,
      max: maxScroll,
      diff: {
        value: origin,
        displacement: origin
      }
    }
  };
  return viewport;
});

var getInitialPublish = (function (_ref) {
  var critical = _ref.critical,
      scrollOptions = _ref.scrollOptions,
      registry = _ref.registry;
  start();
  var viewport = getViewport();
  var windowScroll = viewport.scroll.current;
  var home = critical.droppable;
  var droppables = registry.droppable.getAllByType(home.type).map(function (entry) {
    return entry.callbacks.getDimensionAndWatchScroll(windowScroll, scrollOptions);
  });
  var draggables = registry.draggable.getAllByType(critical.draggable.type).map(function (entry) {
    return entry.getDimension(windowScroll);
  });
  var dimensions = {
    draggables: toDraggableMap(draggables),
    droppables: toDroppableMap(droppables)
  };
  finish();
  var result = {
    dimensions: dimensions,
    critical: critical,
    viewport: viewport
  };
  return result;
});

function shouldPublishUpdate(registry, dragging, entry) {
  if (entry.descriptor.id === dragging.id) {
    return false;
  }

  if (entry.descriptor.type !== dragging.type) {
    return false;
  }

  var home = registry.droppable.getById(entry.descriptor.droppableId);

  if (home.descriptor.mode !== 'virtual') {
    process.env.NODE_ENV !== "production" ? warning("\n      You are attempting to add or remove a Draggable [id: " + entry.descriptor.id + "]\n      while a drag is occurring. This is only supported for virtual lists.\n\n      See https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/patterns/virtual-lists.md\n    ") : void 0;
    return false;
  }

  return true;
}

var createDimensionMarshal = (function (registry, callbacks) {
  var collection = null;
  var publisher = createPublisher({
    callbacks: {
      publish: callbacks.publishWhileDragging,
      collectionStarting: callbacks.collectionStarting
    },
    registry: registry
  });

  var updateDroppableIsEnabled = function updateDroppableIsEnabled(id, isEnabled) {
    !registry.droppable.exists(id) ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot update is enabled flag of Droppable " + id + " as it is not registered") : invariant(false) : void 0;

    if (!collection) {
      return;
    }

    callbacks.updateDroppableIsEnabled({
      id: id,
      isEnabled: isEnabled
    });
  };

  var updateDroppableIsCombineEnabled = function updateDroppableIsCombineEnabled(id, isCombineEnabled) {
    if (!collection) {
      return;
    }

    !registry.droppable.exists(id) ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot update isCombineEnabled flag of Droppable " + id + " as it is not registered") : invariant(false) : void 0;
    callbacks.updateDroppableIsCombineEnabled({
      id: id,
      isCombineEnabled: isCombineEnabled
    });
  };

  var updateDroppableScroll = function updateDroppableScroll(id, newScroll) {
    if (!collection) {
      return;
    }

    !registry.droppable.exists(id) ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot update the scroll on Droppable " + id + " as it is not registered") : invariant(false) : void 0;
    callbacks.updateDroppableScroll({
      id: id,
      newScroll: newScroll
    });
  };

  var scrollDroppable = function scrollDroppable(id, change) {
    if (!collection) {
      return;
    }

    registry.droppable.getById(id).callbacks.scroll(change);
  };

  var stopPublishing = function stopPublishing() {
    if (!collection) {
      return;
    }

    publisher.stop();
    var home = collection.critical.droppable;
    registry.droppable.getAllByType(home.type).forEach(function (entry) {
      return entry.callbacks.dragStopped();
    });
    collection.unsubscribe();
    collection = null;
  };

  var subscriber = function subscriber(event) {
    !collection ? process.env.NODE_ENV !== "production" ? invariant(false, 'Should only be subscribed when a collection is occurring') : invariant(false) : void 0;
    var dragging = collection.critical.draggable;

    if (event.type === 'ADDITION') {
      if (shouldPublishUpdate(registry, dragging, event.value)) {
        publisher.add(event.value);
      }
    }

    if (event.type === 'REMOVAL') {
      if (shouldPublishUpdate(registry, dragging, event.value)) {
        publisher.remove(event.value);
      }
    }
  };

  var startPublishing = function startPublishing(request) {
    !!collection ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot start capturing critical dimensions as there is already a collection') : invariant(false) : void 0;
    var entry = registry.draggable.getById(request.draggableId);
    var home = registry.droppable.getById(entry.descriptor.droppableId);
    var critical = {
      draggable: entry.descriptor,
      droppable: home.descriptor
    };
    var unsubscribe = registry.subscribe(subscriber);
    collection = {
      critical: critical,
      unsubscribe: unsubscribe
    };
    return getInitialPublish({
      critical: critical,
      registry: registry,
      scrollOptions: request.scrollOptions
    });
  };

  var marshal = {
    updateDroppableIsEnabled: updateDroppableIsEnabled,
    updateDroppableIsCombineEnabled: updateDroppableIsCombineEnabled,
    scrollDroppable: scrollDroppable,
    updateDroppableScroll: updateDroppableScroll,
    startPublishing: startPublishing,
    stopPublishing: stopPublishing
  };
  return marshal;
});

var canStartDrag = (function (state, id) {
  if (state.phase === 'IDLE') {
    return true;
  }

  if (state.phase !== 'DROP_ANIMATING') {
    return false;
  }

  if (state.completed.result.draggableId === id) {
    return false;
  }

  return state.completed.result.reason === 'DROP';
});

var scrollWindow = (function (change) {
  window.scrollBy(change.x, change.y);
});

var getScrollableDroppables = memoizeOne(function (droppables) {
  return toDroppableList(droppables).filter(function (droppable) {
    if (!droppable.isEnabled) {
      return false;
    }

    if (!droppable.frame) {
      return false;
    }

    return true;
  });
});

var getScrollableDroppableOver = function getScrollableDroppableOver(target, droppables) {
  var maybe = find(getScrollableDroppables(droppables), function (droppable) {
    !droppable.frame ? process.env.NODE_ENV !== "production" ? invariant(false, 'Invalid result') : invariant(false) : void 0;
    return isPositionInFrame(droppable.frame.pageMarginBox)(target);
  });
  return maybe;
};

var getBestScrollableDroppable = (function (_ref) {
  var center = _ref.center,
      destination = _ref.destination,
      droppables = _ref.droppables;

  if (destination) {
    var _dimension = droppables[destination];

    if (!_dimension.frame) {
      return null;
    }

    return _dimension;
  }

  var dimension = getScrollableDroppableOver(center, droppables);
  return dimension;
});

var config = {
  startFromPercentage: 0.25,
  maxScrollAtPercentage: 0.05,
  maxPixelScroll: 28,
  ease: function ease(percentage) {
    return Math.pow(percentage, 2);
  },
  durationDampening: {
    stopDampeningAt: 1200,
    accelerateAt: 360
  }
};

var getDistanceThresholds = (function (container, axis) {
  var startScrollingFrom = container[axis.size] * config.startFromPercentage;
  var maxScrollValueAt = container[axis.size] * config.maxScrollAtPercentage;
  var thresholds = {
    startScrollingFrom: startScrollingFrom,
    maxScrollValueAt: maxScrollValueAt
  };
  return thresholds;
});

var getPercentage = (function (_ref) {
  var startOfRange = _ref.startOfRange,
      endOfRange = _ref.endOfRange,
      current = _ref.current;
  var range = endOfRange - startOfRange;

  if (range === 0) {
    process.env.NODE_ENV !== "production" ? warning("\n      Detected distance range of 0 in the fluid auto scroller\n      This is unexpected and would cause a divide by 0 issue.\n      Not allowing an auto scroll\n    ") : void 0;
    return 0;
  }

  var currentInRange = current - startOfRange;
  var percentage = currentInRange / range;
  return percentage;
});

var minScroll = 1;

var getValueFromDistance = (function (distanceToEdge, thresholds) {
  if (distanceToEdge > thresholds.startScrollingFrom) {
    return 0;
  }

  if (distanceToEdge <= thresholds.maxScrollValueAt) {
    return config.maxPixelScroll;
  }

  if (distanceToEdge === thresholds.startScrollingFrom) {
    return minScroll;
  }

  var percentageFromMaxScrollValueAt = getPercentage({
    startOfRange: thresholds.maxScrollValueAt,
    endOfRange: thresholds.startScrollingFrom,
    current: distanceToEdge
  });
  var percentageFromStartScrollingFrom = 1 - percentageFromMaxScrollValueAt;
  var scroll = config.maxPixelScroll * config.ease(percentageFromStartScrollingFrom);
  return Math.ceil(scroll);
});

var accelerateAt = config.durationDampening.accelerateAt;
var stopAt = config.durationDampening.stopDampeningAt;
var dampenValueByTime = (function (proposedScroll, dragStartTime) {
  var startOfRange = dragStartTime;
  var endOfRange = stopAt;
  var now = Date.now();
  var runTime = now - startOfRange;

  if (runTime >= stopAt) {
    return proposedScroll;
  }

  if (runTime < accelerateAt) {
    return minScroll;
  }

  var betweenAccelerateAtAndStopAtPercentage = getPercentage({
    startOfRange: accelerateAt,
    endOfRange: endOfRange,
    current: runTime
  });
  var scroll = proposedScroll * config.ease(betweenAccelerateAtAndStopAtPercentage);
  return Math.ceil(scroll);
});

var getValue = (function (_ref) {
  var distanceToEdge = _ref.distanceToEdge,
      thresholds = _ref.thresholds,
      dragStartTime = _ref.dragStartTime,
      shouldUseTimeDampening = _ref.shouldUseTimeDampening;
  var scroll = getValueFromDistance(distanceToEdge, thresholds);

  if (scroll === 0) {
    return 0;
  }

  if (!shouldUseTimeDampening) {
    return scroll;
  }

  return Math.max(dampenValueByTime(scroll, dragStartTime), minScroll);
});

var getScrollOnAxis = (function (_ref) {
  var container = _ref.container,
      distanceToEdges = _ref.distanceToEdges,
      dragStartTime = _ref.dragStartTime,
      axis = _ref.axis,
      shouldUseTimeDampening = _ref.shouldUseTimeDampening;
  var thresholds = getDistanceThresholds(container, axis);
  var isCloserToEnd = distanceToEdges[axis.end] < distanceToEdges[axis.start];

  if (isCloserToEnd) {
    return getValue({
      distanceToEdge: distanceToEdges[axis.end],
      thresholds: thresholds,
      dragStartTime: dragStartTime,
      shouldUseTimeDampening: shouldUseTimeDampening
    });
  }

  return -1 * getValue({
    distanceToEdge: distanceToEdges[axis.start],
    thresholds: thresholds,
    dragStartTime: dragStartTime,
    shouldUseTimeDampening: shouldUseTimeDampening
  });
});

var adjustForSizeLimits = (function (_ref) {
  var container = _ref.container,
      subject = _ref.subject,
      proposedScroll = _ref.proposedScroll;
  var isTooBigVertically = subject.height > container.height;
  var isTooBigHorizontally = subject.width > container.width;

  if (!isTooBigHorizontally && !isTooBigVertically) {
    return proposedScroll;
  }

  if (isTooBigHorizontally && isTooBigVertically) {
    return null;
  }

  return {
    x: isTooBigHorizontally ? 0 : proposedScroll.x,
    y: isTooBigVertically ? 0 : proposedScroll.y
  };
});

var clean$2 = apply(function (value) {
  return value === 0 ? 0 : value;
});
var getScroll = (function (_ref) {
  var dragStartTime = _ref.dragStartTime,
      container = _ref.container,
      subject = _ref.subject,
      center = _ref.center,
      shouldUseTimeDampening = _ref.shouldUseTimeDampening;
  var distanceToEdges = {
    top: center.y - container.top,
    right: container.right - center.x,
    bottom: container.bottom - center.y,
    left: center.x - container.left
  };
  var y = getScrollOnAxis({
    container: container,
    distanceToEdges: distanceToEdges,
    dragStartTime: dragStartTime,
    axis: vertical,
    shouldUseTimeDampening: shouldUseTimeDampening
  });
  var x = getScrollOnAxis({
    container: container,
    distanceToEdges: distanceToEdges,
    dragStartTime: dragStartTime,
    axis: horizontal,
    shouldUseTimeDampening: shouldUseTimeDampening
  });
  var required = clean$2({
    x: x,
    y: y
  });

  if (isEqual(required, origin)) {
    return null;
  }

  var limited = adjustForSizeLimits({
    container: container,
    subject: subject,
    proposedScroll: required
  });

  if (!limited) {
    return null;
  }

  return isEqual(limited, origin) ? null : limited;
});

var smallestSigned = apply(function (value) {
  if (value === 0) {
    return 0;
  }

  return value > 0 ? 1 : -1;
});
var getOverlap = function () {
  var getRemainder = function getRemainder(target, max) {
    if (target < 0) {
      return target;
    }

    if (target > max) {
      return target - max;
    }

    return 0;
  };

  return function (_ref) {
    var current = _ref.current,
        max = _ref.max,
        change = _ref.change;
    var targetScroll = add(current, change);
    var overlap = {
      x: getRemainder(targetScroll.x, max.x),
      y: getRemainder(targetScroll.y, max.y)
    };

    if (isEqual(overlap, origin)) {
      return null;
    }

    return overlap;
  };
}();
var canPartiallyScroll = function canPartiallyScroll(_ref2) {
  var rawMax = _ref2.max,
      current = _ref2.current,
      change = _ref2.change;
  var max = {
    x: Math.max(current.x, rawMax.x),
    y: Math.max(current.y, rawMax.y)
  };
  var smallestChange = smallestSigned(change);
  var overlap = getOverlap({
    max: max,
    current: current,
    change: smallestChange
  });

  if (!overlap) {
    return true;
  }

  if (smallestChange.x !== 0 && overlap.x === 0) {
    return true;
  }

  if (smallestChange.y !== 0 && overlap.y === 0) {
    return true;
  }

  return false;
};
var canScrollWindow = function canScrollWindow(viewport, change) {
  return canPartiallyScroll({
    current: viewport.scroll.current,
    max: viewport.scroll.max,
    change: change
  });
};
var getWindowOverlap = function getWindowOverlap(viewport, change) {
  if (!canScrollWindow(viewport, change)) {
    return null;
  }

  var max = viewport.scroll.max;
  var current = viewport.scroll.current;
  return getOverlap({
    current: current,
    max: max,
    change: change
  });
};
var canScrollDroppable = function canScrollDroppable(droppable, change) {
  var frame = droppable.frame;

  if (!frame) {
    return false;
  }

  return canPartiallyScroll({
    current: frame.scroll.current,
    max: frame.scroll.max,
    change: change
  });
};
var getDroppableOverlap = function getDroppableOverlap(droppable, change) {
  var frame = droppable.frame;

  if (!frame) {
    return null;
  }

  if (!canScrollDroppable(droppable, change)) {
    return null;
  }

  return getOverlap({
    current: frame.scroll.current,
    max: frame.scroll.max,
    change: change
  });
};

var getWindowScrollChange = (function (_ref) {
  var viewport = _ref.viewport,
      subject = _ref.subject,
      center = _ref.center,
      dragStartTime = _ref.dragStartTime,
      shouldUseTimeDampening = _ref.shouldUseTimeDampening;
  var scroll = getScroll({
    dragStartTime: dragStartTime,
    container: viewport.frame,
    subject: subject,
    center: center,
    shouldUseTimeDampening: shouldUseTimeDampening
  });
  return scroll && canScrollWindow(viewport, scroll) ? scroll : null;
});

var getDroppableScrollChange = (function (_ref) {
  var droppable = _ref.droppable,
      subject = _ref.subject,
      center = _ref.center,
      dragStartTime = _ref.dragStartTime,
      shouldUseTimeDampening = _ref.shouldUseTimeDampening;
  var frame = droppable.frame;

  if (!frame) {
    return null;
  }

  var scroll = getScroll({
    dragStartTime: dragStartTime,
    container: frame.pageMarginBox,
    subject: subject,
    center: center,
    shouldUseTimeDampening: shouldUseTimeDampening
  });
  return scroll && canScrollDroppable(droppable, scroll) ? scroll : null;
});

var scroll$1 = (function (_ref) {
  var state = _ref.state,
      dragStartTime = _ref.dragStartTime,
      shouldUseTimeDampening = _ref.shouldUseTimeDampening,
      scrollWindow = _ref.scrollWindow,
      scrollDroppable = _ref.scrollDroppable;
  var center = state.current.page.borderBoxCenter;
  var draggable = state.dimensions.draggables[state.critical.draggable.id];
  var subject = draggable.page.marginBox;

  if (state.isWindowScrollAllowed) {
    var viewport = state.viewport;

    var _change = getWindowScrollChange({
      dragStartTime: dragStartTime,
      viewport: viewport,
      subject: subject,
      center: center,
      shouldUseTimeDampening: shouldUseTimeDampening
    });

    if (_change) {
      scrollWindow(_change);
      return;
    }
  }

  var droppable = getBestScrollableDroppable({
    center: center,
    destination: whatIsDraggedOver(state.impact),
    droppables: state.dimensions.droppables
  });

  if (!droppable) {
    return;
  }

  var change = getDroppableScrollChange({
    dragStartTime: dragStartTime,
    droppable: droppable,
    subject: subject,
    center: center,
    shouldUseTimeDampening: shouldUseTimeDampening
  });

  if (change) {
    scrollDroppable(droppable.descriptor.id, change);
  }
});

var createFluidScroller = (function (_ref) {
  var scrollWindow = _ref.scrollWindow,
      scrollDroppable = _ref.scrollDroppable;
  var scheduleWindowScroll = rafSchd(scrollWindow);
  var scheduleDroppableScroll = rafSchd(scrollDroppable);
  var dragging = null;

  var tryScroll = function tryScroll(state) {
    !dragging ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot fluid scroll if not dragging') : invariant(false) : void 0;
    var _dragging = dragging,
        shouldUseTimeDampening = _dragging.shouldUseTimeDampening,
        dragStartTime = _dragging.dragStartTime;
    scroll$1({
      state: state,
      scrollWindow: scheduleWindowScroll,
      scrollDroppable: scheduleDroppableScroll,
      dragStartTime: dragStartTime,
      shouldUseTimeDampening: shouldUseTimeDampening
    });
  };

  var start$1 = function start$1(state) {
    start();
    !!dragging ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot start auto scrolling when already started') : invariant(false) : void 0;
    var dragStartTime = Date.now();
    var wasScrollNeeded = false;

    var fakeScrollCallback = function fakeScrollCallback() {
      wasScrollNeeded = true;
    };

    scroll$1({
      state: state,
      dragStartTime: 0,
      shouldUseTimeDampening: false,
      scrollWindow: fakeScrollCallback,
      scrollDroppable: fakeScrollCallback
    });
    dragging = {
      dragStartTime: dragStartTime,
      shouldUseTimeDampening: wasScrollNeeded
    };
    finish();

    if (wasScrollNeeded) {
      tryScroll(state);
    }
  };

  var stop = function stop() {
    if (!dragging) {
      return;
    }

    scheduleWindowScroll.cancel();
    scheduleDroppableScroll.cancel();
    dragging = null;
  };

  return {
    start: start$1,
    stop: stop,
    scroll: tryScroll
  };
});

var createJumpScroller = (function (_ref) {
  var move = _ref.move,
      scrollDroppable = _ref.scrollDroppable,
      scrollWindow = _ref.scrollWindow;

  var moveByOffset = function moveByOffset(state, offset) {
    var client = add(state.current.client.selection, offset);
    move({
      client: client
    });
  };

  var scrollDroppableAsMuchAsItCan = function scrollDroppableAsMuchAsItCan(droppable, change) {
    if (!canScrollDroppable(droppable, change)) {
      return change;
    }

    var overlap = getDroppableOverlap(droppable, change);

    if (!overlap) {
      scrollDroppable(droppable.descriptor.id, change);
      return null;
    }

    var whatTheDroppableCanScroll = subtract(change, overlap);
    scrollDroppable(droppable.descriptor.id, whatTheDroppableCanScroll);
    var remainder = subtract(change, whatTheDroppableCanScroll);
    return remainder;
  };

  var scrollWindowAsMuchAsItCan = function scrollWindowAsMuchAsItCan(isWindowScrollAllowed, viewport, change) {
    if (!isWindowScrollAllowed) {
      return change;
    }

    if (!canScrollWindow(viewport, change)) {
      return change;
    }

    var overlap = getWindowOverlap(viewport, change);

    if (!overlap) {
      scrollWindow(change);
      return null;
    }

    var whatTheWindowCanScroll = subtract(change, overlap);
    scrollWindow(whatTheWindowCanScroll);
    var remainder = subtract(change, whatTheWindowCanScroll);
    return remainder;
  };

  var jumpScroller = function jumpScroller(state) {
    var request = state.scrollJumpRequest;

    if (!request) {
      return;
    }

    var destination = whatIsDraggedOver(state.impact);
    !destination ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot perform a jump scroll when there is no destination') : invariant(false) : void 0;
    var droppableRemainder = scrollDroppableAsMuchAsItCan(state.dimensions.droppables[destination], request);

    if (!droppableRemainder) {
      return;
    }

    var viewport = state.viewport;
    var windowRemainder = scrollWindowAsMuchAsItCan(state.isWindowScrollAllowed, viewport, droppableRemainder);

    if (!windowRemainder) {
      return;
    }

    moveByOffset(state, windowRemainder);
  };

  return jumpScroller;
});

var createAutoScroller = (function (_ref) {
  var scrollDroppable = _ref.scrollDroppable,
      scrollWindow = _ref.scrollWindow,
      move = _ref.move;
  var fluidScroller = createFluidScroller({
    scrollWindow: scrollWindow,
    scrollDroppable: scrollDroppable
  });
  var jumpScroll = createJumpScroller({
    move: move,
    scrollWindow: scrollWindow,
    scrollDroppable: scrollDroppable
  });

  var scroll = function scroll(state) {
    if (state.phase !== 'DRAGGING') {
      return;
    }

    if (state.movementMode === 'FLUID') {
      fluidScroller.scroll(state);
      return;
    }

    if (!state.scrollJumpRequest) {
      return;
    }

    jumpScroll(state);
  };

  var scroller = {
    scroll: scroll,
    start: fluidScroller.start,
    stop: fluidScroller.stop
  };
  return scroller;
});

var prefix$1 = 'data-rbd';
var dragHandle = function () {
  var base = prefix$1 + "-drag-handle";
  return {
    base: base,
    draggableId: base + "-draggable-id",
    contextId: base + "-context-id"
  };
}();
var draggable = function () {
  var base = prefix$1 + "-draggable";
  return {
    base: base,
    contextId: base + "-context-id",
    id: base + "-id"
  };
}();
var droppable = function () {
  var base = prefix$1 + "-droppable";
  return {
    base: base,
    contextId: base + "-context-id",
    id: base + "-id"
  };
}();
var scrollContainer = {
  contextId: prefix$1 + "-scroll-container-context-id"
};

var makeGetSelector = function makeGetSelector(context) {
  return function (attribute) {
    return "[" + attribute + "=\"" + context + "\"]";
  };
};

var getStyles = function getStyles(rules, property) {
  return rules.map(function (rule) {
    var value = rule.styles[property];

    if (!value) {
      return '';
    }

    return rule.selector + " { " + value + " }";
  }).join(' ');
};

var noPointerEvents = 'pointer-events: none;';
var getStyles$1 = (function (contextId) {
  var getSelector = makeGetSelector(contextId);

  var dragHandle$1 = function () {
    var grabCursor = "\n      cursor: -webkit-grab;\n      cursor: grab;\n    ";
    return {
      selector: getSelector(dragHandle.contextId),
      styles: {
        always: "\n          -webkit-touch-callout: none;\n          -webkit-tap-highlight-color: rgba(0,0,0,0);\n          touch-action: manipulation;\n        ",
        resting: grabCursor,
        dragging: noPointerEvents,
        dropAnimating: grabCursor
      }
    };
  }();

  var draggable$1 = function () {
    var transition = "\n      transition: " + transitions.outOfTheWay + ";\n    ";
    return {
      selector: getSelector(draggable.contextId),
      styles: {
        dragging: transition,
        dropAnimating: transition,
        userCancel: transition
      }
    };
  }();

  var droppable$1 = {
    selector: getSelector(droppable.contextId),
    styles: {
      always: "overflow-anchor: none;"
    }
  };
  var body = {
    selector: 'body',
    styles: {
      dragging: "\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n        user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        overflow-anchor: none;\n      "
    }
  };
  var rules = [draggable$1, dragHandle$1, droppable$1, body];
  return {
    always: getStyles(rules, 'always'),
    resting: getStyles(rules, 'resting'),
    dragging: getStyles(rules, 'dragging'),
    dropAnimating: getStyles(rules, 'dropAnimating'),
    userCancel: getStyles(rules, 'userCancel')
  };
});

var useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect : useEffect;

var getHead = function getHead() {
  var head = document.querySelector('head');
  !head ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot find the head to append a style to') : invariant(false) : void 0;
  return head;
};

var createStyleEl = function createStyleEl(nonce) {
  var el = document.createElement('style');

  if (nonce) {
    el.setAttribute('nonce', nonce);
  }

  el.type = 'text/css';
  return el;
};

function useStyleMarshal(contextId, nonce) {
  var styles = useMemo(function () {
    return getStyles$1(contextId);
  }, [contextId]);
  var alwaysRef = useRef(null);
  var dynamicRef = useRef(null);
  var setDynamicStyle = useCallback(memoizeOne(function (proposed) {
    var el = dynamicRef.current;
    !el ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot set dynamic style element if it is not set') : invariant(false) : void 0;
    el.textContent = proposed;
  }), []);
  var setAlwaysStyle = useCallback(function (proposed) {
    var el = alwaysRef.current;
    !el ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot set dynamic style element if it is not set') : invariant(false) : void 0;
    el.textContent = proposed;
  }, []);
  useIsomorphicLayoutEffect(function () {
    !(!alwaysRef.current && !dynamicRef.current) ? process.env.NODE_ENV !== "production" ? invariant(false, 'style elements already mounted') : invariant(false) : void 0;
    var always = createStyleEl(nonce);
    var dynamic = createStyleEl(nonce);
    alwaysRef.current = always;
    dynamicRef.current = dynamic;
    always.setAttribute(prefix$1 + "-always", contextId);
    dynamic.setAttribute(prefix$1 + "-dynamic", contextId);
    getHead().appendChild(always);
    getHead().appendChild(dynamic);
    setAlwaysStyle(styles.always);
    setDynamicStyle(styles.resting);
    return function () {
      var remove = function remove(ref) {
        var current = ref.current;
        !current ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot unmount ref as it is not set') : invariant(false) : void 0;
        getHead().removeChild(current);
        ref.current = null;
      };

      remove(alwaysRef);
      remove(dynamicRef);
    };
  }, [nonce, setAlwaysStyle, setDynamicStyle, styles.always, styles.resting, contextId]);
  var dragging = useCallback(function () {
    return setDynamicStyle(styles.dragging);
  }, [setDynamicStyle, styles.dragging]);
  var dropping = useCallback(function (reason) {
    if (reason === 'DROP') {
      setDynamicStyle(styles.dropAnimating);
      return;
    }

    setDynamicStyle(styles.userCancel);
  }, [setDynamicStyle, styles.dropAnimating, styles.userCancel]);
  var resting = useCallback(function () {
    if (!dynamicRef.current) {
      return;
    }

    setDynamicStyle(styles.resting);
  }, [setDynamicStyle, styles.resting]);
  var marshal = useMemo(function () {
    return {
      dragging: dragging,
      dropping: dropping,
      resting: resting
    };
  }, [dragging, dropping, resting]);
  return marshal;
}

var getWindowFromEl = (function (el) {
  return el && el.ownerDocument ? el.ownerDocument.defaultView : window;
});

function isHtmlElement(el) {
  return el instanceof getWindowFromEl(el).HTMLElement;
}

function findDragHandle(contextId, draggableId) {
  var selector = "[" + dragHandle.contextId + "=\"" + contextId + "\"]";
  var possible = toArray(document.querySelectorAll(selector));

  if (!possible.length) {
    process.env.NODE_ENV !== "production" ? warning("Unable to find any drag handles in the context \"" + contextId + "\"") : void 0;
    return null;
  }

  var handle = find(possible, function (el) {
    return el.getAttribute(dragHandle.draggableId) === draggableId;
  });

  if (!handle) {
    process.env.NODE_ENV !== "production" ? warning("Unable to find drag handle with id \"" + draggableId + "\" as no handle with a matching id was found") : void 0;
    return null;
  }

  if (!isHtmlElement(handle)) {
    process.env.NODE_ENV !== "production" ? warning('drag handle needs to be a HTMLElement') : void 0;
    return null;
  }

  return handle;
}

function useFocusMarshal(contextId) {
  var entriesRef = useRef({});
  var recordRef = useRef(null);
  var restoreFocusFrameRef = useRef(null);
  var isMountedRef = useRef(false);
  var register = useCallback(function register(id, focus) {
    var entry = {
      id: id,
      focus: focus
    };
    entriesRef.current[id] = entry;
    return function unregister() {
      var entries = entriesRef.current;
      var current = entries[id];

      if (current !== entry) {
        delete entries[id];
      }
    };
  }, []);
  var tryGiveFocus = useCallback(function tryGiveFocus(tryGiveFocusTo) {
    var handle = findDragHandle(contextId, tryGiveFocusTo);

    if (handle && handle !== document.activeElement) {
      handle.focus();
    }
  }, [contextId]);
  var tryShiftRecord = useCallback(function tryShiftRecord(previous, redirectTo) {
    if (recordRef.current === previous) {
      recordRef.current = redirectTo;
    }
  }, []);
  var tryRestoreFocusRecorded = useCallback(function tryRestoreFocusRecorded() {
    if (restoreFocusFrameRef.current) {
      return;
    }

    if (!isMountedRef.current) {
      return;
    }

    restoreFocusFrameRef.current = requestAnimationFrame(function () {
      restoreFocusFrameRef.current = null;
      var record = recordRef.current;

      if (record) {
        tryGiveFocus(record);
      }
    });
  }, [tryGiveFocus]);
  var tryRecordFocus = useCallback(function tryRecordFocus(id) {
    recordRef.current = null;
    var focused = document.activeElement;

    if (!focused) {
      return;
    }

    if (focused.getAttribute(dragHandle.draggableId) !== id) {
      return;
    }

    recordRef.current = id;
  }, []);
  useIsomorphicLayoutEffect(function () {
    isMountedRef.current = true;
    return function clearFrameOnUnmount() {
      isMountedRef.current = false;
      var frameId = restoreFocusFrameRef.current;

      if (frameId) {
        cancelAnimationFrame(frameId);
      }
    };
  }, []);
  var marshal = useMemo(function () {
    return {
      register: register,
      tryRecordFocus: tryRecordFocus,
      tryRestoreFocusRecorded: tryRestoreFocusRecorded,
      tryShiftRecord: tryShiftRecord
    };
  }, [register, tryRecordFocus, tryRestoreFocusRecorded, tryShiftRecord]);
  return marshal;
}

function createRegistry() {
  var entries = {
    draggables: {},
    droppables: {}
  };
  var subscribers = [];

  function subscribe(cb) {
    subscribers.push(cb);
    return function unsubscribe() {
      var index = subscribers.indexOf(cb);

      if (index === -1) {
        return;
      }

      subscribers.splice(index, 1);
    };
  }

  function notify(event) {
    if (subscribers.length) {
      subscribers.forEach(function (cb) {
        return cb(event);
      });
    }
  }

  function findDraggableById(id) {
    return entries.draggables[id] || null;
  }

  function getDraggableById(id) {
    var entry = findDraggableById(id);
    !entry ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot find draggable entry with id [" + id + "]") : invariant(false) : void 0;
    return entry;
  }

  var draggableAPI = {
    register: function register(entry) {
      entries.draggables[entry.descriptor.id] = entry;
      notify({
        type: 'ADDITION',
        value: entry
      });
    },
    update: function update(entry, last) {
      var current = entries.draggables[last.descriptor.id];

      if (!current) {
        return;
      }

      if (current.uniqueId !== entry.uniqueId) {
        return;
      }

      delete entries.draggables[last.descriptor.id];
      entries.draggables[entry.descriptor.id] = entry;
    },
    unregister: function unregister(entry) {
      var draggableId = entry.descriptor.id;
      var current = findDraggableById(draggableId);

      if (!current) {
        return;
      }

      if (entry.uniqueId !== current.uniqueId) {
        return;
      }

      delete entries.draggables[draggableId];
      notify({
        type: 'REMOVAL',
        value: entry
      });
    },
    getById: getDraggableById,
    findById: findDraggableById,
    exists: function exists(id) {
      return Boolean(findDraggableById(id));
    },
    getAllByType: function getAllByType(type) {
      return values(entries.draggables).filter(function (entry) {
        return entry.descriptor.type === type;
      });
    }
  };

  function findDroppableById(id) {
    return entries.droppables[id] || null;
  }

  function getDroppableById(id) {
    var entry = findDroppableById(id);
    !entry ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot find droppable entry with id [" + id + "]") : invariant(false) : void 0;
    return entry;
  }

  var droppableAPI = {
    register: function register(entry) {
      entries.droppables[entry.descriptor.id] = entry;
    },
    unregister: function unregister(entry) {
      var current = findDroppableById(entry.descriptor.id);

      if (!current) {
        return;
      }

      if (entry.uniqueId !== current.uniqueId) {
        return;
      }

      delete entries.droppables[entry.descriptor.id];
    },
    getById: getDroppableById,
    findById: findDroppableById,
    exists: function exists(id) {
      return Boolean(findDroppableById(id));
    },
    getAllByType: function getAllByType(type) {
      return values(entries.droppables).filter(function (entry) {
        return entry.descriptor.type === type;
      });
    }
  };

  function clean() {
    entries.draggables = {};
    entries.droppables = {};
    subscribers.length = 0;
  }

  return {
    draggable: draggableAPI,
    droppable: droppableAPI,
    subscribe: subscribe,
    clean: clean
  };
}

function useRegistry() {
  var registry = useMemo(createRegistry, []);
  useEffect(function () {
    return function unmount() {
      requestAnimationFrame(registry.clean);
    };
  }, [registry]);
  return registry;
}

var StoreContext = React__default.createContext(null);

var getBodyElement = (function () {
  var body = document.body;
  !body ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot find document.body') : invariant(false) : void 0;
  return body;
});

var visuallyHidden = {
  position: 'absolute',
  width: '1px',
  height: '1px',
  margin: '-1px',
  border: '0',
  padding: '0',
  overflow: 'hidden',
  clip: 'rect(0 0 0 0)',
  'clip-path': 'inset(100%)'
};

var getId = function getId(contextId) {
  return "rbd-announcement-" + contextId;
};
function useAnnouncer(contextId) {
  var id = useMemo(function () {
    return getId(contextId);
  }, [contextId]);
  var ref = useRef(null);
  useEffect(function setup() {
    var el = document.createElement('div');
    ref.current = el;
    el.id = id;
    el.setAttribute('aria-live', 'assertive');
    el.setAttribute('aria-atomic', 'true');

    _extends(el.style, visuallyHidden);

    getBodyElement().appendChild(el);
    return function cleanup() {
      setTimeout(function remove() {
        var body = getBodyElement();

        if (body.contains(el)) {
          body.removeChild(el);
        }

        if (el === ref.current) {
          ref.current = null;
        }
      });
    };
  }, [id]);
  var announce = useCallback(function (message) {
    var el = ref.current;

    if (el) {
      el.textContent = message;
      return;
    }

    process.env.NODE_ENV !== "production" ? warning("\n      A screen reader message was trying to be announced but it was unable to do so.\n      This can occur if you unmount your <DragDropContext /> in your onDragEnd.\n      Consider calling provided.announce() before the unmount so that the instruction will\n      not be lost for users relying on a screen reader.\n\n      Message not passed to screen reader:\n\n      \"" + message + "\"\n    ") : void 0;
  }, []);
  return announce;
}

var count = 0;
var defaults = {
  separator: '::'
};
function useUniqueId(prefix, options) {
  if (options === void 0) {
    options = defaults;
  }

  return useMemo(function () {
    return "" + prefix + options.separator + count++;
  }, [options.separator, prefix]);
}

function getElementId(_ref) {
  var contextId = _ref.contextId,
      uniqueId = _ref.uniqueId;
  return "rbd-hidden-text-" + contextId + "-" + uniqueId;
}
function useHiddenTextElement(_ref2) {
  var contextId = _ref2.contextId,
      text = _ref2.text;
  var uniqueId = useUniqueId('hidden-text', {
    separator: '-'
  });
  var id = useMemo(function () {
    return getElementId({
      contextId: contextId,
      uniqueId: uniqueId
    });
  }, [uniqueId, contextId]);
  useEffect(function mount() {
    var el = document.createElement('div');
    el.id = id;
    el.textContent = text;
    el.style.display = 'none';
    getBodyElement().appendChild(el);
    return function unmount() {
      var body = getBodyElement();

      if (body.contains(el)) {
        body.removeChild(el);
      }
    };
  }, [id, text]);
  return id;
}

var AppContext = React__default.createContext(null);

var peerDependencies = {
	react: "^16.8.5 || ^17.0.0 || ^18.0.0",
	"react-dom": "^16.8.5 || ^17.0.0 || ^18.0.0"
};

var semver = /(\d+)\.(\d+)\.(\d+)/;

var getVersion = function getVersion(value) {
  var result = semver.exec(value);
  !(result != null) ? process.env.NODE_ENV !== "production" ? invariant(false, "Unable to parse React version " + value) : invariant(false) : void 0;
  var major = Number(result[1]);
  var minor = Number(result[2]);
  var patch = Number(result[3]);
  return {
    major: major,
    minor: minor,
    patch: patch,
    raw: value
  };
};

var isSatisfied = function isSatisfied(expected, actual) {
  if (actual.major > expected.major) {
    return true;
  }

  if (actual.major < expected.major) {
    return false;
  }

  if (actual.minor > expected.minor) {
    return true;
  }

  if (actual.minor < expected.minor) {
    return false;
  }

  return actual.patch >= expected.patch;
};

var checkReactVersion = (function (peerDepValue, actualValue) {
  var peerDep = getVersion(peerDepValue);
  var actual = getVersion(actualValue);

  if (isSatisfied(peerDep, actual)) {
    return;
  }

  process.env.NODE_ENV !== "production" ? warning("\n    React version: [" + actual.raw + "]\n    does not satisfy expected peer dependency version: [" + peerDep.raw + "]\n\n    This can result in run time bugs, and even fatal crashes\n  ") : void 0;
});

var suffix = "\n  We expect a html5 doctype: <!doctype html>\n  This is to ensure consistent browser layout and measurement\n\n  More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/doctype.md\n";
var checkDoctype = (function (doc) {
  var doctype = doc.doctype;

  if (!doctype) {
    process.env.NODE_ENV !== "production" ? warning("\n      No <!doctype html> found.\n\n      " + suffix + "\n    ") : void 0;
    return;
  }

  if (doctype.name.toLowerCase() !== 'html') {
    process.env.NODE_ENV !== "production" ? warning("\n      Unexpected <!doctype> found: (" + doctype.name + ")\n\n      " + suffix + "\n    ") : void 0;
  }

  if (doctype.publicId !== '') {
    process.env.NODE_ENV !== "production" ? warning("\n      Unexpected <!doctype> publicId found: (" + doctype.publicId + ")\n      A html5 doctype does not have a publicId\n\n      " + suffix + "\n    ") : void 0;
  }
});

function useDev(useHook) {
  if (process.env.NODE_ENV !== 'production') {
    useHook();
  }
}

function useDevSetupWarning(fn, inputs) {
  useDev(function () {
    useEffect(function () {
      try {
        fn();
      } catch (e) {
        error("\n          A setup problem was encountered.\n\n          > " + e.message + "\n        ");
      }
    }, inputs);
  });
}

function useStartupValidation() {
  useDevSetupWarning(function () {
    checkReactVersion(peerDependencies.react, React__default.version);
    checkDoctype(document);
  }, []);
}

function usePrevious(current) {
  var ref = useRef(current);
  useEffect(function () {
    ref.current = current;
  });
  return ref;
}

function create() {
  var lock = null;

  function isClaimed() {
    return Boolean(lock);
  }

  function isActive(value) {
    return value === lock;
  }

  function claim(abandon) {
    !!lock ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot claim lock as it is already claimed') : invariant(false) : void 0;
    var newLock = {
      abandon: abandon
    };
    lock = newLock;
    return newLock;
  }

  function release() {
    !lock ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot release lock when there is no lock') : invariant(false) : void 0;
    lock = null;
  }

  function tryAbandon() {
    if (lock) {
      lock.abandon();
      release();
    }
  }

  return {
    isClaimed: isClaimed,
    isActive: isActive,
    claim: claim,
    release: release,
    tryAbandon: tryAbandon
  };
}

var tab = 9;
var enter = 13;
var escape = 27;
var space = 32;
var pageUp = 33;
var pageDown = 34;
var end = 35;
var home = 36;
var arrowLeft = 37;
var arrowUp = 38;
var arrowRight = 39;
var arrowDown = 40;

var _preventedKeys;
var preventedKeys = (_preventedKeys = {}, _preventedKeys[enter] = true, _preventedKeys[tab] = true, _preventedKeys);
var preventStandardKeyEvents = (function (event) {
  if (preventedKeys[event.keyCode]) {
    event.preventDefault();
  }
});

var supportedEventName = function () {
  var base = 'visibilitychange';

  if (typeof document === 'undefined') {
    return base;
  }

  var candidates = [base, "ms" + base, "webkit" + base, "moz" + base, "o" + base];
  var supported = find(candidates, function (eventName) {
    return "on" + eventName in document;
  });
  return supported || base;
}();

var primaryButton = 0;
var sloppyClickThreshold = 5;

function isSloppyClickThresholdExceeded(original, current) {
  return Math.abs(current.x - original.x) >= sloppyClickThreshold || Math.abs(current.y - original.y) >= sloppyClickThreshold;
}

var idle$1 = {
  type: 'IDLE'
};

function getCaptureBindings(_ref) {
  var cancel = _ref.cancel,
      completed = _ref.completed,
      getPhase = _ref.getPhase,
      setPhase = _ref.setPhase;
  return [{
    eventName: 'mousemove',
    fn: function fn(event) {
      var button = event.button,
          clientX = event.clientX,
          clientY = event.clientY;

      if (button !== primaryButton) {
        return;
      }

      var point = {
        x: clientX,
        y: clientY
      };
      var phase = getPhase();

      if (phase.type === 'DRAGGING') {
        event.preventDefault();
        phase.actions.move(point);
        return;
      }

      !(phase.type === 'PENDING') ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot be IDLE') : invariant(false) : void 0;
      var pending = phase.point;

      if (!isSloppyClickThresholdExceeded(pending, point)) {
        return;
      }

      event.preventDefault();
      var actions = phase.actions.fluidLift(point);
      setPhase({
        type: 'DRAGGING',
        actions: actions
      });
    }
  }, {
    eventName: 'mouseup',
    fn: function fn(event) {
      var phase = getPhase();

      if (phase.type !== 'DRAGGING') {
        cancel();
        return;
      }

      event.preventDefault();
      phase.actions.drop({
        shouldBlockNextClick: true
      });
      completed();
    }
  }, {
    eventName: 'mousedown',
    fn: function fn(event) {
      if (getPhase().type === 'DRAGGING') {
        event.preventDefault();
      }

      cancel();
    }
  }, {
    eventName: 'keydown',
    fn: function fn(event) {
      var phase = getPhase();

      if (phase.type === 'PENDING') {
        cancel();
        return;
      }

      if (event.keyCode === escape) {
        event.preventDefault();
        cancel();
        return;
      }

      preventStandardKeyEvents(event);
    }
  }, {
    eventName: 'resize',
    fn: cancel
  }, {
    eventName: 'scroll',
    options: {
      passive: true,
      capture: false
    },
    fn: function fn() {
      if (getPhase().type === 'PENDING') {
        cancel();
      }
    }
  }, {
    eventName: 'webkitmouseforcedown',
    fn: function fn(event) {
      var phase = getPhase();
      !(phase.type !== 'IDLE') ? process.env.NODE_ENV !== "production" ? invariant(false, 'Unexpected phase') : invariant(false) : void 0;

      if (phase.actions.shouldRespectForcePress()) {
        cancel();
        return;
      }

      event.preventDefault();
    }
  }, {
    eventName: supportedEventName,
    fn: cancel
  }];
}

function useMouseSensor(api) {
  var phaseRef = useRef(idle$1);
  var unbindEventsRef = useRef(noop);
  var startCaptureBinding = useMemo(function () {
    return {
      eventName: 'mousedown',
      fn: function onMouseDown(event) {
        if (event.defaultPrevented) {
          return;
        }

        if (event.button !== primaryButton) {
          return;
        }

        if (event.ctrlKey || event.metaKey || event.shiftKey || event.altKey) {
          return;
        }

        var draggableId = api.findClosestDraggableId(event);

        if (!draggableId) {
          return;
        }

        var actions = api.tryGetLock(draggableId, stop, {
          sourceEvent: event
        });

        if (!actions) {
          return;
        }

        event.preventDefault();
        var point = {
          x: event.clientX,
          y: event.clientY
        };
        unbindEventsRef.current();
        startPendingDrag(actions, point);
      }
    };
  }, [api]);
  var preventForcePressBinding = useMemo(function () {
    return {
      eventName: 'webkitmouseforcewillbegin',
      fn: function fn(event) {
        if (event.defaultPrevented) {
          return;
        }

        var id = api.findClosestDraggableId(event);

        if (!id) {
          return;
        }

        var options = api.findOptionsForDraggable(id);

        if (!options) {
          return;
        }

        if (options.shouldRespectForcePress) {
          return;
        }

        if (!api.canGetLock(id)) {
          return;
        }

        event.preventDefault();
      }
    };
  }, [api]);
  var listenForCapture = useCallback(function listenForCapture() {
    var options = {
      passive: false,
      capture: true
    };
    unbindEventsRef.current = bindEvents(window, [preventForcePressBinding, startCaptureBinding], options);
  }, [preventForcePressBinding, startCaptureBinding]);
  var stop = useCallback(function () {
    var current = phaseRef.current;

    if (current.type === 'IDLE') {
      return;
    }

    phaseRef.current = idle$1;
    unbindEventsRef.current();
    listenForCapture();
  }, [listenForCapture]);
  var cancel = useCallback(function () {
    var phase = phaseRef.current;
    stop();

    if (phase.type === 'DRAGGING') {
      phase.actions.cancel({
        shouldBlockNextClick: true
      });
    }

    if (phase.type === 'PENDING') {
      phase.actions.abort();
    }
  }, [stop]);
  var bindCapturingEvents = useCallback(function bindCapturingEvents() {
    var options = {
      capture: true,
      passive: false
    };
    var bindings = getCaptureBindings({
      cancel: cancel,
      completed: stop,
      getPhase: function getPhase() {
        return phaseRef.current;
      },
      setPhase: function setPhase(phase) {
        phaseRef.current = phase;
      }
    });
    unbindEventsRef.current = bindEvents(window, bindings, options);
  }, [cancel, stop]);
  var startPendingDrag = useCallback(function startPendingDrag(actions, point) {
    !(phaseRef.current.type === 'IDLE') ? process.env.NODE_ENV !== "production" ? invariant(false, 'Expected to move from IDLE to PENDING drag') : invariant(false) : void 0;
    phaseRef.current = {
      type: 'PENDING',
      point: point,
      actions: actions
    };
    bindCapturingEvents();
  }, [bindCapturingEvents]);
  useIsomorphicLayoutEffect(function mount() {
    listenForCapture();
    return function unmount() {
      unbindEventsRef.current();
    };
  }, [listenForCapture]);
}

var _scrollJumpKeys;

function noop$1() {}

var scrollJumpKeys = (_scrollJumpKeys = {}, _scrollJumpKeys[pageDown] = true, _scrollJumpKeys[pageUp] = true, _scrollJumpKeys[home] = true, _scrollJumpKeys[end] = true, _scrollJumpKeys);

function getDraggingBindings(actions, stop) {
  function cancel() {
    stop();
    actions.cancel();
  }

  function drop() {
    stop();
    actions.drop();
  }

  return [{
    eventName: 'keydown',
    fn: function fn(event) {
      if (event.keyCode === escape) {
        event.preventDefault();
        cancel();
        return;
      }

      if (event.keyCode === space) {
        event.preventDefault();
        drop();
        return;
      }

      if (event.keyCode === arrowDown) {
        event.preventDefault();
        actions.moveDown();
        return;
      }

      if (event.keyCode === arrowUp) {
        event.preventDefault();
        actions.moveUp();
        return;
      }

      if (event.keyCode === arrowRight) {
        event.preventDefault();
        actions.moveRight();
        return;
      }

      if (event.keyCode === arrowLeft) {
        event.preventDefault();
        actions.moveLeft();
        return;
      }

      if (scrollJumpKeys[event.keyCode]) {
        event.preventDefault();
        return;
      }

      preventStandardKeyEvents(event);
    }
  }, {
    eventName: 'mousedown',
    fn: cancel
  }, {
    eventName: 'mouseup',
    fn: cancel
  }, {
    eventName: 'click',
    fn: cancel
  }, {
    eventName: 'touchstart',
    fn: cancel
  }, {
    eventName: 'resize',
    fn: cancel
  }, {
    eventName: 'wheel',
    fn: cancel,
    options: {
      passive: true
    }
  }, {
    eventName: supportedEventName,
    fn: cancel
  }];
}

function useKeyboardSensor(api) {
  var unbindEventsRef = useRef(noop$1);
  var startCaptureBinding = useMemo(function () {
    return {
      eventName: 'keydown',
      fn: function onKeyDown(event) {
        if (event.defaultPrevented) {
          return;
        }

        if (event.keyCode !== space) {
          return;
        }

        var draggableId = api.findClosestDraggableId(event);

        if (!draggableId) {
          return;
        }

        var preDrag = api.tryGetLock(draggableId, stop, {
          sourceEvent: event
        });

        if (!preDrag) {
          return;
        }

        event.preventDefault();
        var isCapturing = true;
        var actions = preDrag.snapLift();
        unbindEventsRef.current();

        function stop() {
          !isCapturing ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot stop capturing a keyboard drag when not capturing') : invariant(false) : void 0;
          isCapturing = false;
          unbindEventsRef.current();
          listenForCapture();
        }

        unbindEventsRef.current = bindEvents(window, getDraggingBindings(actions, stop), {
          capture: true,
          passive: false
        });
      }
    };
  }, [api]);
  var listenForCapture = useCallback(function tryStartCapture() {
    var options = {
      passive: false,
      capture: true
    };
    unbindEventsRef.current = bindEvents(window, [startCaptureBinding], options);
  }, [startCaptureBinding]);
  useIsomorphicLayoutEffect(function mount() {
    listenForCapture();
    return function unmount() {
      unbindEventsRef.current();
    };
  }, [listenForCapture]);
}

var idle$2 = {
  type: 'IDLE'
};
var timeForLongPress = 120;
var forcePressThreshold = 0.15;

function getWindowBindings(_ref) {
  var cancel = _ref.cancel,
      getPhase = _ref.getPhase;
  return [{
    eventName: 'orientationchange',
    fn: cancel
  }, {
    eventName: 'resize',
    fn: cancel
  }, {
    eventName: 'contextmenu',
    fn: function fn(event) {
      event.preventDefault();
    }
  }, {
    eventName: 'keydown',
    fn: function fn(event) {
      if (getPhase().type !== 'DRAGGING') {
        cancel();
        return;
      }

      if (event.keyCode === escape) {
        event.preventDefault();
      }

      cancel();
    }
  }, {
    eventName: supportedEventName,
    fn: cancel
  }];
}

function getHandleBindings(_ref2) {
  var cancel = _ref2.cancel,
      completed = _ref2.completed,
      getPhase = _ref2.getPhase;
  return [{
    eventName: 'touchmove',
    options: {
      capture: false
    },
    fn: function fn(event) {
      var phase = getPhase();

      if (phase.type !== 'DRAGGING') {
        cancel();
        return;
      }

      phase.hasMoved = true;
      var _event$touches$ = event.touches[0],
          clientX = _event$touches$.clientX,
          clientY = _event$touches$.clientY;
      var point = {
        x: clientX,
        y: clientY
      };
      event.preventDefault();
      phase.actions.move(point);
    }
  }, {
    eventName: 'touchend',
    fn: function fn(event) {
      var phase = getPhase();

      if (phase.type !== 'DRAGGING') {
        cancel();
        return;
      }

      event.preventDefault();
      phase.actions.drop({
        shouldBlockNextClick: true
      });
      completed();
    }
  }, {
    eventName: 'touchcancel',
    fn: function fn(event) {
      if (getPhase().type !== 'DRAGGING') {
        cancel();
        return;
      }

      event.preventDefault();
      cancel();
    }
  }, {
    eventName: 'touchforcechange',
    fn: function fn(event) {
      var phase = getPhase();
      !(phase.type !== 'IDLE') ? process.env.NODE_ENV !== "production" ? invariant(false) : invariant(false) : void 0;
      var touch = event.touches[0];

      if (!touch) {
        return;
      }

      var isForcePress = touch.force >= forcePressThreshold;

      if (!isForcePress) {
        return;
      }

      var shouldRespect = phase.actions.shouldRespectForcePress();

      if (phase.type === 'PENDING') {
        if (shouldRespect) {
          cancel();
        }

        return;
      }

      if (shouldRespect) {
        if (phase.hasMoved) {
          event.preventDefault();
          return;
        }

        cancel();
        return;
      }

      event.preventDefault();
    }
  }, {
    eventName: supportedEventName,
    fn: cancel
  }];
}

function useTouchSensor(api) {
  var phaseRef = useRef(idle$2);
  var unbindEventsRef = useRef(noop);
  var getPhase = useCallback(function getPhase() {
    return phaseRef.current;
  }, []);
  var setPhase = useCallback(function setPhase(phase) {
    phaseRef.current = phase;
  }, []);
  var startCaptureBinding = useMemo(function () {
    return {
      eventName: 'touchstart',
      fn: function onTouchStart(event) {
        if (event.defaultPrevented) {
          return;
        }

        var draggableId = api.findClosestDraggableId(event);

        if (!draggableId) {
          return;
        }

        var actions = api.tryGetLock(draggableId, stop, {
          sourceEvent: event
        });

        if (!actions) {
          return;
        }

        var touch = event.touches[0];
        var clientX = touch.clientX,
            clientY = touch.clientY;
        var point = {
          x: clientX,
          y: clientY
        };
        unbindEventsRef.current();
        startPendingDrag(actions, point);
      }
    };
  }, [api]);
  var listenForCapture = useCallback(function listenForCapture() {
    var options = {
      capture: true,
      passive: false
    };
    unbindEventsRef.current = bindEvents(window, [startCaptureBinding], options);
  }, [startCaptureBinding]);
  var stop = useCallback(function () {
    var current = phaseRef.current;

    if (current.type === 'IDLE') {
      return;
    }

    if (current.type === 'PENDING') {
      clearTimeout(current.longPressTimerId);
    }

    setPhase(idle$2);
    unbindEventsRef.current();
    listenForCapture();
  }, [listenForCapture, setPhase]);
  var cancel = useCallback(function () {
    var phase = phaseRef.current;
    stop();

    if (phase.type === 'DRAGGING') {
      phase.actions.cancel({
        shouldBlockNextClick: true
      });
    }

    if (phase.type === 'PENDING') {
      phase.actions.abort();
    }
  }, [stop]);
  var bindCapturingEvents = useCallback(function bindCapturingEvents() {
    var options = {
      capture: true,
      passive: false
    };
    var args = {
      cancel: cancel,
      completed: stop,
      getPhase: getPhase
    };
    var unbindTarget = bindEvents(window, getHandleBindings(args), options);
    var unbindWindow = bindEvents(window, getWindowBindings(args), options);

    unbindEventsRef.current = function unbindAll() {
      unbindTarget();
      unbindWindow();
    };
  }, [cancel, getPhase, stop]);
  var startDragging = useCallback(function startDragging() {
    var phase = getPhase();
    !(phase.type === 'PENDING') ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot start dragging from phase " + phase.type) : invariant(false) : void 0;
    var actions = phase.actions.fluidLift(phase.point);
    setPhase({
      type: 'DRAGGING',
      actions: actions,
      hasMoved: false
    });
  }, [getPhase, setPhase]);
  var startPendingDrag = useCallback(function startPendingDrag(actions, point) {
    !(getPhase().type === 'IDLE') ? process.env.NODE_ENV !== "production" ? invariant(false, 'Expected to move from IDLE to PENDING drag') : invariant(false) : void 0;
    var longPressTimerId = setTimeout(startDragging, timeForLongPress);
    setPhase({
      type: 'PENDING',
      point: point,
      actions: actions,
      longPressTimerId: longPressTimerId
    });
    bindCapturingEvents();
  }, [bindCapturingEvents, getPhase, setPhase, startDragging]);
  useIsomorphicLayoutEffect(function mount() {
    listenForCapture();
    return function unmount() {
      unbindEventsRef.current();
      var phase = getPhase();

      if (phase.type === 'PENDING') {
        clearTimeout(phase.longPressTimerId);
        setPhase(idle$2);
      }
    };
  }, [getPhase, listenForCapture, setPhase]);
  useIsomorphicLayoutEffect(function webkitHack() {
    var unbind = bindEvents(window, [{
      eventName: 'touchmove',
      fn: function fn() {},
      options: {
        capture: false,
        passive: false
      }
    }]);
    return unbind;
  }, []);
}

function useValidateSensorHooks(sensorHooks) {
  useDev(function () {
    var previousRef = usePrevious(sensorHooks);
    useDevSetupWarning(function () {
      !(previousRef.current.length === sensorHooks.length) ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot change the amount of sensor hooks after mounting') : invariant(false) : void 0;
    });
  });
}

var interactiveTagNames = {
  input: true,
  button: true,
  textarea: true,
  select: true,
  option: true,
  optgroup: true,
  video: true,
  audio: true
};

function isAnInteractiveElement(parent, current) {
  if (current == null) {
    return false;
  }

  var hasAnInteractiveTag = Boolean(interactiveTagNames[current.tagName.toLowerCase()]);

  if (hasAnInteractiveTag) {
    return true;
  }

  var attribute = current.getAttribute('contenteditable');

  if (attribute === 'true' || attribute === '') {
    return true;
  }

  if (current === parent) {
    return false;
  }

  return isAnInteractiveElement(parent, current.parentElement);
}

function isEventInInteractiveElement(draggable, event) {
  var target = event.target;

  if (!isHtmlElement(target)) {
    return false;
  }

  return isAnInteractiveElement(draggable, target);
}

var getBorderBoxCenterPosition = (function (el) {
  return getRect(el.getBoundingClientRect()).center;
});

function isElement(el) {
  return el instanceof getWindowFromEl(el).Element;
}

var supportedMatchesName = function () {
  var base = 'matches';

  if (typeof document === 'undefined') {
    return base;
  }

  var candidates = [base, 'msMatchesSelector', 'webkitMatchesSelector'];
  var value = find(candidates, function (name) {
    return name in Element.prototype;
  });
  return value || base;
}();

function closestPonyfill(el, selector) {
  if (el == null) {
    return null;
  }

  if (el[supportedMatchesName](selector)) {
    return el;
  }

  return closestPonyfill(el.parentElement, selector);
}

function closest$1(el, selector) {
  if (el.closest) {
    return el.closest(selector);
  }

  return closestPonyfill(el, selector);
}

function getSelector(contextId) {
  return "[" + dragHandle.contextId + "=\"" + contextId + "\"]";
}

function findClosestDragHandleFromEvent(contextId, event) {
  var target = event.target;

  if (!isElement(target)) {
    process.env.NODE_ENV !== "production" ? warning('event.target must be a Element') : void 0;
    return null;
  }

  var selector = getSelector(contextId);
  var handle = closest$1(target, selector);

  if (!handle) {
    return null;
  }

  if (!isHtmlElement(handle)) {
    process.env.NODE_ENV !== "production" ? warning('drag handle must be a HTMLElement') : void 0;
    return null;
  }

  return handle;
}

function tryGetClosestDraggableIdFromEvent(contextId, event) {
  var handle = findClosestDragHandleFromEvent(contextId, event);

  if (!handle) {
    return null;
  }

  return handle.getAttribute(dragHandle.draggableId);
}

function findDraggable(contextId, draggableId) {
  var selector = "[" + draggable.contextId + "=\"" + contextId + "\"]";
  var possible = toArray(document.querySelectorAll(selector));
  var draggable$1 = find(possible, function (el) {
    return el.getAttribute(draggable.id) === draggableId;
  });

  if (!draggable$1) {
    return null;
  }

  if (!isHtmlElement(draggable$1)) {
    process.env.NODE_ENV !== "production" ? warning('Draggable element is not a HTMLElement') : void 0;
    return null;
  }

  return draggable$1;
}

function preventDefault(event) {
  event.preventDefault();
}

function _isActive(_ref) {
  var expected = _ref.expected,
      phase = _ref.phase,
      isLockActive = _ref.isLockActive,
      shouldWarn = _ref.shouldWarn;

  if (!isLockActive()) {
    if (shouldWarn) {
      process.env.NODE_ENV !== "production" ? warning("\n        Cannot perform action.\n        The sensor no longer has an action lock.\n\n        Tips:\n\n        - Throw away your action handlers when forceStop() is called\n        - Check actions.isActive() if you really need to\n      ") : void 0;
    }

    return false;
  }

  if (expected !== phase) {
    if (shouldWarn) {
      process.env.NODE_ENV !== "production" ? warning("\n        Cannot perform action.\n        The actions you used belong to an outdated phase\n\n        Current phase: " + expected + "\n        You called an action from outdated phase: " + phase + "\n\n        Tips:\n\n        - Do not use preDragActions actions after calling preDragActions.lift()\n      ") : void 0;
    }

    return false;
  }

  return true;
}

function canStart(_ref2) {
  var lockAPI = _ref2.lockAPI,
      store = _ref2.store,
      registry = _ref2.registry,
      draggableId = _ref2.draggableId;

  if (lockAPI.isClaimed()) {
    return false;
  }

  var entry = registry.draggable.findById(draggableId);

  if (!entry) {
    process.env.NODE_ENV !== "production" ? warning("Unable to find draggable with id: " + draggableId) : void 0;
    return false;
  }

  if (!entry.options.isEnabled) {
    return false;
  }

  if (!canStartDrag(store.getState(), draggableId)) {
    return false;
  }

  return true;
}

function tryStart(_ref3) {
  var lockAPI = _ref3.lockAPI,
      contextId = _ref3.contextId,
      store = _ref3.store,
      registry = _ref3.registry,
      draggableId = _ref3.draggableId,
      forceSensorStop = _ref3.forceSensorStop,
      sourceEvent = _ref3.sourceEvent;
  var shouldStart = canStart({
    lockAPI: lockAPI,
    store: store,
    registry: registry,
    draggableId: draggableId
  });

  if (!shouldStart) {
    return null;
  }

  var entry = registry.draggable.getById(draggableId);
  var el = findDraggable(contextId, entry.descriptor.id);

  if (!el) {
    process.env.NODE_ENV !== "production" ? warning("Unable to find draggable element with id: " + draggableId) : void 0;
    return null;
  }

  if (sourceEvent && !entry.options.canDragInteractiveElements && isEventInInteractiveElement(el, sourceEvent)) {
    return null;
  }

  var lock = lockAPI.claim(forceSensorStop || noop);
  var phase = 'PRE_DRAG';

  function getShouldRespectForcePress() {
    return entry.options.shouldRespectForcePress;
  }

  function isLockActive() {
    return lockAPI.isActive(lock);
  }

  function tryDispatch(expected, getAction) {
    if (_isActive({
      expected: expected,
      phase: phase,
      isLockActive: isLockActive,
      shouldWarn: true
    })) {
      store.dispatch(getAction());
    }
  }

  var tryDispatchWhenDragging = tryDispatch.bind(null, 'DRAGGING');

  function lift$1(args) {
    function completed() {
      lockAPI.release();
      phase = 'COMPLETED';
    }

    if (phase !== 'PRE_DRAG') {
      completed();
      !(phase === 'PRE_DRAG') ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot lift in phase " + phase) : invariant(false) : void 0;
    }

    store.dispatch(lift(args.liftActionArgs));
    phase = 'DRAGGING';

    function finish(reason, options) {
      if (options === void 0) {
        options = {
          shouldBlockNextClick: false
        };
      }

      args.cleanup();

      if (options.shouldBlockNextClick) {
        var unbind = bindEvents(window, [{
          eventName: 'click',
          fn: preventDefault,
          options: {
            once: true,
            passive: false,
            capture: true
          }
        }]);
        setTimeout(unbind);
      }

      completed();
      store.dispatch(drop({
        reason: reason
      }));
    }

    return _extends({
      isActive: function isActive() {
        return _isActive({
          expected: 'DRAGGING',
          phase: phase,
          isLockActive: isLockActive,
          shouldWarn: false
        });
      },
      shouldRespectForcePress: getShouldRespectForcePress,
      drop: function drop(options) {
        return finish('DROP', options);
      },
      cancel: function cancel(options) {
        return finish('CANCEL', options);
      }
    }, args.actions);
  }

  function fluidLift(clientSelection) {
    var move$1 = rafSchd(function (client) {
      tryDispatchWhenDragging(function () {
        return move({
          client: client
        });
      });
    });
    var api = lift$1({
      liftActionArgs: {
        id: draggableId,
        clientSelection: clientSelection,
        movementMode: 'FLUID'
      },
      cleanup: function cleanup() {
        return move$1.cancel();
      },
      actions: {
        move: move$1
      }
    });
    return _extends({}, api, {
      move: move$1
    });
  }

  function snapLift() {
    var actions = {
      moveUp: function moveUp$1() {
        return tryDispatchWhenDragging(moveUp);
      },
      moveRight: function moveRight$1() {
        return tryDispatchWhenDragging(moveRight);
      },
      moveDown: function moveDown$1() {
        return tryDispatchWhenDragging(moveDown);
      },
      moveLeft: function moveLeft$1() {
        return tryDispatchWhenDragging(moveLeft);
      }
    };
    return lift$1({
      liftActionArgs: {
        id: draggableId,
        clientSelection: getBorderBoxCenterPosition(el),
        movementMode: 'SNAP'
      },
      cleanup: noop,
      actions: actions
    });
  }

  function abortPreDrag() {
    var shouldRelease = _isActive({
      expected: 'PRE_DRAG',
      phase: phase,
      isLockActive: isLockActive,
      shouldWarn: true
    });

    if (shouldRelease) {
      lockAPI.release();
    }
  }

  var preDrag = {
    isActive: function isActive() {
      return _isActive({
        expected: 'PRE_DRAG',
        phase: phase,
        isLockActive: isLockActive,
        shouldWarn: false
      });
    },
    shouldRespectForcePress: getShouldRespectForcePress,
    fluidLift: fluidLift,
    snapLift: snapLift,
    abort: abortPreDrag
  };
  return preDrag;
}

var defaultSensors = [useMouseSensor, useKeyboardSensor, useTouchSensor];
function useSensorMarshal(_ref4) {
  var contextId = _ref4.contextId,
      store = _ref4.store,
      registry = _ref4.registry,
      customSensors = _ref4.customSensors,
      enableDefaultSensors = _ref4.enableDefaultSensors;
  var useSensors = [].concat(enableDefaultSensors ? defaultSensors : [], customSensors || []);
  var lockAPI = useState(function () {
    return create();
  })[0];
  var tryAbandonLock = useCallback(function tryAbandonLock(previous, current) {
    if (previous.isDragging && !current.isDragging) {
      lockAPI.tryAbandon();
    }
  }, [lockAPI]);
  useIsomorphicLayoutEffect(function listenToStore() {
    var previous = store.getState();
    var unsubscribe = store.subscribe(function () {
      var current = store.getState();
      tryAbandonLock(previous, current);
      previous = current;
    });
    return unsubscribe;
  }, [lockAPI, store, tryAbandonLock]);
  useIsomorphicLayoutEffect(function () {
    return lockAPI.tryAbandon;
  }, [lockAPI.tryAbandon]);
  var canGetLock = useCallback(function (draggableId) {
    return canStart({
      lockAPI: lockAPI,
      registry: registry,
      store: store,
      draggableId: draggableId
    });
  }, [lockAPI, registry, store]);
  var tryGetLock = useCallback(function (draggableId, forceStop, options) {
    return tryStart({
      lockAPI: lockAPI,
      registry: registry,
      contextId: contextId,
      store: store,
      draggableId: draggableId,
      forceSensorStop: forceStop,
      sourceEvent: options && options.sourceEvent ? options.sourceEvent : null
    });
  }, [contextId, lockAPI, registry, store]);
  var findClosestDraggableId = useCallback(function (event) {
    return tryGetClosestDraggableIdFromEvent(contextId, event);
  }, [contextId]);
  var findOptionsForDraggable = useCallback(function (id) {
    var entry = registry.draggable.findById(id);
    return entry ? entry.options : null;
  }, [registry.draggable]);
  var tryReleaseLock = useCallback(function tryReleaseLock() {
    if (!lockAPI.isClaimed()) {
      return;
    }

    lockAPI.tryAbandon();

    if (store.getState().phase !== 'IDLE') {
      store.dispatch(flush());
    }
  }, [lockAPI, store]);
  var isLockClaimed = useCallback(lockAPI.isClaimed, [lockAPI]);
  var api = useMemo(function () {
    return {
      canGetLock: canGetLock,
      tryGetLock: tryGetLock,
      findClosestDraggableId: findClosestDraggableId,
      findOptionsForDraggable: findOptionsForDraggable,
      tryReleaseLock: tryReleaseLock,
      isLockClaimed: isLockClaimed
    };
  }, [canGetLock, tryGetLock, findClosestDraggableId, findOptionsForDraggable, tryReleaseLock, isLockClaimed]);
  useValidateSensorHooks(useSensors);

  for (var i = 0; i < useSensors.length; i++) {
    useSensors[i](api);
  }
}

var createResponders = function createResponders(props) {
  return {
    onBeforeCapture: props.onBeforeCapture,
    onBeforeDragStart: props.onBeforeDragStart,
    onDragStart: props.onDragStart,
    onDragEnd: props.onDragEnd,
    onDragUpdate: props.onDragUpdate
  };
};

function getStore(lazyRef) {
  !lazyRef.current ? process.env.NODE_ENV !== "production" ? invariant(false, 'Could not find store from lazy ref') : invariant(false) : void 0;
  return lazyRef.current;
}

function App(props) {
  var contextId = props.contextId,
      setCallbacks = props.setCallbacks,
      sensors = props.sensors,
      nonce = props.nonce,
      dragHandleUsageInstructions = props.dragHandleUsageInstructions;
  var lazyStoreRef = useRef(null);
  useStartupValidation();
  var lastPropsRef = usePrevious(props);
  var getResponders = useCallback(function () {
    return createResponders(lastPropsRef.current);
  }, [lastPropsRef]);
  var announce = useAnnouncer(contextId);
  var dragHandleUsageInstructionsId = useHiddenTextElement({
    contextId: contextId,
    text: dragHandleUsageInstructions
  });
  var styleMarshal = useStyleMarshal(contextId, nonce);
  var lazyDispatch = useCallback(function (action) {
    getStore(lazyStoreRef).dispatch(action);
  }, []);
  var marshalCallbacks = useMemo(function () {
    return bindActionCreators$1({
      publishWhileDragging: publishWhileDragging,
      updateDroppableScroll: updateDroppableScroll,
      updateDroppableIsEnabled: updateDroppableIsEnabled,
      updateDroppableIsCombineEnabled: updateDroppableIsCombineEnabled,
      collectionStarting: collectionStarting
    }, lazyDispatch);
  }, [lazyDispatch]);
  var registry = useRegistry();
  var dimensionMarshal = useMemo(function () {
    return createDimensionMarshal(registry, marshalCallbacks);
  }, [registry, marshalCallbacks]);
  var autoScroller = useMemo(function () {
    return createAutoScroller(_extends({
      scrollWindow: scrollWindow,
      scrollDroppable: dimensionMarshal.scrollDroppable
    }, bindActionCreators$1({
      move: move
    }, lazyDispatch)));
  }, [dimensionMarshal.scrollDroppable, lazyDispatch]);
  var focusMarshal = useFocusMarshal(contextId);
  var store = useMemo(function () {
    return createStore({
      announce: announce,
      autoScroller: autoScroller,
      dimensionMarshal: dimensionMarshal,
      focusMarshal: focusMarshal,
      getResponders: getResponders,
      styleMarshal: styleMarshal
    });
  }, [announce, autoScroller, dimensionMarshal, focusMarshal, getResponders, styleMarshal]);

  if (process.env.NODE_ENV !== 'production') {
    if (lazyStoreRef.current && lazyStoreRef.current !== store) {
      process.env.NODE_ENV !== "production" ? warning('unexpected store change') : void 0;
    }
  }

  lazyStoreRef.current = store;
  var tryResetStore = useCallback(function () {
    var current = getStore(lazyStoreRef);
    var state = current.getState();

    if (state.phase !== 'IDLE') {
      current.dispatch(flush());
    }
  }, []);
  var isDragging = useCallback(function () {
    var state = getStore(lazyStoreRef).getState();
    return state.isDragging || state.phase === 'DROP_ANIMATING';
  }, []);
  var appCallbacks = useMemo(function () {
    return {
      isDragging: isDragging,
      tryAbort: tryResetStore
    };
  }, [isDragging, tryResetStore]);
  setCallbacks(appCallbacks);
  var getCanLift = useCallback(function (id) {
    return canStartDrag(getStore(lazyStoreRef).getState(), id);
  }, []);
  var getIsMovementAllowed = useCallback(function () {
    return isMovementAllowed(getStore(lazyStoreRef).getState());
  }, []);
  var appContext = useMemo(function () {
    return {
      marshal: dimensionMarshal,
      focus: focusMarshal,
      contextId: contextId,
      canLift: getCanLift,
      isMovementAllowed: getIsMovementAllowed,
      dragHandleUsageInstructionsId: dragHandleUsageInstructionsId,
      registry: registry
    };
  }, [contextId, dimensionMarshal, dragHandleUsageInstructionsId, focusMarshal, getCanLift, getIsMovementAllowed, registry]);
  useSensorMarshal({
    contextId: contextId,
    store: store,
    registry: registry,
    customSensors: sensors,
    enableDefaultSensors: props.enableDefaultSensors !== false
  });
  useEffect(function () {
    return tryResetStore;
  }, [tryResetStore]);
  return React__default.createElement(AppContext.Provider, {
    value: appContext
  }, React__default.createElement(Provider, {
    context: StoreContext,
    store: store
  }, props.children));
}

var count$1 = 0;
function useInstanceCount() {
  return useMemo(function () {
    return "" + count$1++;
  }, []);
}
function DragDropContext(props) {
  var contextId = useInstanceCount();
  var dragHandleUsageInstructions = props.dragHandleUsageInstructions || preset.dragHandleUsageInstructions;
  return React__default.createElement(ErrorBoundary, null, function (setCallbacks) {
    return React__default.createElement(App, {
      nonce: props.nonce,
      contextId: contextId,
      setCallbacks: setCallbacks,
      dragHandleUsageInstructions: dragHandleUsageInstructions,
      enableDefaultSensors: props.enableDefaultSensors,
      sensors: props.sensors,
      onBeforeCapture: props.onBeforeCapture,
      onBeforeDragStart: props.onBeforeDragStart,
      onDragStart: props.onDragStart,
      onDragUpdate: props.onDragUpdate,
      onDragEnd: props.onDragEnd
    }, props.children);
  });
}

var isEqual$1 = function isEqual(base) {
  return function (value) {
    return base === value;
  };
};

var isScroll = isEqual$1('scroll');
var isAuto = isEqual$1('auto');
var isVisible$1 = isEqual$1('visible');

var isEither = function isEither(overflow, fn) {
  return fn(overflow.overflowX) || fn(overflow.overflowY);
};

var isBoth = function isBoth(overflow, fn) {
  return fn(overflow.overflowX) && fn(overflow.overflowY);
};

var isElementScrollable = function isElementScrollable(el) {
  var style = window.getComputedStyle(el);
  var overflow = {
    overflowX: style.overflowX,
    overflowY: style.overflowY
  };
  return isEither(overflow, isScroll) || isEither(overflow, isAuto);
};

var isBodyScrollable = function isBodyScrollable() {
  if (process.env.NODE_ENV === 'production') {
    return false;
  }

  var body = getBodyElement();
  var html = document.documentElement;
  !html ? process.env.NODE_ENV !== "production" ? invariant(false) : invariant(false) : void 0;

  if (!isElementScrollable(body)) {
    return false;
  }

  var htmlStyle = window.getComputedStyle(html);
  var htmlOverflow = {
    overflowX: htmlStyle.overflowX,
    overflowY: htmlStyle.overflowY
  };

  if (isBoth(htmlOverflow, isVisible$1)) {
    return false;
  }

  process.env.NODE_ENV !== "production" ? warning("\n    We have detected that your <body> element might be a scroll container.\n    We have found no reliable way of detecting whether the <body> element is a scroll container.\n    Under most circumstances a <body> scroll bar will be on the <html> element (document.documentElement)\n\n    Because we cannot determine if the <body> is a scroll container, and generally it is not one,\n    we will be treating the <body> as *not* a scroll container\n\n    More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/how-we-detect-scroll-containers.md\n  ") : void 0;
  return false;
};

var getClosestScrollable = function getClosestScrollable(el) {
  if (el == null) {
    return null;
  }

  if (el === document.body) {
    return isBodyScrollable() ? el : null;
  }

  if (el === document.documentElement) {
    return null;
  }

  if (!isElementScrollable(el)) {
    return getClosestScrollable(el.parentElement);
  }

  return el;
};

var checkForNestedScrollContainers = (function (scrollable) {
  if (!scrollable) {
    return;
  }

  var anotherScrollParent = getClosestScrollable(scrollable.parentElement);

  if (!anotherScrollParent) {
    return;
  }

  process.env.NODE_ENV !== "production" ? warning("\n    Droppable: unsupported nested scroll container detected.\n    A Droppable can only have one scroll parent (which can be itself)\n    Nested scroll containers are currently not supported.\n\n    We hope to support nested scroll containers soon: https://github.com/atlassian/react-beautiful-dnd/issues/131\n  ") : void 0;
});

var getScroll$1 = (function (el) {
  return {
    x: el.scrollLeft,
    y: el.scrollTop
  };
});

var getIsFixed = function getIsFixed(el) {
  if (!el) {
    return false;
  }

  var style = window.getComputedStyle(el);

  if (style.position === 'fixed') {
    return true;
  }

  return getIsFixed(el.parentElement);
};

var getEnv = (function (start) {
  var closestScrollable = getClosestScrollable(start);
  var isFixedOnPage = getIsFixed(start);
  return {
    closestScrollable: closestScrollable,
    isFixedOnPage: isFixedOnPage
  };
});

var getDroppableDimension = (function (_ref) {
  var descriptor = _ref.descriptor,
      isEnabled = _ref.isEnabled,
      isCombineEnabled = _ref.isCombineEnabled,
      isFixedOnPage = _ref.isFixedOnPage,
      direction = _ref.direction,
      client = _ref.client,
      page = _ref.page,
      closest = _ref.closest;

  var frame = function () {
    if (!closest) {
      return null;
    }

    var scrollSize = closest.scrollSize,
        frameClient = closest.client;
    var maxScroll = getMaxScroll({
      scrollHeight: scrollSize.scrollHeight,
      scrollWidth: scrollSize.scrollWidth,
      height: frameClient.paddingBox.height,
      width: frameClient.paddingBox.width
    });
    return {
      pageMarginBox: closest.page.marginBox,
      frameClient: frameClient,
      scrollSize: scrollSize,
      shouldClipSubject: closest.shouldClipSubject,
      scroll: {
        initial: closest.scroll,
        current: closest.scroll,
        max: maxScroll,
        diff: {
          value: origin,
          displacement: origin
        }
      }
    };
  }();

  var axis = direction === 'vertical' ? vertical : horizontal;
  var subject = getSubject({
    page: page,
    withPlaceholder: null,
    axis: axis,
    frame: frame
  });
  var dimension = {
    descriptor: descriptor,
    isCombineEnabled: isCombineEnabled,
    isFixedOnPage: isFixedOnPage,
    axis: axis,
    isEnabled: isEnabled,
    client: client,
    page: page,
    frame: frame,
    subject: subject
  };
  return dimension;
});

var getClient = function getClient(targetRef, closestScrollable) {
  var base = getBox(targetRef);

  if (!closestScrollable) {
    return base;
  }

  if (targetRef !== closestScrollable) {
    return base;
  }

  var top = base.paddingBox.top - closestScrollable.scrollTop;
  var left = base.paddingBox.left - closestScrollable.scrollLeft;
  var bottom = top + closestScrollable.scrollHeight;
  var right = left + closestScrollable.scrollWidth;
  var paddingBox = {
    top: top,
    right: right,
    bottom: bottom,
    left: left
  };
  var borderBox = expand(paddingBox, base.border);
  var client = createBox({
    borderBox: borderBox,
    margin: base.margin,
    border: base.border,
    padding: base.padding
  });
  return client;
};

var getDimension = (function (_ref) {
  var ref = _ref.ref,
      descriptor = _ref.descriptor,
      env = _ref.env,
      windowScroll = _ref.windowScroll,
      direction = _ref.direction,
      isDropDisabled = _ref.isDropDisabled,
      isCombineEnabled = _ref.isCombineEnabled,
      shouldClipSubject = _ref.shouldClipSubject;
  var closestScrollable = env.closestScrollable;
  var client = getClient(ref, closestScrollable);
  var page = withScroll(client, windowScroll);

  var closest = function () {
    if (!closestScrollable) {
      return null;
    }

    var frameClient = getBox(closestScrollable);
    var scrollSize = {
      scrollHeight: closestScrollable.scrollHeight,
      scrollWidth: closestScrollable.scrollWidth
    };
    return {
      client: frameClient,
      page: withScroll(frameClient, windowScroll),
      scroll: getScroll$1(closestScrollable),
      scrollSize: scrollSize,
      shouldClipSubject: shouldClipSubject
    };
  }();

  var dimension = getDroppableDimension({
    descriptor: descriptor,
    isEnabled: !isDropDisabled,
    isCombineEnabled: isCombineEnabled,
    isFixedOnPage: env.isFixedOnPage,
    direction: direction,
    client: client,
    page: page,
    closest: closest
  });
  return dimension;
});

var immediate = {
  passive: false
};
var delayed = {
  passive: true
};
var getListenerOptions = (function (options) {
  return options.shouldPublishImmediately ? immediate : delayed;
});

function useRequiredContext(Context) {
  var result = useContext(Context);
  !result ? process.env.NODE_ENV !== "production" ? invariant(false, 'Could not find required context') : invariant(false) : void 0;
  return result;
}

var getClosestScrollableFromDrag = function getClosestScrollableFromDrag(dragging) {
  return dragging && dragging.env.closestScrollable || null;
};

function useDroppablePublisher(args) {
  var whileDraggingRef = useRef(null);
  var appContext = useRequiredContext(AppContext);
  var uniqueId = useUniqueId('droppable');
  var registry = appContext.registry,
      marshal = appContext.marshal;
  var previousRef = usePrevious(args);
  var descriptor = useMemo(function () {
    return {
      id: args.droppableId,
      type: args.type,
      mode: args.mode
    };
  }, [args.droppableId, args.mode, args.type]);
  var publishedDescriptorRef = useRef(descriptor);
  var memoizedUpdateScroll = useMemo(function () {
    return memoizeOne(function (x, y) {
      !whileDraggingRef.current ? process.env.NODE_ENV !== "production" ? invariant(false, 'Can only update scroll when dragging') : invariant(false) : void 0;
      var scroll = {
        x: x,
        y: y
      };
      marshal.updateDroppableScroll(descriptor.id, scroll);
    });
  }, [descriptor.id, marshal]);
  var getClosestScroll = useCallback(function () {
    var dragging = whileDraggingRef.current;

    if (!dragging || !dragging.env.closestScrollable) {
      return origin;
    }

    return getScroll$1(dragging.env.closestScrollable);
  }, []);
  var updateScroll = useCallback(function () {
    var scroll = getClosestScroll();
    memoizedUpdateScroll(scroll.x, scroll.y);
  }, [getClosestScroll, memoizedUpdateScroll]);
  var scheduleScrollUpdate = useMemo(function () {
    return rafSchd(updateScroll);
  }, [updateScroll]);
  var onClosestScroll = useCallback(function () {
    var dragging = whileDraggingRef.current;
    var closest = getClosestScrollableFromDrag(dragging);
    !(dragging && closest) ? process.env.NODE_ENV !== "production" ? invariant(false, 'Could not find scroll options while scrolling') : invariant(false) : void 0;
    var options = dragging.scrollOptions;

    if (options.shouldPublishImmediately) {
      updateScroll();
      return;
    }

    scheduleScrollUpdate();
  }, [scheduleScrollUpdate, updateScroll]);
  var getDimensionAndWatchScroll = useCallback(function (windowScroll, options) {
    !!whileDraggingRef.current ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot collect a droppable while a drag is occurring') : invariant(false) : void 0;
    var previous = previousRef.current;
    var ref = previous.getDroppableRef();
    !ref ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot collect without a droppable ref') : invariant(false) : void 0;
    var env = getEnv(ref);
    var dragging = {
      ref: ref,
      descriptor: descriptor,
      env: env,
      scrollOptions: options
    };
    whileDraggingRef.current = dragging;
    var dimension = getDimension({
      ref: ref,
      descriptor: descriptor,
      env: env,
      windowScroll: windowScroll,
      direction: previous.direction,
      isDropDisabled: previous.isDropDisabled,
      isCombineEnabled: previous.isCombineEnabled,
      shouldClipSubject: !previous.ignoreContainerClipping
    });
    var scrollable = env.closestScrollable;

    if (scrollable) {
      scrollable.setAttribute(scrollContainer.contextId, appContext.contextId);
      scrollable.addEventListener('scroll', onClosestScroll, getListenerOptions(dragging.scrollOptions));

      if (process.env.NODE_ENV !== 'production') {
        checkForNestedScrollContainers(scrollable);
      }
    }

    return dimension;
  }, [appContext.contextId, descriptor, onClosestScroll, previousRef]);
  var getScrollWhileDragging = useCallback(function () {
    var dragging = whileDraggingRef.current;
    var closest = getClosestScrollableFromDrag(dragging);
    !(dragging && closest) ? process.env.NODE_ENV !== "production" ? invariant(false, 'Can only recollect Droppable client for Droppables that have a scroll container') : invariant(false) : void 0;
    return getScroll$1(closest);
  }, []);
  var dragStopped = useCallback(function () {
    var dragging = whileDraggingRef.current;
    !dragging ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot stop drag when no active drag') : invariant(false) : void 0;
    var closest = getClosestScrollableFromDrag(dragging);
    whileDraggingRef.current = null;

    if (!closest) {
      return;
    }

    scheduleScrollUpdate.cancel();
    closest.removeAttribute(scrollContainer.contextId);
    closest.removeEventListener('scroll', onClosestScroll, getListenerOptions(dragging.scrollOptions));
  }, [onClosestScroll, scheduleScrollUpdate]);
  var scroll = useCallback(function (change) {
    var dragging = whileDraggingRef.current;
    !dragging ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot scroll when there is no drag') : invariant(false) : void 0;
    var closest = getClosestScrollableFromDrag(dragging);
    !closest ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot scroll a droppable with no closest scrollable') : invariant(false) : void 0;
    closest.scrollTop += change.y;
    closest.scrollLeft += change.x;
  }, []);
  var callbacks = useMemo(function () {
    return {
      getDimensionAndWatchScroll: getDimensionAndWatchScroll,
      getScrollWhileDragging: getScrollWhileDragging,
      dragStopped: dragStopped,
      scroll: scroll
    };
  }, [dragStopped, getDimensionAndWatchScroll, getScrollWhileDragging, scroll]);
  var entry = useMemo(function () {
    return {
      uniqueId: uniqueId,
      descriptor: descriptor,
      callbacks: callbacks
    };
  }, [callbacks, descriptor, uniqueId]);
  useIsomorphicLayoutEffect(function () {
    publishedDescriptorRef.current = entry.descriptor;
    registry.droppable.register(entry);
    return function () {
      if (whileDraggingRef.current) {
        process.env.NODE_ENV !== "production" ? warning('Unsupported: changing the droppableId or type of a Droppable during a drag') : void 0;
        dragStopped();
      }

      registry.droppable.unregister(entry);
    };
  }, [callbacks, descriptor, dragStopped, entry, marshal, registry.droppable]);
  useIsomorphicLayoutEffect(function () {
    if (!whileDraggingRef.current) {
      return;
    }

    marshal.updateDroppableIsEnabled(publishedDescriptorRef.current.id, !args.isDropDisabled);
  }, [args.isDropDisabled, marshal]);
  useIsomorphicLayoutEffect(function () {
    if (!whileDraggingRef.current) {
      return;
    }

    marshal.updateDroppableIsCombineEnabled(publishedDescriptorRef.current.id, args.isCombineEnabled);
  }, [args.isCombineEnabled, marshal]);
}

function noop$2() {}

var empty = {
  width: 0,
  height: 0,
  margin: noSpacing
};

var getSize = function getSize(_ref) {
  var isAnimatingOpenOnMount = _ref.isAnimatingOpenOnMount,
      placeholder = _ref.placeholder,
      animate = _ref.animate;

  if (isAnimatingOpenOnMount) {
    return empty;
  }

  if (animate === 'close') {
    return empty;
  }

  return {
    height: placeholder.client.borderBox.height,
    width: placeholder.client.borderBox.width,
    margin: placeholder.client.margin
  };
};

var getStyle = function getStyle(_ref2) {
  var isAnimatingOpenOnMount = _ref2.isAnimatingOpenOnMount,
      placeholder = _ref2.placeholder,
      animate = _ref2.animate;
  var size = getSize({
    isAnimatingOpenOnMount: isAnimatingOpenOnMount,
    placeholder: placeholder,
    animate: animate
  });
  return {
    display: placeholder.display,
    boxSizing: 'border-box',
    width: size.width,
    height: size.height,
    marginTop: size.margin.top,
    marginRight: size.margin.right,
    marginBottom: size.margin.bottom,
    marginLeft: size.margin.left,
    flexShrink: '0',
    flexGrow: '0',
    pointerEvents: 'none',
    transition: animate !== 'none' ? transitions.placeholder : null
  };
};

function Placeholder(props) {
  var animateOpenTimerRef = useRef(null);
  var tryClearAnimateOpenTimer = useCallback(function () {
    if (!animateOpenTimerRef.current) {
      return;
    }

    clearTimeout(animateOpenTimerRef.current);
    animateOpenTimerRef.current = null;
  }, []);
  var animate = props.animate,
      onTransitionEnd = props.onTransitionEnd,
      onClose = props.onClose,
      contextId = props.contextId;

  var _useState = useState(props.animate === 'open'),
      isAnimatingOpenOnMount = _useState[0],
      setIsAnimatingOpenOnMount = _useState[1];

  useEffect(function () {
    if (!isAnimatingOpenOnMount) {
      return noop$2;
    }

    if (animate !== 'open') {
      tryClearAnimateOpenTimer();
      setIsAnimatingOpenOnMount(false);
      return noop$2;
    }

    if (animateOpenTimerRef.current) {
      return noop$2;
    }

    animateOpenTimerRef.current = setTimeout(function () {
      animateOpenTimerRef.current = null;
      setIsAnimatingOpenOnMount(false);
    });
    return tryClearAnimateOpenTimer;
  }, [animate, isAnimatingOpenOnMount, tryClearAnimateOpenTimer]);
  var onSizeChangeEnd = useCallback(function (event) {
    if (event.propertyName !== 'height') {
      return;
    }

    onTransitionEnd();

    if (animate === 'close') {
      onClose();
    }
  }, [animate, onClose, onTransitionEnd]);
  var style = getStyle({
    isAnimatingOpenOnMount: isAnimatingOpenOnMount,
    animate: props.animate,
    placeholder: props.placeholder
  });
  return React__default.createElement(props.placeholder.tagName, {
    style: style,
    'data-rbd-placeholder-context-id': contextId,
    onTransitionEnd: onSizeChangeEnd,
    ref: props.innerRef
  });
}

var Placeholder$1 = React__default.memo(Placeholder);

var DroppableContext = React__default.createContext(null);

function checkIsValidInnerRef(el) {
  !(el && isHtmlElement(el)) ? process.env.NODE_ENV !== "production" ? invariant(false, "\n    provided.innerRef has not been provided with a HTMLElement.\n\n    You can find a guide on using the innerRef callback functions at:\n    https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/using-inner-ref.md\n  ") : invariant(false) : void 0;
}

function isBoolean(value) {
  return typeof value === 'boolean';
}

function runChecks(args, checks) {
  checks.forEach(function (check) {
    return check(args);
  });
}

var shared = [function required(_ref) {
  var props = _ref.props;
  !props.droppableId ? process.env.NODE_ENV !== "production" ? invariant(false, 'A Droppable requires a droppableId prop') : invariant(false) : void 0;
  !(typeof props.droppableId === 'string') ? process.env.NODE_ENV !== "production" ? invariant(false, "A Droppable requires a [string] droppableId. Provided: [" + typeof props.droppableId + "]") : invariant(false) : void 0;
}, function _boolean(_ref2) {
  var props = _ref2.props;
  !isBoolean(props.isDropDisabled) ? process.env.NODE_ENV !== "production" ? invariant(false, 'isDropDisabled must be a boolean') : invariant(false) : void 0;
  !isBoolean(props.isCombineEnabled) ? process.env.NODE_ENV !== "production" ? invariant(false, 'isCombineEnabled must be a boolean') : invariant(false) : void 0;
  !isBoolean(props.ignoreContainerClipping) ? process.env.NODE_ENV !== "production" ? invariant(false, 'ignoreContainerClipping must be a boolean') : invariant(false) : void 0;
}, function ref(_ref3) {
  var getDroppableRef = _ref3.getDroppableRef;
  checkIsValidInnerRef(getDroppableRef());
}];
var standard = [function placeholder(_ref4) {
  var props = _ref4.props,
      getPlaceholderRef = _ref4.getPlaceholderRef;

  if (!props.placeholder) {
    return;
  }

  var ref = getPlaceholderRef();

  if (ref) {
    return;
  }

  process.env.NODE_ENV !== "production" ? warning("\n      Droppable setup issue [droppableId: \"" + props.droppableId + "\"]:\n      DroppableProvided > placeholder could not be found.\n\n      Please be sure to add the {provided.placeholder} React Node as a child of your Droppable.\n      More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/api/droppable.md\n    ") : void 0;
}];
var virtual = [function hasClone(_ref5) {
  var props = _ref5.props;
  !props.renderClone ? process.env.NODE_ENV !== "production" ? invariant(false, 'Must provide a clone render function (renderClone) for virtual lists') : invariant(false) : void 0;
}, function hasNoPlaceholder(_ref6) {
  var getPlaceholderRef = _ref6.getPlaceholderRef;
  !!getPlaceholderRef() ? process.env.NODE_ENV !== "production" ? invariant(false, 'Expected virtual list to not have a placeholder') : invariant(false) : void 0;
}];
function useValidation(args) {
  useDevSetupWarning(function () {
    runChecks(args, shared);

    if (args.props.mode === 'standard') {
      runChecks(args, standard);
    }

    if (args.props.mode === 'virtual') {
      runChecks(args, virtual);
    }
  });
}

var AnimateInOut = function (_React$PureComponent) {
  _inheritsLoose(AnimateInOut, _React$PureComponent);

  function AnimateInOut() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;
    _this.state = {
      isVisible: Boolean(_this.props.on),
      data: _this.props.on,
      animate: _this.props.shouldAnimate && _this.props.on ? 'open' : 'none'
    };

    _this.onClose = function () {
      if (_this.state.animate !== 'close') {
        return;
      }

      _this.setState({
        isVisible: false
      });
    };

    return _this;
  }

  AnimateInOut.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (!props.shouldAnimate) {
      return {
        isVisible: Boolean(props.on),
        data: props.on,
        animate: 'none'
      };
    }

    if (props.on) {
      return {
        isVisible: true,
        data: props.on,
        animate: 'open'
      };
    }

    if (state.isVisible) {
      return {
        isVisible: true,
        data: state.data,
        animate: 'close'
      };
    }

    return {
      isVisible: false,
      animate: 'close',
      data: null
    };
  };

  var _proto = AnimateInOut.prototype;

  _proto.render = function render() {
    if (!this.state.isVisible) {
      return null;
    }

    var provided = {
      onClose: this.onClose,
      data: this.state.data,
      animate: this.state.animate
    };
    return this.props.children(provided);
  };

  return AnimateInOut;
}(React__default.PureComponent);

var zIndexOptions = {
  dragging: 5000,
  dropAnimating: 4500
};

var getDraggingTransition = function getDraggingTransition(shouldAnimateDragMovement, dropping) {
  if (dropping) {
    return transitions.drop(dropping.duration);
  }

  if (shouldAnimateDragMovement) {
    return transitions.snap;
  }

  return transitions.fluid;
};

var getDraggingOpacity = function getDraggingOpacity(isCombining, isDropAnimating) {
  if (!isCombining) {
    return null;
  }

  return isDropAnimating ? combine.opacity.drop : combine.opacity.combining;
};

var getShouldDraggingAnimate = function getShouldDraggingAnimate(dragging) {
  if (dragging.forceShouldAnimate != null) {
    return dragging.forceShouldAnimate;
  }

  return dragging.mode === 'SNAP';
};

function getDraggingStyle(dragging) {
  var dimension = dragging.dimension;
  var box = dimension.client;
  var offset = dragging.offset,
      combineWith = dragging.combineWith,
      dropping = dragging.dropping;
  var isCombining = Boolean(combineWith);
  var shouldAnimate = getShouldDraggingAnimate(dragging);
  var isDropAnimating = Boolean(dropping);
  var transform = isDropAnimating ? transforms.drop(offset, isCombining) : transforms.moveTo(offset);
  var style = {
    position: 'fixed',
    top: box.marginBox.top,
    left: box.marginBox.left,
    boxSizing: 'border-box',
    width: box.borderBox.width,
    height: box.borderBox.height,
    transition: getDraggingTransition(shouldAnimate, dropping),
    transform: transform,
    opacity: getDraggingOpacity(isCombining, isDropAnimating),
    zIndex: isDropAnimating ? zIndexOptions.dropAnimating : zIndexOptions.dragging,
    pointerEvents: 'none'
  };
  return style;
}

function getSecondaryStyle(secondary) {
  return {
    transform: transforms.moveTo(secondary.offset),
    transition: secondary.shouldAnimateDisplacement ? null : 'none'
  };
}

function getStyle$1(mapped) {
  return mapped.type === 'DRAGGING' ? getDraggingStyle(mapped) : getSecondaryStyle(mapped);
}

function getDimension$1(descriptor, el, windowScroll) {
  if (windowScroll === void 0) {
    windowScroll = origin;
  }

  var computedStyles = window.getComputedStyle(el);
  var borderBox = el.getBoundingClientRect();
  var client = calculateBox(borderBox, computedStyles);
  var page = withScroll(client, windowScroll);
  var placeholder = {
    client: client,
    tagName: el.tagName.toLowerCase(),
    display: computedStyles.display
  };
  var displaceBy = {
    x: client.marginBox.width,
    y: client.marginBox.height
  };
  var dimension = {
    descriptor: descriptor,
    placeholder: placeholder,
    displaceBy: displaceBy,
    client: client,
    page: page
  };
  return dimension;
}

function useDraggablePublisher(args) {
  var uniqueId = useUniqueId('draggable');
  var descriptor = args.descriptor,
      registry = args.registry,
      getDraggableRef = args.getDraggableRef,
      canDragInteractiveElements = args.canDragInteractiveElements,
      shouldRespectForcePress = args.shouldRespectForcePress,
      isEnabled = args.isEnabled;
  var options = useMemo(function () {
    return {
      canDragInteractiveElements: canDragInteractiveElements,
      shouldRespectForcePress: shouldRespectForcePress,
      isEnabled: isEnabled
    };
  }, [canDragInteractiveElements, isEnabled, shouldRespectForcePress]);
  var getDimension = useCallback(function (windowScroll) {
    var el = getDraggableRef();
    !el ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot get dimension when no ref is set') : invariant(false) : void 0;
    return getDimension$1(descriptor, el, windowScroll);
  }, [descriptor, getDraggableRef]);
  var entry = useMemo(function () {
    return {
      uniqueId: uniqueId,
      descriptor: descriptor,
      options: options,
      getDimension: getDimension
    };
  }, [descriptor, getDimension, options, uniqueId]);
  var publishedRef = useRef(entry);
  var isFirstPublishRef = useRef(true);
  useIsomorphicLayoutEffect(function () {
    registry.draggable.register(publishedRef.current);
    return function () {
      return registry.draggable.unregister(publishedRef.current);
    };
  }, [registry.draggable]);
  useIsomorphicLayoutEffect(function () {
    if (isFirstPublishRef.current) {
      isFirstPublishRef.current = false;
      return;
    }

    var last = publishedRef.current;
    publishedRef.current = entry;
    registry.draggable.update(entry, last);
  }, [entry, registry.draggable]);
}

function useValidation$1(props, contextId, getRef) {
  useDevSetupWarning(function () {
    function prefix(id) {
      return "Draggable[id: " + id + "]: ";
    }

    var id = props.draggableId;
    !id ? process.env.NODE_ENV !== "production" ? invariant(false, 'Draggable requires a draggableId') : invariant(false) : void 0;
    !(typeof id === 'string') ? process.env.NODE_ENV !== "production" ? invariant(false, "Draggable requires a [string] draggableId.\n      Provided: [type: " + typeof id + "] (value: " + id + ")") : invariant(false) : void 0;
    !isInteger(props.index) ? process.env.NODE_ENV !== "production" ? invariant(false, prefix(id) + " requires an integer index prop") : invariant(false) : void 0;

    if (props.mapped.type === 'DRAGGING') {
      return;
    }

    checkIsValidInnerRef(getRef());

    if (props.isEnabled) {
      !findDragHandle(contextId, id) ? process.env.NODE_ENV !== "production" ? invariant(false, prefix(id) + " Unable to find drag handle") : invariant(false) : void 0;
    }
  });
}
function useClonePropValidation(isClone) {
  useDev(function () {
    var initialRef = useRef(isClone);
    useDevSetupWarning(function () {
      !(isClone === initialRef.current) ? process.env.NODE_ENV !== "production" ? invariant(false, 'Draggable isClone prop value changed during component life') : invariant(false) : void 0;
    }, [isClone]);
  });
}

function preventHtml5Dnd(event) {
  event.preventDefault();
}

function Draggable(props) {
  var ref = useRef(null);
  var setRef = useCallback(function (el) {
    ref.current = el;
  }, []);
  var getRef = useCallback(function () {
    return ref.current;
  }, []);

  var _useRequiredContext = useRequiredContext(AppContext),
      contextId = _useRequiredContext.contextId,
      dragHandleUsageInstructionsId = _useRequiredContext.dragHandleUsageInstructionsId,
      registry = _useRequiredContext.registry;

  var _useRequiredContext2 = useRequiredContext(DroppableContext),
      type = _useRequiredContext2.type,
      droppableId = _useRequiredContext2.droppableId;

  var descriptor = useMemo(function () {
    return {
      id: props.draggableId,
      index: props.index,
      type: type,
      droppableId: droppableId
    };
  }, [props.draggableId, props.index, type, droppableId]);
  var children = props.children,
      draggableId = props.draggableId,
      isEnabled = props.isEnabled,
      shouldRespectForcePress = props.shouldRespectForcePress,
      canDragInteractiveElements = props.canDragInteractiveElements,
      isClone = props.isClone,
      mapped = props.mapped,
      dropAnimationFinishedAction = props.dropAnimationFinished;
  useValidation$1(props, contextId, getRef);
  useClonePropValidation(isClone);

  if (!isClone) {
    var forPublisher = useMemo(function () {
      return {
        descriptor: descriptor,
        registry: registry,
        getDraggableRef: getRef,
        canDragInteractiveElements: canDragInteractiveElements,
        shouldRespectForcePress: shouldRespectForcePress,
        isEnabled: isEnabled
      };
    }, [descriptor, registry, getRef, canDragInteractiveElements, shouldRespectForcePress, isEnabled]);
    useDraggablePublisher(forPublisher);
  }

  var dragHandleProps = useMemo(function () {
    return isEnabled ? {
      tabIndex: 0,
      role: 'button',
      'aria-describedby': dragHandleUsageInstructionsId,
      'data-rbd-drag-handle-draggable-id': draggableId,
      'data-rbd-drag-handle-context-id': contextId,
      draggable: false,
      onDragStart: preventHtml5Dnd
    } : null;
  }, [contextId, dragHandleUsageInstructionsId, draggableId, isEnabled]);
  var onMoveEnd = useCallback(function (event) {
    if (mapped.type !== 'DRAGGING') {
      return;
    }

    if (!mapped.dropping) {
      return;
    }

    if (event.propertyName !== 'transform') {
      return;
    }

    dropAnimationFinishedAction();
  }, [dropAnimationFinishedAction, mapped]);
  var provided = useMemo(function () {
    var style = getStyle$1(mapped);
    var onTransitionEnd = mapped.type === 'DRAGGING' && mapped.dropping ? onMoveEnd : null;
    var result = {
      innerRef: setRef,
      draggableProps: {
        'data-rbd-draggable-context-id': contextId,
        'data-rbd-draggable-id': draggableId,
        style: style,
        onTransitionEnd: onTransitionEnd
      },
      dragHandleProps: dragHandleProps
    };
    return result;
  }, [contextId, dragHandleProps, draggableId, mapped, onMoveEnd, setRef]);
  var rubric = useMemo(function () {
    return {
      draggableId: descriptor.id,
      type: descriptor.type,
      source: {
        index: descriptor.index,
        droppableId: descriptor.droppableId
      }
    };
  }, [descriptor.droppableId, descriptor.id, descriptor.index, descriptor.type]);
  return children(provided, mapped.snapshot, rubric);
}

var isStrictEqual = (function (a, b) {
  return a === b;
});

var whatIsDraggedOverFromResult = (function (result) {
  var combine = result.combine,
      destination = result.destination;

  if (destination) {
    return destination.droppableId;
  }

  if (combine) {
    return combine.droppableId;
  }

  return null;
});

var getCombineWithFromResult = function getCombineWithFromResult(result) {
  return result.combine ? result.combine.draggableId : null;
};

var getCombineWithFromImpact = function getCombineWithFromImpact(impact) {
  return impact.at && impact.at.type === 'COMBINE' ? impact.at.combine.draggableId : null;
};

function getDraggableSelector() {
  var memoizedOffset = memoizeOne(function (x, y) {
    return {
      x: x,
      y: y
    };
  });
  var getMemoizedSnapshot = memoizeOne(function (mode, isClone, draggingOver, combineWith, dropping) {
    return {
      isDragging: true,
      isClone: isClone,
      isDropAnimating: Boolean(dropping),
      dropAnimation: dropping,
      mode: mode,
      draggingOver: draggingOver,
      combineWith: combineWith,
      combineTargetFor: null
    };
  });
  var getMemoizedProps = memoizeOne(function (offset, mode, dimension, isClone, draggingOver, combineWith, forceShouldAnimate) {
    return {
      mapped: {
        type: 'DRAGGING',
        dropping: null,
        draggingOver: draggingOver,
        combineWith: combineWith,
        mode: mode,
        offset: offset,
        dimension: dimension,
        forceShouldAnimate: forceShouldAnimate,
        snapshot: getMemoizedSnapshot(mode, isClone, draggingOver, combineWith, null)
      }
    };
  });

  var selector = function selector(state, ownProps) {
    if (state.isDragging) {
      if (state.critical.draggable.id !== ownProps.draggableId) {
        return null;
      }

      var offset = state.current.client.offset;
      var dimension = state.dimensions.draggables[ownProps.draggableId];
      var draggingOver = whatIsDraggedOver(state.impact);
      var combineWith = getCombineWithFromImpact(state.impact);
      var forceShouldAnimate = state.forceShouldAnimate;
      return getMemoizedProps(memoizedOffset(offset.x, offset.y), state.movementMode, dimension, ownProps.isClone, draggingOver, combineWith, forceShouldAnimate);
    }

    if (state.phase === 'DROP_ANIMATING') {
      var completed = state.completed;

      if (completed.result.draggableId !== ownProps.draggableId) {
        return null;
      }

      var isClone = ownProps.isClone;
      var _dimension = state.dimensions.draggables[ownProps.draggableId];
      var result = completed.result;
      var mode = result.mode;

      var _draggingOver = whatIsDraggedOverFromResult(result);

      var _combineWith = getCombineWithFromResult(result);

      var duration = state.dropDuration;
      var dropping = {
        duration: duration,
        curve: curves.drop,
        moveTo: state.newHomeClientOffset,
        opacity: _combineWith ? combine.opacity.drop : null,
        scale: _combineWith ? combine.scale.drop : null
      };
      return {
        mapped: {
          type: 'DRAGGING',
          offset: state.newHomeClientOffset,
          dimension: _dimension,
          dropping: dropping,
          draggingOver: _draggingOver,
          combineWith: _combineWith,
          mode: mode,
          forceShouldAnimate: null,
          snapshot: getMemoizedSnapshot(mode, isClone, _draggingOver, _combineWith, dropping)
        }
      };
    }

    return null;
  };

  return selector;
}

function getSecondarySnapshot(combineTargetFor) {
  return {
    isDragging: false,
    isDropAnimating: false,
    isClone: false,
    dropAnimation: null,
    mode: null,
    draggingOver: null,
    combineTargetFor: combineTargetFor,
    combineWith: null
  };
}

var atRest = {
  mapped: {
    type: 'SECONDARY',
    offset: origin,
    combineTargetFor: null,
    shouldAnimateDisplacement: true,
    snapshot: getSecondarySnapshot(null)
  }
};

function getSecondarySelector() {
  var memoizedOffset = memoizeOne(function (x, y) {
    return {
      x: x,
      y: y
    };
  });
  var getMemoizedSnapshot = memoizeOne(getSecondarySnapshot);
  var getMemoizedProps = memoizeOne(function (offset, combineTargetFor, shouldAnimateDisplacement) {
    if (combineTargetFor === void 0) {
      combineTargetFor = null;
    }

    return {
      mapped: {
        type: 'SECONDARY',
        offset: offset,
        combineTargetFor: combineTargetFor,
        shouldAnimateDisplacement: shouldAnimateDisplacement,
        snapshot: getMemoizedSnapshot(combineTargetFor)
      }
    };
  });

  var getFallback = function getFallback(combineTargetFor) {
    return combineTargetFor ? getMemoizedProps(origin, combineTargetFor, true) : null;
  };

  var getProps = function getProps(ownId, draggingId, impact, afterCritical) {
    var visualDisplacement = impact.displaced.visible[ownId];
    var isAfterCriticalInVirtualList = Boolean(afterCritical.inVirtualList && afterCritical.effected[ownId]);
    var combine = tryGetCombine(impact);
    var combineTargetFor = combine && combine.draggableId === ownId ? draggingId : null;

    if (!visualDisplacement) {
      if (!isAfterCriticalInVirtualList) {
        return getFallback(combineTargetFor);
      }

      if (impact.displaced.invisible[ownId]) {
        return null;
      }

      var change = negate(afterCritical.displacedBy.point);

      var _offset = memoizedOffset(change.x, change.y);

      return getMemoizedProps(_offset, combineTargetFor, true);
    }

    if (isAfterCriticalInVirtualList) {
      return getFallback(combineTargetFor);
    }

    var displaceBy = impact.displacedBy.point;
    var offset = memoizedOffset(displaceBy.x, displaceBy.y);
    return getMemoizedProps(offset, combineTargetFor, visualDisplacement.shouldAnimate);
  };

  var selector = function selector(state, ownProps) {
    if (state.isDragging) {
      if (state.critical.draggable.id === ownProps.draggableId) {
        return null;
      }

      return getProps(ownProps.draggableId, state.critical.draggable.id, state.impact, state.afterCritical);
    }

    if (state.phase === 'DROP_ANIMATING') {
      var completed = state.completed;

      if (completed.result.draggableId === ownProps.draggableId) {
        return null;
      }

      return getProps(ownProps.draggableId, completed.result.draggableId, completed.impact, completed.afterCritical);
    }

    return null;
  };

  return selector;
}

var makeMapStateToProps = function makeMapStateToProps() {
  var draggingSelector = getDraggableSelector();
  var secondarySelector = getSecondarySelector();

  var selector = function selector(state, ownProps) {
    return draggingSelector(state, ownProps) || secondarySelector(state, ownProps) || atRest;
  };

  return selector;
};
var mapDispatchToProps = {
  dropAnimationFinished: dropAnimationFinished
};
var ConnectedDraggable = connect(makeMapStateToProps, mapDispatchToProps, null, {
  context: StoreContext,
  pure: true,
  areStatePropsEqual: isStrictEqual
})(Draggable);

function PrivateDraggable(props) {
  var droppableContext = useRequiredContext(DroppableContext);
  var isUsingCloneFor = droppableContext.isUsingCloneFor;

  if (isUsingCloneFor === props.draggableId && !props.isClone) {
    return null;
  }

  return React__default.createElement(ConnectedDraggable, props);
}
function PublicDraggable(props) {
  var isEnabled = typeof props.isDragDisabled === 'boolean' ? !props.isDragDisabled : true;
  var canDragInteractiveElements = Boolean(props.disableInteractiveElementBlocking);
  var shouldRespectForcePress = Boolean(props.shouldRespectForcePress);
  return React__default.createElement(PrivateDraggable, _extends({}, props, {
    isClone: false,
    isEnabled: isEnabled,
    canDragInteractiveElements: canDragInteractiveElements,
    shouldRespectForcePress: shouldRespectForcePress
  }));
}

function Droppable(props) {
  var appContext = useContext(AppContext);
  !appContext ? process.env.NODE_ENV !== "production" ? invariant(false, 'Could not find app context') : invariant(false) : void 0;
  var contextId = appContext.contextId,
      isMovementAllowed = appContext.isMovementAllowed;
  var droppableRef = useRef(null);
  var placeholderRef = useRef(null);
  var children = props.children,
      droppableId = props.droppableId,
      type = props.type,
      mode = props.mode,
      direction = props.direction,
      ignoreContainerClipping = props.ignoreContainerClipping,
      isDropDisabled = props.isDropDisabled,
      isCombineEnabled = props.isCombineEnabled,
      snapshot = props.snapshot,
      useClone = props.useClone,
      updateViewportMaxScroll = props.updateViewportMaxScroll,
      getContainerForClone = props.getContainerForClone;
  var getDroppableRef = useCallback(function () {
    return droppableRef.current;
  }, []);
  var setDroppableRef = useCallback(function (value) {
    droppableRef.current = value;
  }, []);
  var getPlaceholderRef = useCallback(function () {
    return placeholderRef.current;
  }, []);
  var setPlaceholderRef = useCallback(function (value) {
    placeholderRef.current = value;
  }, []);
  useValidation({
    props: props,
    getDroppableRef: getDroppableRef,
    getPlaceholderRef: getPlaceholderRef
  });
  var onPlaceholderTransitionEnd = useCallback(function () {
    if (isMovementAllowed()) {
      updateViewportMaxScroll({
        maxScroll: getMaxWindowScroll()
      });
    }
  }, [isMovementAllowed, updateViewportMaxScroll]);
  useDroppablePublisher({
    droppableId: droppableId,
    type: type,
    mode: mode,
    direction: direction,
    isDropDisabled: isDropDisabled,
    isCombineEnabled: isCombineEnabled,
    ignoreContainerClipping: ignoreContainerClipping,
    getDroppableRef: getDroppableRef
  });
  var placeholder = React__default.createElement(AnimateInOut, {
    on: props.placeholder,
    shouldAnimate: props.shouldAnimatePlaceholder
  }, function (_ref) {
    var onClose = _ref.onClose,
        data = _ref.data,
        animate = _ref.animate;
    return React__default.createElement(Placeholder$1, {
      placeholder: data,
      onClose: onClose,
      innerRef: setPlaceholderRef,
      animate: animate,
      contextId: contextId,
      onTransitionEnd: onPlaceholderTransitionEnd
    });
  });
  var provided = useMemo(function () {
    return {
      innerRef: setDroppableRef,
      placeholder: placeholder,
      droppableProps: {
        'data-rbd-droppable-id': droppableId,
        'data-rbd-droppable-context-id': contextId
      }
    };
  }, [contextId, droppableId, placeholder, setDroppableRef]);
  var isUsingCloneFor = useClone ? useClone.dragging.draggableId : null;
  var droppableContext = useMemo(function () {
    return {
      droppableId: droppableId,
      type: type,
      isUsingCloneFor: isUsingCloneFor
    };
  }, [droppableId, isUsingCloneFor, type]);

  function getClone() {
    if (!useClone) {
      return null;
    }

    var dragging = useClone.dragging,
        render = useClone.render;
    var node = React__default.createElement(PrivateDraggable, {
      draggableId: dragging.draggableId,
      index: dragging.source.index,
      isClone: true,
      isEnabled: true,
      shouldRespectForcePress: false,
      canDragInteractiveElements: true
    }, function (draggableProvided, draggableSnapshot) {
      return render(draggableProvided, draggableSnapshot, dragging);
    });
    return ReactDOM__default.createPortal(node, getContainerForClone());
  }

  return React__default.createElement(DroppableContext.Provider, {
    value: droppableContext
  }, children(provided, snapshot), getClone());
}

var isMatchingType = function isMatchingType(type, critical) {
  return type === critical.droppable.type;
};

var getDraggable = function getDraggable(critical, dimensions) {
  return dimensions.draggables[critical.draggable.id];
};

var makeMapStateToProps$1 = function makeMapStateToProps() {
  var idleWithAnimation = {
    placeholder: null,
    shouldAnimatePlaceholder: true,
    snapshot: {
      isDraggingOver: false,
      draggingOverWith: null,
      draggingFromThisWith: null,
      isUsingPlaceholder: false
    },
    useClone: null
  };

  var idleWithoutAnimation = _extends({}, idleWithAnimation, {
    shouldAnimatePlaceholder: false
  });

  var getDraggableRubric = memoizeOne(function (descriptor) {
    return {
      draggableId: descriptor.id,
      type: descriptor.type,
      source: {
        index: descriptor.index,
        droppableId: descriptor.droppableId
      }
    };
  });
  var getMapProps = memoizeOne(function (id, isEnabled, isDraggingOverForConsumer, isDraggingOverForImpact, dragging, renderClone) {
    var draggableId = dragging.descriptor.id;
    var isHome = dragging.descriptor.droppableId === id;

    if (isHome) {
      var useClone = renderClone ? {
        render: renderClone,
        dragging: getDraggableRubric(dragging.descriptor)
      } : null;
      var _snapshot = {
        isDraggingOver: isDraggingOverForConsumer,
        draggingOverWith: isDraggingOverForConsumer ? draggableId : null,
        draggingFromThisWith: draggableId,
        isUsingPlaceholder: true
      };
      return {
        placeholder: dragging.placeholder,
        shouldAnimatePlaceholder: false,
        snapshot: _snapshot,
        useClone: useClone
      };
    }

    if (!isEnabled) {
      return idleWithoutAnimation;
    }

    if (!isDraggingOverForImpact) {
      return idleWithAnimation;
    }

    var snapshot = {
      isDraggingOver: isDraggingOverForConsumer,
      draggingOverWith: draggableId,
      draggingFromThisWith: null,
      isUsingPlaceholder: true
    };
    return {
      placeholder: dragging.placeholder,
      shouldAnimatePlaceholder: true,
      snapshot: snapshot,
      useClone: null
    };
  });

  var selector = function selector(state, ownProps) {
    var id = ownProps.droppableId;
    var type = ownProps.type;
    var isEnabled = !ownProps.isDropDisabled;
    var renderClone = ownProps.renderClone;

    if (state.isDragging) {
      var critical = state.critical;

      if (!isMatchingType(type, critical)) {
        return idleWithoutAnimation;
      }

      var dragging = getDraggable(critical, state.dimensions);
      var isDraggingOver = whatIsDraggedOver(state.impact) === id;
      return getMapProps(id, isEnabled, isDraggingOver, isDraggingOver, dragging, renderClone);
    }

    if (state.phase === 'DROP_ANIMATING') {
      var completed = state.completed;

      if (!isMatchingType(type, completed.critical)) {
        return idleWithoutAnimation;
      }

      var _dragging = getDraggable(completed.critical, state.dimensions);

      return getMapProps(id, isEnabled, whatIsDraggedOverFromResult(completed.result) === id, whatIsDraggedOver(completed.impact) === id, _dragging, renderClone);
    }

    if (state.phase === 'IDLE' && state.completed && !state.shouldFlush) {
      var _completed = state.completed;

      if (!isMatchingType(type, _completed.critical)) {
        return idleWithoutAnimation;
      }

      var wasOver = whatIsDraggedOver(_completed.impact) === id;
      var wasCombining = Boolean(_completed.impact.at && _completed.impact.at.type === 'COMBINE');
      var isHome = _completed.critical.droppable.id === id;

      if (wasOver) {
        return wasCombining ? idleWithAnimation : idleWithoutAnimation;
      }

      if (isHome) {
        return idleWithAnimation;
      }

      return idleWithoutAnimation;
    }

    return idleWithoutAnimation;
  };

  return selector;
};
var mapDispatchToProps$1 = {
  updateViewportMaxScroll: updateViewportMaxScroll
};

function getBody() {
  !document.body ? process.env.NODE_ENV !== "production" ? invariant(false, 'document.body is not ready') : invariant(false) : void 0;
  return document.body;
}

var defaultProps = {
  mode: 'standard',
  type: 'DEFAULT',
  direction: 'vertical',
  isDropDisabled: false,
  isCombineEnabled: false,
  ignoreContainerClipping: false,
  renderClone: null,
  getContainerForClone: getBody
};
var ConnectedDroppable = connect(makeMapStateToProps$1, mapDispatchToProps$1, null, {
  context: StoreContext,
  pure: true,
  areStatePropsEqual: isStrictEqual
})(Droppable);
ConnectedDroppable.defaultProps = defaultProps;

var _excluded$6 = ["show", "onCloseModal", "onColumnsOrderChanged", "columns"];
var CustomizeViewModal = function CustomizeViewModal(_ref) {
  var show = _ref.show,
    onCloseModal = _ref.onCloseModal,
    onColumnsOrderChanged = _ref.onColumnsOrderChanged,
    columns = _ref.columns;
    _objectWithoutProperties(_ref, _excluded$6);
  var _useState = useState([]),
    _useState2 = _slicedToArray$4(_useState, 2),
    internalColumns = _useState2[0],
    setInternalColumns = _useState2[1];
  useEffect(function () {
    setInternalColumns(columns);
  }, [columns]);
  var hydrateColumns = function hydrateColumns() {
    onColumnsOrderChanged(_toConsumableArray(internalColumns));
    onCloseModal();
  };
  var onDragEnd = function onDragEnd(result) {
    // dropped outside the list
    if (!result.destination) {
      return;
    }
    var columnsCopy = _toConsumableArray(internalColumns);
    var movedColumn = columnsCopy.splice(result.source.index, 1)[0];
    columnsCopy.splice(result.destination.index, 0, movedColumn);
    setInternalColumns(columnsCopy);
  };
  var triggerVisibility = function triggerVisibility(column, index) {
    var columnsCopy = _toConsumableArray(internalColumns);
    columnsCopy[index].visible = !columnsCopy[index].visible;
    setInternalColumns(_toConsumableArray(columnsCopy));
  };
  var draggables = internalColumns.map(function (column, index) {
    return /*#__PURE__*/React__default.createElement(PublicDraggable, {
      key: column.dataSelector,
      draggableId: column.dataSelector,
      index: index
    }, function (provided, snapshot) {
      return /*#__PURE__*/React__default.createElement(Box, _extends$1({
        marginBottom: "16px",
        ref: provided.innerRef
      }, provided.draggableProps, provided.dragHandleProps), /*#__PURE__*/React__default.createElement(Card, {
        checked: column.visible,
        icon: Move,
        checkbox: true,
        desc: column.display,
        cursor: "move",
        onChange: function onChange() {
          return triggerVisibility(column, index);
        }
      }));
    });
  });
  return /*#__PURE__*/React__default.createElement(Modal, {
    heading: "Customize View",
    show: show,
    greyContent: true,
    modalWidth: "600px",
    roundedBorders: true,
    onCloseModal: onCloseModal
  }, /*#__PURE__*/React__default.createElement(DragDropContext, {
    onDragEnd: onDragEnd
  }, /*#__PURE__*/React__default.createElement(ConnectedDroppable, {
    droppableId: "droppable"
  }, function (provided, snapshot) {
    return /*#__PURE__*/React__default.createElement(Box, _extends$1({}, provided.droppableProps, {
      className: classNames({
        "mb-12": snapshot.isDraggingOver
      }),
      ref: provided.innerRef
    }), draggables);
  })), /*#__PURE__*/React__default.createElement(Box, {
    display: "flex",
    justifyContent: "flex-end"
  }, /*#__PURE__*/React__default.createElement(Button, {
    onClick: hydrateColumns,
    size: "medium",
    colorScheme: "primary",
    marginRight: "16px"
  }, "Save"), /*#__PURE__*/React__default.createElement(Button, {
    onClick: onCloseModal,
    size: "medium"
  }, "Cancel")));
};
CustomizeViewModal.defaultProps = {
  show: false
};
CustomizeViewModal.propTypes = {
  show: propTypes.exports.bool,
  onCloseModal: propTypes.exports.func,
  columns: propTypes.exports.array,
  columnHashMap: propTypes.exports.object,
  onColumnsOrderChanged: propTypes.exports.func
};

var _excluded$5 = ["onClose"];
var TableActiveFiltersDropdown = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var onClose = _ref.onClose;
    _objectWithoutProperties(_ref, _excluded$5);
  var _useState = useState(false),
    _useState2 = _slicedToArray$4(_useState, 2),
    showSecondOptions = _useState2[0],
    setShowSecondOptions = _useState2[1];
  var _useContext = useContext(TableContext),
    filter = _useContext.filter,
    setFilter = _useContext.setFilter;
  var _useState3 = useState({
      column: null,
      selectedFilter: null,
      selectedFilterValue: null,
      join: null,
      selectedFilter2: "Is",
      selectedFilterValue2: null
    }),
    _useState4 = _slicedToArray$4(_useState3, 2),
    localFilter = _useState4[0],
    setLocalFilter = _useState4[1];
  useEffect(function () {
    setLocalFilter(_objectSpread2$1({}, filter));
  }, [filter]);
  var handleFormChange = function handleFormChange(e, field) {
    setLocalFilter(function (localFilter) {
      return _objectSpread2$1(_objectSpread2$1({}, localFilter), {}, _defineProperty$6({}, field, e.target.value));
    });
  };
  var publishLocalFilters = function publishLocalFilters() {
    setFilter(_objectSpread2$1({}, localFilter));
    onClose();
  };
  return /*#__PURE__*/React__default.createElement(Box, {
    ref: ref,
    className: "ui-table__active-filters-dropdown"
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: "filter__row"
  }, /*#__PURE__*/React__default.createElement(SelectField, {
    size: "medium",
    placeholder: "Select filter",
    label: "Filter",
    fontFace: "circularSTD",
    options: availableFilters,
    value: localFilter.selectedFilter,
    onChange: function onChange(e) {
      return handleFormChange(e, "selectedFilter");
    }
  }), /*#__PURE__*/React__default.createElement(TextField, {
    size: "medium",
    label: "Value",
    fontFace: "circularSTD",
    placeholder: "Type something",
    value: localFilter.selectedFilterValue,
    onChange: function onChange(e) {
      return handleFormChange(e, "selectedFilterValue");
    }
  })), showSecondOptions && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Box, {
    className: "filter__radios"
  }, /*#__PURE__*/React__default.createElement(Radio, {
    ringed: true,
    value: "and",
    onChange: function onChange(e) {
      return handleFormChange(e, "join");
    },
    checked: localFilter.join === "and"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    marginY: 0,
    scale: "subhead",
    className: "text-grey-700",
    fontFace: "circularSTD"
  }, "And")), /*#__PURE__*/React__default.createElement(Radio, {
    ringed: true,
    value: "or",
    onChange: function onChange(e) {
      return handleFormChange(e, "join");
    },
    checked: localFilter.join === "or"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    marginY: 0,
    scale: "subhead",
    className: "text-grey-700",
    fontFace: "circularSTD"
  }, "Or"))), /*#__PURE__*/React__default.createElement(Box, {
    className: "filter__row grey"
  }, /*#__PURE__*/React__default.createElement(SelectField, {
    size: "medium",
    placeholder: "Select Filter",
    label: "Filter",
    fontFace: "circularSTD",
    options: availableFilters,
    value: localFilter.selectedFilter2,
    disabled: localFilter.join === null,
    onChange: function onChange(e) {
      return handleFormChange(e, "selectedFilter2");
    }
  }), /*#__PURE__*/React__default.createElement(TextField, {
    size: "medium",
    label: "Value",
    fontFace: "circularSTD",
    placeholder: "Type something",
    value: localFilter.selectedFilterValue2,
    disabled: localFilter.join === null,
    onChange: function onChange(e) {
      return handleFormChange(e, "selectedFilterValue2");
    }
  }), /*#__PURE__*/React__default.createElement(Box, {
    cursor: "pointer",
    onClick: function onClick() {
      return setShowSecondOptions(false);
    }
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: Close
  })))), /*#__PURE__*/React__default.createElement(Box, {
    display: "flex",
    marginTop: "16px"
  }, /*#__PURE__*/React__default.createElement(Button, {
    colorScheme: "primary",
    size: "medium",
    onClick: publishLocalFilters
  }, "Apply filter"), /*#__PURE__*/React__default.createElement(Button, {
    background: "#202B3C",
    marginLeft: 16,
    size: "medium",
    onClick: function onClick() {
      return onClose();
    }
  }, "Cancel")), !showSecondOptions && /*#__PURE__*/React__default.createElement(Box, {
    onClick: function onClick() {
      return setShowSecondOptions(true);
    },
    className: "condition"
  }, /*#__PURE__*/React__default.createElement(Box, {
    cursor: "pointer",
    display: "inline-block",
    className: "text-blue-500 text"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: Add
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    marginY: 0,
    scale: "footnote",
    fontFace: "heroNew"
  }, "Add condition"))));
});
TableActiveFiltersDropdown.defaultProps = {};
TableActiveFiltersDropdown.propTypes = {
  onClose: propTypes.exports.func
};

var _excluded$4 = ["showCheckboxes", "itemsPerPage", "paginate", "paginateRight", "initialCurrentPage", "currentPageSiblings", "asyncPagination", "columns", "data", "search", "enableCsvExport", "enableCustomizeView", "searchPlaceholder", "generatedCsvName", "loading", "checkboxDataSelector", "buttonActionsAlignment", "searchAlignment", "caseSensitiveSearch", "onPageChange", "onRowSelected", "exportCSVUrl", "asyncTotalPages"];
var TableContext = /*#__PURE__*/createContext({});
var Table = function Table(_ref) {
  var showCheckboxes = _ref.showCheckboxes,
    itemsPerPage = _ref.itemsPerPage,
    paginate = _ref.paginate,
    paginateRight = _ref.paginateRight,
    initialCurrentPage = _ref.initialCurrentPage,
    currentPageSiblings = _ref.currentPageSiblings,
    asyncPagination = _ref.asyncPagination,
    columns = _ref.columns,
    data = _ref.data,
    search$1 = _ref.search,
    enableCsvExport = _ref.enableCsvExport,
    enableCustomizeView = _ref.enableCustomizeView;
    _ref.searchPlaceholder;
    var generatedCsvName = _ref.generatedCsvName,
    loading = _ref.loading,
    checkboxDataSelector = _ref.checkboxDataSelector,
    buttonActionsAlignment = _ref.buttonActionsAlignment,
    searchAlignment = _ref.searchAlignment,
    caseSensitiveSearch = _ref.caseSensitiveSearch,
    onPageChange = _ref.onPageChange,
    onRowSelected = _ref.onRowSelected,
    exportCSVUrl = _ref.exportCSVUrl,
    asyncTotalPages = _ref.asyncTotalPages;
    _objectWithoutProperties(_ref, _excluded$4);
  var _useState = useState(),
    _useState2 = _slicedToArray$4(_useState, 2),
    internalCurrentPage = _useState2[0],
    setInternalCurrentPage = _useState2[1];
  var _useExportCsv = useExportCsv(data, generatedCsvName),
    exportCsv = _useExportCsv.exportCsv;
  var _useState3 = useState([]),
    _useState4 = _slicedToArray$4(_useState3, 2),
    processedData = _useState4[0],
    setProcessedData = _useState4[1];
  var _useState5 = useState(""),
    _useState6 = _slicedToArray$4(_useState5, 2),
    searchValue = _useState6[0],
    setSearchValue = _useState6[1];
  var _useState7 = useState([]),
    _useState8 = _slicedToArray$4(_useState7, 2),
    columnHashMap = _useState8[0],
    setColumnHashMap = _useState8[1];
  var _useState9 = useState([]),
    _useState10 = _slicedToArray$4(_useState9, 2),
    selectedRows = _useState10[0],
    setSelectedRows = _useState10[1];
  var _useState11 = useState(false),
    _useState12 = _slicedToArray$4(_useState11, 2),
    showCustomizeView = _useState12[0],
    setShowCustomizeView = _useState12[1];
  var _useState13 = useState([]),
    _useState14 = _slicedToArray$4(_useState13, 2),
    internalColumns = _useState14[0],
    setInternalColumns = _useState14[1];
  var _useState15 = useState(false),
    _useState16 = _slicedToArray$4(_useState15, 2),
    showActiveFiltersDropdown = _useState16[0],
    setShowActiveFiltersDropdown = _useState16[1];
  var _useState17 = useState({
      column: null,
      selectedFilter: null,
      selectedFilterValue: null,
      join: null,
      selectedFilter2: null,
      selectedFilterValue2: null
    }),
    _useState18 = _slicedToArray$4(_useState17, 2),
    filter$1 = _useState18[0],
    setFilter = _useState18[1];
  var _useState19 = useState(null),
    _useState20 = _slicedToArray$4(_useState19, 2),
    sortConfiguration = _useState20[0],
    setSortConfiguration = _useState20[1];
  var target = useRef();
  var trigger = useRef();
  var toggleActiveFilters = function toggleActiveFilters(e) {
    if (e !== false && e && e.target.classList.contains("activeFiltersTrigger")) {
      setShowActiveFiltersDropdown(!showActiveFiltersDropdown);
    }
  };
  var initialContextState = {
    filter: filter$1,
    setFilter: setFilter,
    sortConfiguration: sortConfiguration,
    setSortConfiguration: setSortConfiguration
  };
  var updateInternalColumns = function updateInternalColumns(columns) {
    setInternalColumns(columns.map(function (column) {
      return _objectSpread2$1({
        display: "",
        dataSelector: "",
        uppercase: true,
        sortable: true,
        sortNumerically: false,
        filterable: true,
        width: "",
        minWidth: "",
        maxWidth: "",
        excludeFromCSV: false,
        position: "left",
        visible: true
      }, column);
    }));
  };
  useEffect(function () {
    setInternalCurrentPage(initialCurrentPage);
    updateInternalColumns(columns);
  }, []);
  useEffect(function () {
    var hashMap = {};
    internalColumns.forEach(function (column) {
      hashMap[column.dataSelector] = column;
    });
    setColumnHashMap(hashMap);
  }, [columns, internalColumns]);
  useEffect(function () {
    var detachedData = _toConsumableArray(data);
    if (searchValue) {
      detachedData = search(searchValue, detachedData, columnHashMap, caseSensitiveSearch);
    }
    if (filter$1 && filter$1.column) {
      detachedData = filter(filter$1, detachedData);
    }
    if (sortConfiguration) {
      sort(sortConfiguration, detachedData);
    }
    setProcessedData(detachedData.map(function (item) {
      return _objectSpread2$1(_objectSpread2$1({}, item), {}, {
        uuuid: uniqueRandomString(30, 8)
      });
    }));
  }, [data, searchValue, columnHashMap, filter$1, sortConfiguration]);
  useEffect(function () {
    if (onRowSelected && typeof onRowSelected === "function") {
      onRowSelected(selectedRows);
    }
  }, [selectedRows, onRowSelected]);
  useEffect(function () {
    if (onPageChange && typeof onPageChange === "function") {
      onPageChange(internalCurrentPage);
    }
  }, [internalCurrentPage, onPageChange]);
  useEffect(function () {
    if (showActiveFiltersDropdown) {
      computePosition(trigger.current, target.current, {
        placement: "bottom-start",
        middleware: [offset$1(6), flip(), shift$1()]
      }).then(function (_ref2) {
        var x = _ref2.x,
          y = _ref2.y;
        Object.assign(target.current.style, {
          left: "".concat(x, "px"),
          top: "".concat(y, "px")
        });
      });
    }
  }, [showActiveFiltersDropdown]);
  var filteredColumns = internalColumns.filter(function (column) {
    return column.visible !== false;
  });
  var paginatedData = paginate && !asyncPagination ? _toConsumableArray(processedData).splice((internalCurrentPage - 1) * itemsPerPage, itemsPerPage) : _toConsumableArray(processedData);
  var mappedHeadCells = filteredColumns.map(function (visibleColumn, index) {
    return /*#__PURE__*/React__default.createElement(Box, {
      is: "td",
      key: "".concat(index, "-heading-cell"),
      className: "ui-table__heading-cell",
      style: _objectSpread2$1({}, getColumnWidth(visibleColumn))
    }, /*#__PURE__*/React__default.createElement(TableHeadCell, {
      column: visibleColumn
    }));
  });
  var handlePageChange = function handlePageChange(page) {
    setInternalCurrentPage(page);
  };
  var totalPages = asyncPagination ? asyncTotalPages : Math.ceil(data.length / itemsPerPage);
  var toggleSelectedRows = function toggleSelectedRows(uuuid) {
    var newSelectedRows = _toConsumableArray(selectedRows);
    if (newSelectedRows.includes(uuuid)) {
      newSelectedRows.splice(newSelectedRows.indexOf(uuuid), 1);
    } else {
      newSelectedRows.push(uuuid);
    }
    setSelectedRows(newSelectedRows);
  };
  var toggleAllRows = function toggleAllRows() {
    if (selectedRows.length === paginatedData.length) {
      setSelectedRows([]);
    } else {
      setSelectedRows(paginatedData.map(function (datum) {
        return datum.uuuid;
      }));
    }
  };
  var mappedRows = paginatedData.map(function (datum, index) {
    return /*#__PURE__*/React__default.createElement(Box, {
      is: "tr",
      className: classNames({
        "ui-table__body-row": true,
        checked: selectedRows.includes(datum[checkboxDataSelector])
      }),
      key: "".concat(index, "-row")
    }, showCheckboxes && /*#__PURE__*/React__default.createElement(Box, {
      is: "td",
      className: "ui-table__body-cell is-checkbox",
      style: _objectSpread2$1({}, getColumnWidth(null, true))
    }, /*#__PURE__*/React__default.createElement(Checkbox, {
      value: datum.uuuid,
      checked: selectedRows.includes(datum.uuuid),
      onChange: function onChange() {
        return toggleSelectedRows(datum.uuuid);
      }
    })), filteredColumns.map(function (column, jindex) {
      return /*#__PURE__*/React__default.createElement(Box, {
        is: "td",
        key: "".concat(jindex, "-").concat(index, "-cell"),
        className: "ui-table__body-cell",
        style: _objectSpread2$1({}, getColumnWidth(column))
      }, typeof datum[column.dataSelector] === "string" ? /*#__PURE__*/React__default.createElement(Text$1, {
        fontFace: "circularSTD",
        marginY: 0,
        className: "ui-table__body-cell-text"
      }, datum[column.dataSelector]) : datum[column.dataSelector]);
    }));
  });
  var buttonActionsEnabled = enableCustomizeView && enableCsvExport;
  var handleCsvExport = function handleCsvExport() {
    if (exportCSVUrl) {
      window.open(exportCSVUrl, "_blank");
    } else {
      exportCsv();
    }
  };
  return /*#__PURE__*/React__default.createElement(TableContext.Provider, {
    value: initialContextState
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-table__container"
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-table__header"
  }, search$1 && /*#__PURE__*/React__default.createElement(Box, {
    className: classNames(_defineProperty$6({
      "ui-table__header__search-wrapper": true
    }, searchAlignment, buttonActionsEnabled ? false : searchAlignment))
  }, /*#__PURE__*/React__default.createElement(TextField, {
    leftIcon: Search,
    placeholder: "Placeholder",
    size: "large",
    value: searchValue,
    maxWidth: "320px",
    onChange: function onChange(e) {
      return setSearchValue(e.target.value);
    }
  })), /*#__PURE__*/React__default.createElement(Box, {
    className: classNames(_defineProperty$6({
      "ui-table__header-btns": true
    }, buttonActionsAlignment, search$1 ? false : buttonActionsAlignment))
  }, enableCustomizeView && /*#__PURE__*/React__default.createElement(Button, {
    onClick: function onClick() {
      return setShowCustomizeView(true);
    },
    size: "medium"
  }, "Customize view"), enableCsvExport && /*#__PURE__*/React__default.createElement(Button, {
    leftIcon: ExternalLink,
    size: "medium",
    onClick: handleCsvExport
  }, "Export"))), /*#__PURE__*/React__default.createElement(Box, {
    ref: trigger,
    className: "ui-table__active-filters"
  }, sortConfiguration && /*#__PURE__*/React__default.createElement(Box, {
    className: classNames({
      "ui-table__active-filter-group activeFiltersBox": true
    })
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: Sort2,
    className: "activeFiltersBox"
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    marginX: 8,
    marginY: 0,
    fontFace: "circularSTD",
    scale: "p-16",
    className: "activeFiltersBox"
  }, sortConfiguration.column.display + " ", /*#__PURE__*/React__default.createElement(Box, {
    color: "#8895A7",
    is: "span"
  }, "is"), sortConfiguration.direction === "asc" ? " Ascending" : " Descending"), /*#__PURE__*/React__default.createElement(Icon, {
    icon: Close,
    onClick: function onClick() {
      return setSortConfiguration(null);
    }
  })), filter$1.column && /*#__PURE__*/React__default.createElement(Box, {
    className: classNames({
      "ui-table__active-filter-group activeFiltersTrigger activeFiltersBox": true,
      active: showActiveFiltersDropdown
    }),
    onClick: toggleActiveFilters
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: Funnel,
    className: "activeFiltersTrigger activeFiltersBox"
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "activeFiltersTrigger activeFiltersBox",
    marginX: 8,
    marginY: 0,
    fontFace: "circularSTD",
    scale: "p-16"
  }, filter$1.column.display + " ", /*#__PURE__*/React__default.createElement(Box, {
    color: "#64748B",
    is: "span"
  }, filter$1.selectedFilter.toLowerCase() + " "), filter$1.selectedFilterValue + " ", filter$1.join && /*#__PURE__*/React__default.createElement(Box, {
    is: "span"
  }, filter$1.join, " ", /*#__PURE__*/React__default.createElement(Box, {
    color: "#64748B",
    is: "span"
  }, filter$1.selectedFilter2.toLowerCase(), " ")), filter$1.selectedFilterValue2), /*#__PURE__*/React__default.createElement(Icon, {
    onClick: function onClick() {
      return setFilter({
        column: null,
        selectedFilter: null,
        selectedFilterValue: null,
        join: null,
        selectedFilter2: null,
        selectedFilterValue2: null
      });
    },
    icon: Close,
    className: "activeFiltersBox"
  })), showActiveFiltersDropdown && /*#__PURE__*/React__default.createElement(TableActiveFiltersDropdown, {
    onClose: function onClose() {
      return setShowActiveFiltersDropdown(false);
    },
    ref: target
  })), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-table__wrapper"
  }, /*#__PURE__*/React__default.createElement(Box, {
    is: "table",
    className: "ui-table"
  }, /*#__PURE__*/React__default.createElement(Box, {
    is: "thead",
    className: "ui-table__heading"
  }, /*#__PURE__*/React__default.createElement(Box, {
    is: "tr",
    className: "ui-table__heading-row"
  }, showCheckboxes && /*#__PURE__*/React__default.createElement(Box, {
    is: "td",
    className: "ui-table__heading-cell is-checkbox",
    style: _objectSpread2$1({}, getColumnWidth(null, true))
  }, /*#__PURE__*/React__default.createElement(Checkbox, {
    checked: selectedRows.length === paginatedData.length,
    onChange: toggleAllRows
  })), mappedHeadCells)), /*#__PURE__*/React__default.createElement(Box, {
    is: "tbody",
    className: "ui-table__body"
  }, loading ? /*#__PURE__*/React__default.createElement(Box, {
    is: "tr"
  }, /*#__PURE__*/React__default.createElement(Box, {
    is: "td",
    textAlign: "center",
    colSpan: mappedHeadCells.length
  }, /*#__PURE__*/React__default.createElement(Loader, {
    size: "70px",
    thickness: "6px"
  }))) : mappedRows))), paginate && /*#__PURE__*/React__default.createElement(Box, {
    className: classNames({
      "ui-table__pagination": true,
      right: paginateRight
    }),
    marginTop: "1rem"
  }, totalPages && /*#__PURE__*/React__default.createElement(Pagination, {
    currentPage: internalCurrentPage,
    currentPageSiblings: currentPageSiblings,
    totalPages: totalPages,
    onPageChange: handlePageChange
  })), /*#__PURE__*/React__default.createElement(CustomizeViewModal, {
    show: showCustomizeView,
    onCloseModal: function onCloseModal() {
      return setShowCustomizeView(false);
    },
    columns: internalColumns,
    onColumnsOrderChanged: updateInternalColumns
  })));
};
Table.propTypes = {
  showCheckboxes: propTypes.exports.bool,
  itemsPerPage: propTypes.exports.number,
  paginate: propTypes.exports.bool,
  paginateRight: propTypes.exports.bool,
  currentPage: propTypes.exports.number,
  currentPageSiblings: propTypes.exports.number,
  asyncPagination: propTypes.exports.bool,
  columns: propTypes.exports.array,
  data: propTypes.exports.array,
  search: propTypes.exports.bool,
  enableCsvExport: propTypes.exports.bool,
  enableCustomizeView: propTypes.exports.bool,
  searchPlaceholder: propTypes.exports.string,
  generatedCsvName: propTypes.exports.string,
  loading: propTypes.exports.bool,
  checkboxDataSelector: propTypes.exports.string,
  buttonActionsAlignment: propTypes.exports.oneOf(["left", "right"]),
  searchAlignment: propTypes.exports.oneOf(["left", "right"]),
  onPageChange: propTypes.exports.func,
  caseSensitiveSearch: propTypes.exports.bool,
  onRowSelected: propTypes.exports.func,
  exportCSVUrl: propTypes.exports.string,
  asyncTotalPages: propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.string])
};
Table.defaultProps = {
  itemsPerPage: 10,
  showCheckboxes: false,
  paginate: false,
  paginateRight: false,
  currentPage: 1,
  currentPageSiblings: 3,
  asyncPagination: false,
  generatedCsvName: "Exported CSV",
  searchPlaceholder: "Search",
  checkboxDataSelector: "uuuid",
  buttonActionsAlignment: "left",
  searchAlignment: "left",
  caseSensitiveSearch: false
};

var _excluded$3 = ["size", "options", "labelClass", "labelFontFace", "label", "errorMessage", "leftIcon", "rightIcon", "onChange", "placeholder", "showCheckboxes", "initiallySelectedTags", "maxDropdownHeight", "initiallyClosed", "selectOneItem", "onScrolledToBottom", "loading"];
var TagDropdown = function TagDropdown(_ref) {
  var _classNames2;
  var size = _ref.size,
    options = _ref.options,
    labelClass = _ref.labelClass,
    labelFontFace = _ref.labelFontFace,
    label = _ref.label,
    errorMessage = _ref.errorMessage,
    leftIcon = _ref.leftIcon,
    rightIcon = _ref.rightIcon,
    onChange = _ref.onChange,
    placeholder = _ref.placeholder,
    showCheckboxes = _ref.showCheckboxes,
    initiallySelectedTags = _ref.initiallySelectedTags,
    maxDropdownHeight = _ref.maxDropdownHeight,
    initiallyClosed = _ref.initiallyClosed,
    selectOneItem = _ref.selectOneItem,
    onScrolledToBottom = _ref.onScrolledToBottom,
    loading = _ref.loading;
    _objectWithoutProperties(_ref, _excluded$3);
  var _useState = useState([]),
    _useState2 = _slicedToArray$4(_useState, 2),
    inputTags = _useState2[0],
    setInputTags = _useState2[1];
  var _useState3 = useState([]),
    _useState4 = _slicedToArray$4(_useState3, 2),
    selectedTags = _useState4[0],
    setSelectedTags = _useState4[1];
  var _useState5 = useState(initiallyClosed),
    _useState6 = _slicedToArray$4(_useState5, 2),
    showOptions = _useState6[0],
    setShowOptions = _useState6[1];
  var _useState7 = useState(""),
    _useState8 = _slicedToArray$4(_useState7, 2),
    inputValue = _useState8[0],
    setInputValue = _useState8[1];
  var _useState9 = useState([]),
    _useState10 = _slicedToArray$4(_useState9, 2),
    availableOptions = _useState10[0],
    setAvailableOptions = _useState10[1];
  var validInput = useRef();
  var _useState11 = useState(false),
    _useState12 = _slicedToArray$4(_useState11, 2),
    mounted = _useState12[0],
    setMounted = _useState12[1];
  useEffect(function () {
    setInputTags(_toConsumableArray(options).filter(function (option) {
      if (typeof option === "string") {
        return selectedTags.includes(option);
      } else {
        return selectedTags.includes(option.value);
      }
    }));
  }, [options, selectedTags]);
  useEffect(function () {
    setMounted(true);
    if (initiallySelectedTags && Array.isArray(initiallySelectedTags)) {
      options.forEach(function (option) {
        var optionValue = returnOptionValue(option);
        if (initiallySelectedTags.includes(optionValue)) {
          setSelectedTags(function (tags) {
            var localTags = _toConsumableArray(tags);
            localTags.push(optionValue);
            return localTags;
          });
        }
      });
    }
  }, []);
  useEffect(function () {
    if (mounted) {
      onChange(selectedTags);
    }
  }, [selectedTags]);
  var hideOptionsOnOutsideClick = function hideOptionsOnOutsideClick(e) {
    if (!e.target.closest(".ui-tag-dropdown__wrapper")) {
      setShowOptions(false);
    }
  };
  var toggleOptions = function toggleOptions() {
    setShowOptions(!showOptions);
  };
  var returnOptionValue = function returnOptionValue(option) {
    return _typeof$6(option) === "object" ? option.value : option;
  };
  var returnOptionText = function returnOptionText(option) {
    return _typeof$6(option) === "object" ? option.text : option;
  };
  useEffect(function () {
    if (showOptions) {
      validInput.current.focus();
    }
  });
  useEffect(function () {
    window.addEventListener("click", hideOptionsOnOutsideClick);
    return function () {
      window.removeEventListener("click", hideOptionsOnOutsideClick);
    };
  }, []);
  useEffect(function () {
    var unSelectedOptions = _toConsumableArray(options);
    setAvailableOptions(unSelectedOptions.filter(function (option) {
      return typeof option === "string" ? option.toLowerCase().includes(inputValue.toLowerCase()) : option.text.toLowerCase().includes(inputValue.toLowerCase());
    }));
  }, [options, selectedTags, inputValue]);
  var handleDeleteTag = function handleDeleteTag(currentTag) {
    setSelectedTags(_toConsumableArray(selectedTags).filter(function (tag) {
      return typeof currentTag === "string" ? tag !== currentTag : tag !== currentTag.value;
    }));
  };
  var switchOptionInTags = function switchOptionInTags(option) {
    var optionValue = returnOptionValue(option);
    var clonedTags = _toConsumableArray(selectedTags);
    if (clonedTags.includes(optionValue)) {
      clonedTags.splice(selectedTags.indexOf(optionValue), 1);
    } else {
      if (selectOneItem) {
        clonedTags = [optionValue];
      } else {
        clonedTags.push(optionValue);
      }
    }
    setSelectedTags(clonedTags);
  };
  var toggleOptionInSelectedOptions = function toggleOptionInSelectedOptions(option) {
    if (!showCheckboxes) {
      switchOptionInTags(option);
    }
  };
  var handleScroll = function handleScroll(e) {
    var _e$target = e.target,
      scrollHeight = _e$target.scrollHeight,
      scrollTop = _e$target.scrollTop,
      clientHeight = _e$target.clientHeight;
    if (Math.abs(scrollHeight - clientHeight - scrollTop) < 1) {
      if (onScrolledToBottom && typeof onScrolledToBottom === "function") {
        onScrolledToBottom(e);
      }
    }
  };
  var mappedInputTags = inputTags.map(function (tag, index) {
    return /*#__PURE__*/React__default.createElement(Box, {
      className: "ui-tag-dropdown__input-tag",
      key: "ui-tag-dropdown".concat(keyGen(), "_").concat(index)
    }, /*#__PURE__*/React__default.createElement(Text$1, {
      className: "ui-tag-dropdown__input-tag-text",
      scale: "subhead",
      fontFace: "circularSTD"
    }, typeof tag === "string" ? tag : tag.text), /*#__PURE__*/React__default.createElement(Icon, {
      icon: Close,
      className: "ui-tag-dropdown__close-icon",
      height: "16px",
      width: "16px",
      onClick: function onClick() {
        return handleDeleteTag(tag);
      }
    }));
  });
  var mappedAvailableOptions = availableOptions.map(function (option, index) {
    return /*#__PURE__*/React__default.createElement(Box, {
      className: classNames({
        "ui-tag-dropdown__dropdown__option": true,
        dropdownMode: !showCheckboxes,
        selected: selectedTags.includes(returnOptionValue(option))
      }),
      cursor: showCheckboxes ? "auto" : "pointer",
      onClick: function onClick() {
        return toggleOptionInSelectedOptions(option);
      },
      key: "option-".concat(index)
    }, showCheckboxes ? /*#__PURE__*/React__default.createElement(Checkbox, {
      checked: selectedTags.includes(returnOptionValue(option)),
      value: returnOptionValue(option),
      onChange: function onChange() {
        return switchOptionInTags(option);
      }
    }, /*#__PURE__*/React__default.createElement(Text$1, {
      marginY: 0,
      fontFace: "circularSTD",
      scale: "subhead"
    }, returnOptionText(option))) : /*#__PURE__*/React__default.createElement(Text$1, {
      marginY: 0,
      fontFace: "circularSTD",
      marginLeft: 8,
      scale: "subhead"
    }, returnOptionText(option)));
  });
  return /*#__PURE__*/React__default.createElement(Box, {
    className: classNames(_defineProperty$6({
      "ui-tag-dropdown__wrapper": true
    }, "size__".concat(size), true)),
    style: {
      "--dropdown-content-height": maxDropdownHeight
    }
  }, /*#__PURE__*/React__default.createElement(Box, {
    is: "label"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    className: classNames((_classNames2 = {}, _defineProperty$6(_classNames2, labelClass, labelClass), _defineProperty$6(_classNames2, "ui-tag-dropdown__label", true), _classNames2)),
    fontFace: labelFontFace,
    scale: "subhead"
  }, label)), /*#__PURE__*/React__default.createElement(Box, {
    className: classNames({
      "ui-tag-dropdown__input-wrapper": true,
      hasError: !!errorMessage
    }),
    onClick: toggleOptions
  }, leftIcon && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-tag-dropdown__left-icon"
  }, leftIcon), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-tag-dropdown__input-wrapper__left"
  }, mappedInputTags, placeholder && !inputTags.length && /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-tag-dropdown__placeholder",
    marginY: 0
  }, placeholder)), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-tag-dropdown__input-wrapper__right"
  }, rightIcon || /*#__PURE__*/React__default.createElement(Icon, {
    icon: ChevronFilledDown,
    className: "ui-text-field__right-icon"
  }))), showOptions && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-tag-dropdown__dropdown"
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-tag-dropdown__dropdown__header"
  }, /*#__PURE__*/React__default.createElement(TextField, {
    ref: validInput,
    invisible: true,
    leftIcon: Search,
    placeholder: placeholder,
    size: "large",
    value: inputValue,
    onChange: function onChange(e) {
      return setInputValue(e.target.value);
    }
  })), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-tag-dropdown__dropdown__options",
    onScroll: handleScroll
  }, mappedAvailableOptions, loading && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-tag-dropdown__loader"
  }, /*#__PURE__*/React__default.createElement(Loader, {
    loaderSize: "48px"
  })))), errorMessage && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-text-field__error"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: Error$1,
    className: "ui-text-field__error-icon"
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-text-field__error-text",
    scale: "subhead",
    fontFace: "circularSTD"
  }, errorMessage)));
};
TagDropdown.propTypes = _objectSpread2$1(_objectSpread2$1({}, inputPropTypes), {}, {
  placeholder: propTypes.exports.string,
  options: propTypes.exports.array,
  modelValue: propTypes.exports.array,
  showCheckboxes: propTypes.exports.bool,
  onChange: propTypes.exports.func,
  initiallySelectedTags: propTypes.exports.array,
  maxDropdownHeight: propTypes.exports.string,
  initiallyClosed: propTypes.exports.bool,
  selectOneItem: propTypes.exports.bool,
  onScrolledToBottom: propTypes.exports.func,
  loading: propTypes.exports.bool
});
TagDropdown.defaultProps = _objectSpread2$1(_objectSpread2$1({}, defaultProps$1), {}, {
  showCheckboxes: true,
  maxDropdownHeight: "250px",
  initiallyClosed: false
});

var _excluded$2 = ["label", "className", "size", "tagDelimiterKey", "values", "onTagAdded", "onTagDeleted", "inputProps", "tagProps", "tagClassname", "onTextChanged", "onTagChanged"];
var TagInput = function TagInput(_ref) {
  var label = _ref.label,
    className = _ref.className,
    size = _ref.size,
    tagDelimiterKey = _ref.tagDelimiterKey,
    values = _ref.values,
    onTagAdded = _ref.onTagAdded,
    onTagDeleted = _ref.onTagDeleted,
    inputProps = _ref.inputProps,
    _ref$tagProps = _ref.tagProps,
    tagProps = _ref$tagProps === void 0 ? {} : _ref$tagProps,
    tagClassname = _ref.tagClassname,
    onTextChanged = _ref.onTextChanged,
    onTagChanged = _ref.onTagChanged,
    props = _objectWithoutProperties(_ref, _excluded$2);
  var _useState = useState(""),
    _useState2 = _slicedToArray$4(_useState, 2),
    input = _useState2[0],
    setInput = _useState2[1];
  var _useState3 = useState(values || []),
    _useState4 = _slicedToArray$4(_useState3, 2),
    inputTags = _useState4[0],
    setInputTags = _useState4[1];
  var _useState5 = useState(false),
    _useState6 = _slicedToArray$4(_useState5, 2),
    isKeyReleased = _useState6[0],
    setIsKeyReleased = _useState6[1];
  var invokeFunction = function invokeFunction(func) {
    if (typeof func === "function") {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      return func.apply(void 0, args);
    }
  };
  var _tagDelimiterKey = {
    space: " ",
    enter: "Enter",
    comma: ","
  };
  var generatedTagInputClasses = classNames({
    "ui-tag-input__input": true
  });
  var wrapperClasses = classNames(["size__".concat(size), "ui-tag-input__wrapper"], className);
  var handleTextChange = function handleTextChange(event) {
    setInput(event.target.value);
    invokeFunction(onTextChanged, event.target.value);
  };
  var handleKeyDown = function handleKeyDown(event) {
    var newTag = input.trim();
    var oldTagArray = inputTags;
    var key = _tagDelimiterKey[tagDelimiterKey];
    if (event.key === key && newTag.length && !inputTags.includes(newTag)) {
      event.preventDefault();
      setInputTags(function (prev) {
        return [].concat(_toConsumableArray(prev), [newTag]);
      });
      setInputTags(function (state) {
        invokeFunction(onTagAdded, newTag, state);
        invokeFunction(onTagChanged, oldTagArray, state);
        return state;
      });
      setInput("");
    }
    if (event.key === "Backspace" && !input.length && inputTags.length && isKeyReleased) {
      event.preventDefault();
      var tagsArray = _toConsumableArray(inputTags);
      var deletedTag = tagsArray.pop();
      setInputTags(tagsArray);
      setInput(deletedTag);
      setInputTags(function (state) {
        invokeFunction(onTagDeleted, deletedTag, state);
        invokeFunction(onTagChanged, oldTagArray, state);
        return state;
      });
    }
    setIsKeyReleased(false);
  };
  var handleDeleteTag = function handleDeleteTag(index) {
    var deletedTag = inputTags[index];
    var oldTagArray = inputTags;
    setInputTags(function (prev) {
      return prev.filter(function (tag, i) {
        return i !== index;
      });
    });
    setInputTags(function (state) {
      invokeFunction(onTagDeleted, deletedTag, state);
      invokeFunction(onTagChanged, oldTagArray, state);
      return state;
    });
  };
  return /*#__PURE__*/React__default.createElement(Box, {
    className: wrapperClasses
  }, /*#__PURE__*/React__default.createElement(Box, {
    is: "label"
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-tag-input__label",
    scale: "subhead"
  }, label)), /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-tag-input__input-wrapper"
  }, inputTags.map(function (tag, index) {
    return /*#__PURE__*/React__default.createElement(Box, _extends$1({
      is: "div",
      className: "ui-tag-input__input-tag ".concat(tagClassname),
      key: "ui-tag-input".concat(keyGen())
    }, tagProps), /*#__PURE__*/React__default.createElement(Text$1, {
      className: "ui-tag-input__input-tag-text",
      scale: "subhead",
      fontFace: "circularSTD"
    }, tag), /*#__PURE__*/React__default.createElement(Icon, {
      icon: Close,
      onClick: function onClick() {
        return handleDeleteTag(index);
      },
      className: "ui-tag-input__close-icon"
    }));
  }), /*#__PURE__*/React__default.createElement(TextField, _extends$1({
    className: generatedTagInputClasses
  }, props, {
    invisible: true,
    size: size
  }, inputProps, {
    onKeyDown: handleKeyDown,
    onKeyUp: function onKeyUp() {
      return setIsKeyReleased(true);
    },
    value: input,
    onChange: handleTextChange,
    autoFocus: true,
    onFocus: function onFocus(e) {
      return e.currentTarget.select();
    }
  }))));
};
TagInput.propTypes = {
  label: propTypes.exports.string,
  size: propTypes.exports.oneOf(["small", "medium", "large", "xlarge", "huge", "massive"]),
  values: propTypes.exports.array,
  tagDelimiterKey: propTypes.exports.oneOf(["enter", "comma", "space"]),
  onTagAdded: propTypes.exports.func,
  onTagDeleted: propTypes.exports.func,
  onTextChanged: propTypes.exports.func,
  onTagChanged: propTypes.exports.func,
  inputProps: propTypes.exports.object,
  tagProps: propTypes.exports.object,
  tagClassname: propTypes.exports.string
};
TagInput.defaultProps = {
  label: "Form Label",
  size: "medium",
  values: [],
  tagDelimiterKey: "enter",
  inputProps: {
    placeholder: "Add tag"
  },
  onTagDelete: function onTagDelete(index) {
    console.log(index);
  }
};

var _excluded$1 = ["label", "errorMessage", "textAreaClassName", "className", "isHookForm", "onChange", "onBlur", "name"];
var TextArea = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var label = _ref.label,
    errorMessage = _ref.errorMessage,
    textAreaClassName = _ref.textAreaClassName,
    className = _ref.className;
    _ref.isHookForm;
    var onChange = _ref.onChange,
    onBlur = _ref.onBlur,
    name = _ref.name,
    props = _objectWithoutProperties(_ref, _excluded$1);
  var generateTextAreaClasses = classNames({
    "ui-text-area__textarea": true,
    "has-error": errorMessage
  }, textAreaClassName);
  var wrapperClasses = classNames(["ui-text-area__wrapper"], className);
  return /*#__PURE__*/React__default.createElement(Box, null, /*#__PURE__*/React__default.createElement(Box, {
    is: "label",
    className: wrapperClasses
  }, /*#__PURE__*/React__default.createElement(Text$1, {
    scale: "subhead",
    className: "ui-text-area__label"
  }, label)), /*#__PURE__*/React__default.createElement(Box, _extends$1({
    className: generateTextAreaClasses,
    is: "textarea"
  }, props, {
    ref: ref,
    onChange: onChange,
    onBlur: onBlur,
    name: name
  })), errorMessage && /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-text-area__error"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: Error$1,
    className: "ui-text-area__error-icon"
  }), /*#__PURE__*/React__default.createElement(Text$1, {
    className: "ui-text-area__error-text",
    scale: "footnote",
    fontFace: "circularSTD"
  }, errorMessage)));
});
TextArea.propTypes = {
  label: propTypes.exports.string,
  disabled: propTypes.exports.bool
};
TextArea.defaultProps = {
  label: "Form Label",
  disabled: false
};

var _excluded = ["children"],
  _excluded2 = ["children", "position"];
var ToastContext = /*#__PURE__*/createContext({});
var body = document.getElementsByTagName("body")[0];
var DomPortal = function DomPortal(_ref) {
  var children = _ref.children;
    _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/ReactDOM__default.createPortal(children, body);
};
var ToastProvider = function ToastProvider(_ref2) {
  var children = _ref2.children,
    position = _ref2.position;
    _objectWithoutProperties(_ref2, _excluded2);
  var _useState = useState([]),
    _useState2 = _slicedToArray$4(_useState, 2),
    toasts = _useState2[0],
    setToasts = _useState2[1];
  var removeToast = function removeToast(removedToast) {
    setToasts(function (toasts) {
      return toasts.filter(function (toast) {
        return toast.uuuuid !== removedToast.uuuuid;
      });
    });
  };
  var renderedToasts = toasts.map(function (toast, index) {
    return /*#__PURE__*/React__default.createElement(Alert, _extends$1({
      key: "toast-_".concat(index)
    }, toast, {
      closable: true,
      onClose: function onClose() {
        return removeToast(toast);
      }
    }));
  });
  var initialValue = {
    toasts: toasts,
    setToasts: setToasts
  };
  return /*#__PURE__*/React__default.createElement(ToastContext.Provider, {
    value: initialValue
  }, children, /*#__PURE__*/React__default.createElement(DomPortal, null, toasts.length ? /*#__PURE__*/React__default.createElement(Box, {
    className: classNames(["ui-toast__wrapper", "position__".concat(position)])
  }, /*#__PURE__*/React__default.createElement(Box, {
    className: "ui-toast__column"
  }, renderedToasts)) : ""));
};
ToastProvider.propTypes = {
  position: propTypes.exports.oneOf(["top-right", "top-left", "bottom-left", "bottom-right"])
};
ToastProvider.defaultProps = {
  position: "top-right"
};

var usePushToast = function usePushToast() {
  var _useContext = useContext(ToastContext),
    setToasts = _useContext.setToasts;
  var pushToast = function pushToast(toast) {
    var newToastID = uniqueRandomString(30, 8);
    var currentToast = _objectSpread2$1(_objectSpread2$1({}, toast), {}, {
      uuuuid: newToastID,
      autoclose: toast.autoclose ? toast.autoclose : 3
    });
    setToasts(function (toasts) {
      return [].concat(_toConsumableArray(toasts), [currentToast]);
    });
    setTimeout(function () {
      setToasts(function (toasts) {
        return toasts.filter(function (toast) {
          return toast.uuuuid !== newToastID;
        });
      });
    }, currentToast.autoclose * 1000);
  };
  return {
    pushToast: pushToast
  };
};

var useUpdateTheme = function useUpdateTheme() {
  var _useContext = useContext(ThemeContext),
    theme = _useContext.theme,
    setTheme = _useContext.setTheme;
  var updateTheme = function updateTheme(themeParam) {
    return setTheme(themeParam);
  };
  return {
    theme: theme,
    updateTheme: updateTheme
  };
};

var useUpdateDarkMode = function useUpdateDarkMode(darkMode) {
  var _useContext = useContext(DarkModeContext),
    updateDarkMode = _useContext.updateDarkMode;
  return {
    updateDarkMode: updateDarkMode
  };
};

export { Accordion, AddBookmark as AddBookmarkIcon, AddCircle as AddCircleIcon, AddFile as AddFileIcon, Add as AddIcon, AddItem as AddItemIcon, AddUser as AddUserIcon, Alarm as AlarmIcon, Alert, Announce as AnnounceIcon, Apps as AppsIcon, ArrowDown as ArrowDownIcon, ArrowDownLeft as ArrowDownLeftIcon, ArrowDownRight as ArrowDownRightIcon, ArrowLeft as ArrowLeftIcon, ArrowRight as ArrowRightIcon, ArrowUp as ArrowUpIcon, ArrowUpLeft as ArrowUpLeftIcon, ArrowUpRight as ArrowUpRightIcon, Attachment as AttachmentIcon, AutoLayout, Avatar, Avatar$1 as AvatarIcon, Backward as BackwardIcon, Badge, Bank as BankIcon, Banner, BarChart as BarChartIcon, Basket as BasketIcon, BendLeft as BendLeftIcon, BendRight as BendRightIcon, Bolt as BoltIcon, Book as BookIcon, Bookmark as BookmarkIcon, Box, Briefcase as BriefcaseIcon, Button, Calendar as CalendarIcon, Camera as CameraIcon, Card, Card$1 as CardIcon, CardInputField, Cart as CartIcon, Cash as CashIcon, CenterAlign as CenterAlignIcon, Certificate2 as Certificate2Icon, Certificate as CertificateIcon, Chart as ChartIcon, CheckCircle as CheckCircleIcon, Check as CheckIcon, Checkbox, ChevronArrowDown as ChevronArrowDownIcon, ChevronArrowLeft as ChevronArrowLeftIcon, ChevronArrowRight as ChevronArrowRightIcon, ChevronArrowUp as ChevronArrowUpIcon, ChevronFilledDown as ChevronFilledDownIcon, ChevronFilledLeft as ChevronFilledLeftIcon, ChevronFilledRight as ChevronFilledRightIcon, ChevronFilledUp as ChevronFilledUpIcon, Circle as CircleIcon, CloseCircle as CloseCircleIcon, Close as CloseIcon, CloudDownload as CloudDownloadIcon, CloudFlash as CloudFlashIcon, Cloud as CloudIcon, CloudRain as CloudRainIcon, CloudUploadFilledIcon, CloudUpload as CloudUploadIcon, Col, Command as CommandIcon, Company as CompanyIcon, Compass as CompassIcon, Compress2 as Compress2Icon, Compress as CompressIcon, Component as CopyIcon, Counter, CountryDropdown, Crop as CropIcon, Crown as CrownIcon, Cut as CutIcon, DarkModeContext, DarkModeProvider, DatePickerField as DatePicker, DebitCard, DebitBalance as DebitCardBalance, Decrease2 as Decrease2Icon, Decrease as DecreaseIcon, Delete as DeleteIcon, Deposits as DepositsIcon, Details as DetailsIcon, Dial as DialIcon, DialOff as DialOffIcon, Disabled as DisabledIcon, Dislike as DislikeIcon, Document as DocumentIcon, DoubleCheck as DoubleCheckIcon, Download as DownloadIcon, Drop as DropIcon, Dropdown, Edit2 as Edit2Icon, Edit as EditIcon, ErrorCircle as ErrorCircleIcon, Error$1 as ErrorIcon, ExitFullScreen as ExitFullScreenIcon, Expand2 as Expand2Icon, Expand as ExpandIcon, ExternalLink as ExternalLinkIcon, Eye as EyeIcon, EyeOff as EyeOffIcon, File as FileIcon, FilePicker, FilePickerInline, Filter as FilterIcon, Flag as FlagIcon, Flame as FlameIcon, Flash as FlashIcon, Folder as FolderIcon, Forward as ForwardIcon, FullScreen as FullScreenIcon, Funnel as FunnelIcon, Gem as GemIcon, Gift as GiftIcon, Gitlab as GitlabIcon, Globe as GlobeIcon, Grid as GridIcon, GridLayout, Heading, HeartFilled as HeartFilledIcon, Heart as HeartIcon, Home as HomeIcon, Icon, Image as ImageIcon, Inbox as InboxIcon, Increase2 as Increase2Icon, Increase as IncreaseIcon, Info as InfoIcon, InfoOutline as InfoOutlineIcon, JustifyAlign as JustifyAlignIcon, Key as KeyIcon, LeftAlign as LeftAlignIcon, Like as LikeIcon, Link as LinkIcon, List2 as List2Icon, List as ListIcon, Loader, Location2 as Location2Icon, Location3 as Location3Icon, Location as LocationIcon, Lock as LockIcon, Login2 as Login2Icon, Login as LoginIcon, Logout2 as Logout2Icon, Logout as LogoutIcon, Map$1 as MapIcon, Menu2 as Menu2Icon, Menu3 as Menu3Icon, Menu4 as Menu4Icon, Menu5 as Menu5Icon, Menu6 as Menu6Icon, Menu7 as Menu7Icon, Menu8 as Menu8Icon, MenuH as MenuHIcon, Menu as MenuIcon, MenuV as MenuVIcon, Message as MessageIcon, Mic as MicIcon, MicOff as MicOffIcon, Modal, Moon as MoonIcon, Move as MoveIcon, Music as MusicIcon, Mute as MuteIcon, Network as NetworkIcon, Next as NextIcon, NotificationBell as NotificationBellIcon, Pagination, Pause as PauseIcon, PhoneField, Pie as PieIcon, Pin as PinIcon, PinInput, PlayCircle as PlayCircleIcon, Power as PowerIcon, Previous as PreviousIcon, Print as PrintIcon, Profile as ProfileIcon, ProgressBar, Pulse as PulseIcon, Radio, Refresh as RefreshIcon, Reload as ReloadIcon, ResponsiveLayout, RightAlign as RightAlignIcon, Rocket as RocketIcon, RotateLeft as RotateLeftIcon, RotateRight as RotateRightIcon, Row, ScanCard as ScanCardIcon, Scroll as ScrollIcon, Search as SearchIcon, SelectField, SelectItem as SelectItemIcon, Send as SendIcon, Settings as SettingsIcon, Share as ShareIcon, Shield as ShieldCheckIcon, ShieldFlash as ShieldFlashIcon, Shield$1 as ShieldIcon, Shop as ShopIcon, Sort2 as Sort2Icon, SortAscending as SortAscendingIcon, SortDescending as SortDescendingIcon, Sort as SortIcon, Sound as SoundIcon, Stack as StackIcon, Staff as StaffIcon, Star as StarIcon, Stepper, StopCircle as StopCircleIcon, Stopwatch as StopwatchIcon, Sun as SunIcon, Support as SupportIcon, Switch, Tab, Table, Table$1 as TableIcon, TagDropdown, Tag as TagIcon, TagInput, Text$1 as Text, TextArea, TextField, Text as TextIconIcon, ThemeContext, ThemeProvider, Time as TimeIcon, ToastContext, ToastProvider, Transfer as TransferIcon, Trophy as TrophyIcon, Unlock as UnlockIcon, Upload as UploadIcon, VerticalArrows as VerticalArrowsIcon, Video as VideoIcon, VideoOff as VideoOffIcon, Voucher as VoucherIcon, Wallet as WalletIcon, Warning as WarningIcon, Wave as WaveIcon, Withdraw as WithdrawIcon, asteriskCardNo, asteriskCvv, asteriskExp, formatCardNo, getTextColor, hexToRgbA, usePushToast, useUpdateDarkMode, useUpdateTheme };
