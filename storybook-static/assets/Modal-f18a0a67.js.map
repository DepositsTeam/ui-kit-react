{"version":3,"file":"Modal-f18a0a67.js","sources":["../../src/utils/components/Portal.js","../../src/components/modal/Modal.jsx"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nexport const Portal = ({ children, className = \"root-portal\", el = \"div\" }) => {\n  const [container] = React.useState(() => {\n    // This will be executed only on the initial render\n    // https://reactjs.org/docs/hooks-reference.html#lazy-initial-state\n    return document.createElement(el);\n  });\n\n  React.useEffect(() => {\n    container.classList.add(className);\n    document.body.appendChild(container);\n    document.body.insertAdjacentElement(\"beforeend\", container);\n    return () => {\n      document.body.removeChild(container);\n    };\n  }, []);\n\n  return ReactDOM.createPortal(children, container);\n};\n","import React, { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Modal.scss\";\nimport Icon from \"../icon\";\nimport Close from \"../icons/Close.jsx\";\nimport Heading from \"../heading\";\nimport classNames from \"../../utils/classNames\";\nimport Box from \"../box\";\nimport { Portal } from \"../../utils/components/Portal\";\n\nconst Modal = ({\n  show,\n  greyContent,\n  roundedBorders,\n  minModalWidth,\n  greyHeader,\n  overlayBg,\n  alignment,\n  onCloseModal,\n  modalWidth,\n  title,\n  maxModalWidth,\n  heading,\n  contentClass,\n  bodyClass,\n  ...props\n}) => {\n  const generatedClassNames = classNames({\n    greyContent,\n    roundedBorders,\n    greyHeader,\n    overlayBg,\n    [`modal__${alignment}`]: alignment,\n    \"ui-modal\": true,\n    \"ui-modal__closerr\": true,\n  });\n  const handleCloseClicks = (e) => {\n    if (e.target.classList.contains(\"ui-modal__closerr\")) {\n      onCloseModal();\n    }\n  };\n\n  return show ? (\n    <Portal>\n      <Box\n        onClick={handleCloseClicks}\n        className={generatedClassNames}\n        style={{\n          \"--overlay-bg\": overlayBg,\n        }}\n      >\n        <Box\n          className={classNames({\n            \"ui-modal__content\": true,\n            \"--modal-width\": modalWidth,\n            \"--min-modal-width\": minModalWidth,\n            \"--max-modal-width\": maxModalWidth,\n          })}\n        >\n          <Box className={\"ui-modal__heading\"}>\n            {typeof heading === \"string\" ? (\n              <Heading marginTop={0} marginBottom={0} is={\"h5\"}>\n                {heading}\n              </Heading>\n            ) : (\n              heading\n            )}\n            <Icon\n              height={\"20px\"}\n              width={\"20px\"}\n              smartColor={\"#8895A7\"}\n              icon={Close}\n              className={\"ui-modal__closerr\"}\n              onClick={handleCloseClicks}\n              cursor={\"pointer\"}\n            />\n          </Box>\n          <Box\n            className={classNames({\n              \"ui-modal__body\": true,\n              [bodyClass]: bodyClass,\n            })}\n          >\n            {props.children}\n          </Box>\n        </Box>\n      </Box>\n    </Portal>\n  ) : (\n    <></>\n  );\n};\n\nexport default Modal;\n\nModal.defaultProps = {\n  alignment: \"top\",\n};\n\nModal.propTypes = {\n  show: PropTypes.bool,\n  greyContent: PropTypes.bool,\n  roundedBorders: PropTypes.bool,\n  minModalWidth: PropTypes.string,\n  maxModalWidth: PropTypes.string,\n  greyHeader: PropTypes.bool,\n  overlayBg: PropTypes.string,\n  alignment: PropTypes.oneOf([\"top\", \"bottom\", \"center\"]),\n  onCloseModal: PropTypes.func,\n  modalWidth: PropTypes.string,\n  title: PropTypes.string,\n  contentClass: PropTypes.string,\n  heading: PropTypes.string,\n  bodyClass: PropTypes.string,\n};\n"],"names":["Portal","children","className","el","container","React","ReactDOM","Modal","show","greyContent","roundedBorders","minModalWidth","greyHeader","overlayBg","alignment","onCloseModal","modalWidth","title","maxModalWidth","heading","contentClass","bodyClass","props","generatedClassNames","classNames","handleCloseClicks","e","jsx","Box","jsxs","Heading","Icon","Close","Fragment","Modal$1","PropTypes"],"mappings":"4UAGO,MAAMA,EAAS,CAAC,CAAE,SAAAC,EAAU,UAAAC,EAAY,cAAe,GAAAC,EAAK,SAAY,CAC7E,KAAM,CAACC,CAAS,EAAIC,EAAM,SAAS,IAG1B,SAAS,cAAcF,CAAE,CACjC,EAED,OAAAE,EAAM,UAAU,KACdD,EAAU,UAAU,IAAIF,CAAS,EACjC,SAAS,KAAK,YAAYE,CAAS,EACnC,SAAS,KAAK,sBAAsB,YAAaA,CAAS,EACnD,IAAM,CACX,SAAS,KAAK,YAAYA,CAAS,CACzC,GACK,CAAE,CAAA,EAEEE,EAAS,aAAaL,EAAUG,CAAS,CAClD,ECVMG,EAAQ,CAAC,CACb,KAAAC,EACA,YAAAC,EACA,eAAAC,EACA,cAAAC,EACA,WAAAC,EACA,UAAAC,EACA,UAAAC,EACA,aAAAC,EACA,WAAAC,EACA,MAAAC,EACA,cAAAC,EACA,QAAAC,EACA,aAAAC,EACA,UAAAC,EACA,GAAGC,CACL,IAAM,CACJ,MAAMC,EAAsBC,EAAW,CACrC,YAAAf,EACA,eAAAC,EACA,WAAAE,EACA,UAAAC,EACA,CAAC,UAAUC,GAAW,EAAGA,EACzB,WAAY,GACZ,oBAAqB,EAAA,CACtB,EACKW,EAAqBC,GAAM,CAC3BA,EAAE,OAAO,UAAU,SAAS,mBAAmB,GACpCX,GACf,EAGK,OAAAP,QACJR,EACC,CAAA,SAAA2B,EAAA,IAACC,EAAA,CACC,QAASH,EACT,UAAWF,EACX,MAAO,CACL,eAAgBV,CAClB,EAEA,SAAAgB,EAAA,KAACD,EAAA,CACC,UAAWJ,EAAW,CACpB,oBAAqB,GACrB,gBAAiBR,EACjB,oBAAqBL,EACrB,oBAAqBO,CAAA,CACtB,EAED,SAAA,CAACW,EAAAA,KAAAD,EAAA,CAAI,UAAW,oBACb,SAAA,CAAO,OAAAT,GAAY,SAClBQ,EAAAA,IAACG,EAAQ,CAAA,UAAW,EAAG,aAAc,EAAG,GAAI,KACzC,SAAAX,CAAA,CACH,EAEAA,EAEFQ,EAAA,IAACI,EAAA,CACC,OAAQ,OACR,MAAO,OACP,WAAY,UACZ,KAAMC,EACN,UAAW,oBACX,QAASP,EACT,OAAQ,SAAA,CACV,CAAA,EACF,EACAE,EAAA,IAACC,EAAA,CACC,UAAWJ,EAAW,CACpB,iBAAkB,GAClB,CAACH,CAAS,EAAGA,CAAA,CACd,EAEA,SAAMC,EAAA,QAAA,CACT,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CACF,EAEEK,EAAAA,IAAAM,EAAA,SAAA,CAAA,CAAA,CAEN,EAEAC,EAAe3B,EAEfA,EAAM,aAAe,CACnB,UAAW,KACb,EAEAA,EAAM,UAAY,CAChB,KAAM4B,EAAU,KAChB,YAAaA,EAAU,KACvB,eAAgBA,EAAU,KAC1B,cAAeA,EAAU,OACzB,cAAeA,EAAU,OACzB,WAAYA,EAAU,KACtB,UAAWA,EAAU,OACrB,UAAWA,EAAU,MAAM,CAAC,MAAO,SAAU,QAAQ,CAAC,EACtD,aAAcA,EAAU,KACxB,WAAYA,EAAU,OACtB,MAAOA,EAAU,OACjB,aAAcA,EAAU,OACxB,QAASA,EAAU,OACnB,UAAWA,EAAU,MACvB"}