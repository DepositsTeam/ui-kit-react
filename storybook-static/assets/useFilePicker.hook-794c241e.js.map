{"version":3,"file":"useFilePicker.hook-794c241e.js","sources":["../../src/utils/hooks/useFilePicker.hook.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useFilePicker = (props, file) => {\n  const [computedAccepts, setComputedAccepts] = useState(\"\");\n  const [internalError, setInternalError] = useState(\"\");\n  const [selectedFileName, setSelectedFileName] = useState(\"\");\n  const [computedErrorMessage, setComputedErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (Array.isArray(props.accepts))\n      setComputedAccepts(props.accepts.join(\", \"));\n    else {\n      switch (props.accepts) {\n        case \"image\":\n          setComputedAccepts(\".png, .jpg, .jpeg, .svg, .bmp, .gif\");\n          break;\n        case \"document\":\n          setComputedAccepts(\".csv, .xls, .xlsx, .pdf, .doc, .docx\");\n          break;\n        case \"csv\":\n          setComputedAccepts(\".csv\");\n          break;\n        default:\n          setComputedAccepts(undefined);\n      }\n    }\n  }, [props.accepts]);\n\n  useEffect(() => {\n    setComputedErrorMessage(\n      internalError\n        ? internalError\n        : props.errorMessage\n        ? props.errorMessage\n        : undefined\n    );\n  }, [internalError, props.errorMessage]);\n\n  const updateName = (e) => {\n    let files = e.target.files || e.dataTransfer.files;\n    setSelectedFileName(!files ? \"\" : files[0].name);\n    if (files.length > props.maxFiles) {\n      setInternalError(\n        `You cannot upload more than ${props.maxFiles} file(s) at once`\n      );\n    } else {\n      setInternalError(\"\");\n    }\n    for (let currentFile of files) {\n      if (currentFile.size > props.fileMaxSize * 1000000) {\n        setInternalError(\n          `You cannot upload a file larger than ${props.fileMaxSize}MB`\n        );\n      }\n    }\n    if (internalError.value) {\n      const input = file.current.$el;\n      input.setAttribute(\"type\", \"text\");\n      input.setAttribute(\"type\", \"file\");\n      setSelectedFileName(\"\");\n    } else {\n      if (typeof props.onChange === \"function\") {\n        props.onChange(files.length > 1 ? files : files[0]);\n      }\n    }\n  };\n\n  const emptyFile = () => {\n    setSelectedFileName(\"\");\n    const input = file.current;\n    input.setAttribute(\"type\", \"text\");\n    input.setAttribute(\"type\", \"file\");\n    if (typeof props.onCleared === \"function\") props.onCleared();\n  };\n\n  return {\n    computedAccepts,\n    computedErrorMessage,\n    emptyFile,\n    updateName,\n    selectedFileName,\n  };\n};\n"],"names":["useFilePicker","props","file","computedAccepts","setComputedAccepts","useState","internalError","setInternalError","selectedFileName","setSelectedFileName","computedErrorMessage","setComputedErrorMessage","useEffect","input","e","files","currentFile"],"mappings":"wCAEY,MAACA,EAAgB,CAACC,EAAOC,IAAS,CAC5C,KAAM,CAACC,EAAiBC,CAAkB,EAAIC,EAAQ,SAAC,EAAE,EACnD,CAACC,EAAeC,CAAgB,EAAIF,EAAQ,SAAC,EAAE,EAC/C,CAACG,EAAkBC,CAAmB,EAAIJ,EAAQ,SAAC,EAAE,EACrD,CAACK,EAAsBC,CAAuB,EAAIN,EAAQ,SAAC,EAAE,EAEnEO,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAI,MAAM,QAAQX,EAAM,OAAO,EAC7BG,EAAmBH,EAAM,QAAQ,KAAK,IAAI,CAAC,MAE3C,QAAQA,EAAM,QAAO,CACnB,IAAK,QACHG,EAAmB,qCAAqC,EACxD,MACF,IAAK,WACHA,EAAmB,sCAAsC,EACzD,MACF,IAAK,MACHA,EAAmB,MAAM,EACzB,MACF,QACEA,EAAmB,MAAS,CAC/B,CAEP,EAAK,CAACH,EAAM,OAAO,CAAC,EAElBW,EAAAA,UAAU,IAAM,CACdD,EACEL,IAEIL,EAAM,aACNA,EAAM,aACN,OACV,CACG,EAAE,CAACK,EAAeL,EAAM,YAAY,CAAC,EAuC/B,CACL,gBAAAE,EACA,qBAAAO,EACA,UAXgB,IAAM,CACtBD,EAAoB,EAAE,EACtB,MAAMI,EAAQX,EAAK,QACnBW,EAAM,aAAa,OAAQ,MAAM,EACjCA,EAAM,aAAa,OAAQ,MAAM,EAC7B,OAAOZ,EAAM,WAAc,YAAYA,EAAM,UAAS,CAC9D,EAMI,WAzCkBa,GAAM,CACxB,IAAIC,EAAQD,EAAE,OAAO,OAASA,EAAE,aAAa,MAC7CL,EAAqBM,EAAaA,EAAM,CAAC,EAAE,KAAd,EAAkB,EAC3CA,EAAM,OAASd,EAAM,SACvBM,EACE,+BAA+BN,EAAM,0BAC7C,EAEMM,EAAiB,EAAE,EAErB,QAASS,KAAeD,EAClBC,EAAY,KAAOf,EAAM,YAAc,KACzCM,EACE,wCAAwCN,EAAM,eACxD,EAGI,GAAIK,EAAc,MAAO,CACvB,MAAMO,EAAQX,EAAK,QAAQ,IAC3BW,EAAM,aAAa,OAAQ,MAAM,EACjCA,EAAM,aAAa,OAAQ,MAAM,EACjCJ,EAAoB,EAAE,OAElB,OAAOR,EAAM,UAAa,YAC5BA,EAAM,SAASc,EAAM,OAAS,EAAIA,EAAQA,EAAM,CAAC,CAAC,CAG1D,EAeI,iBAAAP,CACJ,CACA"}