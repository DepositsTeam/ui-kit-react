{"version":3,"file":"TagDropdown.stories-c5137d20.js","sources":["../../src/components/tag-dropdown/TagDropdown.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Box from \"../box\";\nimport Text from \"../text\";\nimport PropTypes from \"prop-types\";\nimport inputPropTypes, { defaultProps } from \"../../utils/inputPropTypes\";\nimport classNames from \"../../utils/classNames\";\nimport keyGen from \"../../utils/keyGen\";\nimport Icon from \"../icon\";\nimport Close from \"../icons/Close.jsx\";\nimport ChevronFilledDown from \"../icons/ChevronFilledDown.jsx\";\nimport TextField from \"../text-field\";\nimport Search from \"../icons/Search.jsx\";\nimport Checkbox from \"../checkbox\";\nimport Error from \"../icons/Error.jsx\";\nimport \"./TagDropdown.scss\";\nimport Loader from \"../loader/index.js\";\n\nconst TagDropdown = ({\n  size,\n  options,\n  labelClass,\n  labelFontFace,\n  label,\n  errorMessage,\n  leftIcon,\n  rightIcon,\n  onChange,\n  placeholder,\n  showCheckboxes,\n  initiallySelectedTags,\n  maxDropdownHeight,\n  initiallyClosed,\n  selectOneItem,\n  onScrolledToBottom,\n  loading,\n  ...props\n}) => {\n  const [inputTags, setInputTags] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [showOptions, setShowOptions] = useState(initiallyClosed);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [availableOptions, setAvailableOptions] = useState([]);\n  const validInput = useRef();\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setInputTags(\n      [...options].filter((option) => {\n        if (typeof option === \"string\") {\n          return selectedTags.includes(option);\n        } else {\n          return selectedTags.includes(option.value);\n        }\n      })\n    );\n  }, [options, selectedTags]);\n\n  useEffect(() => {\n    setMounted(true);\n    if (initiallySelectedTags && Array.isArray(initiallySelectedTags)) {\n      options.forEach((option) => {\n        const optionValue = returnOptionValue(option);\n        if (initiallySelectedTags.includes(optionValue)) {\n          setSelectedTags((tags) => {\n            const localTags = [...tags];\n            localTags.push(optionValue);\n            return localTags;\n          });\n        }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (mounted) {\n      onChange(selectedTags);\n    }\n  }, [selectedTags]);\n\n  const hideOptionsOnOutsideClick = (e) => {\n    if (!e.target.closest(\".ui-tag-dropdown__wrapper\")) {\n      setShowOptions(false);\n    }\n  };\n\n  const toggleOptions = () => {\n    setShowOptions(!showOptions);\n  };\n\n  const returnOptionValue = (option) =>\n    typeof option === \"object\" ? option.value : option;\n\n  const returnOptionText = (option) =>\n    typeof option === \"object\" ? option.text : option;\n\n  useEffect(() => {\n    if (showOptions) {\n      validInput.current.focus();\n    }\n  });\n\n  useEffect(() => {\n    window.addEventListener(\"click\", hideOptionsOnOutsideClick);\n\n    return () => {\n      window.removeEventListener(\"click\", hideOptionsOnOutsideClick);\n    };\n  }, []);\n\n  useEffect(() => {\n    const unSelectedOptions = [...options];\n    setAvailableOptions(\n      unSelectedOptions.filter((option) =>\n        typeof option === \"string\"\n          ? option.toLowerCase().includes(inputValue.toLowerCase())\n          : option.text.toLowerCase().includes(inputValue.toLowerCase())\n      )\n    );\n  }, [options, selectedTags, inputValue]);\n\n  const handleDeleteTag = (currentTag) => {\n    setSelectedTags(\n      [...selectedTags].filter((tag) => {\n        return typeof currentTag === \"string\"\n          ? tag !== currentTag\n          : tag !== currentTag.value;\n      })\n    );\n  };\n\n  const switchOptionInTags = (option) => {\n    const optionValue = returnOptionValue(option);\n    let clonedTags = [...selectedTags];\n    if (clonedTags.includes(optionValue)) {\n      clonedTags.splice(selectedTags.indexOf(optionValue), 1);\n    } else {\n      if (selectOneItem) {\n        clonedTags = [optionValue];\n      } else {\n        clonedTags.push(optionValue);\n      }\n    }\n    setSelectedTags(clonedTags);\n  };\n\n  const toggleOptionInSelectedOptions = (option) => {\n    if (!showCheckboxes) {\n      switchOptionInTags(option);\n    }\n  };\n\n  const handleScroll = (e) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target;\n    if (Math.abs(scrollHeight - clientHeight - scrollTop) < 1) {\n      if (onScrolledToBottom && typeof onScrolledToBottom === \"function\") {\n        onScrolledToBottom(e);\n      }\n    }\n  };\n\n  const mappedInputTags = inputTags.map((tag, index) => (\n    <Box\n      className={\"ui-tag-dropdown__input-tag\"}\n      key={`ui-tag-dropdown${keyGen()}_${index}`}\n    >\n      <Text\n        className={\"ui-tag-dropdown__input-tag-text\"}\n        scale={\"subhead\"}\n        fontFace={\"circularSTD\"}\n      >\n        {typeof tag === \"string\" ? tag : tag.text}\n      </Text>\n      <Icon\n        icon={Close}\n        className={\"ui-tag-dropdown__close-icon\"}\n        height=\"16px\"\n        width=\"16px\"\n        onClick={() => handleDeleteTag(tag)}\n      />\n    </Box>\n  ));\n\n  const mappedAvailableOptions = availableOptions.map((option, index) => (\n    <Box\n      className={classNames({\n        \"ui-tag-dropdown__dropdown__option\": true,\n        dropdownMode: !showCheckboxes,\n        selected: selectedTags.includes(returnOptionValue(option)),\n      })}\n      cursor={showCheckboxes ? \"auto\" : \"pointer\"}\n      onClick={() => toggleOptionInSelectedOptions(option)}\n      key={`option-${index}`}\n    >\n      {showCheckboxes ? (\n        <Checkbox\n          checked={selectedTags.includes(returnOptionValue(option))}\n          value={returnOptionValue(option)}\n          onChange={() => switchOptionInTags(option)}\n        >\n          <Text marginY={0} fontFace={\"circularSTD\"} scale={\"subhead\"}>\n            {returnOptionText(option)}\n          </Text>\n        </Checkbox>\n      ) : (\n        <Text\n          marginY={0}\n          fontFace={\"circularSTD\"}\n          marginLeft={8}\n          scale={\"subhead\"}\n        >\n          {returnOptionText(option)}\n        </Text>\n      )}\n    </Box>\n  ));\n\n  return (\n    <Box\n      className={classNames({\n        \"ui-tag-dropdown__wrapper\": true,\n        [`size__${size}`]: true,\n      })}\n      style={{ \"--dropdown-content-height\": maxDropdownHeight }}\n    >\n      <Box is={\"label\"}>\n        <Text\n          className={classNames({\n            [labelClass]: labelClass,\n            \"ui-tag-dropdown__label\": true,\n          })}\n          fontFace={labelFontFace}\n          scale={\"subhead\"}\n        >\n          {label}\n        </Text>\n      </Box>\n      <Box\n        className={classNames({\n          \"ui-tag-dropdown__input-wrapper\": true,\n          hasError: !!errorMessage,\n        })}\n        onClick={toggleOptions}\n      >\n        {leftIcon && (\n          <Box className={\"ui-tag-dropdown__left-icon\"}>{leftIcon}</Box>\n        )}\n        <Box className={\"ui-tag-dropdown__input-wrapper__left\"}>\n          {mappedInputTags}\n          {placeholder && !inputTags.length && (\n            <Text className={\"ui-tag-dropdown__placeholder\"} marginY={0}>\n              {placeholder}\n            </Text>\n          )}\n        </Box>\n        <Box className={\"ui-tag-dropdown__input-wrapper__right\"}>\n          {rightIcon || (\n            <Icon\n              icon={ChevronFilledDown}\n              className={\"ui-text-field__right-icon\"}\n            />\n          )}\n        </Box>\n      </Box>\n      {showOptions && (\n        <Box className={\"ui-tag-dropdown__dropdown\"}>\n          <Box className={\"ui-tag-dropdown__dropdown__header\"}>\n            <TextField\n              ref={validInput}\n              invisible\n              leftIcon={Search}\n              placeholder={placeholder}\n              size={\"large\"}\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n            />\n          </Box>\n          <Box\n            className={\"ui-tag-dropdown__dropdown__options\"}\n            onScroll={handleScroll}\n          >\n            {mappedAvailableOptions}\n            {loading && (\n              <Box className={\"ui-tag-dropdown__loader\"}>\n                <Loader loaderSize={\"48px\"} />\n              </Box>\n            )}\n          </Box>\n        </Box>\n      )}\n      {errorMessage && (\n        <Box className={\"ui-text-field__error\"}>\n          <Icon icon={Error} className={\"ui-text-field__error-icon\"} />\n          <Text\n            className={\"ui-text-field__error-text\"}\n            scale={\"subhead\"}\n            fontFace={\"circularSTD\"}\n          >\n            {errorMessage}\n          </Text>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default TagDropdown;\n\nTagDropdown.propTypes = {\n  ...inputPropTypes,\n  placeholder: PropTypes.string,\n  options: PropTypes.array,\n  modelValue: PropTypes.array,\n  showCheckboxes: PropTypes.bool,\n  onChange: PropTypes.func,\n  initiallySelectedTags: PropTypes.array,\n  maxDropdownHeight: PropTypes.string,\n  initiallyClosed: PropTypes.bool,\n  selectOneItem: PropTypes.bool,\n  onScrolledToBottom: PropTypes.func,\n  loading: PropTypes.bool,\n};\n\nTagDropdown.defaultProps = {\n  ...defaultProps,\n  showCheckboxes: true,\n  maxDropdownHeight: \"250px\",\n  initiallyClosed: false,\n};\n"],"names":["TagDropdown","size","options","labelClass","labelFontFace","label","errorMessage","leftIcon","rightIcon","onChange","placeholder","showCheckboxes","initiallySelectedTags","maxDropdownHeight","initiallyClosed","selectOneItem","onScrolledToBottom","loading","props","inputTags","setInputTags","useState","selectedTags","setSelectedTags","showOptions","setShowOptions","inputValue","setInputValue","availableOptions","setAvailableOptions","validInput","useRef","mounted","setMounted","useEffect","option","optionValue","returnOptionValue","tags","localTags","hideOptionsOnOutsideClick","toggleOptions","returnOptionText","unSelectedOptions","handleDeleteTag","currentTag","tag","switchOptionInTags","clonedTags","toggleOptionInSelectedOptions","handleScroll","scrollHeight","scrollTop","clientHeight","mappedInputTags","index","jsxs","Box","jsx","Text","Icon","Close","keyGen","mappedAvailableOptions","classNames","Checkbox","ChevronFilledDown","TextField","Search","Loader","Error","TagDropdown$1","inputPropTypes","PropTypes","defaultProps"],"mappings":"41BAiBA,MAAAA,EAAA,CAAA,CACA,KAAAC,EACA,QAAAC,EACA,WAAAC,EACA,cAAAC,GACA,MAAAC,GACA,aAAAC,EACA,SAAAC,EACA,UAAAC,GACA,SAAAC,GACA,YAAAC,EACA,eAAAC,EACA,sBAAAC,EACA,kBAAAC,GACA,gBAAAC,GACA,cAAAC,GACA,mBAAAC,EACA,QAAAC,GACA,GAAAC,EACA,IAAA,CACA,KAAA,CAAAC,EAAAC,EAAA,EAAAC,EAAA,SAAA,CAAA,CAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,CAAA,CAAA,EACA,CAAAG,EAAAC,CAAA,EAAAJ,WAAAP,EAAA,EACA,CAAAY,EAAAC,EAAA,EAAAN,WAAA,EAAA,EACA,CAAAO,GAAAC,EAAA,EAAAR,EAAA,SAAA,CAAA,CAAA,EACAS,EAAAC,EAAAA,SACA,CAAAC,GAAAC,EAAA,EAAAZ,WAAA,EAAA,EAEAa,EAAAA,UAAA,IAAA,CACAd,GACA,CAAA,GAAAlB,CAAA,EAAA,OAAAiC,GACA,OAAAA,GAAA,SACAb,EAAA,SAAAa,CAAA,EAEAb,EAAA,SAAAa,EAAA,KAAA,CAEA,CAAA,CACA,EACA,CAAAjC,EAAAoB,CAAA,CAAA,EAEAY,EAAAA,UAAA,IAAA,CACAD,GAAA,EAAA,EACArB,GAAA,MAAA,QAAAA,CAAA,GACAV,EAAA,QAAAiC,GAAA,CACA,MAAAC,EAAAC,EAAAF,CAAA,EACAvB,EAAA,SAAAwB,CAAA,GACAb,EAAAe,GAAA,CACA,MAAAC,EAAA,CAAA,GAAAD,CAAA,EACA,OAAAC,EAAA,KAAAH,CAAA,EACAG,CAAA,CACA,CACA,CACA,CAEA,EAAA,CAAA,CAAA,EAEAL,EAAAA,UAAA,IAAA,CACAF,IACAvB,GAAAa,CAAA,CACA,EACA,CAAAA,CAAA,CAAA,EAEA,MAAAkB,EAAA,GAAA,CACA,EAAA,OAAA,QAAA,2BAAA,GACAf,EAAA,EAAA,CACA,EAGAgB,GAAA,IAAA,CACAhB,EAAA,CAAAD,CAAA,CAAA,EAGAa,EAAAF,GACA,OAAAA,GAAA,SAAAA,EAAA,MAAAA,EAEAO,EAAAP,GACA,OAAAA,GAAA,SAAAA,EAAA,KAAAA,EAEAD,EAAAA,UAAA,IAAA,CACAV,GACAM,EAAA,QAAA,OACA,CACA,EAEAI,EAAAA,UAAA,KACA,OAAA,iBAAA,QAAAM,CAAA,EAEA,IAAA,CACA,OAAA,oBAAA,QAAAA,CAAA,CAAA,GAEA,CAAA,CAAA,EAEAN,EAAAA,UAAA,IAAA,CACA,MAAAS,EAAA,CAAA,GAAAzC,CAAA,EACA2B,GACAc,EAAA,OAAAR,GACA,OAAAA,GAAA,SACAA,EAAA,YAAA,EAAA,SAAAT,EAAA,aAAA,EACAS,EAAA,KAAA,cAAA,SAAAT,EAAA,aAAA,CACA,CAAA,CAEA,EAAA,CAAAxB,EAAAoB,EAAAI,CAAA,CAAA,EAEA,MAAAkB,GAAAC,GAAA,CACAtB,EACA,CAAA,GAAAD,CAAA,EAAA,OAAAwB,GACA,OAAAD,GAAA,SACAC,IAAAD,EACAC,IAAAD,EAAA,KACA,CAAA,CACA,EAGAE,EAAAZ,GAAA,CACA,MAAAC,EAAAC,EAAAF,CAAA,EACA,IAAAa,EAAA,CAAA,GAAA1B,CAAA,EACA0B,EAAA,SAAAZ,CAAA,EACAY,EAAA,OAAA1B,EAAA,QAAAc,CAAA,EAAA,CAAA,EAEArB,GACAiC,EAAA,CAAAZ,CAAA,EAEAY,EAAA,KAAAZ,CAAA,EAGAb,EAAAyB,CAAA,CAAA,EAGAC,GAAAd,GAAA,CACAxB,GACAoC,EAAAZ,CAAA,CACA,EAGAe,GAAA,GAAA,CACA,KAAA,CAAA,aAAAC,EAAA,UAAAC,EAAA,aAAAC,CAAA,EAAA,EAAA,OACA,KAAA,IAAAF,EAAAE,EAAAD,CAAA,EAAA,GACApC,GAAA,OAAAA,GAAA,YACAA,EAAA,CAAA,CAEA,EAGAsC,GAAAnC,EAAA,IAAA,CAAA2B,EAAAS,IACAC,EAAA,KAAAC,EAAA,CACA,UAAA,6BAGA,SAAA,CAAAC,EAAA,IAAAC,EAAA,CACA,UAAA,kCACA,MAAA,UACA,SAAA,cAEA,SAAA,OAAAb,GAAA,SAAAA,EAAAA,EAAA,IAAA,CACA,EACAY,EAAA,IAAAE,EAAA,CACA,KAAAC,GACA,UAAA,8BACA,OAAA,OACA,MAAA,OACA,QAAA,IAAAjB,GAAAE,CAAA,CAAA,CACA,CAAA,CAAA,EAfA,kBAAAgB,QAAAP,GAAA,CAiBA,EAEAQ,GAAAnC,GAAA,IAAA,CAAAO,EAAAoB,IACAG,EAAA,IAAAD,EAAA,CACA,UAAAO,EAAA,CACA,oCAAA,GACA,aAAA,CAAArD,EACA,SAAAW,EAAA,SAAAe,EAAAF,CAAA,CAAA,CAAA,CACA,EACA,OAAAxB,EAAA,OAAA,UACA,QAAA,IAAAsC,GAAAd,CAAA,EAGA,SACAxB,EAAA+C,EAAA,IAAAO,GAAA,CACA,QAAA3C,EAAA,SAAAe,EAAAF,CAAA,CAAA,EACA,MAAAE,EAAAF,CAAA,EACA,SAAA,IAAAY,EAAAZ,CAAA,EAEA,SAAAuB,EAAAA,IAAAC,EAAA,CAAA,QAAA,EAAA,SAAA,cAAA,MAAA,UACA,SAAAjB,EAAAP,CAAA,CACA,CAAA,CAAA,CAAA,EAGAuB,EAAA,IAAAC,EAAA,CACA,QAAA,EACA,SAAA,cACA,WAAA,EACA,MAAA,UAEA,WAAAxB,CAAA,CAAA,CACA,CAAA,EApBA,UAAAoB,GAAA,CAuBA,EAGA,OAAAC,EAAA,KAAAC,EAAA,CACA,UAAAO,EAAA,CACA,2BAAA,GACA,CAAA,SAAA/D,GAAA,EAAA,EAAA,CACA,EACA,MAAA,CAAA,4BAAAY,EAAA,EAEA,SAAA,CAAA6C,EAAAA,IAAAD,EAAA,CAAA,GAAA,QACA,SAAAC,EAAA,IAAAC,EAAA,CACA,UAAAK,EAAA,CACA,CAAA7D,CAAA,EAAAA,EACA,yBAAA,EAAA,CACA,EACA,SAAAC,GACA,MAAA,UAEA,SAAAC,EAAA,CAAA,EAEA,EACAmD,EAAA,KAAAC,EAAA,CACA,UAAAO,EAAA,CACA,iCAAA,GACA,SAAA,CAAA,CAAA1D,CAAA,CACA,EACA,QAAAmC,GAEA,SAAA,CAAAlC,GACAmD,EAAA,IAAAD,EAAA,CAAA,UAAA,6BAAA,SAAAlD,EAAA,EAEAiD,EAAAA,KAAAC,EAAA,CAAA,UAAA,uCACA,SAAA,CAAAH,GACA5C,GAAA,CAAAS,EAAA,QACAuC,EAAAA,IAAAC,GAAA,UAAA,+BAAA,QAAA,EACA,SACAjD,CAAA,CAAA,CAAA,EAEA,EACAgD,EAAA,IAAAD,EAAA,CAAA,UAAA,wCACA,SACAjD,IAAAkD,EAAA,IAAAE,EAAA,CACA,KAAAM,GACA,UAAA,2BAAA,CAAA,EAGA,CAAA,CAAA,CACA,EACA1C,GACAgC,EAAA,KAAAC,EAAA,CAAA,UAAA,4BACA,SAAA,CAAAC,EAAAA,IAAAD,EAAA,CAAA,UAAA,oCACA,SAAAC,EAAA,IAAAS,GAAA,CACA,IAAArC,EACA,UAAA,GACA,SAAAsC,GACA,YAAA1D,EACA,KAAA,QACA,MAAAgB,EACA,SAAA,GAAAC,GAAA,EAAA,OAAA,KAAA,CAAA,CAAA,EAEA,EACA6B,EAAA,KAAAC,EAAA,CACA,UAAA,qCACA,SAAAP,GAEA,SAAA,CAAAa,GACA9C,UACAwC,EAAA,CAAA,UAAA,0BACA,SAAAC,EAAA,IAAAW,GAAA,CAAA,WAAA,MAAA,CAAA,CACA,CAAA,CAAA,CAAA,CAEA,CAAA,EACA,EAEA/D,GACAkD,EAAA,KAAAC,EAAA,CAAA,UAAA,uBACA,SAAA,CAAAC,EAAA,IAAAE,EAAA,CAAA,KAAAU,GAAA,UAAA,4BAAA,EACAZ,EAAA,IAAAC,EAAA,CACA,UAAA,4BACA,MAAA,UACA,SAAA,cAEA,SAAArD,CAAA,CACA,CAAA,EACA,CAAA,CAAA,CAAA,CAIA,EAEAiE,EAAAvE,EAEAA,EAAA,UAAA,CACA,GAAAwE,GACA,YAAAC,EAAA,OACA,QAAAA,EAAA,MACA,WAAAA,EAAA,MACA,eAAAA,EAAA,KACA,SAAAA,EAAA,KACA,sBAAAA,EAAA,MACA,kBAAAA,EAAA,OACA,gBAAAA,EAAA,KACA,cAAAA,EAAA,KACA,mBAAAA,EAAA,KACA,QAAAA,EAAA,IACA,EAEAzE,EAAA,aAAA,CACA,GAAA0E,GACA,eAAA,GACA,kBAAA,QACA,gBAAA,EACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}