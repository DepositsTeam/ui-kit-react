{"version":3,"file":"TagInput.stories-fb8ecdb9.js","sources":["../../src/components/tag-input/TagInput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Box from \"../box\";\nimport Text from \"../text\";\nimport \"./Taginput.scss\";\nimport classNames from \"../../utils/classNames\";\nimport Icon from \"../icon\";\nimport Close from \"../icons/Close.jsx\";\nimport PropTypes from \"prop-types\";\nimport keyGen from \"../../utils/keyGen\";\nimport TextField from \"../text-field\";\n\nconst TagInput = ({\n  label,\n  className,\n  size,\n  tagDelimiterKey,\n  values,\n  onTagAdded,\n  onTagDeleted,\n  inputProps,\n  tagProps = {},\n  tagClassname,\n  onTextChanged,\n  onTagChanged,\n  ...props\n}) => {\n  const [input, setInput] = useState(\"\");\n  const [inputTags, setInputTags] = useState(values || []);\n  const [isKeyReleased, setIsKeyReleased] = useState(false);\n\n  const invokeFunction = (func, ...args) => {\n    if (typeof func === \"function\") {\n      return func(...args);\n    }\n  };\n\n  const _tagDelimiterKey = {\n    space: \" \",\n    enter: \"Enter\",\n    comma: \",\",\n  };\n\n  const generatedTagInputClasses = classNames({\n    \"ui-tag-input__input\": true,\n  });\n\n  const wrapperClasses = classNames(\n    [`size__${size}`, \"ui-tag-input__wrapper\"],\n    className\n  );\n\n  const handleTextChange = (event) => {\n    setInput(event.target.value);\n    invokeFunction(onTextChanged, event.target.value);\n  };\n\n  const handleKeyDown = (event) => {\n    const newTag = input.trim();\n    let oldTagArray = inputTags;\n    const key = _tagDelimiterKey[tagDelimiterKey];\n    if (event.key === key && newTag.length && !inputTags.includes(newTag)) {\n      event.preventDefault();\n      setInputTags((prev) => [...prev, newTag]);\n      setInputTags((state) => {\n        invokeFunction(onTagAdded, newTag, state);\n        invokeFunction(onTagChanged, oldTagArray, state);\n        return state;\n      });\n      setInput(\"\");\n    }\n\n    if (\n      event.key === \"Backspace\" &&\n      !input.length &&\n      inputTags.length &&\n      isKeyReleased\n    ) {\n      event.preventDefault();\n      const tagsArray = [...inputTags];\n      const deletedTag = tagsArray.pop();\n      setInputTags(tagsArray);\n      setInput(deletedTag);\n      setInputTags((state) => {\n        invokeFunction(onTagDeleted, deletedTag, state);\n        invokeFunction(onTagChanged, oldTagArray, state);\n        return state;\n      });\n    }\n    setIsKeyReleased(false);\n  };\n\n  const handleDeleteTag = (index) => {\n    const deletedTag = inputTags[index];\n    let oldTagArray = inputTags;\n    setInputTags((prev) => prev.filter((tag, i) => i !== index));\n    setInputTags((state) => {\n      invokeFunction(onTagDeleted, deletedTag, state);\n      invokeFunction(onTagChanged, oldTagArray, state);\n      return state;\n    });\n  };\n\n  return (\n    <Box className={wrapperClasses}>\n      <Box is={\"label\"}>\n        <Text className={\"ui-tag-input__label\"} scale={\"subhead\"}>\n          {label}\n        </Text>\n      </Box>\n      <Box className=\"ui-tag-input__input-wrapper\">\n        {inputTags.map((tag, index) => (\n          <Box\n            is=\"div\"\n            className={`ui-tag-input__input-tag ${tagClassname}`}\n            key={`ui-tag-input${keyGen()}`}\n            {...tagProps}\n          >\n            <Text\n              className=\"ui-tag-input__input-tag-text\"\n              scale={\"subhead\"}\n              fontFace={\"circularSTD\"}\n            >\n              {tag}\n            </Text>\n            <Icon\n              icon={Close}\n              onClick={() => handleDeleteTag(index)}\n              className=\"ui-tag-input__close-icon\"\n            />\n          </Box>\n        ))}\n        <TextField\n          className={generatedTagInputClasses}\n          {...props}\n          invisible\n          size={size}\n          {...inputProps}\n          onKeyDown={handleKeyDown}\n          onKeyUp={() => setIsKeyReleased(true)}\n          value={input}\n          onChange={handleTextChange}\n          autoFocus\n          onFocus={(e) => e.currentTarget.select()}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default TagInput;\n\nTagInput.propTypes = {\n  label: PropTypes.string,\n  size: PropTypes.oneOf([\n    \"small\",\n    \"medium\",\n    \"large\",\n    \"xlarge\",\n    \"huge\",\n    \"massive\",\n  ]),\n  values: PropTypes.array,\n  tagDelimiterKey: PropTypes.oneOf([\"enter\", \"comma\", \"space\"]),\n  onTagAdded: PropTypes.func,\n  onTagDeleted: PropTypes.func,\n  onTextChanged: PropTypes.func,\n  onTagChanged: PropTypes.func,\n  inputProps: PropTypes.object,\n  tagProps: PropTypes.object,\n  tagClassname: PropTypes.string,\n};\n\nTagInput.defaultProps = {\n  label: \"Form Label\",\n  size: \"medium\",\n  values: [],\n  tagDelimiterKey: \"enter\",\n  inputProps: { placeholder: \"Add tag\" },\n  onTagDelete: (index) => {\n    console.log(index);\n  },\n};\n"],"names":["TagInput","label","className","size","tagDelimiterKey","values","onTagAdded","onTagDeleted","inputProps","tagProps","tagClassname","onTextChanged","onTagChanged","props","input","setInput","useState","inputTags","setInputTags","isKeyReleased","setIsKeyReleased","invokeFunction","func","args","_tagDelimiterKey","generatedTagInputClasses","classNames","wrapperClasses","handleTextChange","event","handleKeyDown","newTag","oldTagArray","key","prev","state","tagsArray","deletedTag","handleDeleteTag","index","tag","i","jsxs","Box","jsx","Text","Icon","Close","keyGen","TextField","e","TagInput$1","PropTypes"],"mappings":"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"}