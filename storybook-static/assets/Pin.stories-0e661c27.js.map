{"version":3,"file":"Pin.stories-0e661c27.js","sources":["../../src/components/pin-input/PinInput.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Box from \"../box\";\nimport \"./PinInput.scss\";\nimport inputPropTypes, { defaultProps } from \"../../utils/inputPropTypes\";\nimport classNames from \"../../utils/classNames\";\nimport Text from \"../text\";\nimport uniqueRandomString from \"../../utils/uniqueRandomString\";\nimport TextField from \"../text-field\";\nimport ErrorIcon from \"../icons/Error.jsx\";\nimport Icon from \"../icon\";\n\nconst PinInput = ({\n  label,\n  size,\n  labelClass,\n  labelFontFace,\n  spacing,\n  errorMessage,\n  invisible,\n  noOfCharacters,\n  initialValue,\n  placeholder,\n  password,\n  onlyNumbers,\n  onChange,\n  ...props\n}) => {\n  const [data, setData] = useState([]);\n  const [initialized, setInitialized] = useState(false);\n  const [initiated, setInitiated] = useState(false);\n\n  const updateValue = (e, index) => {\n    const cloneData = [...data];\n    const value = e.target.value;\n    if (value) {\n      // We are changing an empty field\n      if (index < data.length - 1) {\n        let nextInput = document.getElementById(data[index + 1].id);\n        nextInput.focus();\n        setTimeout(() => {\n          nextInput.select();\n        });\n      }\n    } else if (!value) {\n      if (index > 0) {\n        let nextInput = document.getElementById(data[index - 1].id);\n        nextInput.focus();\n        setTimeout(() => {\n          nextInput.select();\n        });\n      }\n    }\n    cloneData[index].value = value;\n\n    setData(cloneData);\n\n    if (onChange && typeof onChange === \"function\") {\n      onChange(\n        data.reduce(\n          (prev, curr) =>\n            (typeof prev === \"string\" ? prev : prev.value) + curr.value\n        ),\n        \"\"\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (!initialized) {\n      for (let i = 0; i < noOfCharacters; i++) {\n        setData((data) => {\n          data.push({\n            value: \"\",\n            id: uniqueRandomString(19, 8),\n          });\n          return data;\n        });\n        setInitialized(true);\n      }\n    }\n    if (initialized && !initiated && initialValue.length === data.length) {\n      setData((data) =>\n        data.map((datum, index) => ({\n          ...datum,\n          value: initialValue[index],\n        }))\n      );\n      setInitiated(true);\n    }\n  }, [data, initialValue, initialized, initiated, noOfCharacters]);\n\n  const handleKeyDown = async (e, index) => {\n    if (e.key === \"ArrowLeft\") {\n      if (index !== 0) {\n        let nextInput = document.getElementById(data[index - 1].id);\n        nextInput.focus();\n        setTimeout(() => {\n          nextInput.select();\n        });\n      }\n    }\n    if (e.key === \"ArrowRight\") {\n      if (index !== data.length - 1) {\n        let nextInput = document.getElementById(data[index + 1].id);\n        nextInput.focus();\n        setTimeout(() => {\n          nextInput.select();\n        });\n      }\n    }\n  };\n\n  const textFields = data.map((item, index) => (\n    <TextField\n      id={item.id}\n      key={`item__${index}`}\n      placeholder={placeholder}\n      onlyNumbers={onlyNumbers}\n      type={password ? \"password\" : \"text\"}\n      oneCharWide\n      maxLength={\"1\"}\n      minLength={\"1\"}\n      showError={!!errorMessage}\n      value={item.value}\n      onInput={(e) => updateValue(e, index)}\n      onKeyDown={(e) => handleKeyDown(e, index)}\n    />\n  ));\n  return (\n    <Box className={classNames([\"ui-text-field__wrapper\", `size__${size}`])}>\n      {label && (\n        <Box is={\"label\"}>\n          <Text\n            marginTop={0}\n            className={classNames({\n              \"ui-text-field__label\": true,\n              labelClass,\n            })}\n            fontFace={labelFontFace}\n          >\n            {label}\n          </Text>\n        </Box>\n      )}\n      <Box\n        display={\"inline-flex\"}\n        className={\"ui-pin-input-container\"}\n        style={{ \"--spacing\": spacing }}\n      >\n        {textFields}\n      </Box>\n      {errorMessage && !invisible && (\n        <Box className={\"ui-text-field__error\"}>\n          <Icon icon={ErrorIcon} className={\"ui-text-field__error-icon\"} />\n          <Text\n            className={\"ui-text-field__error-text\"}\n            scale={\"subhead\"}\n            fontFace={\"circularSTD\"}\n          >\n            {errorMessage}\n          </Text>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default PinInput;\n\nPinInput.propTypes = {\n  ...inputPropTypes,\n  noOfCharacters: PropTypes.number,\n  placeholder: PropTypes.string,\n  password: PropTypes.bool,\n  spacing: PropTypes.string,\n  onChange: PropTypes.func,\n  errorMessage: PropTypes.string,\n};\n\nPinInput.defaultProps = {\n  ...defaultProps,\n  noOfCharacters: 6,\n  placeholder: \"-\",\n  spacing: \"8px\",\n};\n"],"names":["PinInput","label","size","labelClass","labelFontFace","spacing","errorMessage","invisible","noOfCharacters","initialValue","placeholder","password","onlyNumbers","onChange","props","data","setData","useState","initialized","setInitialized","initiated","setInitiated","updateValue","e","index","cloneData","value","nextInput","prev","curr","useEffect","i","uniqueRandomString","datum","handleKeyDown","textFields","item","jsx","TextField","jsxs","Box","classNames","Text","Icon","ErrorIcon","PinInput$1","inputPropTypes","PropTypes","defaultProps"],"mappings":"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"}